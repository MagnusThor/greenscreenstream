/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./example/mlWebGL/Example.js":
/*!************************************!*\
  !*** ./example/mlWebGL/Example.js ***!
  \************************************/
/*! flagged exports */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__ */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst GreenScreenStream_1 = __webpack_require__(/*! ../../src/GreenScreenStream */ \"./src/GreenScreenStream.js\");\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const bgfile = location.hash.length > 0 ? location.hash.replace(\"#\", \"\") : \"beach.jpg\";\r\n    navigator.getUserMedia({ video: { width: 640, height: 360 }, audio: false }, (mediaStream) => {\r\n        // get an instance of the GreenScreen stream\r\n        let instance = GreenScreenStream_1.GreenScreenStream.getInstance(true, `../assets/${bgfile}`, undefined, 640, 360);\r\n        // override the default shader\r\n        instance.bufferFrag = `\r\n        uniform float time;\r\n        uniform vec2 resolution;   \r\n        uniform sampler2D webcam;\r\n        uniform sampler2D background;\r\n        uniform vec4 chromaKey; \r\n        uniform vec2 maskRange;\r\n        out vec4 fragColor;\r\n        void mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n            {\r\n                vec2 q = 1. -fragCoord.xy / resolution.xy;                \r\n                vec3 bg = texture(background,q).xyz;\r\n                vec3 fg = texture(webcam, q ).xyz;                \r\n                vec3 dom = vec3(0,0.6941176470588235,0.25098039215686274);                \r\n                float maxrb = max( fg.r, fg.b );                \r\n                float k = clamp( (fg.g-maxrb)*5.0, 0.0, 1.0 );\r\n                float dg = fg.g;                 \r\n                fg.g = min( fg.g, maxrb*0.8 ); \r\n                fg += dg - fg.g;\r\n                fragColor = vec4(mix(fg, bg, k), 1. );\r\n            }\r\n            void main(){    \r\n                mainImage(fragColor,gl_FragCoord.xy);      \r\n            }        \r\n        `;\r\n        instance.onReady = () => {\r\n            const fps = 60;\r\n            instance.render(fps);\r\n            // capture the stream en send back to a video element\r\n            const ms = instance.captureStream(fps);\r\n            document.querySelector(\"video\").srcObject = ms;\r\n        };\r\n        // add the captured media stream ( video track )\r\n        instance.addVideoTrack(mediaStream.getTracks()[0]);\r\n        window[\"gss\"] = instance; // expose for debuging purposes\r\n    }, (e) => console.error(e));\r\n});\r\n\n\n//# sourceURL=webpack://greenscreenstream/./example/mlWebGL/Example.js?");

/***/ }),

/***/ "./node_modules/@tensorflow-models/body-pix/dist/body-pix.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow-models/body-pix/dist/body-pix.esm.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export BodyPix [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PART_CHANNELS [provided] [no usage info] [missing usage info prevents renaming] */
/*! export blurBodyPart [provided] [no usage info] [missing usage info prevents renaming] */
/*! export drawBokehEffect [provided] [no usage info] [missing usage info prevents renaming] */
/*! export drawMask [provided] [no usage info] [missing usage info prevents renaming] */
/*! export drawPixelatedMask [provided] [no usage info] [missing usage info prevents renaming] */
/*! export flipPoseHorizontal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export load [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resizeAndPadTo [provided] [no usage info] [missing usage info prevents renaming] */
/*! export scaleAndCropToInputTensorShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export toColoredPartMask [provided] [no usage info] [missing usage info prevents renaming] */
/*! export toMask [provided] [no usage info] [missing usage info prevents renaming] */
/*! export version [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BodyPix\": () => /* binding */ BodyPix,\n/* harmony export */   \"load\": () => /* binding */ load,\n/* harmony export */   \"blurBodyPart\": () => /* binding */ blurBodyPart,\n/* harmony export */   \"drawBokehEffect\": () => /* binding */ drawBokehEffect,\n/* harmony export */   \"drawMask\": () => /* binding */ drawMask,\n/* harmony export */   \"drawPixelatedMask\": () => /* binding */ drawPixelatedMask,\n/* harmony export */   \"toColoredPartMask\": () => /* binding */ toColoredPartMask,\n/* harmony export */   \"toMask\": () => /* binding */ toMask,\n/* harmony export */   \"PART_CHANNELS\": () => /* binding */ PART_CHANNELS,\n/* harmony export */   \"flipPoseHorizontal\": () => /* binding */ flipPoseHorizontal,\n/* harmony export */   \"resizeAndPadTo\": () => /* binding */ resizeAndPadTo,\n/* harmony export */   \"scaleAndCropToInputTensorShape\": () => /* binding */ scaleAndCropToInputTensorShape,\n/* harmony export */   \"version\": () => /* binding */ version\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _tensorflow_tfjs_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-converter */ \"./node_modules/@tensorflow/tfjs-converter/dist/index.js\");\n/**\n    * @license\n    * Copyright 2021 Google LLC. All Rights Reserved.\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    * http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    * =============================================================================\n    */\n;var extendStatics=function(e,t){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function __extends(e,t){function n(){this.constructor=e}extendStatics(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var __assign=function(){return(__assign=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function __awaiter(e,t,n,r){return new(n||(n=Promise))(function(o,i){function a(e){try{d(r.next(e))}catch(e){i(e)}}function s(e){try{d(r.throw(e))}catch(e){i(e)}}function d(e){e.done?o(e.value):new n(function(t){t(e.value)}).then(a,s)}d((r=r.apply(e,t||[])).next())})}function __generator(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=(o=a.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}}function toFlattenedOneHotPartMap(e){var t=e.shape[2],n=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.argMax)(e,2),r=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(n,[-1]);return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.oneHot)(r,t)}function clipByMask2d(e,t){return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)(e,t)}function toMaskTensor(e,t){return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.cast)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.greater)(e,(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(t)),\"int32\")})}function decodePartSegmentation(e,t){var n=t.shape,r=n[0],o=n[1],i=n[2];return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){var n=toFlattenedOneHotPartMap(t),a=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.expandDims)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.range)(0,i,1,\"int32\"),1),s=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.cast)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.matMul)(n,a),\"int32\"),d=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(s,[r,o]),u=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)(d,(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(1,\"int32\"));return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sub)(clipByMask2d(u,e),(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(1,\"int32\"))})}function decodeOnlyPartSegmentation(e){var t=e.shape,n=t[0],r=t[1],o=t[2];return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){var t=toFlattenedOneHotPartMap(e),i=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.expandDims)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.range)(0,o,1,\"int32\"),1),a=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.cast)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.matMul)(t,i),\"int32\");return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(a,[n,r])})}var BaseModel=function(){function e(e,t){this.model=e,this.outputStride=t;var n=this.model.inputs[0].shape;_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(-1===n[1]&&-1===n[2],function(){return\"Input shape [\"+n[1]+\", \"+n[2]+\"] must both be equal to or -1\"})}return e.prototype.predict=function(e){var t=this;return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){var n=t.preprocessInput((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.cast)(e,\"float32\")),r=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.expandDims)(n,0),o=t.model.predict(r).map(function(e){return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(e,[0])}),i=t.nameOutputResults(o);return{heatmapScores:(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sigmoid)(i.heatmap),offsets:i.offsets,displacementFwd:i.displacementFwd,displacementBwd:i.displacementBwd,segmentation:i.segmentation,partHeatmaps:i.partHeatmaps,longOffsets:i.longOffsets,partOffsets:i.partOffsets}})},e.prototype.dispose=function(){this.model.dispose()},e}(),MobileNet=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.preprocessInput=function(e){return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sub)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.div)(e,127.5),1)})},t.prototype.nameOutputResults=function(e){return{offsets:e[0],segmentation:e[1],partHeatmaps:e[2],longOffsets:e[3],heatmap:e[4],displacementFwd:e[5],displacementBwd:e[6],partOffsets:e[7]}},t}(BaseModel),PART_NAMES=[\"nose\",\"leftEye\",\"rightEye\",\"leftEar\",\"rightEar\",\"leftShoulder\",\"rightShoulder\",\"leftElbow\",\"rightElbow\",\"leftWrist\",\"rightWrist\",\"leftHip\",\"rightHip\",\"leftKnee\",\"rightKnee\",\"leftAnkle\",\"rightAnkle\"],NUM_KEYPOINTS=PART_NAMES.length,PART_IDS=PART_NAMES.reduce(function(e,t,n){return e[t]=n,e},{}),CONNECTED_PART_NAMES=[[\"leftHip\",\"leftShoulder\"],[\"leftElbow\",\"leftShoulder\"],[\"leftElbow\",\"leftWrist\"],[\"leftHip\",\"leftKnee\"],[\"leftKnee\",\"leftAnkle\"],[\"rightHip\",\"rightShoulder\"],[\"rightElbow\",\"rightShoulder\"],[\"rightElbow\",\"rightWrist\"],[\"rightHip\",\"rightKnee\"],[\"rightKnee\",\"rightAnkle\"],[\"leftShoulder\",\"rightShoulder\"],[\"leftHip\",\"rightHip\"]],POSE_CHAIN=[[\"nose\",\"leftEye\"],[\"leftEye\",\"leftEar\"],[\"nose\",\"rightEye\"],[\"rightEye\",\"rightEar\"],[\"nose\",\"leftShoulder\"],[\"leftShoulder\",\"leftElbow\"],[\"leftElbow\",\"leftWrist\"],[\"leftShoulder\",\"leftHip\"],[\"leftHip\",\"leftKnee\"],[\"leftKnee\",\"leftAnkle\"],[\"nose\",\"rightShoulder\"],[\"rightShoulder\",\"rightElbow\"],[\"rightElbow\",\"rightWrist\"],[\"rightShoulder\",\"rightHip\"],[\"rightHip\",\"rightKnee\"],[\"rightKnee\",\"rightAnkle\"]],CONNECTED_PART_INDICES=CONNECTED_PART_NAMES.map(function(e){var t=e[0],n=e[1];return[PART_IDS[t],PART_IDS[n]]});function getScale(e,t,n){var r=e[0],o=e[1],i=t[0],a=t[1],s=n.top,d=n.bottom;return[a/(n.left+n.right+o),i/(s+d+r)]}function getOffsetPoint(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+NUM_KEYPOINTS)}}function getImageCoords(e,t,n){var r=getOffsetPoint(e.heatmapY,e.heatmapX,e.id,n),o=r.y,i=r.x;return{x:e.heatmapX*t+i,y:e.heatmapY*t+o}}function clamp(e,t,n){return e<t?t:e>n?n:e}function squaredDistance(e,t,n,r){var o=n-e,i=r-t;return o*o+i*i}function addVectors(e,t){return{x:e.x+t.x,y:e.y+t.y}}function computeDistance(e,t,n){void 0===n&&(n=.3);for(var r=0,o=0,i=0;i<e.length;i++)t.keypoints[i].score>n&&(o+=1,r+=Math.pow(e[i].x-t.keypoints[i].position.x,2)+Math.pow(e[i].y-t.keypoints[i].position.y,2));return 0===o?r=1/0:r/=o,r}function convertToPositionInOuput(e,t,n,r){var o=t[0],i=t[1],a=n[0],s=n[1],d=Math.round(((o+e.y+1)*s-1)/r);return{x:Math.round(((i+e.x+1)*a-1)/r),y:d}}function getEmbedding(e,t,n,r,o,i,a){for(var s=a[0],d=a[1],u=n(e),l=u.y*r+u.x,f=o[NUM_KEYPOINTS*(2*l)+t],c=o[NUM_KEYPOINTS*(2*l+1)+t],p=e.y+f,h=e.x+c,m=0;m<i;m++){p=Math.min(p,s-1);var g=n({x:h=Math.min(h,d-1),y:p}),v=g.y*r+g.x;p+=f=o[NUM_KEYPOINTS*(2*v)+t],h+=c=o[NUM_KEYPOINTS*(2*v+1)+t]}return{x:h,y:p}}function matchEmbeddingToInstance(e,t,n,r,o,i,a,s,d,u){for(var l=o[0],f=o[1],c=i[0],p=i[1],h=s[0],m=s[1],g=[],v=function(e){return convertToPositionInOuput(e,[l,f],[c,p],d)},S=0;S<r;S++){var _=getEmbedding(e,S,v,a,t,u,[h,m]);g.push(_)}for(var I=-1,w=1/0,E=0;E<n.length;E++){var T=computeDistance(g,n[E]);T<w&&(I=E,w=T)}return I}function getOutputResolution(e,t){var n=e[0],r=e[1];return[Math.round((r-1)/t+1),Math.round((n-1)/t+1)]}function decodeMultipleMasksCPU(e,t,n,r,o,i,a,s,d,u){var l=a[0],f=a[1];void 0===u&&(u=5);for(var c=n.map(function(e){return new Uint8Array(r*o).fill(0)}),p=s.top,h=s.left,m=getScale([r,o],[l,f],s),g=m[0],v=m[1],S=getOutputResolution([l,f],i)[0],_=0;_<r;_+=1)for(var I=0;I<o;I+=1){var w=_*o+I;if(1===e[w]){var E=matchEmbeddingToInstance({x:I,y:_},t,n,u,[p,h],[g,v],S,[r,o],i,d);E>=0&&(c[E][w]=1)}}return c}function decodeMultiplePartMasksCPU(e,t,n,r,o,i,a,s,d,u,l){var f=s[0],c=s[1];void 0===l&&(l=5);for(var p=r.map(function(e){return new Int32Array(o*i).fill(-1)}),h=d.top,m=d.left,g=getScale([o,i],[f,c],d),v=g[0],S=g[1],_=getOutputResolution([f,c],a)[0],I=0;I<o;I+=1)for(var w=0;w<i;w+=1){var E=I*i+w;if(1===e[E]){var T=matchEmbeddingToInstance({x:w,y:I},t,r,l,[h,m],[v,S],_,[o,i],a,u);T>=0&&(p[T][E]=n[E])}}return p}function decodeMultipleMasksWebGl(e,t,n,r,o,i,a,s,d,u,l){for(var f=a[0],c=a[1],p=e.shape,h=p[0],m=p[1],g=t.shape.slice(0,2),v=g[0],S=g[1],_=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(t,[v,S,2,NUM_KEYPOINTS]),I=new Float32Array(l*NUM_KEYPOINTS*3).fill(0),w=0;w<n.length;w++)for(var E=w*NUM_KEYPOINTS*3,T=n[w],N=0;N<NUM_KEYPOINTS;N++){var A=T.keypoints[N],P=E+3*N;I[P]=A.score,I[P+1]=A.position.y,I[P+2]=A.position.x}var y=getScale([r,o],[f,c],s),O=y[0],M=y[1],R=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor)(I,[l,NUM_KEYPOINTS,3]),b=s.top,C=s.left,x={variableNames:[\"segmentation\",\"longOffsets\",\"poses\"],outputShape:[h,m],userCode:\"\\n    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {\\n      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));\\n    }\\n\\n    float convertToPositionInOutputFloat(\\n        int pos, int pad, float scale, int stride) {\\n      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);\\n    }\\n\\n    float dist(float x1, float y1, float x2, float y2) {\\n      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);\\n    }\\n\\n    float sampleLongOffsets(float h, float w, int d, int k) {\\n      float fh = fract(h);\\n      float fw = fract(w);\\n      int clH = int(ceil(h));\\n      int clW = int(ceil(w));\\n      int flH = int(floor(h));\\n      int flW = int(floor(w));\\n      float o11 = getLongOffsets(flH, flW, d, k);\\n      float o12 = getLongOffsets(flH, clW, d, k);\\n      float o21 = getLongOffsets(clH, flW, d, k);\\n      float o22 = getLongOffsets(clH, clW, d, k);\\n      float o1 = mix(o11, o12, fw);\\n      float o2 = mix(o21, o22, fw);\\n      return mix(o1, o2, fh);\\n    }\\n\\n    int findNearestPose(int h, int w) {\\n      float prob = getSegmentation(h, w);\\n      if (prob < 1.0) {\\n        return -1;\\n      }\\n\\n      // Done(Tyler): convert from output space h/w to strided space.\\n      float stridedH = convertToPositionInOutputFloat(\\n        h, \"+b+\", \"+M+\", \"+i+\");\\n      float stridedW = convertToPositionInOutputFloat(\\n        w, \"+C+\", \"+O+\", \"+i+\");\\n\\n      float minDist = 1000000.0;\\n      int iMin = -1;\\n      for (int i = 0; i < \"+l+\"; i++) {\\n        float curDistSum = 0.0;\\n        int numKpt = 0;\\n        for (int k = 0; k < \"+NUM_KEYPOINTS+\"; k++) {\\n          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);\\n          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);\\n\\n          float y = float(h) + dy;\\n          float x = float(w) + dx;\\n\\n          for (int s = 0; s < \"+d+\"; s++) {\\n            int yRounded = round(min(y, float(\"+(r-1)+\")));\\n            int xRounded = round(min(x, float(\"+(o-1)+\")));\\n\\n            float yStrided = convertToPositionInOutputFloat(\\n              yRounded, \"+b+\", \"+M+\", \"+i+\");\\n            float xStrided = convertToPositionInOutputFloat(\\n              xRounded, \"+C+\", \"+O+\", \"+i+\");\\n\\n            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);\\n            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);\\n\\n            y = y + dy;\\n            x = x + dx;\\n          }\\n\\n          float poseScore = getPoses(i, k, 0);\\n          float poseY = getPoses(i, k, 1);\\n          float poseX = getPoses(i, k, 2);\\n          if (poseScore > \"+u+\") {\\n            numKpt = numKpt + 1;\\n            curDistSum = curDistSum + dist(x, y, poseX, poseY);\\n          }\\n        }\\n        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {\\n          minDist = curDistSum / float(numKpt);\\n          iMin = i;\\n        }\\n      }\\n      return iMin;\\n    }\\n\\n    void main() {\\n        ivec2 coords = getOutputCoords();\\n        int nearestPose = findNearestPose(coords[0], coords[1]);\\n        setOutput(float(nearestPose));\\n      }\\n  \"};return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend)().compileAndRun(x,[e,_,R])}function toPersonKSegmentation(e,t){return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.cast)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.equal)(e,(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(t)),\"int32\")})}function toPersonKPartSegmentation(e,t,n){return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sub)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.mul)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.cast)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.equal)(e,(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(n)),\"int32\"),(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)(t,1)),1)})}function isWebGlBackend(){return\"webgl\"===(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.getBackend)()}function decodePersonInstanceMasks(e,t,n,r,o,i,a,s,d,u,l,f){var c=a[0],p=a[1];return void 0===d&&(d=.2),void 0===u&&(u=8),void 0===l&&(l=.3),void 0===f&&(f=10),__awaiter(this,void 0,void 0,function(){var a,h,m,g,v;return __generator(this,function(S){switch(S.label){case 0:return a=n.filter(function(e){return e.score>=d}),isWebGlBackend()?(m=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){var n=decodeMultipleMasksWebGl(e,t,a,r,o,i,[c,p],s,u,l,f),d=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype);return a.map(function(e,t){return toPersonKSegmentation(d,t)})}),[4,Promise.all(m.map(function(e){return e.data()}))]):[3,2];case 1:return h=S.sent(),m.forEach(function(e){return e.dispose()}),[3,5];case 2:return[4,e.data()];case 3:return g=S.sent(),[4,t.data()];case 4:v=S.sent(),h=decodeMultipleMasksCPU(g,v,a,r,o,i,[c,p],s,u),S.label=5;case 5:return[2,h.map(function(e,t){return{data:e,pose:a[t],width:o,height:r}})]}})})}function decodePersonInstancePartMasks(e,t,n,r,o,i,a,s,d,u,l,f,c){var p=s[0],h=s[1];return void 0===u&&(u=.2),void 0===l&&(l=8),void 0===f&&(f=.3),void 0===c&&(c=10),__awaiter(this,void 0,void 0,function(){var s,m,g,v,S,_;return __generator(this,function(I){switch(I.label){case 0:return s=r.filter(function(e){return e.score>=u}),isWebGlBackend()?(g=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){var r=decodeMultipleMasksWebGl(e,t,s,o,i,a,[p,h],d,l,f,c),u=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.engine)().makeTensorFromDataId(r.dataId,r.shape,r.dtype);return s.map(function(e,t){return toPersonKPartSegmentation(u,n,t)})}),[4,Promise.all(g.map(function(e){return e.data()}))]):[3,2];case 1:return m=I.sent(),g.forEach(function(e){return e.dispose()}),[3,6];case 2:return[4,e.data()];case 3:return v=I.sent(),[4,t.data()];case 4:return S=I.sent(),[4,n.data()];case 5:_=I.sent(),m=decodeMultiplePartMasksCPU(v,S,_,s,o,i,a,[p,h],d,l),I.label=6;case 6:return[2,m.map(function(e,t){return{pose:s[t],data:e,height:o,width:i}})]}})})}function half(e){return Math.floor(e/2)}var MaxHeap=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(half(e),e);)this.exchange(e,half(e)),e=half(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function scoreIsMaximumInLocalWindow(e,t,n,r,o,i){for(var a=i.shape,s=a[0],d=a[1],u=!0,l=Math.max(n-o,0),f=Math.min(n+o+1,s),c=l;c<f;++c){for(var p=Math.max(r-o,0),h=Math.min(r+o+1,d),m=p;m<h;++m)if(i.get(c,m,e)>t){u=!1;break}if(!u)break}return u}function buildPartWithScoreQueue(e,t,n){for(var r=n.shape,o=r[0],i=r[1],a=r[2],s=new MaxHeap(o*i*a,function(e){return e.score}),d=0;d<o;++d)for(var u=0;u<i;++u)for(var l=0;l<a;++l){var f=n.get(d,u,l);f<e||scoreIsMaximumInLocalWindow(l,f,d,u,t,n)&&s.enqueue({score:f,part:{heatmapY:d,heatmapX:u,id:l}})}return s}var parentChildrenTuples=POSE_CHAIN.map(function(e){var t=e[0],n=e[1];return[PART_IDS[t],PART_IDS[n]]}),parentToChildEdges=parentChildrenTuples.map(function(e){return e[1]}),childToParentEdges=parentChildrenTuples.map(function(e){return e[0]});function getDisplacement(e,t,n){var r=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,r+e)}}function getStridedIndexNearPoint(e,t,n,r){return{y:clamp(Math.round(e.y/t),0,n-1),x:clamp(Math.round(e.x/t),0,r-1)}}function traverseToTargetKeypoint(e,t,n,r,o,i,a,s){void 0===s&&(s=2);for(var d=r.shape,u=d[0],l=d[1],f=getDisplacement(e,getStridedIndexNearPoint(t.position,i,u,l),a),c=addVectors(t.position,f),p=0;p<s;p++){var h=getStridedIndexNearPoint(c,i,u,l),m=getOffsetPoint(h.y,h.x,n,o);c=addVectors({x:h.x*i,y:h.y*i},{x:m.x,y:m.y})}var g=getStridedIndexNearPoint(c,i,u,l),v=r.get(g.y,g.x,n);return{position:c,part:PART_NAMES[n],score:v}}function decodePose(e,t,n,r,o,i){var a=t.shape[2],s=parentToChildEdges.length,d=new Array(a),u=e.part,l=e.score,f=getImageCoords(u,r,n);d[u.id]={score:l,part:PART_NAMES[u.id],position:f};for(var c=s-1;c>=0;--c){var p=parentToChildEdges[c],h=childToParentEdges[c];d[p]&&!d[h]&&(d[h]=traverseToTargetKeypoint(c,d[p],h,t,n,r,i))}for(c=0;c<s;++c){p=childToParentEdges[c],h=parentToChildEdges[c];d[p]&&!d[h]&&(d[h]=traverseToTargetKeypoint(c,d[p],h,t,n,r,o))}return d}function withinNmsRadiusOfCorrespondingPoint(e,t,n,r){var o=n.x,i=n.y;return e.some(function(e){var n=e.keypoints[r].position;return squaredDistance(i,o,n.y,n.x)<=t})}function getInstanceScore(e,t,n){return n.reduce(function(n,r,o){var i=r.position,a=r.score;return withinNmsRadiusOfCorrespondingPoint(e,t,i,o)||(n+=a),n},0)/n.length}var kLocalMaximumRadius=1;function decodeMultiplePoses(e,t,n,r,o,i,a,s){void 0===a&&(a=.5),void 0===s&&(s=20);for(var d=[],u=buildPartWithScoreQueue(a,kLocalMaximumRadius,e),l=s*s;d.length<i&&!u.empty();){var f=u.dequeue();if(!withinNmsRadiusOfCorrespondingPoint(d,l,getImageCoords(f.part,o,t),f.part.id)){var c=decodePose(f,e,t,o,n,r),p=getInstanceScore(d,l,c);d.push({keypoints:c,score:p})}}return d}var _a,imageNetMean=[-123.15,-115.9,-103.06],ResNet=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.preprocessInput=function(e){return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.add)(e,imageNetMean)},t.prototype.nameOutputResults=function(e){var t=e[0],n=e[1],r=e[2],o=e[3],i=e[4],a=e[5];return{offsets:i,segmentation:e[6],partHeatmaps:a,longOffsets:o,heatmap:r,displacementFwd:n,displacementBwd:t,partOffsets:e[7]}},t}(BaseModel),RESNET50_BASE_URL=\"https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/\",MOBILENET_BASE_URL=\"https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/\";function resNet50SavedModel(e,t){var n=\"model-stride\"+e+\".json\";return 4===t?RESNET50_BASE_URL+\"float/\"+n:RESNET50_BASE_URL+\"quant\"+t+\"/\"+n}function mobileNetSavedModel(e,t,n){var r={1:\"100\",.75:\"075\",.5:\"050\"},o=\"model-stride\"+e+\".json\";return 4===n?MOBILENET_BASE_URL+\"float/\"+r[t]+\"/\"+o:MOBILENET_BASE_URL+\"quant\"+n+\"/\"+r[t]+\"/\"+o}function getSizeFromImageLikeElement(e){if(0!==e.offsetHeight&&0!==e.offsetWidth)return[e.offsetHeight,e.offsetWidth];if(null!=e.height&&null!=e.width)return[e.height,e.width];throw new Error(\"HTMLImageElement must have height and width attributes set.\")}function getSizeFromVideoElement(e){return e.hasAttribute(\"height\")&&e.hasAttribute(\"width\")?[e.height,e.width]:[e.videoHeight,e.videoWidth]}function getInputSize(e){if(\"undefined\"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||\"undefined\"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)return getSizeFromImageLikeElement(e);if(\"undefined\"!=typeof ImageData&&e instanceof ImageData)return[e.height,e.width];if(\"undefined\"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)return getSizeFromVideoElement(e);if(e instanceof _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tensor)return[e.shape[0],e.shape[1]];throw new Error(\"error: Unknown input type: \"+e+\".\")}function isValidInputResolution(e,t){return(e-1)%t==0}function toValidInputResolution(e,t){return isValidInputResolution(e,t)?e:Math.floor(e/t)*t+1}var INTERNAL_RESOLUTION_STRING_OPTIONS={low:\"low\",medium:\"medium\",high:\"high\",full:\"full\"},INTERNAL_RESOLUTION_PERCENTAGES=((_a={})[INTERNAL_RESOLUTION_STRING_OPTIONS.low]=.25,_a[INTERNAL_RESOLUTION_STRING_OPTIONS.medium]=.5,_a[INTERNAL_RESOLUTION_STRING_OPTIONS.high]=.75,_a[INTERNAL_RESOLUTION_STRING_OPTIONS.full]=1,_a),MIN_INTERNAL_RESOLUTION=.1,MAX_INTERNAL_RESOLUTION=2;function toInternalResolutionPercentage(e){if(\"string\"==typeof e){var t=INTERNAL_RESOLUTION_PERCENTAGES[e];return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(\"number\"==typeof t,function(){return\"string value of inputResolution must be one of \"+Object.values(INTERNAL_RESOLUTION_STRING_OPTIONS).join(\",\")+\" but was \"+e+\".\"}),t}return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(\"number\"==typeof e&&e<=MAX_INTERNAL_RESOLUTION&&e>=MIN_INTERNAL_RESOLUTION,function(){return\"inputResolution must be a string or number between \"+MIN_INTERNAL_RESOLUTION+\" and \"+MAX_INTERNAL_RESOLUTION+\", but was \"+e}),e}function toInputResolutionHeightAndWidth(e,t,n){var r=n[0],o=n[1],i=toInternalResolutionPercentage(e);return[toValidInputResolution(r*i,t),toValidInputResolution(o*i,t)]}function toInputTensor(e){return e instanceof _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tensor?e:_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.browser.fromPixels(e)}function resizeAndPadTo(e,t,n){var r=t[0],o=t[1];void 0===n&&(n=!1);var i,a,s,d,u,l,f=e.shape,c=f[0],p=f[1]/c;if(p>o/r){i=o;var h=r-(a=Math.ceil(i/p));s=0,d=0,u=Math.floor(h/2),l=r-(a+u)}else{a=r;var m=o-(i=Math.ceil(r*p));s=Math.floor(m/2),d=o-(i+s),u=0,l=0}return{resizedAndPadded:(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){var t;return t=n?_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.image.resizeBilinear((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reverse)(e,1),[a,i]):_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.image.resizeBilinear(e,[a,i]),(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pad3d)(t,[[u,l],[s,d],[0,0]])}),paddedBy:[[u,l],[s,d]]}}function scaleAndCropToInputTensorShape(e,t,n,r,o){var i=t[0],a=t[1],s=n[0],d=n[1],u=r[0],l=u[0],f=u[1],c=r[1],p=c[0],h=c[1];return void 0===o&&(o=!1),(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){var t=_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.image.resizeBilinear(e,[s,d],!0);return o&&(t=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sigmoid)(t)),removePaddingAndResizeBack(t,[i,a],[[l,f],[p,h]])})}function removePaddingAndResizeBack(e,t,n){var r=t[0],o=t[1],i=n[0],a=i[0],s=i[1],d=n[1],u=d[0],l=d[1];return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){var t=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.expandDims)(e);return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.image.cropAndResize(t,[[a/(r+a+s-1),u/(o+u+l-1),(a+r-1)/(r+a+s-1),(u+o-1)/(o+u+l-1)]],[0],[r,o]),[0])})}function padAndResizeTo(e,t){var n=t[0],r=t[1],o=getInputSize(e),i=o[0],a=o[1],s=r/n,d=[0,0,0,0],u=d[0],l=d[1],f=d[2],c=d[3];return a/i<s?(u=0,l=0,f=Math.round(.5*(s*i-a)),c=Math.round(.5*(s*i-a))):(u=Math.round(.5*(1/s*a-i)),l=Math.round(.5*(1/s*a-i)),f=0,c=0),{resized:(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){var t=toInputTensor(e);return t=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.pad3d)(t,[[u,l],[f,c],[0,0]]),_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.image.resizeBilinear(t,[n,r])}),padding:{top:u,left:f,right:c,bottom:l}}}function toTensorBuffers3D(e){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(t){return[2,Promise.all(e.map(function(e){return e.buffer()}))]})})}function scalePose(e,t,n,r,o){return void 0===r&&(r=0),void 0===o&&(o=0),{score:e.score,keypoints:e.keypoints.map(function(e){var i=e.score,a=e.part,s=e.position;return{score:i,part:a,position:{x:s.x*n+o,y:s.y*t+r}}})}}function scalePoses(e,t,n,r,o){return void 0===r&&(r=0),void 0===o&&(o=0),1===n&&1===t&&0===r&&0===o?e:e.map(function(e){return scalePose(e,t,n,r,o)})}function flipPoseHorizontal(e,t){return{score:e.score,keypoints:e.keypoints.map(function(e){var n=e.score,r=e.part,o=e.position;return{score:n,part:r,position:{x:t-1-o.x,y:o.y}}})}}function flipPosesHorizontal(e,t){return t<=0?e:e.map(function(e){return flipPoseHorizontal(e,t)})}function scaleAndFlipPoses(e,t,n,r,o){var i=t[0],a=t[1],s=n[0],d=n[1],u=scalePoses(e,(i+r.top+r.bottom)/s,(a+r.left+r.right)/d,-r.top,-r.left);return o?flipPosesHorizontal(u,a):u}var APPLY_SIGMOID_ACTIVATION=!0,FLIP_POSES_AFTER_SCALING=!1,MOBILENET_V1_CONFIG={architecture:\"MobileNetV1\",outputStride:16,quantBytes:4,multiplier:.75},VALID_ARCHITECTURE=[\"MobileNetV1\",\"ResNet50\"],VALID_STRIDE={MobileNetV1:[8,16,32],ResNet50:[32,16]},VALID_MULTIPLIER={MobileNetV1:[.5,.75,1],ResNet50:[1]},VALID_QUANT_BYTES=[1,2,4];function validateModelConfig(e){if(null==(e=e||MOBILENET_V1_CONFIG).architecture&&(e.architecture=\"MobileNetV1\"),VALID_ARCHITECTURE.indexOf(e.architecture)<0)throw new Error(\"Invalid architecture \"+e.architecture+\". Should be one of \"+VALID_ARCHITECTURE);if(null==e.outputStride&&(e.outputStride=16),VALID_STRIDE[e.architecture].indexOf(e.outputStride)<0)throw new Error(\"Invalid outputStride \"+e.outputStride+\". Should be one of \"+VALID_STRIDE[e.architecture]+\" for architecture \"+e.architecture+\".\");if(null==e.multiplier&&(e.multiplier=1),VALID_MULTIPLIER[e.architecture].indexOf(e.multiplier)<0)throw new Error(\"Invalid multiplier \"+e.multiplier+\". Should be one of \"+VALID_MULTIPLIER[e.architecture]+\" for architecture \"+e.architecture+\".\");if(null==e.quantBytes&&(e.quantBytes=4),VALID_QUANT_BYTES.indexOf(e.quantBytes)<0)throw new Error(\"Invalid quantBytes \"+e.quantBytes+\". Should be one of \"+VALID_QUANT_BYTES+\" for architecture \"+e.architecture+\".\");return e}var PERSON_INFERENCE_CONFIG={flipHorizontal:!1,internalResolution:\"medium\",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20},MULTI_PERSON_INSTANCE_INFERENCE_CONFIG={flipHorizontal:!1,internalResolution:\"medium\",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20,minKeypointScore:.3,refineSteps:10};function validatePersonInferenceConfig(e){var t=e.segmentationThreshold,n=e.maxDetections,r=e.scoreThreshold,o=e.nmsRadius;if(t<0||t>1)throw new Error(\"segmentationThreshold \"+t+\". Should be in range [0.0, 1.0]\");if(n<=0)throw new Error(\"Invalid maxDetections \"+n+\". Should be > 0\");if(r<0||r>1)throw new Error(\"Invalid scoreThreshold \"+r+\". Should be in range [0.0, 1.0]\");if(o<=0)throw new Error(\"Invalid nmsRadius \"+o+\".\")}function validateMultiPersonInstanceInferenceConfig(e){var t=e.segmentationThreshold,n=e.maxDetections,r=e.scoreThreshold,o=e.nmsRadius,i=e.minKeypointScore,a=e.refineSteps;if(t<0||t>1)throw new Error(\"segmentationThreshold \"+t+\". Should be in range [0.0, 1.0]\");if(n<=0)throw new Error(\"Invalid maxDetections \"+n+\". Should be > 0\");if(r<0||r>1)throw new Error(\"Invalid scoreThreshold \"+r+\". Should be in range [0.0, 1.0]\");if(o<=0)throw new Error(\"Invalid nmsRadius \"+o+\".\");if(i<0||i>1)throw new Error(\"Invalid minKeypointScore \"+i+\".Should be in range [0.0, 1.0]\");if(a<=0||a>20)throw new Error(\"Invalid refineSteps \"+a+\".Should be in range [1, 20]\")}var BodyPix=function(){function e(e){this.baseModel=e}return e.prototype.predictForPersonSegmentation=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},e.prototype.predictForPersonSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,partHeatmapLogits:t.partHeatmaps,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},e.prototype.predictForMultiPersonInstanceSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,longOffsets:t.longOffsets,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd,partHeatmaps:t.partHeatmaps}},e.prototype.segmentPersonActivation=function(e,t,n){var r=this;void 0===n&&(n=.5);var o=getInputSize(e),i=o[0],a=o[1],s=toInputResolutionHeightAndWidth(t,this.baseModel.outputStride,[i,a]),d=padAndResizeTo(e,s),u=d.resized,l=d.padding,f=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){var e=r.predictForPersonSegmentation(u),t=e.segmentLogits,o=e.heatmapScores,s=e.offsets,d=e.displacementFwd,f=e.displacementBwd,c=u.shape,p=c[0],h=c[1],m=scaleAndCropToInputTensorShape(t,[i,a],[p,h],[[l.top,l.bottom],[l.left,l.right]],APPLY_SIGMOID_ACTIVATION);return{segmentation:toMaskTensor((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(m),n),heatmapScores:o,offsets:s,displacementFwd:d,displacementBwd:f}}),c=f.segmentation,p=f.heatmapScores,h=f.offsets,m=f.displacementFwd,g=f.displacementBwd;return u.dispose(),{segmentation:c,heatmapScores:p,offsets:h,displacementFwd:m,displacementBwd:g,padding:l,internalResolutionHeightAndWidth:s}},e.prototype.segmentPerson=function(e,t){return void 0===t&&(t=PERSON_INFERENCE_CONFIG),__awaiter(this,void 0,void 0,function(){var n,r,o,i,a,s,d,u,l,f,c,p,h,m,g,v,S,_;return __generator(this,function(I){switch(I.label){case 0:return validatePersonInferenceConfig(t=__assign({},PERSON_INFERENCE_CONFIG,t)),n=this.segmentPersonActivation(e,t.internalResolution,t.segmentationThreshold),r=n.segmentation,o=n.heatmapScores,i=n.offsets,a=n.displacementFwd,s=n.displacementBwd,d=n.padding,u=n.internalResolutionHeightAndWidth,l=r.shape,f=l[0],c=l[1],[4,r.data()];case 1:return p=I.sent(),r.dispose(),[4,toTensorBuffers3D([o,i,a,s])];case 2:return h=I.sent(),m=h[0],g=h[1],v=h[2],S=h[3],_=scaleAndFlipPoses(_=decodeMultiplePoses(m,g,v,S,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[f,c],u,d,FLIP_POSES_AFTER_SCALING),o.dispose(),i.dispose(),a.dispose(),s.dispose(),[2,{height:f,width:c,data:p,allPoses:_}]}})})},e.prototype.segmentMultiPerson=function(e,t){return void 0===t&&(t=MULTI_PERSON_INSTANCE_INFERENCE_CONFIG),__awaiter(this,void 0,void 0,function(){var n,r,o,i,a,s,d,u,l,f,c,p,h,m,g,v,S,_,I,w,E,T=this;return __generator(this,function(N){switch(N.label){case 0:return validateMultiPersonInstanceInferenceConfig(t=__assign({},MULTI_PERSON_INSTANCE_INFERENCE_CONFIG,t)),n=getInputSize(e),r=n[0],o=n[1],i=toInputResolutionHeightAndWidth(t.internalResolution,this.baseModel.outputStride,[r,o]),a=padAndResizeTo(e,i),s=a.resized,d=a.padding,u=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){var e,n=T.predictForMultiPersonInstanceSegmentationAndPart(s),a=n.segmentLogits,u=n.longOffsets,l=n.heatmapScores,f=n.offsets,c=n.displacementFwd,p=n.displacementBwd,h=scaleAndCropToInputTensorShape(a,[r,o],i,[[d.top,d.bottom],[d.left,d.right]],APPLY_SIGMOID_ACTIVATION);return e=u,{segmentation:toMaskTensor((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(h),t.segmentationThreshold),longOffsets:e,heatmapScoresRaw:l,offsetsRaw:f,displacementFwdRaw:c,displacementBwdRaw:p}}),l=u.segmentation,f=u.longOffsets,c=u.heatmapScoresRaw,p=u.offsetsRaw,h=u.displacementFwdRaw,m=u.displacementBwdRaw,[4,toTensorBuffers3D([c,p,h,m])];case 1:return g=N.sent(),v=g[0],S=g[1],_=g[2],I=g[3],w=scaleAndFlipPoses(w=decodeMultiplePoses(v,S,_,I,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[r,o],i,d,FLIP_POSES_AFTER_SCALING),[4,decodePersonInstanceMasks(l,f,w,r,o,this.baseModel.outputStride,i,d,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return E=N.sent(),s.dispose(),l.dispose(),f.dispose(),c.dispose(),p.dispose(),h.dispose(),m.dispose(),[2,E]}})})},e.prototype.segmentPersonPartsActivation=function(e,t,n){var r=this;void 0===n&&(n=.5);var o=getInputSize(e),i=o[0],a=o[1],s=toInputResolutionHeightAndWidth(t,this.baseModel.outputStride,[i,a]),d=padAndResizeTo(e,s),u=d.resized,l=d.padding,f=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){var e=r.predictForPersonSegmentationAndPart(u),t=e.segmentLogits,o=e.partHeatmapLogits,s=e.heatmapScores,d=e.offsets,f=e.displacementFwd,c=e.displacementBwd,p=u.shape,h=p[0],m=p[1],g=scaleAndCropToInputTensorShape(t,[i,a],[h,m],[[l.top,l.bottom],[l.left,l.right]],APPLY_SIGMOID_ACTIVATION),v=scaleAndCropToInputTensorShape(o,[i,a],[h,m],[[l.top,l.bottom],[l.left,l.right]],APPLY_SIGMOID_ACTIVATION);return{partSegmentation:decodePartSegmentation(toMaskTensor((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(g),n),v),heatmapScores:s,offsets:d,displacementFwd:f,displacementBwd:c}}),c=f.partSegmentation,p=f.heatmapScores,h=f.offsets,m=f.displacementFwd,g=f.displacementBwd;return u.dispose(),{partSegmentation:c,heatmapScores:p,offsets:h,displacementFwd:m,displacementBwd:g,padding:l,internalResolutionHeightAndWidth:s}},e.prototype.segmentPersonParts=function(e,t){return void 0===t&&(t=PERSON_INFERENCE_CONFIG),__awaiter(this,void 0,void 0,function(){var n,r,o,i,a,s,d,u,l,f,c,p,h,m,g,v,S,_;return __generator(this,function(I){switch(I.label){case 0:return validatePersonInferenceConfig(t=__assign({},PERSON_INFERENCE_CONFIG,t)),n=this.segmentPersonPartsActivation(e,t.internalResolution,t.segmentationThreshold),r=n.partSegmentation,o=n.heatmapScores,i=n.offsets,a=n.displacementFwd,s=n.displacementBwd,d=n.padding,u=n.internalResolutionHeightAndWidth,l=r.shape,f=l[0],c=l[1],[4,r.data()];case 1:return p=I.sent(),r.dispose(),[4,toTensorBuffers3D([o,i,a,s])];case 2:return h=I.sent(),m=h[0],g=h[1],v=h[2],S=h[3],_=scaleAndFlipPoses(_=decodeMultiplePoses(m,g,v,S,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[f,c],u,d,FLIP_POSES_AFTER_SCALING),o.dispose(),i.dispose(),a.dispose(),s.dispose(),[2,{height:f,width:c,data:p,allPoses:_}]}})})},e.prototype.segmentMultiPersonParts=function(e,t){return void 0===t&&(t=MULTI_PERSON_INSTANCE_INFERENCE_CONFIG),__awaiter(this,void 0,void 0,function(){var n,r,o,i,a,s,d,u,l,f,c,p,h,m,g,v,S,_,I,w,E,T,N=this;return __generator(this,function(A){switch(A.label){case 0:return validateMultiPersonInstanceInferenceConfig(t=__assign({},MULTI_PERSON_INSTANCE_INFERENCE_CONFIG,t)),n=getInputSize(e),r=n[0],o=n[1],i=toInputResolutionHeightAndWidth(t.internalResolution,this.baseModel.outputStride,[r,o]),a=padAndResizeTo(e,i),s=a.resized,d=a.padding,u=(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(function(){var e=N.predictForMultiPersonInstanceSegmentationAndPart(s),n=e.segmentLogits,a=e.longOffsets,u=e.heatmapScores,l=e.offsets,f=e.displacementFwd,c=e.displacementBwd,p=e.partHeatmaps,h=scaleAndCropToInputTensorShape(n,[r,o],i,[[d.top,d.bottom],[d.left,d.right]],APPLY_SIGMOID_ACTIVATION),m=scaleAndCropToInputTensorShape(p,[r,o],i,[[d.top,d.bottom],[d.left,d.right]],APPLY_SIGMOID_ACTIVATION),g=a;return{segmentation:toMaskTensor((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.squeeze)(h),t.segmentationThreshold),longOffsets:g,heatmapScoresRaw:u,offsetsRaw:l,displacementFwdRaw:f,displacementBwdRaw:c,partSegmentation:decodeOnlyPartSegmentation(m)}}),l=u.segmentation,f=u.longOffsets,c=u.heatmapScoresRaw,p=u.offsetsRaw,h=u.displacementFwdRaw,m=u.displacementBwdRaw,g=u.partSegmentation,[4,toTensorBuffers3D([c,p,h,m])];case 1:return v=A.sent(),S=v[0],_=v[1],I=v[2],w=v[3],E=scaleAndFlipPoses(E=decodeMultiplePoses(S,_,I,w,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[r,o],i,d,FLIP_POSES_AFTER_SCALING),[4,decodePersonInstancePartMasks(l,f,g,E,r,o,this.baseModel.outputStride,i,d,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return T=A.sent(),s.dispose(),l.dispose(),f.dispose(),c.dispose(),p.dispose(),h.dispose(),m.dispose(),g.dispose(),[2,T]}})})},e.prototype.dispose=function(){this.baseModel.dispose()},e}();function loadMobileNet(e){return __awaiter(this,void 0,void 0,function(){var t,n,r,o,i,a;return __generator(this,function(s){switch(s.label){case 0:if(t=e.outputStride,n=e.quantBytes,r=e.multiplier,null==_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__)throw new Error(\"Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\\n        model.\");return o=mobileNetSavedModel(t,r,n),[4,(0,_tensorflow_tfjs_converter__WEBPACK_IMPORTED_MODULE_1__.loadGraphModel)(e.modelUrl||o)];case 1:return i=s.sent(),a=new MobileNet(i,t),[2,new BodyPix(a)]}})})}function loadResNet(e){return __awaiter(this,void 0,void 0,function(){var t,n,r,o,i;return __generator(this,function(a){switch(a.label){case 0:if(t=e.outputStride,n=e.quantBytes,null==_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__)throw new Error(\"Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\\n        model.\");return r=resNet50SavedModel(t,n),[4,(0,_tensorflow_tfjs_converter__WEBPACK_IMPORTED_MODULE_1__.loadGraphModel)(e.modelUrl||r)];case 1:return o=a.sent(),i=new ResNet(o,t),[2,new BodyPix(i)]}})})}function load(e){return void 0===e&&(e=MOBILENET_V1_CONFIG),__awaiter(this,void 0,void 0,function(){return __generator(this,function(t){return\"ResNet50\"===(e=validateModelConfig(e)).architecture?[2,loadResNet(e)]:\"MobileNetV1\"===e.architecture?[2,loadMobileNet(e)]:[2,null]})})}function cpuBlur(e,t,n){for(var r=e.getContext(\"2d\"),o=0,i=1/(2*Math.PI*5*5),a=n<3?1:2,s=-n;s<=n;s+=a)for(var d=-n;d<=n;d+=a){o+=i*Math.exp(-(d*d+s*s)/50)}for(s=-n;s<=n;s+=a)for(d=-n;d<=n;d+=a)r.globalAlpha=i*Math.exp(-(d*d+s*s)/50)/o*n,r.drawImage(t,d,s);r.globalAlpha=1}var offScreenCanvases={};function isSafari(){return/^((?!chrome|android).)*safari/i.test(navigator.userAgent)}function assertSameDimensions(e,t,n,r){var o=e.width,i=e.height,a=t.width,s=t.height;if(o!==a||i!==s)throw new Error(\"error: dimensions must match. \"+n+\" has dimensions \"+o+\"x\"+i+\", \"+r+\" has dimensions \"+a+\"x\"+s)}function flipCanvasHorizontal(e){var t=e.getContext(\"2d\");t.scale(-1,1),t.translate(-e.width,0)}function drawWithCompositing(e,t,n){e.globalCompositeOperation=n,e.drawImage(t,0,0)}function createOffScreenCanvas(){return document.createElement(\"canvas\")}function ensureOffscreenCanvasCreated(e){return offScreenCanvases[e]||(offScreenCanvases[e]=createOffScreenCanvas()),offScreenCanvases[e]}function drawAndBlurImageOnCanvas(e,t,n){var r=e.height,o=e.width,i=n.getContext(\"2d\");n.width=o,n.height=r,i.clearRect(0,0,o,r),i.save(),isSafari()?cpuBlur(n,e,t):(i.filter=\"blur(\"+t+\"px)\",i.drawImage(e,0,0,o,r)),i.restore()}function drawAndBlurImageOnOffScreenCanvas(e,t,n){var r=ensureOffscreenCanvasCreated(n);return 0===t?renderImageToCanvas(e,r):drawAndBlurImageOnCanvas(e,t,r),r}function renderImageToCanvas(e,t){var n=e.width,r=e.height;t.width=n,t.height=r,t.getContext(\"2d\").drawImage(e,0,0,n,r)}function renderImageDataToCanvas(e,t){t.width=e.width,t.height=e.height,t.getContext(\"2d\").putImageData(e,0,0)}function renderImageDataToOffScreenCanvas(e,t){var n=ensureOffscreenCanvasCreated(t);return renderImageDataToCanvas(e,n),n}function toMask(e,t,n,r,o){if(void 0===t&&(t={r:0,g:0,b:0,a:0}),void 0===n&&(n={r:0,g:0,b:0,a:255}),void 0===r&&(r=!1),void 0===o&&(o=[1]),Array.isArray(e)&&0===e.length)return null;var i,a=(i=Array.isArray(e)?e:[e])[0],s=a.width,d=a.height,u=new Uint8ClampedArray(s*d*4);function l(e,t,n,r,o,i){void 0===i&&(i={r:0,g:255,b:255,a:255});for(var a=-o;a<=o;a++)for(var s=-o;s<=o;s++)if(0!==a&&0!==s){var d=(t+a)*r+(n+s);e[4*d+0]=i.r,e[4*d+1]=i.g,e[4*d+2]=i.b,e[4*d+3]=i.a}}function f(e,t,n,r,o,i){void 0===o&&(o=[1]),void 0===i&&(i=1);for(var a=0,s=-i;s<=i;s++)for(var d=function(i){if(0!==s&&0!==i){var d=(t+s)*r+(n+i);o.some(function(t){return t===e[d]})||(a+=1)}},u=-i;u<=i;u++)d(u);return a>0}for(var c=0;c<d;c+=1)for(var p=function(e){var a=c*s+e;u[4*a+0]=n.r,u[4*a+1]=n.g,u[4*a+2]=n.b,u[4*a+3]=n.a;for(var p=function(n){if(o.some(function(e){return e===i[n].data[a]})){u[4*a]=t.r,u[4*a+1]=t.g,u[4*a+2]=t.b,u[4*a+3]=t.a;var p=f(i[n].data,c,e,s,o);r&&c-1>=0&&c+1<d&&e-1>=0&&e+1<s&&p&&l(u,c,e,s,1)}},h=0;h<i.length;h++)p(h)},h=0;h<s;h+=1)p(h);return new ImageData(u,s,d)}var RAINBOW_PART_COLORS=[[110,64,170],[143,61,178],[178,60,178],[210,62,167],[238,67,149],[255,78,125],[255,94,99],[255,115,75],[255,140,56],[239,167,47],[217,194,49],[194,219,64],[175,240,91],[135,245,87],[96,247,96],[64,243,115],[40,234,141],[28,219,169],[26,199,194],[33,176,213],[47,150,224],[65,125,224],[84,101,214],[99,81,195]];function toColoredPartMask(e,t){if(void 0===t&&(t=RAINBOW_PART_COLORS),Array.isArray(e)&&0===e.length)return null;for(var n,r=(n=Array.isArray(e)?e:[e])[0],o=r.width,i=r.height,a=new Uint8ClampedArray(o*i*4),s=0;s<i*o;++s){var d=4*s;a[d+0]=255,a[d+1]=255,a[d+2]=255,a[d+3]=255;for(var u=0;u<n.length;u++){var l=n[u].data[s];if(-1!==l){var f=t[l];if(!f)throw new Error(\"No color could be found for part id \"+l);a[d+0]=f[0],a[d+1]=f[1],a[d+2]=f[2],a[d+3]=255}}}return new ImageData(a,o,i)}var CANVAS_NAMES={blurred:\"blurred\",blurredMask:\"blurred-mask\",mask:\"mask\",lowresPartMask:\"lowres-part-mask\"};function drawMask(e,t,n,r,o,i){void 0===r&&(r=.7),void 0===o&&(o=0),void 0===i&&(i=!1);var a=getInputSize(t),s=a[0],d=a[1];e.width=d,e.height=s;var u=e.getContext(\"2d\");if(u.save(),i&&flipCanvasHorizontal(e),u.drawImage(t,0,0),u.globalAlpha=r,n){assertSameDimensions({width:d,height:s},n,\"image\",\"mask\");var l=drawAndBlurImageOnOffScreenCanvas(renderImageDataToOffScreenCanvas(n,CANVAS_NAMES.mask),o,CANVAS_NAMES.blurredMask);u.drawImage(l,0,0,d,s)}u.restore()}function drawPixelatedMask(e,t,n,r,o,i,a){void 0===r&&(r=.7),void 0===o&&(o=0),void 0===i&&(i=!1),void 0===a&&(a=10);var s=getInputSize(t),d=s[0];assertSameDimensions({width:s[1],height:d},n,\"image\",\"mask\");var u=drawAndBlurImageOnOffScreenCanvas(renderImageDataToOffScreenCanvas(n,CANVAS_NAMES.mask),o,CANVAS_NAMES.blurredMask);e.width=u.width,e.height=u.height;var l=e.getContext(\"2d\");l.save(),i&&flipCanvasHorizontal(e);var f=ensureOffscreenCanvasCreated(CANVAS_NAMES.lowresPartMask),c=f.getContext(\"2d\");f.width=u.width*(1/a),f.height=u.height*(1/a),c.drawImage(u,0,0,u.width,u.height,0,0,f.width,f.height),l.imageSmoothingEnabled=!1,l.drawImage(f,0,0,f.width,f.height,0,0,e.width,e.height);for(var p=0;p<f.width;p++)l.beginPath(),l.strokeStyle=\"#ffffff\",l.moveTo(a*p,0),l.lineTo(a*p,e.height),l.stroke();for(p=0;p<f.height;p++)l.beginPath(),l.strokeStyle=\"#ffffff\",l.moveTo(0,a*p),l.lineTo(e.width,a*p),l.stroke();l.globalAlpha=1-r,l.drawImage(t,0,0,u.width,u.height),l.restore()}function createPersonMask(e,t){var n=renderImageDataToOffScreenCanvas(toMask(e,{r:0,g:0,b:0,a:255},{r:0,g:0,b:0,a:0}),CANVAS_NAMES.mask);return 0===t?n:drawAndBlurImageOnOffScreenCanvas(n,t,CANVAS_NAMES.blurredMask)}function drawBokehEffect(e,t,n,r,o,i){void 0===r&&(r=3),void 0===o&&(o=3),void 0===i&&(i=!1);var a=drawAndBlurImageOnOffScreenCanvas(t,r,CANVAS_NAMES.blurred);e.width=a.width,e.height=a.height;var s=e.getContext(\"2d\");if(Array.isArray(n)&&0===n.length)s.drawImage(a,0,0);else{var d=createPersonMask(n,o);s.save(),i&&flipCanvasHorizontal(e);var u=getInputSize(t),l=u[0],f=u[1];s.drawImage(t,0,0,f,l),drawWithCompositing(s,d,\"destination-in\"),drawWithCompositing(s,a,\"destination-over\"),s.restore()}}function createBodyPartMask(e,t,n){var r=renderImageDataToOffScreenCanvas(toMask(e,{r:0,g:0,b:0,a:0},{r:0,g:0,b:0,a:255},!0,t),CANVAS_NAMES.mask);return 0===n?r:drawAndBlurImageOnOffScreenCanvas(r,n,CANVAS_NAMES.blurredMask)}function blurBodyPart(e,t,n,r,o,i,a){void 0===r&&(r=[0,1]),void 0===o&&(o=3),void 0===i&&(i=3),void 0===a&&(a=!1);var s=drawAndBlurImageOnOffScreenCanvas(t,o,CANVAS_NAMES.blurred);e.width=s.width,e.height=s.height;var d=e.getContext(\"2d\");if(Array.isArray(n)&&0===n.length)d.drawImage(s,0,0);else{var u=createBodyPartMask(n,r,i);d.save(),a&&flipCanvasHorizontal(e);var l=getInputSize(t),f=l[0],c=l[1];d.drawImage(t,0,0,c,f),drawWithCompositing(d,u,\"destination-in\"),drawWithCompositing(d,s,\"destination-over\"),d.restore()}}var PART_CHANNELS=[\"left_face\",\"right_face\",\"left_upper_arm_front\",\"left_upper_arm_back\",\"right_upper_arm_front\",\"right_upper_arm_back\",\"left_lower_arm_front\",\"left_lower_arm_back\",\"right_lower_arm_front\",\"right_lower_arm_back\",\"left_hand\",\"right_hand\",\"torso_front\",\"torso_back\",\"left_upper_leg_front\",\"left_upper_leg_back\",\"right_upper_leg_front\",\"right_upper_leg_back\",\"left_lower_leg_front\",\"left_lower_leg_back\",\"right_lower_leg_front\",\"right_lower_leg_back\",\"left_feet\",\"right_feet\"],version=\"2.1.0\";\n//# sourceMappingURL=body-pix.esm.js.map\n\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow-models/body-pix/dist/body-pix.esm.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export assertNotComplex [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"assertNotComplex\": () => /* binding */ assertNotComplex\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction assertNotComplex(tensor, opName) {\n    if (!Array.isArray(tensor)) {\n        tensor = [tensor];\n    }\n    tensor.forEach(t => {\n        if (t != null) {\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(t.dtype !== 'complex64', () => `${opName} does not support complex64 tensors in the CPU backend.`);\n        }\n    });\n}\n//# sourceMappingURL=cpu_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Abs.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Abs.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export abs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export absConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export simpleAbsImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"simpleAbsImpl\": () => /* binding */ simpleAbsImpl,\n/* harmony export */   \"abs\": () => /* binding */ abs,\n/* harmony export */   \"absConfig\": () => /* binding */ absConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction simpleAbsImpl(vals) {\n    const resultValues = new Float32Array(vals.length);\n    for (let i = 0; i < vals.length; ++i) {\n        resultValues[i] = Math.abs(vals[i]);\n    }\n    return resultValues;\n}\nconst abs = (args) => {\n    const { x } = args.inputs;\n    const cpuBackend = args.backend;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'abs');\n    let resultValues = new Float32Array(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape));\n    const values = cpuBackend.data.get(x.dataId).values;\n    resultValues = simpleAbsImpl(values);\n    return cpuBackend.makeOutput(resultValues, x.shape, 'float32');\n};\nconst absConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Abs,\n    backendName: 'cpu',\n    kernelFunc: abs,\n};\n//# sourceMappingURL=Abs.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Abs.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export add [provided] [no usage info] [missing usage info prevents renaming] */
/*! export addComplexImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! export addConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export addImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addImpl\": () => /* binding */ addImpl,\n/* harmony export */   \"addComplexImpl\": () => /* binding */ addComplexImpl,\n/* harmony export */   \"add\": () => /* binding */ add,\n/* harmony export */   \"addConfig\": () => /* binding */ addConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst addImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((a, b) => a + b));\nconst addComplexImpl = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.createComplexBinaryKernelImpl)(((aReal, aImag, bReal, bImag) => {\n    return { real: aReal + bReal, imag: aImag + bImag };\n}));\nconst add = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Add, addImpl, addComplexImpl);\nconst addConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Add,\n    backendName: 'cpu',\n    kernelFunc: add\n};\n//# sourceMappingURL=Add.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount_impl.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount_impl.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export bincountImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bincountReduceImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bincountImpl\": () => /* binding */ bincountImpl,\n/* harmony export */   \"bincountReduceImpl\": () => /* binding */ bincountReduceImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction bincountImpl(xVals, weightsVals, weightsDtype, weightsShape, size) {\n    const weightsSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(weightsShape);\n    const outVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(size, weightsDtype);\n    for (let i = 0; i < xVals.length; i++) {\n        const value = xVals[i];\n        if (value < 0) {\n            throw new Error('Input x must be non-negative!');\n        }\n        if (value >= size) {\n            continue;\n        }\n        if (weightsSize > 0) {\n            outVals[value] += weightsVals[i];\n        }\n        else {\n            outVals[value] += 1;\n        }\n    }\n    return outVals;\n}\nfunction bincountReduceImpl(xBuf, weightsBuf, size, binaryOutput = false) {\n    const numRows = xBuf.shape[0];\n    const numCols = xBuf.shape[1];\n    const outBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)([numRows, size], weightsBuf.dtype);\n    for (let i = 0; i < numRows; i++) {\n        for (let j = 0; j < numCols; j++) {\n            const value = xBuf.get(i, j);\n            if (value < 0) {\n                throw new Error('Input x must be non-negative!');\n            }\n            if (value >= size) {\n                continue;\n            }\n            if (binaryOutput) {\n                outBuf.set(1, i, value);\n            }\n            else {\n                if (weightsBuf.size > 0) {\n                    outBuf.set(outBuf.get(i, value) + weightsBuf.get(i, j), i, value);\n                }\n                else {\n                    outBuf.set(outBuf.get(i, value) + 1, i, value);\n                }\n            }\n        }\n    }\n    return outBuf;\n}\n//# sourceMappingURL=Bincount_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export cast [provided] [no usage info] [missing usage info prevents renaming] */
/*! export castConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cast\": () => /* binding */ cast,\n/* harmony export */   \"castConfig\": () => /* binding */ castConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_zeros_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/zeros_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/zeros_impl.js\");\n/* harmony import */ var _Complex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Complex */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js\");\n/* harmony import */ var _Real__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Real */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\nfunction cast(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { dtype } = attrs;\n    // Casting to complex64.\n    if (dtype === 'complex64') {\n        if (x.dtype === 'complex64') {\n            return (0,_Identity__WEBPACK_IMPORTED_MODULE_1__.identity)({ inputs: { x }, backend });\n        }\n        const zerosTensorInfo = (0,_utils_zeros_impl__WEBPACK_IMPORTED_MODULE_2__.zeros)(backend, x.shape, x.dtype);\n        const floatX = cast({ inputs: { x }, backend, attrs: { dtype: 'float32' } });\n        const result = (0,_Complex__WEBPACK_IMPORTED_MODULE_3__.complex)({ inputs: { real: floatX, imag: zerosTensorInfo }, backend });\n        backend.disposeIntermediateTensorInfo(zerosTensorInfo);\n        backend.disposeIntermediateTensorInfo(floatX);\n        return result;\n    }\n    // Casting from complex64\n    if (x.dtype === 'complex64') {\n        const realPart = (0,_Real__WEBPACK_IMPORTED_MODULE_4__.real)({ inputs: { input: x }, backend });\n        const result = cast({ inputs: { x: realPart }, backend, attrs: { dtype } });\n        backend.disposeIntermediateTensorInfo(realPart);\n        return result;\n    }\n    if (!_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.hasEncodingLoss(x.dtype, dtype)) {\n        // We don't change the underlying data, since we cast to higher\n        // precision.\n        const result = (0,_Identity__WEBPACK_IMPORTED_MODULE_1__.identity)({ inputs: { x }, backend });\n        return { dataId: result.dataId, shape: result.shape, dtype };\n    }\n    if (dtype === 'int32') {\n        const values = backend.data.get(x.dataId).values;\n        const resultValues = Int32Array.from(values);\n        return backend.makeTensorInfo(x.shape, 'int32', resultValues);\n    }\n    if (dtype === 'bool') {\n        // This is essentially the result of notEqual(x, 0). We avoid using\n        // kernel notEqual to avoid circular dependency, i.e. binary_utils ->\n        // cast -> notEqual -> binary_utils.\n        const xVals = backend.data.get(x.dataId).values;\n        const zero = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.toTypedArray([0], x.dtype);\n        const [resultData, resultShape] = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_5__.createSimpleBinaryKernelImpl)((a, b) => (a !== b) ? 1 : 0)(x.shape, [], xVals, zero, 'bool');\n        return backend.makeTensorInfo(resultShape, 'bool', resultData);\n    }\n    throw new Error(`Error in Cast: failed to cast ${x.dtype} to ${dtype}`);\n}\nconst castConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Cast,\n    backendName: 'cpu',\n    kernelFunc: cast\n};\n//# sourceMappingURL=Cast.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Ceil.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Ceil.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export ceil [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ceilConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ceilImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ceilImpl\": () => /* binding */ ceilImpl,\n/* harmony export */   \"ceil\": () => /* binding */ ceil,\n/* harmony export */   \"ceilConfig\": () => /* binding */ ceilConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst ceilImpl = (0,_utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleUnaryImpl)((xi) => Math.ceil(xi));\nconst ceil = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFuncFromImpl)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ceil, ceilImpl);\nconst ceilConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ceil,\n    backendName: 'cpu',\n    kernelFunc: ceil,\n};\n//# sourceMappingURL=Ceil.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Ceil.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export complex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export complexConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"complex\": () => /* binding */ complex,\n/* harmony export */   \"complexConfig\": () => /* binding */ complexConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction complex(args) {\n    const { inputs, backend } = args;\n    const { real, imag } = inputs;\n    const realVals = backend.data.get(real.dataId).values;\n    const imagVals = backend.data.get(imag.dataId).values;\n    const complexInfo = backend.makeTensorInfo(real.shape, 'complex64');\n    const complex = backend.data.get(complexInfo.dataId);\n    // The complex tensor owns the underlying real and imag tensorInfos, only the\n    // complex tensor tracks refCount, when complexData is disposed the\n    // underlying tensorData will be disposed.\n    complex.complexTensorInfos = {\n        real: backend.makeTensorInfo(real.shape, 'float32', realVals),\n        imag: backend.makeTensorInfo(imag.shape, 'float32', imagVals)\n    };\n    return complexInfo;\n}\nconst complexConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Complex,\n    backendName: 'cpu',\n    kernelFunc: complex\n};\n//# sourceMappingURL=Complex.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export concatImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concatImpl\": () => /* binding */ concatImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction concatImpl(inputs, outShape, dtype, simplyConcat) {\n    const outVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType(dtype, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape));\n    if (simplyConcat && dtype !== 'string') {\n        // Use built-in TypedArray.set() method for speed.\n        let offset = 0;\n        inputs.forEach(input => {\n            const size = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(input.shape);\n            outVals.set(input.vals, offset);\n            offset += size;\n        });\n    }\n    else {\n        let colOffset = 0;\n        inputs.forEach(input => {\n            const decodedData = dtype === 'string' ?\n                _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.fromUint8ToStringArray(input.vals) :\n                input.vals;\n            let tIdx = 0;\n            for (let row = 0; row < input.shape[0]; ++row) {\n                const resIdx = row * outShape[1] + colOffset;\n                for (let col = 0; col < input.shape[1]; ++col) {\n                    outVals[resIdx + col] = decodedData[tIdx++];\n                }\n            }\n            colOffset += input.shape[1];\n        });\n    }\n    return outVals;\n}\n//# sourceMappingURL=Concat_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Exp.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Exp.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export exp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"expImpl\": () => /* binding */ expImpl,\n/* harmony export */   \"exp\": () => /* binding */ exp,\n/* harmony export */   \"expConfig\": () => /* binding */ expConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst expImpl = (0,_utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleUnaryImpl)((xi) => Math.exp(xi));\nconst exp = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFuncFromImpl)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Exp, expImpl);\nconst expConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Exp,\n    backendName: 'cpu',\n    kernelFunc: exp,\n};\n//# sourceMappingURL=Exp.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Exp.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Expm1.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Expm1.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export expm1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expm1Config [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expm1Impl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"expm1Impl\": () => /* binding */ expm1Impl,\n/* harmony export */   \"expm1\": () => /* binding */ expm1,\n/* harmony export */   \"expm1Config\": () => /* binding */ expm1Config\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst expm1Impl = (0,_utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleUnaryImpl)((xi) => Math.expm1(xi));\nconst expm1 = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFuncFromImpl)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Expm1, expm1Impl);\nconst expm1Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Expm1,\n    backendName: 'cpu',\n    kernelFunc: expm1,\n};\n//# sourceMappingURL=Expm1.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Expm1.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Floor.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Floor.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export floor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export floorConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export floorImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"floorImpl\": () => /* binding */ floorImpl,\n/* harmony export */   \"floor\": () => /* binding */ floor,\n/* harmony export */   \"floorConfig\": () => /* binding */ floorConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst floorImpl = (0,_utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleUnaryImpl)((xi) => Math.floor(xi));\nconst floor = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFuncFromImpl)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Floor, floorImpl);\nconst floorConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Floor,\n    backendName: 'cpu',\n    kernelFunc: floor,\n};\n//# sourceMappingURL=Floor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Floor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2_impl.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2_impl.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export gatherV2Impl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gatherV2Impl\": () => /* binding */ gatherV2Impl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction gatherV2Impl(xBuf, indicesBuf, flattenOutputShape) {\n    const outBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(flattenOutputShape, xBuf.dtype);\n    for (let i = 0; i < outBuf.size; ++i) {\n        const newLoc = outBuf.indexToLoc(i);\n        const originalLoc = newLoc.slice();\n        const batchIdx = originalLoc[0];\n        const indicesIdx = originalLoc[2];\n        const indicesIndex = indicesBuf.locToIndex([batchIdx, indicesIdx]);\n        originalLoc[2] = indicesBuf.values[indicesIndex];\n        const originalIndex = xBuf.locToIndex(originalLoc);\n        outBuf.values[i] = xBuf.values[originalIndex];\n    }\n    return outBuf;\n}\n//# sourceMappingURL=GatherV2_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Greater.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Greater.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export greater [provided] [no usage info] [missing usage info prevents renaming] */
/*! export greaterConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export greaterImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"greaterImpl\": () => /* binding */ greaterImpl,\n/* harmony export */   \"greater\": () => /* binding */ greater,\n/* harmony export */   \"greaterConfig\": () => /* binding */ greaterConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst greaterImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)((a, b) => (a > b) ? 1 : 0);\nconst greater = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Greater, greaterImpl, null /* complexImpl */, 'bool');\nconst greaterConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Greater,\n    backendName: 'cpu',\n    kernelFunc: greater\n};\n//# sourceMappingURL=Greater.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Greater.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export identity [provided] [no usage info] [missing usage info prevents renaming] */
/*! export identityConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"identity\": () => /* binding */ identity,\n/* harmony export */   \"identityConfig\": () => /* binding */ identityConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction identity(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    backend.incRef(x.dataId);\n    return { dataId: x.dataId, shape: x.shape, dtype: x.dtype };\n}\nconst identityConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Identity,\n    backendName: 'cpu',\n    kernelFunc: identity\n};\n//# sourceMappingURL=Identity.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Identity.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Less.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Less.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export less [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lessConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lessImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lessImpl\": () => /* binding */ lessImpl,\n/* harmony export */   \"less\": () => /* binding */ less,\n/* harmony export */   \"lessConfig\": () => /* binding */ lessConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst lessImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)((a, b) => (a < b) ? 1 : 0);\nconst less = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Less, lessImpl, null /* complexImpl */, 'bool');\nconst lessConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Less,\n    backendName: 'cpu',\n    kernelFunc: less\n};\n//# sourceMappingURL=Less.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Less.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace_impl.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace_impl.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export linSpaceImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"linSpaceImpl\": () => /* binding */ linSpaceImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction linSpaceImpl(start, stop, num) {\n    const step = (stop - start) / (num - 1);\n    const values = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(num, 'float32');\n    values[0] = start;\n    for (let i = 1; i < values.length; i++) {\n        values[i] = values[i - 1] + step;\n    }\n    return values;\n}\n//# sourceMappingURL=LinSpace_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export log [provided] [no usage info] [missing usage info prevents renaming] */
/*! export logConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export logImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logImpl\": () => /* binding */ logImpl,\n/* harmony export */   \"log\": () => /* binding */ log,\n/* harmony export */   \"logConfig\": () => /* binding */ logConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst logImpl = (0,_utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleUnaryImpl)((xi) => Math.log(xi));\nconst log = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFuncFromImpl)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Log, logImpl);\nconst logConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Log,\n    backendName: 'cpu',\n    kernelFunc: log,\n};\n//# sourceMappingURL=Log.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max_impl.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max_impl.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export maxImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxImpl\": () => /* binding */ maxImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction maxImpl(aVals, reduceSize, outShape, dtype) {\n    const vals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(dtype, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape));\n    for (let i = 0; i < vals.length; ++i) {\n        const offset = i * reduceSize;\n        let max = aVals[offset];\n        for (let j = 0; j < reduceSize; ++j) {\n            const value = aVals[offset + j];\n            if (value > max) {\n                max = value;\n            }\n        }\n        vals[i] = max;\n    }\n    return vals;\n}\n//# sourceMappingURL=Max_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Maximum.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Maximum.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export maximum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maximumConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maximumImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maximumImpl\": () => /* binding */ maximumImpl,\n/* harmony export */   \"maximum\": () => /* binding */ maximum,\n/* harmony export */   \"maximumConfig\": () => /* binding */ maximumConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst maximumImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((aValue, bValue) => Math.max(aValue, bValue)));\nconst maximum = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Maximum, maximumImpl);\nconst maximumConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Maximum,\n    backendName: 'cpu',\n    kernelFunc: maximum\n};\n//# sourceMappingURL=Maximum.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Maximum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Minimum.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Minimum.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export minimum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export minimumConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export minimumImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"minimumImpl\": () => /* binding */ minimumImpl,\n/* harmony export */   \"minimum\": () => /* binding */ minimum,\n/* harmony export */   \"minimumConfig\": () => /* binding */ minimumConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst minimumImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((aValue, bValue) => Math.min(aValue, bValue)));\nconst minimum = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Minimum, minimumImpl);\nconst minimumConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Minimum,\n    backendName: 'cpu',\n    kernelFunc: minimum\n};\n//# sourceMappingURL=Minimum.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Minimum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export multiply [provided] [no usage info] [missing usage info prevents renaming] */
/*! export multiplyComplexImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! export multiplyConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export multiplyImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"multiplyImpl\": () => /* binding */ multiplyImpl,\n/* harmony export */   \"multiplyComplexImpl\": () => /* binding */ multiplyComplexImpl,\n/* harmony export */   \"multiply\": () => /* binding */ multiply,\n/* harmony export */   \"multiplyConfig\": () => /* binding */ multiplyConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst multiplyImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((aValue, bValue) => aValue * bValue));\nconst multiplyComplexImpl = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.createComplexBinaryKernelImpl)(((aReal, aImag, bReal, bImag) => {\n    return {\n        real: aReal * bReal - aImag * bImag,\n        imag: aReal * bImag + aImag * bReal\n    };\n}));\nconst multiply = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Multiply, multiplyImpl, multiplyComplexImpl);\nconst multiplyConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Multiply,\n    backendName: 'cpu',\n    kernelFunc: multiply\n};\n//# sourceMappingURL=Multiply.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Neg.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Neg.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export neg [provided] [no usage info] [missing usage info prevents renaming] */
/*! export negConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export negImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"negImpl\": () => /* binding */ negImpl,\n/* harmony export */   \"neg\": () => /* binding */ neg,\n/* harmony export */   \"negConfig\": () => /* binding */ negConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Multiply__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Multiply */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction negImpl(xVals, xShape, xDtype) {\n    const minusOne = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.createScalarValue(-1, xDtype);\n    return (0,_Multiply__WEBPACK_IMPORTED_MODULE_1__.multiplyImpl)([], xShape, minusOne, xVals, xDtype);\n}\nfunction neg(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_2__.assertNotComplex)(x, 'neg');\n    const xVals = backend.data.get(x.dataId).values;\n    const [res, newShape] = negImpl(xVals, x.shape, x.dtype);\n    return backend.makeTensorInfo(newShape, x.dtype, res);\n}\nconst negConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Neg,\n    backendName: 'cpu',\n    kernelFunc: neg\n};\n//# sourceMappingURL=Neg.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Neg.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NotEqual.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NotEqual.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export notEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export notEqualConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export notEqualImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"notEqualImpl\": () => /* binding */ notEqualImpl,\n/* harmony export */   \"notEqual\": () => /* binding */ notEqual,\n/* harmony export */   \"notEqualConfig\": () => /* binding */ notEqualConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst notEqualImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((a, b) => (a !== b) ? 1 : 0));\nconst notEqual = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.NotEqual, notEqualImpl, null /* complexOp */, 'bool');\nconst notEqualConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.NotEqual,\n    backendName: 'cpu',\n    kernelFunc: notEqual\n};\n//# sourceMappingURL=NotEqual.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NotEqual.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prod.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prod.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export prod [provided] [no usage info] [missing usage info prevents renaming] */
/*! export prodConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export prodImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prodImpl\": () => /* binding */ prodImpl,\n/* harmony export */   \"prod\": () => /* binding */ prod,\n/* harmony export */   \"prodConfig\": () => /* binding */ prodConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction prodImpl(xShape, xDtype, xVals, reductionAxes) {\n    const [outShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes(xShape, reductionAxes);\n    const outDtype = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.upcastType)(xDtype, 'int32');\n    const outVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape), outDtype);\n    const reduceSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    for (let i = 0; i < outVals.length; ++i) {\n        const offset = i * reduceSize;\n        let prod = 1;\n        for (let j = 0; j < reduceSize; ++j) {\n            prod *= xVals[offset + j];\n        }\n        outVals[i] = prod;\n    }\n    return { outVals, outShape, outDtype };\n}\nfunction prod(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'prod');\n    const xRank = x.shape.length;\n    const axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n    const permutation = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, xRank);\n    let reductionAxes = axes;\n    let permutedX = x;\n    const intermediateTensorInfos = [];\n    if (permutation != null) {\n        permutedX = (0,_Transpose__WEBPACK_IMPORTED_MODULE_2__.transpose)({ inputs: { x }, backend, attrs: { perm: permutation } });\n        intermediateTensorInfos.push(permutedX);\n        reductionAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(reductionAxes.length, xRank);\n    }\n    const xVals = backend.data.get(permutedX.dataId).values;\n    const { outVals, outShape, outDtype } = prodImpl(permutedX.shape, permutedX.dtype, xVals, reductionAxes);\n    let resultShape = outShape;\n    if (keepDims) {\n        resultShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(outShape, axes);\n    }\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return backend.makeTensorInfo(resultShape, outDtype, outVals);\n}\nconst prodConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Prod,\n    backendName: 'cpu',\n    kernelFunc: prod\n};\n//# sourceMappingURL=Prod.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prod.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export rangeImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rangeImpl\": () => /* binding */ rangeImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction rangeImpl(start, stop, step, dtype) {\n    const sameStartStop = start === stop;\n    const increasingRangeNegativeStep = start < stop && step < 0;\n    const decreasingRangePositiveStep = stop < start && step > 1;\n    if (sameStartStop || increasingRangeNegativeStep ||\n        decreasingRangePositiveStep) {\n        return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(0, dtype);\n    }\n    const numElements = Math.abs(Math.ceil((stop - start) / step));\n    const values = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(numElements, dtype);\n    if (stop < start && step === 1) {\n        // Auto adjust the step's sign if it hasn't been set\n        // (or was set to 1)\n        step = -1;\n    }\n    values[0] = start;\n    for (let i = 1; i < values.length; i++) {\n        values[i] = values[i - 1] + step;\n    }\n    return values;\n}\n//# sourceMappingURL=Range_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export real [provided] [no usage info] [missing usage info prevents renaming] */
/*! export realConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"real\": () => /* binding */ real,\n/* harmony export */   \"realConfig\": () => /* binding */ realConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction real(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    const real = backend.data.get(input.dataId).complexTensorInfos.real;\n    const realVal = backend.data.get(real.dataId).values;\n    // When complex tensor is disposed, its underlying parts will be disposed too.\n    // Make new tensor out of the real value of the complex. This makes sure the\n    // value is still accessible even if complex tensor is disposed.\n    return backend.makeTensorInfo(real.shape, real.dtype, realVal);\n}\nconst realConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Real,\n    backendName: 'cpu',\n    kernelFunc: real\n};\n//# sourceMappingURL=Real.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Rsqrt.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Rsqrt.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export rsqrt [provided] [no usage info] [missing usage info prevents renaming] */
/*! export rsqrtConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export rsqrtImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rsqrtImpl\": () => /* binding */ rsqrtImpl,\n/* harmony export */   \"rsqrt\": () => /* binding */ rsqrt,\n/* harmony export */   \"rsqrtConfig\": () => /* binding */ rsqrtConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/unary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js\");\n/* harmony import */ var _utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/unary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst rsqrtImpl = (0,_utils_unary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleUnaryImpl)((xi) => 1 / Math.sqrt(xi));\nconst rsqrt = (0,_utils_unary_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFuncFromImpl)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Rsqrt, rsqrtImpl);\nconst rsqrtConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Rsqrt,\n    backendName: 'cpu',\n    kernelFunc: rsqrt,\n};\n//# sourceMappingURL=Rsqrt.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Rsqrt.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export slice [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sliceConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sliceImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sliceImpl\": () => /* binding */ sliceImpl,\n/* harmony export */   \"slice\": () => /* binding */ slice,\n/* harmony export */   \"sliceConfig\": () => /* binding */ sliceConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction sliceImpl(vals, begin, size, shape, dtype) {\n    const isContinous = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice_util.isSliceContinous(shape, begin, size);\n    const length = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(size);\n    const xStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(shape);\n    if (isContinous) {\n        const flatOffset = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice_util.computeFlatOffset(begin, xStrides);\n        if (dtype === 'string') {\n            return vals.slice(flatOffset, flatOffset + length);\n        }\n        return vals.subarray(flatOffset, flatOffset + length);\n    }\n    const decodedData = dtype === 'string' ?\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.fromUint8ToStringArray(vals) :\n        vals;\n    const inBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(shape, dtype, decodedData);\n    const outBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(size, dtype);\n    for (let i = 0; i < outBuf.size; ++i) {\n        const outLoc = outBuf.indexToLoc(i);\n        const inLoc = outLoc.map((idx, j) => idx + begin[j]);\n        outBuf.set(inBuf.get(...inLoc), ...outLoc);\n    }\n    if (dtype === 'string') {\n        return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.fromStringArrayToUint8(outBuf.values);\n    }\n    return outBuf.values;\n}\nfunction slice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, size } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'slice');\n    const [$begin, $size] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice_util.parseSliceParams(x, begin, size);\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice_util.assertParamsValid(x, $begin, $size);\n    const vals = backend.data.get(x.dataId).values;\n    const outVals = sliceImpl(vals, $begin, $size, x.shape, x.dtype);\n    return backend.makeTensorInfo($size, x.dtype, outVals);\n}\nconst sliceConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Slice,\n    backendName: 'cpu',\n    kernelFunc: slice\n};\n//# sourceMappingURL=Slice.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SquaredDifference.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SquaredDifference.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export squaredDifference [provided] [no usage info] [missing usage info prevents renaming] */
/*! export squaredDifferenceConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export squaredDifferenceImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"squaredDifferenceImpl\": () => /* binding */ squaredDifferenceImpl,\n/* harmony export */   \"squaredDifference\": () => /* binding */ squaredDifference,\n/* harmony export */   \"squaredDifferenceConfig\": () => /* binding */ squaredDifferenceConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst squaredDifferenceImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((a, b) => {\n    const diff = a - b;\n    return diff * diff;\n}));\nconst squaredDifference = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SquaredDifference, squaredDifferenceImpl);\nconst squaredDifferenceConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SquaredDifference,\n    backendName: 'cpu',\n    kernelFunc: squaredDifference\n};\n//# sourceMappingURL=SquaredDifference.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SquaredDifference.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice_impl.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice_impl.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export stridedSliceImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stridedSliceImpl\": () => /* binding */ stridedSliceImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction stridedSliceImpl(outShape, xBuf, strides, begin) {\n    const outBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(outShape, xBuf.dtype);\n    for (let i = 0; i < outBuf.size; i++) {\n        const loc = outBuf.indexToLoc(i);\n        const newLoc = new Array(loc.length);\n        for (let j = 0; j < newLoc.length; j++) {\n            newLoc[j] = loc[j] * strides[j] + begin[j];\n        }\n        outBuf.set(xBuf.get(...newLoc), ...loc);\n    }\n    return outBuf;\n}\n//# sourceMappingURL=StridedSlice_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sub.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sub.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export sub [provided] [no usage info] [missing usage info prevents renaming] */
/*! export subComplexImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! export subConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export subImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"subImpl\": () => /* binding */ subImpl,\n/* harmony export */   \"subComplexImpl\": () => /* binding */ subComplexImpl,\n/* harmony export */   \"sub\": () => /* binding */ sub,\n/* harmony export */   \"subConfig\": () => /* binding */ subConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/binary_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js\");\n/* harmony import */ var _utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/binary_utils */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst subImpl = (0,_utils_binary_impl__WEBPACK_IMPORTED_MODULE_1__.createSimpleBinaryKernelImpl)(((aValue, bValue) => aValue - bValue));\nconst subComplexImpl = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.createComplexBinaryKernelImpl)(((aReal, aImag, bReal, bImag) => {\n    return { real: aReal - bReal, imag: aImag - bImag };\n}));\nconst sub = (0,_utils_binary_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sub, subImpl, subComplexImpl);\nconst subConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sub,\n    backendName: 'cpu',\n    kernelFunc: sub\n};\n//# sourceMappingURL=Sub.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sub.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile_impl.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile_impl.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export tileImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tileImpl\": () => /* binding */ tileImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n/**\n * An implementation of the tile kernel shared between webgl and cpu for string\n * tensors only.\n */\nfunction tileImpl(xBuf, reps) {\n    const newShape = new Array(xBuf.rank);\n    for (let i = 0; i < newShape.length; i++) {\n        newShape[i] = xBuf.shape[i] * reps[i];\n    }\n    const result = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(newShape, xBuf.dtype);\n    for (let i = 0; i < result.values.length; ++i) {\n        const newLoc = result.indexToLoc(i);\n        const originalLoc = new Array(xBuf.rank);\n        for (let j = 0; j < originalLoc.length; j++) {\n            originalLoc[j] = newLoc[j] % xBuf.shape[j];\n        }\n        const originalIndex = xBuf.locToIndex(originalLoc);\n        result.values[i] = xBuf.values[originalIndex];\n    }\n    return result;\n}\n//# sourceMappingURL=Tile_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK_impl.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK_impl.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export topKImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"topKImpl\": () => /* binding */ topKImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/** An implementation of the TopK kernel shared between webgl and cpu. */\n;\nfunction topKImpl(x, xShape, xDtype, k, sorted) {\n    // Reshape into a 2d tensor [batch, lastDim] and compute topk along lastDim.\n    const lastDim = xShape[xShape.length - 1];\n    const [batch, size] = [x.length / lastDim, lastDim];\n    const allTopKVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(xDtype, batch * k);\n    const allTopKIndices = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType('int32', batch * k);\n    for (let b = 0; b < batch; b++) {\n        const offset = b * size;\n        const vals = x.subarray(offset, offset + size);\n        const valAndInd = [];\n        for (let i = 0; i < vals.length; i++) {\n            valAndInd.push({ value: vals[i], index: i });\n        }\n        valAndInd.sort((a, b) => b.value - a.value);\n        const outOffset = b * k;\n        const topKVals = allTopKVals.subarray(outOffset, outOffset + k);\n        const topKIndices = allTopKIndices.subarray(outOffset, outOffset + k);\n        for (let i = 0; i < k; i++) {\n            topKVals[i] = valAndInd[i].value;\n            topKIndices[i] = valAndInd[i].index;\n        }\n    }\n    // Reshape back to the original input shape, except that the last\n    // dimension is k.\n    const outputShape = xShape.slice();\n    outputShape[outputShape.length - 1] = k;\n    return [\n        (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(outputShape, xDtype, allTopKVals),\n        (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(outputShape, 'int32', allTopKIndices)\n    ];\n}\n//# sourceMappingURL=TopK_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export transpose [provided] [no usage info] [missing usage info prevents renaming] */
/*! export transposeConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transpose\": () => /* binding */ transpose,\n/* harmony export */   \"transposeConfig\": () => /* binding */ transposeConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _Transpose_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transpose_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction transpose(args) {\n    const { inputs, attrs, backend } = args;\n    const { x } = inputs;\n    const { perm } = attrs;\n    (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'transpose');\n    const xRank = x.shape.length;\n    const newShape = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n        newShape[i] = x.shape[perm[i]];\n    }\n    const values = backend.data.get(x.dataId).values;\n    const result = (0,_Transpose_impl__WEBPACK_IMPORTED_MODULE_2__.transposeImpl)(values, x.shape, x.dtype, perm, newShape);\n    const dataId = backend.write(result, newShape, x.dtype);\n    return { dataId, shape: newShape, dtype: x.dtype };\n}\nconst transposeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Transpose,\n    backendName: 'cpu',\n    kernelFunc: transpose\n};\n//# sourceMappingURL=Transpose.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose_impl.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose_impl.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export transposeImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transposeImpl\": () => /* binding */ transposeImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction transposeImpl(xVals, xShape, dtype, perm, newShape) {\n    const xRank = xShape.length;\n    const xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(xShape);\n    const xStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(xShape);\n    const newStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(newShape);\n    const result = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(dtype, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(newShape));\n    for (let i = 0; i < xSize; ++i) {\n        const loc = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.indexToLoc(i, xRank, xStrides);\n        // Permute location.\n        const newLoc = new Array(loc.length);\n        for (let i = 0; i < newLoc.length; i++) {\n            newLoc[i] = loc[perm[i]];\n        }\n        const newIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex(newLoc, xRank, newStrides);\n        result[newIndex] = xVals[i];\n    }\n    return result;\n}\n//# sourceMappingURL=Transpose_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique_impl.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique_impl.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export uniqueImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"uniqueImpl\": () => /* binding */ uniqueImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction uniqueImpl(values, axis, shape, dtype) {\n    // Normalize and validate axis.\n    const $axis = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, shape)[0];\n    // Calculate the new shape that is suitable for extracting data along the\n    // given axis.\n    //\n    // The rank is 3.\n    // The size of the 1st dimension is the size of all the axes < the given axis.\n    // The size of the 2nd dimension is the same as the size of the given axis.\n    // The size of the 3rd dimension is the size of all the axes > the given axis.\n    //\n    // For example, for a 4D tensor with shape=[2, 3, 5, 4] and axis=2, the\n    // newShape would be: [2*3, 5, 4].\n    //\n    // Note that this is not the final output shape. This will be the shape for an\n    // intermediate TensorBuffer (see inputBuffer below) to allow us to extract\n    // values along the given axis. To demonstrate how it works, consider the\n    // following example:\n    //\n    // Input: a 3D tensor, with shape [1, 2, 3]\n    // [\n    //   [\n    //      [1,2,3],\n    //      [4,5,6]\n    //   ]\n    // ]\n    // Axis: 2 (the last axis).\n    // Along axis 2, we expect to extract 3 tensors: [1,4], [2,5], [3,6].\n    //\n    // For this example, newShape would be: [2, 3, 1], where 2 is calculated from\n    // 1*2. The re-shaped data would look like:\n    //\n    // [\n    //   [\n    //     [1], [2], [3]\n    //   ],\n    //   [\n    //     [4], [5], [6]\n    //   ]\n    // ]\n    //\n    // Then, we can construct a 3-level nested loop by the following dimension\n    // order to extract the values along the axis (dimension1):\n    // i: dimension1       // 0,1,2 (newShape[1])\n    //   m: dimension0     // 0,1   (newShape[0])\n    //     n: dimension2   // 0     (newShape[2])\n    //\n    //                       m, i, n\n    //                      ---------\n    // Iteration 0: data at [0, 0, 0] => \"1\"\n    // Iteration 1: data at [1, 0, 0] => \"4\"\n    // We got [1,4].\n    // Iteration 2: data at [0, 1, 0] => \"2\"\n    // Iteration 3: data at [1, 1, 0] => \"5\"\n    // We got [2,5].\n    // Iteration 4: data at [0, 2, 0] => \"3\"\n    // Iteration 5: data at [1, 2, 0] => \"6\"\n    // We got [3,6].\n    const newShape = [1, shape[0], 1];\n    for (let i = 0; i < $axis; i++) {\n        newShape[0] *= shape[i];\n    }\n    newShape[1] = shape[$axis];\n    for (let i = $axis + 1; i < shape.length; i++) {\n        newShape[2] *= shape[i];\n    }\n    // A map from unique elements (their string representations) to their values\n    // in \"indices\" (below).\n    const uniqueElements = {};\n    // The indices of each unique element in the original tensor along the given\n    // axis. It is 1D and has the same size as the given axis.\n    const indices = new Int32Array(shape[$axis]);\n    // Create a buffer so we can easily extract value at a given location.\n    const inputBuffer = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(newShape, dtype, values);\n    // The indices along the given axis that have unique elements. This is a\n    // de-duped version of \"indices\" above.\n    const uniqueIndices = [];\n    const is1DTensor = newShape[0] === 1 && newShape[2] === 1;\n    for (let i = 0; i < shape[$axis]; i++) {\n        // Extract values along the axis.\n        let element;\n        if (is1DTensor) {\n            // Fast path for 1D tensor input.\n            element = values[i].toString();\n        }\n        else {\n            const axisValues = [];\n            for (let m = 0; m < newShape[0]; m++) {\n                for (let n = 0; n < newShape[2]; n++) {\n                    axisValues.push(inputBuffer.get(m, i, n));\n                }\n            }\n            element = axisValues.join(',');\n        }\n        // Dedup and update various indices.\n        if (uniqueElements[element] !== undefined) {\n            indices[i] = uniqueElements[element];\n        }\n        else {\n            const uniqueIndex = Object.keys(uniqueElements).length;\n            uniqueElements[element] = uniqueIndex;\n            indices[i] = uniqueIndex;\n            uniqueIndices.push(i);\n        }\n    }\n    // Now we know where each of the unique elements are located along the axis\n    // (uniqueIndices). Extract them from input buffer and store them in the\n    // output buffer.\n    const outputTmpShape = newShape.slice();\n    outputTmpShape[1] = Object.keys(uniqueElements).length;\n    const outputBuffer = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(outputTmpShape, dtype);\n    uniqueIndices.forEach((uniqueElementIndex, i) => {\n        for (let m = 0; m < newShape[0]; m++) {\n            for (let n = 0; n < newShape[2]; n++) {\n                outputBuffer.set(inputBuffer.get(m, uniqueElementIndex, n), m, i, n);\n            }\n        }\n    });\n    // The output shape can be calculated from the input shape with the size of\n    // the given axis replaced by the number of unique elements along that axis.\n    const outputShape = shape.slice();\n    outputShape[$axis] = outputTmpShape[1];\n    return {\n        outputValues: outputBuffer.values,\n        outputShape,\n        indices,\n    };\n}\n//# sourceMappingURL=Unique_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/shared.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/shared.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export addImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js .addImpl */
/*! export bincountImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount_impl.js .bincountImpl */
/*! export bincountReduceImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount_impl.js .bincountReduceImpl */
/*! export ceilImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Ceil.js .ceilImpl */
/*! export concatImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js .concatImpl */
/*! export expImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Exp.js .expImpl */
/*! export expm1Impl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Expm1.js .expm1Impl */
/*! export floorImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Floor.js .floorImpl */
/*! export gatherV2Impl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2_impl.js .gatherV2Impl */
/*! export greaterImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Greater.js .greaterImpl */
/*! export lessImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Less.js .lessImpl */
/*! export linSpaceImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace_impl.js .linSpaceImpl */
/*! export logImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log.js .logImpl */
/*! export maxImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max_impl.js .maxImpl */
/*! export maximumImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Maximum.js .maximumImpl */
/*! export minimumImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Minimum.js .minimumImpl */
/*! export multiplyImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js .multiplyImpl */
/*! export negImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Neg.js .negImpl */
/*! export notEqualImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NotEqual.js .notEqualImpl */
/*! export prodImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prod.js .prodImpl */
/*! export rangeImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js .rangeImpl */
/*! export rsqrtImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Rsqrt.js .rsqrtImpl */
/*! export simpleAbsImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Abs.js .simpleAbsImpl */
/*! export sliceImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js .sliceImpl */
/*! export squaredDifferenceImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SquaredDifference.js .squaredDifferenceImpl */
/*! export stridedSliceImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice_impl.js .stridedSliceImpl */
/*! export subImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sub.js .subImpl */
/*! export tileImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile_impl.js .tileImpl */
/*! export topKImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK_impl.js .topKImpl */
/*! export transposeImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose_impl.js .transposeImpl */
/*! export uniqueImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique_impl.js .uniqueImpl */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"simpleAbsImpl\": () => /* reexport safe */ _kernels_Abs__WEBPACK_IMPORTED_MODULE_0__.simpleAbsImpl,\n/* harmony export */   \"addImpl\": () => /* reexport safe */ _kernels_Add__WEBPACK_IMPORTED_MODULE_1__.addImpl,\n/* harmony export */   \"bincountImpl\": () => /* reexport safe */ _kernels_Bincount_impl__WEBPACK_IMPORTED_MODULE_2__.bincountImpl,\n/* harmony export */   \"bincountReduceImpl\": () => /* reexport safe */ _kernels_Bincount_impl__WEBPACK_IMPORTED_MODULE_2__.bincountReduceImpl,\n/* harmony export */   \"ceilImpl\": () => /* reexport safe */ _kernels_Ceil__WEBPACK_IMPORTED_MODULE_3__.ceilImpl,\n/* harmony export */   \"concatImpl\": () => /* reexport safe */ _kernels_Concat_impl__WEBPACK_IMPORTED_MODULE_4__.concatImpl,\n/* harmony export */   \"expImpl\": () => /* reexport safe */ _kernels_Exp__WEBPACK_IMPORTED_MODULE_5__.expImpl,\n/* harmony export */   \"expm1Impl\": () => /* reexport safe */ _kernels_Expm1__WEBPACK_IMPORTED_MODULE_6__.expm1Impl,\n/* harmony export */   \"floorImpl\": () => /* reexport safe */ _kernels_Floor__WEBPACK_IMPORTED_MODULE_7__.floorImpl,\n/* harmony export */   \"gatherV2Impl\": () => /* reexport safe */ _kernels_GatherV2_impl__WEBPACK_IMPORTED_MODULE_8__.gatherV2Impl,\n/* harmony export */   \"greaterImpl\": () => /* reexport safe */ _kernels_Greater__WEBPACK_IMPORTED_MODULE_9__.greaterImpl,\n/* harmony export */   \"lessImpl\": () => /* reexport safe */ _kernels_Less__WEBPACK_IMPORTED_MODULE_10__.lessImpl,\n/* harmony export */   \"linSpaceImpl\": () => /* reexport safe */ _kernels_LinSpace_impl__WEBPACK_IMPORTED_MODULE_11__.linSpaceImpl,\n/* harmony export */   \"logImpl\": () => /* reexport safe */ _kernels_Log__WEBPACK_IMPORTED_MODULE_12__.logImpl,\n/* harmony export */   \"maxImpl\": () => /* reexport safe */ _kernels_Max_impl__WEBPACK_IMPORTED_MODULE_13__.maxImpl,\n/* harmony export */   \"maximumImpl\": () => /* reexport safe */ _kernels_Maximum__WEBPACK_IMPORTED_MODULE_14__.maximumImpl,\n/* harmony export */   \"minimumImpl\": () => /* reexport safe */ _kernels_Minimum__WEBPACK_IMPORTED_MODULE_15__.minimumImpl,\n/* harmony export */   \"multiplyImpl\": () => /* reexport safe */ _kernels_Multiply__WEBPACK_IMPORTED_MODULE_16__.multiplyImpl,\n/* harmony export */   \"negImpl\": () => /* reexport safe */ _kernels_Neg__WEBPACK_IMPORTED_MODULE_17__.negImpl,\n/* harmony export */   \"notEqualImpl\": () => /* reexport safe */ _kernels_NotEqual__WEBPACK_IMPORTED_MODULE_18__.notEqualImpl,\n/* harmony export */   \"prodImpl\": () => /* reexport safe */ _kernels_Prod__WEBPACK_IMPORTED_MODULE_19__.prodImpl,\n/* harmony export */   \"rangeImpl\": () => /* reexport safe */ _kernels_Range_impl__WEBPACK_IMPORTED_MODULE_20__.rangeImpl,\n/* harmony export */   \"rsqrtImpl\": () => /* reexport safe */ _kernels_Rsqrt__WEBPACK_IMPORTED_MODULE_21__.rsqrtImpl,\n/* harmony export */   \"sliceImpl\": () => /* reexport safe */ _kernels_Slice__WEBPACK_IMPORTED_MODULE_22__.sliceImpl,\n/* harmony export */   \"squaredDifferenceImpl\": () => /* reexport safe */ _kernels_SquaredDifference__WEBPACK_IMPORTED_MODULE_23__.squaredDifferenceImpl,\n/* harmony export */   \"stridedSliceImpl\": () => /* reexport safe */ _kernels_StridedSlice_impl__WEBPACK_IMPORTED_MODULE_24__.stridedSliceImpl,\n/* harmony export */   \"subImpl\": () => /* reexport safe */ _kernels_Sub__WEBPACK_IMPORTED_MODULE_25__.subImpl,\n/* harmony export */   \"tileImpl\": () => /* reexport safe */ _kernels_Tile_impl__WEBPACK_IMPORTED_MODULE_26__.tileImpl,\n/* harmony export */   \"topKImpl\": () => /* reexport safe */ _kernels_TopK_impl__WEBPACK_IMPORTED_MODULE_27__.topKImpl,\n/* harmony export */   \"transposeImpl\": () => /* reexport safe */ _kernels_Transpose_impl__WEBPACK_IMPORTED_MODULE_28__.transposeImpl,\n/* harmony export */   \"uniqueImpl\": () => /* reexport safe */ _kernels_Unique_impl__WEBPACK_IMPORTED_MODULE_29__.uniqueImpl\n/* harmony export */ });\n/* harmony import */ var _kernels_Abs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kernels/Abs */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Abs.js\");\n/* harmony import */ var _kernels_Add__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kernels/Add */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js\");\n/* harmony import */ var _kernels_Bincount_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kernels/Bincount_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Bincount_impl.js\");\n/* harmony import */ var _kernels_Ceil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kernels/Ceil */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Ceil.js\");\n/* harmony import */ var _kernels_Concat_impl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kernels/Concat_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js\");\n/* harmony import */ var _kernels_Exp__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./kernels/Exp */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Exp.js\");\n/* harmony import */ var _kernels_Expm1__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./kernels/Expm1 */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Expm1.js\");\n/* harmony import */ var _kernels_Floor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./kernels/Floor */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Floor.js\");\n/* harmony import */ var _kernels_GatherV2_impl__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./kernels/GatherV2_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2_impl.js\");\n/* harmony import */ var _kernels_Greater__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./kernels/Greater */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Greater.js\");\n/* harmony import */ var _kernels_Less__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./kernels/Less */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Less.js\");\n/* harmony import */ var _kernels_LinSpace_impl__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./kernels/LinSpace_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/LinSpace_impl.js\");\n/* harmony import */ var _kernels_Log__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./kernels/Log */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Log.js\");\n/* harmony import */ var _kernels_Max_impl__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./kernels/Max_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Max_impl.js\");\n/* harmony import */ var _kernels_Maximum__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./kernels/Maximum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Maximum.js\");\n/* harmony import */ var _kernels_Minimum__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./kernels/Minimum */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Minimum.js\");\n/* harmony import */ var _kernels_Multiply__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./kernels/Multiply */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js\");\n/* harmony import */ var _kernels_Neg__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./kernels/Neg */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Neg.js\");\n/* harmony import */ var _kernels_NotEqual__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./kernels/NotEqual */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NotEqual.js\");\n/* harmony import */ var _kernels_Prod__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./kernels/Prod */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Prod.js\");\n/* harmony import */ var _kernels_Range_impl__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./kernels/Range_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js\");\n/* harmony import */ var _kernels_Rsqrt__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./kernels/Rsqrt */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Rsqrt.js\");\n/* harmony import */ var _kernels_Slice__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./kernels/Slice */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js\");\n/* harmony import */ var _kernels_SquaredDifference__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./kernels/SquaredDifference */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/SquaredDifference.js\");\n/* harmony import */ var _kernels_StridedSlice_impl__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./kernels/StridedSlice_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice_impl.js\");\n/* harmony import */ var _kernels_Sub__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./kernels/Sub */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Sub.js\");\n/* harmony import */ var _kernels_Tile_impl__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./kernels/Tile_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Tile_impl.js\");\n/* harmony import */ var _kernels_TopK_impl__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./kernels/TopK_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/TopK_impl.js\");\n/* harmony import */ var _kernels_Transpose_impl__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./kernels/Transpose_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose_impl.js\");\n/* harmony import */ var _kernels_Unique_impl__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./kernels/Unique_impl */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Unique_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Shared functionality among backends.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=shared.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/shared.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export createSimpleBinaryKernelImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSimpleBinaryKernelImpl\": () => /* binding */ createSimpleBinaryKernelImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n/**\n * Template that creates implementation for binary ops. Supports broadcast.\n */\nfunction createSimpleBinaryKernelImpl(op) {\n    return (aShape, bShape, aVals, bVals, dtype) => {\n        const newShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        const resultRank = newShape.length;\n        const resultStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(newShape);\n        const resultSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(newShape);\n        const result = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(dtype, resultSize);\n        const aRank = aShape.length;\n        const bRank = bShape.length;\n        const aStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(aShape);\n        const bStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(bShape);\n        const aBroadcastDims = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getBroadcastDims(aShape, newShape);\n        const bBroadcastDims = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getBroadcastDims(bShape, newShape);\n        if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n            for (let i = 0; i < result.length; ++i) {\n                result[i] = op(aVals[i % aVals.length], bVals[i % bVals.length]);\n            }\n        }\n        else {\n            for (let i = 0; i < result.length; ++i) {\n                const loc = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.indexToLoc(i, resultRank, resultStrides);\n                const aLoc = loc.slice(-aRank);\n                aBroadcastDims.forEach(d => aLoc[d] = 0);\n                const aIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex(aLoc, aRank, aStrides);\n                const bLoc = loc.slice(-bRank);\n                bBroadcastDims.forEach(d => bLoc[d] = 0);\n                const bIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex(bLoc, bRank, bStrides);\n                result[i] = op(aVals[aIndex], bVals[bIndex]);\n            }\n        }\n        return [result, newShape];\n    };\n}\n//# sourceMappingURL=binary_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export binaryKernelFunc [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createComplexBinaryKernelImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"binaryKernelFunc\": () => /* binding */ binaryKernelFunc,\n/* harmony export */   \"createComplexBinaryKernelImpl\": () => /* binding */ createComplexBinaryKernelImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/* harmony import */ var _kernels_Cast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernels/Cast */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Cast.js\");\n/* harmony import */ var _kernels_Complex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernels/Complex */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Template that creates a `KernelFunc` for binary ops.\n * @param name Kernel name.\n * @param binaryKernelImpl A `SimpleBinaryKernelImpl` for the kernel.\n * @param binaryKernelComplexImpl Optional. If exists, represents a\n *     `ComplexBinaryKernelImpl` for the kernel, will be used when input dtype\n *     is `complex64`.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the first input. This is mainly used in\n *     comparison kernels, such as Equal, Less, Greater, etc.\n */\nfunction binaryKernelFunc(name, simpleImpl, complexImpl, dtype) {\n    if (complexImpl == null) {\n        return ({ inputs, backend }) => {\n            const { a, b } = inputs;\n            const cpuBackend = backend;\n            (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([a, b], name);\n            const aVals = cpuBackend.data.get(a.dataId).values;\n            const bVals = cpuBackend.data.get(b.dataId).values;\n            const $dtype = dtype || a.dtype;\n            const [resultData, resultShape] = simpleImpl(a.shape, b.shape, aVals, bVals, $dtype);\n            return cpuBackend.makeTensorInfo(resultShape, $dtype, resultData);\n        };\n    }\n    return ({ inputs, backend }) => {\n        const { a, b } = inputs;\n        const cpuBackend = backend;\n        if (a.dtype === 'complex64' || b.dtype === 'complex64') {\n            const $aComplex = (0,_kernels_Cast__WEBPACK_IMPORTED_MODULE_2__.cast)({ inputs: { x: a }, backend: cpuBackend, attrs: { dtype: 'complex64' } });\n            const $aComplexVals = cpuBackend.data.get($aComplex.dataId);\n            const aReal = $aComplexVals.complexTensorInfos.real;\n            const aImag = $aComplexVals.complexTensorInfos.imag;\n            const aRealVals = cpuBackend.data.get(aReal.dataId).values;\n            const aImagVals = cpuBackend.data.get(aImag.dataId).values;\n            const $bComplex = (0,_kernels_Cast__WEBPACK_IMPORTED_MODULE_2__.cast)({ inputs: { x: b }, backend: cpuBackend, attrs: { dtype: 'complex64' } });\n            const $bComplexVals = cpuBackend.data.get($bComplex.dataId);\n            const bReal = $bComplexVals.complexTensorInfos.real;\n            const bImag = $bComplexVals.complexTensorInfos.imag;\n            const bRealVals = cpuBackend.data.get(bReal.dataId).values;\n            const bImagVals = cpuBackend.data.get(bImag.dataId).values;\n            const [resultRealData, resultImagData, resultShape] = complexImpl(a.shape, b.shape, aRealVals, aImagVals, bRealVals, bImagVals);\n            const resultReal = cpuBackend.makeTensorInfo(resultShape, 'float32', resultRealData);\n            const resultImag = cpuBackend.makeTensorInfo(resultShape, 'float32', resultImagData);\n            const result = (0,_kernels_Complex__WEBPACK_IMPORTED_MODULE_3__.complex)({ inputs: { real: resultReal, imag: resultImag }, backend: cpuBackend });\n            cpuBackend.disposeIntermediateTensorInfo($aComplex);\n            cpuBackend.disposeIntermediateTensorInfo($bComplex);\n            cpuBackend.disposeIntermediateTensorInfo(resultReal);\n            cpuBackend.disposeIntermediateTensorInfo(resultImag);\n            return result;\n        }\n        else {\n            const aVals = cpuBackend.data.get(a.dataId).values;\n            const bVals = cpuBackend.data.get(b.dataId).values;\n            const $dtype = dtype || a.dtype;\n            const [resultData, resultShape] = simpleImpl(a.shape, b.shape, aVals, bVals, $dtype);\n            return cpuBackend.makeTensorInfo(resultShape, $dtype, resultData);\n        }\n    };\n}\n/**\n * Template that creates the complex type implementation for binary ops.\n * Supports broadcast.\n */\nfunction createComplexBinaryKernelImpl(op) {\n    return (aShape, bShape, aRealVals, aImagVals, bRealVals, bImagVals) => {\n        const resultShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        const resultSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(resultShape);\n        const resultRank = resultShape.length;\n        const resultStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(resultShape);\n        const resultRealVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType('float32', resultSize);\n        const resultImagVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType('float32', resultSize);\n        const aBroadcastDims = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getBroadcastDims(aShape, resultShape);\n        const bBroadcastDims = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getBroadcastDims(bShape, resultShape);\n        const aVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.mergeRealAndImagArrays(aRealVals, aImagVals);\n        const bVals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.mergeRealAndImagArrays(bRealVals, bImagVals);\n        const aRank = aShape.length;\n        const aStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(aShape);\n        const bRank = bShape.length;\n        const bStrides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(bShape);\n        if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n            for (let i = 0; i < resultRealVals.length; i++) {\n                const aIdx = i % aVals.length;\n                const bIdx = i % bVals.length;\n                const result = op(aVals[aIdx * 2], aVals[aIdx * 2 + 1], bVals[bIdx * 2], bVals[bIdx * 2 + 1]);\n                resultRealVals[i] = result.real;\n                resultImagVals[i] = result.imag;\n            }\n        }\n        else {\n            for (let i = 0; i < resultRealVals.length; i++) {\n                const loc = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.indexToLoc(i, resultRank, resultStrides);\n                const aLoc = loc.slice(-aRank);\n                aBroadcastDims.forEach(d => aLoc[d] = 0);\n                const aIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex(aLoc, aRank, aStrides);\n                const bLoc = loc.slice(-bRank);\n                bBroadcastDims.forEach(d => bLoc[d] = 0);\n                const bIndex = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.locToIndex(bLoc, bRank, bStrides);\n                const opResult = op(aVals[aIndex * 2], aVals[aIndex * 2 + 1], bVals[bIndex * 2], bVals[bIndex * 2 + 1]);\n                resultRealVals[i] = opResult.real;\n                resultImagVals[i] = opResult.imag;\n            }\n        }\n        return [resultRealVals, resultImagVals, resultShape];\n    };\n}\n//# sourceMappingURL=binary_utils.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_utils.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export createSimpleUnaryImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSimpleUnaryImpl\": () => /* binding */ createSimpleUnaryImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n/**\n * Template that creates implementation for unary op.\n */\nfunction createSimpleUnaryImpl(op) {\n    return (values, dtype, attrs) => {\n        const newValues = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType(dtype, values.length);\n        for (let i = 0; i < values.length; ++i) {\n            newValues[i] = op(values[i], attrs);\n        }\n        return newValues;\n    };\n}\n//# sourceMappingURL=unary_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export unaryKernelFunc [provided] [no usage info] [missing usage info prevents renaming] */
/*! export unaryKernelFuncFromImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unaryKernelFunc\": () => /* binding */ unaryKernelFunc,\n/* harmony export */   \"unaryKernelFuncFromImpl\": () => /* binding */ unaryKernelFuncFromImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cpu_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cpu_util */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/cpu_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * Template that creates a `KernelFunc` for unary ops.\n * @param name Kernel name.\n * @param op A `SimpleUnaryOperation` for the kernel.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the input. This is mainly used in certain\n *     kernels that return bool type, such as isFinite, isInf, etc.\n */\nfunction unaryKernelFunc(name, op, dtype) {\n    return ({ inputs, attrs, backend }) => {\n        const { x } = inputs;\n        (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, name);\n        if (x.dtype === 'string' || dtype === 'string') {\n            throw new Error('unaryKernelFunc does not support string input/output');\n        }\n        const cpuBackend = backend;\n        const values = cpuBackend.data.get(x.dataId).values;\n        const xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape);\n        const $dtype = dtype || x.dtype;\n        const newValues = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType($dtype, xSize);\n        for (let i = 0; i < xSize; ++i) {\n            newValues[i] = op(values[i], attrs);\n        }\n        return cpuBackend.makeTensorInfo(x.shape, $dtype, newValues);\n    };\n}\n/**\n * Template that creates a `KernelFunc` for unary ops from the given\n * `SimpleUnaryImpl`..\n * @param name Kernel name.\n * @param unaryImpl A `SimpleUnaryImpl` that implements the op.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the input. This is mainly used in certain\n *     kernels that return bool type, such as isFinite, isInf, etc.\n */\nfunction unaryKernelFuncFromImpl(name, unaryImpl, dtype) {\n    return ({ inputs, attrs, backend }) => {\n        const { x } = inputs;\n        (0,_cpu_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, name);\n        if (x.dtype === 'string' || dtype === 'string') {\n            throw new Error('unaryKernelFunc does not support string input/output');\n        }\n        const cpuBackend = backend;\n        const values = cpuBackend.data.get(x.dataId).values;\n        const $dtype = dtype || x.dtype;\n        const newValues = unaryImpl(values, $dtype, attrs);\n        return cpuBackend.makeTensorInfo(x.shape, $dtype, newValues);\n    };\n}\n//# sourceMappingURL=unary_utils.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/unary_utils.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/zeros_impl.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/zeros_impl.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export zeros [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"zeros\": () => /* binding */ zeros\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernels_Complex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernels/Complex */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Complex.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * Generates a tensorInfo with all zeros value.\n * @param backend cpu backend.\n * @param shape Shape for the zeros tensor.\n * @param dtype Optional. If set, the result has this dtype.\n */\nfunction zeros(backend, shape, dtype = 'float32') {\n    if (dtype === 'complex64') {\n        const real = zeros(backend, shape, 'float32');\n        const imag = zeros(backend, shape, 'float32');\n        return (0,_kernels_Complex__WEBPACK_IMPORTED_MODULE_1__.complex)({ inputs: { real, imag }, backend });\n    }\n    const values = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.makeZerosTypedArray(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(shape), dtype);\n    return backend.makeTensorInfo(shape, dtype, values);\n}\n//# sourceMappingURL=zeros_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/zeros_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/addn_gpu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/addn_gpu.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export AddNProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AddNProgram\": () => /* binding */ AddNProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass AddNProgram {\n    constructor(outputShape, shapes) {\n        this.outputShape = [];\n        this.outputShape = outputShape;\n        this.variableNames = shapes.map((_, i) => `T${i}`);\n        const snippets = [];\n        // Get target elements from every input tensor.\n        this.variableNames.forEach(variable => {\n            snippets.push(`float v${variable} = get${variable}AtOutCoords();`);\n        });\n        // Calculate the sum of all elements.\n        const operation = this.variableNames\n            .map(variable => {\n            return `v${variable}`;\n        })\n            .join(' + ');\n        this.userCode = `\n      void main() {\n        ${snippets.join('\\n        ')}\n\n        float result = ${operation};\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=addn_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/addn_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/addn_packed_gpu.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/addn_packed_gpu.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export AddNPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AddNPackedProgram\": () => /* binding */ AddNPackedProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass AddNPackedProgram {\n    constructor(outputShape, shapes) {\n        this.outputShape = [];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = outputShape;\n        this.variableNames = shapes.map((_, i) => `T${i}`);\n        const snippets = [];\n        // Get target elements from every input tensor.\n        this.variableNames.forEach(variable => {\n            snippets.push(`vec4 v${variable} = get${variable}AtOutCoords();`);\n        });\n        // Calculate the sum of all elements.\n        const operation = this.variableNames\n            .map(variable => {\n            return `v${variable}`;\n        })\n            .join(' + ');\n        this.userCode = `\n      void main() {\n        ${snippets.join('\\n        ')}\n\n        vec4 result = ${operation};\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=addn_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/addn_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/argminmax_gpu.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/argminmax_gpu.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export ArgMinMaxProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ArgMinMaxProgram\": () => /* binding */ ArgMinMaxProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass ArgMinMaxProgram {\n    constructor(reduceInfo, op, firstPass) {\n        this.variableNames = ['A'];\n        const { windowSize, batchSize, outSize } = reduceInfo;\n        if (!firstPass) {\n            this.variableNames.push('bestIndicesA');\n        }\n        this.outputShape = [batchSize, outSize];\n        const compOp = (op === 'max') ? '>' : '<';\n        const indexSnippet = firstPass ?\n            'inOffset + i;' :\n            'round(getBestIndicesA(batch, inOffset + i));';\n        this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${windowSize};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${windowSize}; i++) {\n          int inIdx = ${indexSnippet};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${compOp} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=argminmax_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/argminmax_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/argminmax_packed_gpu.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/argminmax_packed_gpu.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export ArgMinMaxPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ArgMinMaxPackedProgram\": () => /* binding */ ArgMinMaxPackedProgram\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _packing_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./packing_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js\");\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nclass ArgMinMaxPackedProgram {\n    constructor(shape, windowSize, op, firstPass) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(shape.length > 2, () => `Packed arg${op.charAt(0).toUpperCase() +\n            op.slice(1)} supports only inputs with rank above 2.`);\n        const inSize = shape[shape.length - 1];\n        const outSize = Math.ceil(inSize / windowSize);\n        this.outputShape = shape.slice(0, -1);\n        if (outSize > 1) {\n            this.outputShape.push(outSize);\n        }\n        if (!firstPass) {\n            this.variableNames.push('bestIndicesA');\n        }\n        const outShape = this.outputShape;\n        const rank = outShape.length;\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_1__.getCoordsDataType)(rank);\n        const coords = (0,_packing_util__WEBPACK_IMPORTED_MODULE_2__.getChannels)('coords', rank);\n        let sourceLocSetup;\n        let sourceRank;\n        if (outSize === 1) {\n            sourceRank = rank + 1;\n            const sourceLocDType = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_1__.getCoordsDataType)(sourceRank);\n            sourceLocSetup = `\n        ${sourceLocDType} sourceLocR = ${sourceLocDType}(${coords.join()}, 0);\n        ++${coords[rank - 1]};\n        ${sourceLocDType} sourceLocG = ${sourceLocDType}(${coords.join()}, 0);\n        ++${coords[rank - 2]};\n        ${sourceLocDType} sourceLocA = ${sourceLocDType}(${coords.join()}, 0);\n        --${coords[rank - 1]};\n        ${sourceLocDType} sourceLocB = ${sourceLocDType}(${coords.join()}, 0);\n        --${coords[rank - 2]};`;\n        }\n        else {\n            sourceRank = rank;\n            sourceLocSetup = `\n        ${dtype} sourceLocR = coords;\n        ++${coords[rank - 1]};\n        ${dtype} sourceLocG = coords;\n        ++${coords[rank - 2]};\n        ${dtype} sourceLocA = coords;\n        --${coords[rank - 1]};\n        ${dtype} sourceLocB = coords;\n        --${coords[rank - 2]};`;\n        }\n        const channels = ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, sourceRank);\n        const inChannel = '.' + channels[sourceRank - 1]; // e.g. \".b\" for rank 3.\n        const intChannels = channels.map(x => 'int ' + x);\n        const srcRCoords = (0,_packing_util__WEBPACK_IMPORTED_MODULE_2__.getChannels)('sourceLocR', sourceRank - 1).concat('inIdx.r');\n        const srcGCoords = (0,_packing_util__WEBPACK_IMPORTED_MODULE_2__.getChannels)('sourceLocG', sourceRank - 1).concat('inIdx.g');\n        const srcBCoords = (0,_packing_util__WEBPACK_IMPORTED_MODULE_2__.getChannels)('sourceLocB', sourceRank - 1).concat('inIdx.b');\n        const srcACoords = (0,_packing_util__WEBPACK_IMPORTED_MODULE_2__.getChannels)('sourceLocA', sourceRank - 1).concat('inIdx.a');\n        const compOp = (op === 'max') ? 'greaterThan' : 'lessThan';\n        const fetchCandidateIdx = firstPass ? '' : `\n          inIdx = round(vec4(getBestIndicesAChannel(${srcRCoords.join()}),\n                             getBestIndicesAChannel(${srcGCoords.join()}),\n                             getBestIndicesAChannel(${srcBCoords.join()}),\n                             getBestIndicesAChannel(${srcACoords.join()})));`;\n        const fetchValue = `vec4(\n            getAChannel(${srcRCoords.join()}),\n            hasNextCol ? getAChannel(${srcGCoords.join()}) : 0.,\n            hasNextRow ? getAChannel(${srcBCoords.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${srcACoords.join()}) : 0.)`;\n        const getBestIndicesAChannelSnippet = firstPass ? '' : `\n      float getBestIndicesAChannel(${intChannels.join()}) {\n        return getChannel(getBestIndicesA(${channels.join()}),\n                                          vec2(${channels.slice(-2).join()}));\n      }`;\n        this.userCode = `\n      float getAChannel(${intChannels.join()}) {\n        return getChannel(getA(${channels.join()}),\n                               vec2(${channels.slice(-2).join()}));\n      }\n      ${getBestIndicesAChannelSnippet}\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        bool hasNextCol = ${coords[rank - 1]} < ${outShape[rank - 1] - 1};\n        bool hasNextRow = ${coords[rank - 2]} < ${outShape[rank - 2] - 1};\n        ${sourceLocSetup}\n        ivec4 srcIdx = ivec4(sourceLocR${inChannel}, sourceLocG${inChannel},\n          sourceLocB${inChannel}, sourceLocA${inChannel}) * ${windowSize};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${fetchValue};\n\n        for (int i = 0; i < ${windowSize}; i++) {\n          inIdx = srcIdx;\n          ${fetchCandidateIdx}\n          vec4 candidate = ${fetchValue};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${compOp}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=argminmax_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/argminmax_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/avg_pool_backprop_gpu.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/avg_pool_backprop_gpu.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export AvgPool2DBackpropProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AvgPool3DBackpropProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AvgPool2DBackpropProgram\": () => /* binding */ AvgPool2DBackpropProgram,\n/* harmony export */   \"AvgPool3DBackpropProgram\": () => /* binding */ AvgPool3DBackpropProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass AvgPool2DBackpropProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy'];\n        this.outputShape = convInfo.inShape;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        const avgMultiplier = 1 / (filterHeight * filterWidth);\n        this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float avgMultiplier = float(${avgMultiplier});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${effectiveFilterWidth};\n            wC+= ${dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\nclass AvgPool3DBackpropProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy'];\n        this.outputShape = convInfo.inShape;\n        const filterDepth = convInfo.filterDepth;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const strideDepth = convInfo.strideDepth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationDepth = convInfo.dilationDepth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n        const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        const padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n        const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        const avgMultiplier = 1 / (filterDepth * filterHeight * filterWidth);\n        this.userCode = `\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n      const float avgMultiplier = float(${avgMultiplier});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${effectiveFilterDepth};\n            wD += ${dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${convInfo.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n              wR += ${dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${effectiveFilterWidth};\n                wC += ${dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=avg_pool_backprop_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/avg_pool_backprop_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/backend_webgl.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/backend_webgl.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export EPSILON_FLOAT16 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export EPSILON_FLOAT32 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MathBackendWebGL [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getBinaryCache [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EPSILON_FLOAT32\": () => /* binding */ EPSILON_FLOAT32,\n/* harmony export */   \"EPSILON_FLOAT16\": () => /* binding */ EPSILON_FLOAT16,\n/* harmony export */   \"getBinaryCache\": () => /* binding */ getBinaryCache,\n/* harmony export */   \"MathBackendWebGL\": () => /* binding */ MathBackendWebGL\n/* harmony export */ });\n/* harmony import */ var _flags_webgl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./flags_webgl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/flags_webgl.js\");\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _canvas_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./canvas_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/canvas_util.js\");\n/* harmony import */ var _decode_matrix_gpu__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./decode_matrix_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/decode_matrix_gpu.js\");\n/* harmony import */ var _decode_matrix_packed_gpu__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./decode_matrix_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/decode_matrix_packed_gpu.js\");\n/* harmony import */ var _encode_float_gpu__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./encode_float_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_float_gpu.js\");\n/* harmony import */ var _encode_float_packed_gpu__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./encode_float_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_float_packed_gpu.js\");\n/* harmony import */ var _encode_matrix_gpu__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./encode_matrix_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_matrix_gpu.js\");\n/* harmony import */ var _encode_matrix_packed_gpu__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./encode_matrix_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_matrix_packed_gpu.js\");\n/* harmony import */ var _gpgpu_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./gpgpu_context */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_context.js\");\n/* harmony import */ var _gpgpu_math__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./gpgpu_math */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_math.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/* harmony import */ var _pack_gpu__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./pack_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/pack_gpu.js\");\n/* harmony import */ var _reshape_packed_gpu__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./reshape_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/reshape_packed_gpu.js\");\n/* harmony import */ var _tex_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tex_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js\");\n/* harmony import */ var _texture_manager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./texture_manager */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/texture_manager.js\");\n/* harmony import */ var _unaryop_gpu__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./unaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js\");\n/* harmony import */ var _unaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./unaryop_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_packed_gpu.js\");\n/* harmony import */ var _unpack_gpu__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./unpack_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unpack_gpu.js\");\n/* harmony import */ var _webgl_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./webgl_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import webgl flags.\n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst whereImpl = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.kernel_impls.whereImpl;\nconst EPSILON_FLOAT32 = 1e-7;\nconst EPSILON_FLOAT16 = 1e-4;\nconst binaryCaches = {};\nfunction getBinaryCache(webGLVersion) {\n    if (webGLVersion in binaryCaches) {\n        return binaryCaches[webGLVersion];\n    }\n    binaryCaches[webGLVersion] = {};\n    return binaryCaches[webGLVersion];\n}\n// Empirically determined constant used to determine size threshold for handing\n// off execution to the CPU.\nconst CPU_HANDOFF_SIZE_THRESHOLD = 128;\n// Empirically determined constant used to decide the number of MB on GPU\n// before we warn about high memory use. The MB are this constant * screen area\n// * dpi / 1024 / 1024.\nconst BEFORE_PAGING_CONSTANT = 600;\nfunction numMBBeforeWarning() {\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().global.screen == null) {\n        return 1024; // 1 GB.\n    }\n    return ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().global.screen.height * (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().global.screen.width *\n        window.devicePixelRatio) *\n        BEFORE_PAGING_CONSTANT / 1024 / 1024;\n}\nclass MathBackendWebGL extends _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.KernelBackend {\n    constructor(gpgpu) {\n        super();\n        // Maps data ids that have a pending read operation, to list of subscribers.\n        this.pendingRead = new WeakMap();\n        // List of data ids that are scheduled for disposal, but are waiting on a\n        // pending read operation.\n        this.pendingDisposal = new WeakSet();\n        // Used to count the number of 'shallow' sliced tensors that point to the\n        // same data id.\n        this.dataRefCount = new WeakMap();\n        this.numBytesInGPU = 0;\n        // Accumulated time spent (including blocking) in uploading data to webgl.\n        this.uploadWaitMs = 0;\n        // Accumulated time spent (including blocking in downloading data from webgl.\n        this.downloadWaitMs = 0;\n        // record the last manual GL Flush time.\n        this.lastGlFlushTime = 0;\n        this.warnedAboutMemory = false;\n        this.warnedAboutCPUBackend = false;\n        this.pendingDeletes = 0;\n        this.disposed = false;\n        if (!(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('HAS_WEBGL')) {\n            throw new Error('WebGL is not supported on this device');\n        }\n        if (gpgpu == null) {\n            const gl = (0,_canvas_util__WEBPACK_IMPORTED_MODULE_2__.getWebGLContext)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getNumber('WEBGL_VERSION'));\n            this.binaryCache = getBinaryCache((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getNumber('WEBGL_VERSION'));\n            this.gpgpu = new _gpgpu_context__WEBPACK_IMPORTED_MODULE_3__.GPGPUContext(gl);\n            this.canvas = gl.canvas;\n            this.gpgpuCreatedLocally = true;\n        }\n        else {\n            this.gpgpu = gpgpu;\n            this.binaryCache = {};\n            this.gpgpuCreatedLocally = false;\n            this.canvas = gpgpu.gl.canvas;\n        }\n        this.textureManager = new _texture_manager__WEBPACK_IMPORTED_MODULE_4__.TextureManager(this.gpgpu);\n        this.numMBBeforeWarning = numMBBeforeWarning();\n        this.texData = new _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.DataStorage(this, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.engine)());\n    }\n    nextDataId() {\n        return MathBackendWebGL.nextDataId++;\n    }\n    numDataIds() {\n        return this.texData.numDataIds() +\n            (this.cpuBackend ? this.cpuBackend.numDataIds() : 0) -\n            this.pendingDeletes;\n    }\n    write(values, shape, dtype) {\n        if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('WEBGL_CHECK_NUMERICAL_PROBLEMS') ||\n            (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('DEBUG')) {\n            this.checkNumericalProblems(values);\n        }\n        if (dtype === 'complex64' && values != null) {\n            throw new Error(`Cannot write to a complex64 dtype. ` +\n                `Please use tf.complex(real, imag).`);\n        }\n        const dataId = { id: this.nextDataId() };\n        this.texData.set(dataId, { shape, dtype, values, usage: _tex_util__WEBPACK_IMPORTED_MODULE_5__.TextureUsage.UPLOAD, refCount: 1 });\n        return dataId;\n    }\n    /** Return refCount of a `TensorData`. */\n    refCount(dataId) {\n        if (this.texData.has(dataId)) {\n            const tensorData = this.texData.get(dataId);\n            return tensorData.refCount;\n        }\n        return 0;\n    }\n    /** Increase refCount of a `TextureData`. */\n    incRef(dataId) {\n        const texData = this.texData.get(dataId);\n        texData.refCount++;\n    }\n    /** Decrease refCount of a `TextureData`. */\n    decRef(dataId) {\n        if (this.texData.has(dataId)) {\n            const texData = this.texData.get(dataId);\n            texData.refCount--;\n        }\n    }\n    move(dataId, values, shape, dtype, refCount) {\n        if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('DEBUG')) {\n            this.checkNumericalProblems(values);\n        }\n        if (dtype === 'complex64') {\n            throw new Error(`Cannot write to a complex64 dtype. ` +\n                `Please use tf.complex(real, imag).`);\n        }\n        this.texData.set(dataId, { shape, dtype, values, usage: _tex_util__WEBPACK_IMPORTED_MODULE_5__.TextureUsage.UPLOAD, refCount });\n    }\n    disposeIntermediateTensorInfo(tensorInfo) {\n        this.disposeData(tensorInfo.dataId);\n    }\n    readSync(dataId) {\n        const texData = this.texData.get(dataId);\n        const { values, dtype, complexTensorInfos, slice, shape, isPacked } = texData;\n        // The presence of `slice` indicates this tensor is a shallow slice of a\n        // different tensor, and is using that original tensor's texture. Run\n        // `clone` in order to copy that texture and read from it.\n        if (slice != null) {\n            let program;\n            if (isPacked) {\n                program = new _unaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_6__.UnaryOpPackedProgram(shape, _unaryop_gpu__WEBPACK_IMPORTED_MODULE_7__.CLONE);\n            }\n            else {\n                program = new _unaryop_gpu__WEBPACK_IMPORTED_MODULE_7__.UnaryOpProgram(shape, _unaryop_gpu__WEBPACK_IMPORTED_MODULE_7__.CLONE);\n            }\n            const res = this.runWebGLProgram(program, [{ dataId, shape, dtype }], dtype);\n            const data = this.readSync(res.dataId);\n            this.disposeIntermediateTensorInfo(res);\n            return data;\n        }\n        if (values != null) {\n            return this.convertAndCacheOnCPU(dataId);\n        }\n        if (dtype === 'string') {\n            return values;\n        }\n        const shouldTimeProgram = this.activeTimers != null;\n        let start;\n        if (shouldTimeProgram) {\n            start = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.now();\n        }\n        let result;\n        if (dtype === 'complex64') {\n            const realValues = this.readSync(complexTensorInfos.real.dataId);\n            const imagValues = this.readSync(complexTensorInfos.imag.dataId);\n            result = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.backend_util.mergeRealAndImagArrays(realValues, imagValues);\n        }\n        else {\n            result = this.getValuesFromTexture(dataId);\n        }\n        if (shouldTimeProgram) {\n            this.downloadWaitMs += _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.now() - start;\n        }\n        return this.convertAndCacheOnCPU(dataId, result);\n    }\n    async read(dataId) {\n        if (this.pendingRead.has(dataId)) {\n            const subscribers = this.pendingRead.get(dataId);\n            return new Promise(resolve => subscribers.push(resolve));\n        }\n        const texData = this.texData.get(dataId);\n        const { values, shape, slice, dtype, complexTensorInfos, isPacked } = texData;\n        // The presence of `slice` indicates this tensor is a shallow slice of a\n        // different tensor, and is using that original tensor's texture. Run\n        // `clone` in order to copy that texture and read from it.\n        if (slice != null) {\n            let program;\n            if (isPacked) {\n                program = new _unaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_6__.UnaryOpPackedProgram(shape, _unaryop_gpu__WEBPACK_IMPORTED_MODULE_7__.CLONE);\n            }\n            else {\n                program = new _unaryop_gpu__WEBPACK_IMPORTED_MODULE_7__.UnaryOpProgram(shape, _unaryop_gpu__WEBPACK_IMPORTED_MODULE_7__.CLONE);\n            }\n            const res = this.runWebGLProgram(program, [{ dataId, shape, dtype }], dtype);\n            const data = this.read(res.dataId);\n            this.disposeIntermediateTensorInfo(res);\n            return data;\n        }\n        if (values != null) {\n            return this.convertAndCacheOnCPU(dataId);\n        }\n        if (!(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('WEBGL_DOWNLOAD_FLOAT_ENABLED') &&\n            (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getNumber('WEBGL_VERSION') === 2) {\n            throw new Error(`tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and ` +\n                `WEBGL_VERSION=2 not yet supported.`);\n        }\n        let buffer = null;\n        let tmpDownloadTarget;\n        if (dtype !== 'complex64' && (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().get('WEBGL_BUFFER_SUPPORTED')) {\n            // Possibly copy the texture into a buffer before inserting a fence.\n            tmpDownloadTarget = this.decode(dataId);\n            const tmpData = this.texData.get(tmpDownloadTarget.dataId);\n            buffer = this.gpgpu.createBufferFromTexture(tmpData.texture, ..._tex_util__WEBPACK_IMPORTED_MODULE_5__.getDenseTexShape(shape));\n        }\n        this.pendingRead.set(dataId, []);\n        if (dtype !== 'complex64') {\n            // Create a fence and wait for it to resolve.\n            await this.gpgpu.createAndWaitForFence();\n        }\n        // Download the values from the GPU.\n        let vals;\n        if (dtype === 'complex64') {\n            const ps = await Promise.all([\n                this.read(complexTensorInfos.real.dataId),\n                this.read(complexTensorInfos.imag.dataId)\n            ]);\n            const realValues = ps[0];\n            const imagValues = ps[1];\n            vals = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.backend_util.mergeRealAndImagArrays(realValues, imagValues);\n        }\n        else if (buffer == null) {\n            vals = this.getValuesFromTexture(dataId);\n        }\n        else {\n            const size = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.sizeFromShape(shape);\n            vals = this.gpgpu.downloadFloat32MatrixFromBuffer(buffer, size);\n        }\n        if (tmpDownloadTarget != null) {\n            this.disposeIntermediateTensorInfo(tmpDownloadTarget);\n        }\n        const dTypeVals = this.convertAndCacheOnCPU(dataId, vals);\n        const subscribers = this.pendingRead.get(dataId);\n        this.pendingRead.delete(dataId);\n        // Notify all pending reads.\n        subscribers.forEach(resolve => resolve(dTypeVals));\n        if (this.pendingDisposal.has(dataId)) {\n            this.pendingDisposal.delete(dataId);\n            if (this.disposeData(dataId)) {\n                (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.engine)().removeDataId(dataId, this);\n            }\n            this.pendingDeletes--;\n        }\n        return dTypeVals;\n    }\n    bufferSync(t) {\n        const data = this.readSync(t.dataId);\n        let decodedData = data;\n        if (t.dtype === 'string') {\n            try {\n                // Decode the bytes into string.\n                decodedData = data.map(d => _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.decodeString(d));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode encoded string bytes into utf-8');\n            }\n        }\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.buffer)(t.shape, t.dtype, decodedData);\n    }\n    checkNumericalProblems(values) {\n        if (values == null) {\n            return;\n        }\n        for (let i = 0; i < values.length; i++) {\n            const num = values[i];\n            if (!_webgl_util__WEBPACK_IMPORTED_MODULE_8__.canBeRepresented(num)) {\n                if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('WEBGL_RENDER_FLOAT32_CAPABLE')) {\n                    throw Error(`The value ${num} cannot be represented with your ` +\n                        `current settings. Consider enabling float32 rendering: ` +\n                        `'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);\n                }\n                throw Error(`The value ${num} cannot be represented on this device.`);\n            }\n        }\n    }\n    getValuesFromTexture(dataId) {\n        const { shape, dtype, isPacked } = this.texData.get(dataId);\n        const size = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.sizeFromShape(shape);\n        if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('WEBGL_DOWNLOAD_FLOAT_ENABLED')) {\n            const tmpTarget = this.decode(dataId);\n            const tmpData = this.texData.get(tmpTarget.dataId);\n            const vals = this.gpgpu\n                .downloadMatrixFromPackedTexture(tmpData.texture, ..._tex_util__WEBPACK_IMPORTED_MODULE_5__.getDenseTexShape(shape))\n                .subarray(0, size);\n            this.disposeIntermediateTensorInfo(tmpTarget);\n            return vals;\n        }\n        const shouldUsePackedProgram = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('WEBGL_PACK') && isPacked === true;\n        const outputShape = shouldUsePackedProgram ? _webgl_util__WEBPACK_IMPORTED_MODULE_8__.getShapeAs3D(shape) : shape;\n        const program = shouldUsePackedProgram ?\n            new _encode_float_packed_gpu__WEBPACK_IMPORTED_MODULE_9__.EncodeFloatPackedProgram(outputShape) :\n            new _encode_float_gpu__WEBPACK_IMPORTED_MODULE_10__.EncodeFloatProgram(outputShape);\n        const output = this.runWebGLProgram(program, [{ shape: outputShape, dtype, dataId }], 'float32');\n        const tmpData = this.texData.get(output.dataId);\n        const vals = this.gpgpu\n            .downloadByteEncodedFloatMatrixFromOutputTexture(tmpData.texture, tmpData.texShape[0], tmpData.texShape[1])\n            .subarray(0, size);\n        this.disposeIntermediateTensorInfo(output);\n        return vals;\n    }\n    timerAvailable() {\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') > 0;\n    }\n    async time(f) {\n        const oldActiveTimers = this.activeTimers;\n        const newActiveTimers = [];\n        let outerMostTime = false;\n        if (this.programTimersStack == null) {\n            this.programTimersStack = newActiveTimers;\n            outerMostTime = true;\n        }\n        else {\n            this.activeTimers.push(newActiveTimers);\n        }\n        this.activeTimers = newActiveTimers;\n        f();\n        // needing to split these up because util.flatten only accepts certain types\n        const flattenedActiveTimerQueries = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.flatten(this.activeTimers.map((d) => d.query))\n            .filter(d => d != null);\n        const flattenedActiveTimerNames = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.flatten(this.activeTimers.map((d) => d.name))\n            .filter(d => d != null);\n        this.activeTimers = oldActiveTimers;\n        if (outerMostTime) {\n            this.programTimersStack = null;\n        }\n        const res = {\n            uploadWaitMs: this.uploadWaitMs,\n            downloadWaitMs: this.downloadWaitMs,\n            kernelMs: null,\n            wallMs: null // will be filled by the engine\n        };\n        if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') > 0) {\n            const kernelMs = await Promise.all(flattenedActiveTimerQueries);\n            res['kernelMs'] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.sum(kernelMs);\n            res['getExtraProfileInfo'] = () => kernelMs.map((d, i) => ({ name: flattenedActiveTimerNames[i], ms: d }))\n                .map(d => `${d.name}: ${d.ms}`)\n                .join(', ');\n        }\n        else {\n            res['kernelMs'] = {\n                error: 'WebGL query timers are not supported in this environment.'\n            };\n        }\n        this.uploadWaitMs = 0;\n        this.downloadWaitMs = 0;\n        return res;\n    }\n    memory() {\n        return {\n            unreliable: false,\n            numBytesInGPU: this.numBytesInGPU,\n            numBytesInGPUAllocated: this.textureManager.numBytesAllocated,\n            numBytesInGPUFree: this.textureManager.numBytesFree\n        };\n    }\n    startTimer() {\n        if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') > 0) {\n            return this.gpgpu.beginQuery();\n        }\n        return { startMs: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.now(), endMs: null };\n    }\n    endTimer(query) {\n        if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') > 0) {\n            this.gpgpu.endQuery();\n            return query;\n        }\n        query.endMs = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.now();\n        return query;\n    }\n    async getQueryTime(query) {\n        if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE') > 0) {\n            return this.gpgpu.waitForQueryAndGetTime(query);\n        }\n        const timerQuery = query;\n        return timerQuery.endMs - timerQuery.startMs;\n    }\n    /**\n     * Decrease the RefCount on the dataId and dispose the memory if the dataId\n     * has 0 refCount. If there are pending read on the data, the disposal would\n     * added to the pending delete queue. Return true if the dataId is removed\n     * from backend or the backend does not contain the dataId, false if the\n     * dataId is not removed. Memory may or may not be released even when dataId\n     * is removed, which also depends on dataRefCount, see `releaseGPU`.\n     * @param dataId\n     * @oaram force Optional, remove the data regardless of refCount\n     */\n    disposeData(dataId, force = false) {\n        if (this.pendingDisposal.has(dataId)) {\n            return false;\n        }\n        // No-op if already disposed.\n        if (!this.texData.has(dataId)) {\n            return true;\n        }\n        // if force flag is set, change refCount to 0, this would ensure disposal\n        // when added to the pendingDisposal queue. Memory may or may not be\n        // released, which also depends on dataRefCount, see `releaseGPU`.\n        if (force) {\n            this.texData.get(dataId).refCount = 0;\n        }\n        else {\n            this.texData.get(dataId).refCount--;\n        }\n        if (!force && this.texData.get(dataId).refCount > 0) {\n            return false;\n        }\n        if (this.pendingRead.has(dataId)) {\n            this.pendingDisposal.add(dataId);\n            this.pendingDeletes++;\n            return false;\n        }\n        this.releaseGPUData(dataId);\n        const { complexTensorInfos } = this.texData.get(dataId);\n        if (complexTensorInfos != null) {\n            this.disposeData(complexTensorInfos.real.dataId, force);\n            this.disposeData(complexTensorInfos.imag.dataId, force);\n        }\n        this.texData.delete(dataId);\n        return true;\n    }\n    releaseGPUData(dataId) {\n        const { texture, dtype, texShape, usage, isPacked, slice } = this.texData.get(dataId);\n        const key = slice && slice.origDataId || dataId;\n        const refCount = this.dataRefCount.get(key);\n        if (refCount > 1) {\n            this.dataRefCount.set(key, refCount - 1);\n        }\n        else {\n            this.dataRefCount.delete(key);\n            if (texture != null) {\n                this.numBytesInGPU -= this.computeBytes(texShape, dtype);\n                this.textureManager.releaseTexture(texture, texShape, usage, isPacked);\n            }\n        }\n        const texData = this.texData.get(dataId);\n        texData.texture = null;\n        texData.texShape = null;\n        texData.isPacked = false;\n        texData.slice = null;\n    }\n    getTexture(dataId) {\n        this.uploadToGPU(dataId);\n        return this.texData.get(dataId).texture;\n    }\n    /**\n     * Returns internal information for the specific data bucket. Used in unit\n     * tests.\n     */\n    getDataInfo(dataId) {\n        return this.texData.get(dataId);\n    }\n    getCPUBackend() {\n        if (!(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('WEBGL_CPU_FORWARD')) {\n            return null;\n        }\n        if (this.cpuBackend == null) {\n            this.cpuBackend = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.engine)().findBackend('cpu');\n        }\n        return this.cpuBackend;\n    }\n    /*\n    Tests whether all the inputs to an op are small and on the CPU. This heuristic\n    determines when it would be faster to execute a kernel on the CPU. WebGL\n    kernels opt into running this check and forwarding when appropriate.\n    TODO(https://github.com/tensorflow/tfjs/issues/872): Develop a more\n    sustainable strategy for optimizing backend execution of ops.\n     */\n    shouldExecuteOnCPU(inputs, sizeThreshold = CPU_HANDOFF_SIZE_THRESHOLD) {\n        const cpuBackend = this.getCPUBackend();\n        if (!(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('IS_TEST') && !this.warnedAboutCPUBackend &&\n            cpuBackend == null) {\n            console.warn('Your application contains ops that are small enough to be ' +\n                'executed on the CPU backend, however the CPU backend cannot ' +\n                'be found. Consider importing the CPU backend ' +\n                '(@tensorflow/tfjs-backend-cpu) for better performance.');\n            this.warnedAboutCPUBackend = true;\n        }\n        return cpuBackend != null &&\n            inputs.every(input => this.texData.get(input.dataId).texture == null &&\n                _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.sizeFromShape(input.shape) < sizeThreshold);\n    }\n    getGPGPUContext() {\n        return this.gpgpu;\n    }\n    where(condition) {\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.backend_util.warn('tf.where() in webgl locks the UI thread. ' +\n            'Call tf.whereAsync() instead');\n        const condVals = condition.dataSync();\n        return whereImpl(condition.shape, condVals);\n    }\n    packedUnaryOp(x, op, dtype) {\n        const program = new _unaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_6__.UnaryOpPackedProgram(x.shape, op);\n        const outInfo = this.compileAndRun(program, [x], dtype);\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.engine)().makeTensorFromDataId(outInfo.dataId, outInfo.shape, outInfo.dtype);\n    }\n    // TODO(msoulanille) remove this once the backend has been modularized\n    // a copy is needed here to break a circular dependency.\n    // Also remove the op from unary_op.\n    abs(x) {\n        // TODO: handle cases when x is complex.\n        if (this.shouldExecuteOnCPU([x]) && x.dtype !== 'complex64') {\n            const outValues = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_11__.simpleAbsImplCPU)(this.texData.get(x.dataId).values);\n            return this.makeOutput(x.shape, x.dtype, outValues);\n        }\n        if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n            return this.packedUnaryOp(x, _unaryop_gpu__WEBPACK_IMPORTED_MODULE_7__.ABS, x.dtype);\n        }\n        const program = new _unaryop_gpu__WEBPACK_IMPORTED_MODULE_7__.UnaryOpProgram(x.shape, _unaryop_gpu__WEBPACK_IMPORTED_MODULE_7__.ABS);\n        const outInfo = this.compileAndRun(program, [x]);\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.engine)().makeTensorFromDataId(outInfo.dataId, outInfo.shape, outInfo.dtype);\n    }\n    makeTensorInfo(shape, dtype, values) {\n        let dataId;\n        if (dtype === 'string' && values != null && values.length > 0 &&\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.isString(values[0])) {\n            const encodedValues = values.map(d => _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.encodeString(d));\n            dataId = this.write(encodedValues, shape, dtype);\n        }\n        else {\n            dataId = this.write(values, shape, dtype);\n        }\n        this.texData.get(dataId).usage = null;\n        return { dataId, shape, dtype };\n    }\n    makeOutput(shape, dtype, values) {\n        const { dataId } = this.makeTensorInfo(shape, dtype, values);\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.engine)().makeTensorFromDataId(dataId, shape, dtype, this);\n    }\n    unpackTensor(input) {\n        const program = new _unpack_gpu__WEBPACK_IMPORTED_MODULE_12__.UnpackProgram(input.shape);\n        return this.runWebGLProgram(program, [input], input.dtype);\n    }\n    packTensor(input) {\n        const program = new _pack_gpu__WEBPACK_IMPORTED_MODULE_13__.PackProgram(input.shape);\n        const preventEagerUnpackingOutput = true;\n        return this.runWebGLProgram(program, [input], input.dtype, null /* customSetup */, preventEagerUnpackingOutput);\n    }\n    packedReshape(input, afterShape) {\n        const input3DShape = [\n            _webgl_util__WEBPACK_IMPORTED_MODULE_8__.getBatchDim(input.shape),\n            ..._webgl_util__WEBPACK_IMPORTED_MODULE_8__.getRowsCols(input.shape)\n        ];\n        const input3D = {\n            dtype: input.dtype,\n            shape: input3DShape,\n            dataId: input.dataId\n        };\n        const afterShapeAs3D = [\n            _webgl_util__WEBPACK_IMPORTED_MODULE_8__.getBatchDim(afterShape), ..._webgl_util__WEBPACK_IMPORTED_MODULE_8__.getRowsCols(afterShape)\n        ];\n        const program = new _reshape_packed_gpu__WEBPACK_IMPORTED_MODULE_14__.ReshapePackedProgram(afterShapeAs3D, input3DShape);\n        const preventEagerUnpackingOfOutput = true;\n        const output = this.runWebGLProgram(program, [input3D], input.dtype, null /* customSetup */, preventEagerUnpackingOfOutput);\n        return { dataId: output.dataId, shape: afterShape, dtype: output.dtype };\n    }\n    decode(dataId) {\n        const texData = this.texData.get(dataId);\n        const { isPacked, shape, dtype } = texData;\n        const shapeAs3D = _webgl_util__WEBPACK_IMPORTED_MODULE_8__.getShapeAs3D(shape);\n        let program;\n        if (isPacked) {\n            program = new _decode_matrix_packed_gpu__WEBPACK_IMPORTED_MODULE_15__.DecodeMatrixPackedProgram(shapeAs3D);\n        }\n        else {\n            program = new _decode_matrix_gpu__WEBPACK_IMPORTED_MODULE_16__.DecodeMatrixProgram(shapeAs3D);\n        }\n        const preventEagerUnpackingOfOutput = true;\n        const out = this.runWebGLProgram(program, [{ shape: shapeAs3D, dtype, dataId }], dtype, null /* customSetup */, preventEagerUnpackingOfOutput);\n        return { dtype, shape, dataId: out.dataId };\n    }\n    runWebGLProgram(program, inputs, outputDtype, customSetup, preventEagerUnpackingOfOutput = false) {\n        const output = this.makeTensorInfo(program.outputShape, outputDtype);\n        const outData = this.texData.get(output.dataId);\n        if (program.packedOutput) {\n            outData.isPacked = true;\n        }\n        if (program.outPackingScheme === _tex_util__WEBPACK_IMPORTED_MODULE_5__.PackingScheme.DENSE) {\n            const texelShape = _tex_util__WEBPACK_IMPORTED_MODULE_5__.getDenseTexShape(program.outputShape);\n            // For a densely packed output, we explicitly set texShape\n            // so it doesn't get assigned later according to our typical packing\n            // scheme wherein a single texel can only contain values from adjacent\n            // rows/cols.\n            outData.texShape = texelShape.map(d => d * 2);\n        }\n        if (program.outTexUsage != null) {\n            outData.usage = program.outTexUsage;\n        }\n        if (_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.sizeFromShape(output.shape) === 0) {\n            // Short-circuit the computation since the result is empty (has 0 in its\n            // shape).\n            outData.values =\n                _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.getTypedArrayFromDType(output.dtype, 0);\n            return output;\n        }\n        const dataToDispose = [];\n        const inputsData = inputs.map(input => {\n            if (input.dtype === 'complex64') {\n                throw new Error(`GPGPUProgram does not support complex64 input. For complex64 ` +\n                    `dtypes, please separate the program into real and imaginary ` +\n                    `parts.`);\n            }\n            let texData = this.texData.get(input.dataId);\n            if (texData.texture == null) {\n                if (!program.packedInputs &&\n                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.sizeFromShape(input.shape) <=\n                        (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getNumber('WEBGL_SIZE_UPLOAD_UNIFORM')) {\n                    // Upload small tensors that live on the CPU as uniforms, not as\n                    // textures. Do this only when the environment supports 32bit floats\n                    // due to problems when comparing 16bit floats with 32bit floats.\n                    // TODO(https://github.com/tensorflow/tfjs/issues/821): Make it\n                    // possible for packed shaders to sample from uniforms.\n                    return {\n                        shape: input.shape,\n                        texData: null,\n                        isUniform: true,\n                        uniformValues: texData.values\n                    };\n                }\n                // This ensures that if a packed program's inputs have not yet been\n                // uploaded to the GPU, they get uploaded as packed right off the bat.\n                if (program.packedInputs) {\n                    texData.isPacked = true;\n                    texData.shape = input.shape;\n                }\n            }\n            else if (!!texData.isPacked !== !!program.packedInputs) {\n                input = texData.isPacked ? this.unpackTensor(input) :\n                    this.packTensor(input);\n                dataToDispose.push(input);\n                texData = this.texData.get(input.dataId);\n            }\n            else if (texData.isPacked &&\n                !_webgl_util__WEBPACK_IMPORTED_MODULE_8__.isReshapeFree(texData.shape, input.shape)) {\n                // This is a special case where a texture exists for a tensor\n                // but the shapes are incompatible (due to packing constraints) because\n                // the tensor did not have a chance to go through the packed reshape\n                // shader. This only happens when we reshape the *same* tensor to form\n                // *distinct* inputs to an op, e.g. dotting a vector with itself. This\n                // case will disappear once packed uploading is the default.\n                const savedInput = input;\n                const targetShape = input.shape;\n                input.shape = texData.shape;\n                input = this.packedReshape(input, targetShape);\n                dataToDispose.push(input);\n                texData = this.texData.get(input.dataId);\n                savedInput.shape = targetShape;\n            }\n            this.uploadToGPU(input.dataId);\n            return { shape: input.shape, texData, isUniform: false };\n        });\n        this.uploadToGPU(output.dataId);\n        const outputData = { shape: output.shape, texData: outData, isUniform: false };\n        const key = _gpgpu_math__WEBPACK_IMPORTED_MODULE_17__.makeShaderKey(program, inputsData, outputData);\n        const binary = this.getAndSaveBinary(key, () => {\n            return _gpgpu_math__WEBPACK_IMPORTED_MODULE_17__.compileProgram(this.gpgpu, program, inputsData, outputData);\n        });\n        const shouldTimeProgram = this.activeTimers != null;\n        let query;\n        if (shouldTimeProgram) {\n            query = this.startTimer();\n        }\n        _gpgpu_math__WEBPACK_IMPORTED_MODULE_17__.runProgram(this.gpgpu, binary, inputsData, outputData, customSetup);\n        dataToDispose.forEach(info => this.disposeIntermediateTensorInfo(info));\n        if (shouldTimeProgram) {\n            query = this.endTimer(query);\n            this.activeTimers.push({ name: program.constructor.name, query: this.getQueryTime(query) });\n        }\n        const glFlushThreshold = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().get('WEBGL_FLUSH_THRESHOLD');\n        // Manually GL flush requested\n        if (glFlushThreshold > 0) {\n            const time = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.now();\n            if ((time - this.lastGlFlushTime) > glFlushThreshold) {\n                this.gpgpu.gl.flush();\n                this.lastGlFlushTime = time;\n            }\n        }\n        if (!(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('WEBGL_LAZILY_UNPACK') && outData.isPacked &&\n            preventEagerUnpackingOfOutput === false) {\n            const unpacked = this.unpackTensor(output);\n            this.disposeIntermediateTensorInfo(output);\n            return unpacked;\n        }\n        return output;\n    }\n    compileAndRun(program, inputs, outputDtype, customSetup, preventEagerUnpackingOfOutput = false) {\n        outputDtype = outputDtype || inputs[0].dtype;\n        const outInfo = this.runWebGLProgram(program, inputs, outputDtype, customSetup, preventEagerUnpackingOfOutput);\n        return outInfo;\n    }\n    getAndSaveBinary(key, getBinary) {\n        if (!(key in this.binaryCache)) {\n            this.binaryCache[key] = getBinary();\n        }\n        return this.binaryCache[key];\n    }\n    getTextureManager() {\n        return this.textureManager;\n    }\n    dispose() {\n        if (this.disposed) {\n            return;\n        }\n        // Avoid disposing the compiled webgl programs during unit testing because\n        // it slows down test execution.\n        if (!(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('IS_TEST')) {\n            const allKeys = Object.keys(this.binaryCache);\n            allKeys.forEach(key => {\n                this.gpgpu.deleteProgram(this.binaryCache[key].webGLProgram);\n                delete this.binaryCache[key];\n            });\n        }\n        this.textureManager.dispose();\n        if (this.canvas != null &&\n            (typeof (HTMLCanvasElement) !== 'undefined' &&\n                this.canvas instanceof HTMLCanvasElement)) {\n            this.canvas.remove();\n        }\n        else {\n            this.canvas = null;\n        }\n        if (this.gpgpuCreatedLocally) {\n            this.gpgpu.program = null;\n            this.gpgpu.dispose();\n        }\n        this.disposed = true;\n    }\n    floatPrecision() {\n        if (this.floatPrecisionValue == null) {\n            this.floatPrecisionValue = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.tidy)(() => {\n                if (!(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().get('WEBGL_RENDER_FLOAT32_ENABLED')) {\n                    // Momentarily switching DEBUG flag to false so we don't throw an\n                    // error trying to upload a small value.\n                    const debugFlag = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('DEBUG');\n                    (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().set('DEBUG', false);\n                    const underflowCheckValue = this.abs((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.scalar)(1e-8)).dataSync()[0];\n                    (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.env)().set('DEBUG', debugFlag);\n                    if (underflowCheckValue > 0) {\n                        return 32;\n                    }\n                }\n                return 16;\n            });\n        }\n        return this.floatPrecisionValue;\n    }\n    /** Returns the smallest representable number.  */\n    epsilon() {\n        return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n    }\n    uploadToGPU(dataId) {\n        const texData = this.texData.get(dataId);\n        const { shape, dtype, values, texture, usage, isPacked } = texData;\n        if (texture != null) {\n            // Array is already on GPU. No-op.\n            return;\n        }\n        const shouldTimeProgram = this.activeTimers != null;\n        let start;\n        if (shouldTimeProgram) {\n            start = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.now();\n        }\n        let texShape = texData.texShape;\n        if (texShape == null) {\n            texShape = _webgl_util__WEBPACK_IMPORTED_MODULE_8__.getTextureShapeFromLogicalShape(shape, isPacked);\n            texData.texShape = texShape;\n        }\n        if (values != null) {\n            const shapeAs3D = _webgl_util__WEBPACK_IMPORTED_MODULE_8__.getShapeAs3D(shape);\n            let program;\n            let width = texShape[1], height = texShape[0];\n            const isByteArray = values instanceof Uint8Array;\n            if (isPacked) {\n                [width, height] = _tex_util__WEBPACK_IMPORTED_MODULE_5__.getPackedMatrixTextureShapeWidthHeight(texShape[0], texShape[1]);\n                program = new _encode_matrix_packed_gpu__WEBPACK_IMPORTED_MODULE_18__.EncodeMatrixPackedProgram(shapeAs3D, [height, width], isByteArray);\n            }\n            else {\n                program =\n                    new _encode_matrix_gpu__WEBPACK_IMPORTED_MODULE_19__.EncodeMatrixProgram(shapeAs3D, [height, width], isByteArray);\n            }\n            const tempDenseInputHandle = this.makeTensorInfo([height, width], dtype);\n            if (isByteArray) {\n                this.texData.get(tempDenseInputHandle.dataId).usage =\n                    _tex_util__WEBPACK_IMPORTED_MODULE_5__.TextureUsage.PIXELS;\n            }\n            else {\n                this.texData.get(tempDenseInputHandle.dataId).usage =\n                    _tex_util__WEBPACK_IMPORTED_MODULE_5__.TextureUsage.UPLOAD;\n            }\n            this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(tempDenseInputHandle.dataId), width, height, values);\n            // We want the output to remain packed regardless of the value of\n            // WEBGL_PACK.\n            const preventEagerUnpacking = true;\n            const encodedOutputTarget = this.runWebGLProgram(program, [tempDenseInputHandle], dtype, null, preventEagerUnpacking);\n            // Have the original texture assume the identity of the encoded output.\n            const outputTexData = this.texData.get(encodedOutputTarget.dataId);\n            texData.texture = outputTexData.texture;\n            texData.texShape = outputTexData.texShape;\n            texData.isPacked = outputTexData.isPacked;\n            texData.usage = outputTexData.usage;\n            this.disposeIntermediateTensorInfo(tempDenseInputHandle);\n            this.texData.delete(encodedOutputTarget.dataId);\n            // Once uploaded, don't store the values on cpu.\n            texData.values = null;\n            if (shouldTimeProgram) {\n                this.uploadWaitMs += _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.now() - start;\n            }\n        }\n        else {\n            const newTexture = this.acquireTexture(texShape, usage, dtype, isPacked);\n            texData.texture = newTexture;\n        }\n    }\n    convertAndCacheOnCPU(dataId, float32Values) {\n        const texData = this.texData.get(dataId);\n        const { dtype } = texData;\n        this.releaseGPUData(dataId);\n        if (float32Values != null) {\n            texData.values = float32ToTypedArray(float32Values, dtype);\n        }\n        return texData.values;\n    }\n    acquireTexture(texShape, texType, dtype, isPacked) {\n        this.numBytesInGPU += this.computeBytes(texShape, dtype);\n        if (!this.warnedAboutMemory &&\n            this.numBytesInGPU > this.numMBBeforeWarning * 1024 * 1024) {\n            const mb = (this.numBytesInGPU / 1024 / 1024).toFixed(2);\n            this.warnedAboutMemory = true;\n            console.warn(`High memory usage in GPU: ${mb} MB, ` +\n                `most likely due to a memory leak`);\n        }\n        return this.textureManager.acquireTexture(texShape, texType, isPacked);\n    }\n    computeBytes(shape, dtype) {\n        return shape[0] * shape[1] * _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_1__.util.bytesPerElement(dtype);\n    }\n}\nMathBackendWebGL.nextDataId = 0;\nfunction float32ToTypedArray(a, dtype) {\n    if (dtype === 'float32' || dtype === 'complex64') {\n        return a;\n    }\n    else if (dtype === 'int32' || dtype === 'bool') {\n        const result = (dtype === 'int32') ? new Int32Array(a.length) :\n            new Uint8Array(a.length);\n        for (let i = 0; i < result.length; ++i) {\n            result[i] = Math.round(a[i]);\n        }\n        return result;\n    }\n    else {\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n}\n//# sourceMappingURL=backend_webgl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/backend_webgl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/base.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/base.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export GPGPUContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_context.js .GPGPUContext */
/*! export MathBackendWebGL [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/backend_webgl.js .MathBackendWebGL */
/*! export forceHalfFloat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl.js .forceHalfFloat */
/*! export gpgpu_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_util.js */
/*!   export bindVertexProgramAttributeStreams [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createBufferFromOutputTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFloat16MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFloat16PackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFloat32MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createIndexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createPackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createUnsignedBytesMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createVertexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createVertexShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export downloadByteEncodedFloatMatrixFromOutputTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export downloadFloat32MatrixFromBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export downloadMatrixFromPackedOutputTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export downloadPackedMatrixFromBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForFloat16MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForFloat16PackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForFloat32MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForPackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForUnsignedBytesMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export uploadDenseMatrixToTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export uploadPixelDataToTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export setWebGLContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/canvas_util.js .setWebGLContext */
/*! export version_webgl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/version.js .version */
/*! export webgl [provided] [no usage info] [missing usage info prevents renaming] */
/*! export webgl_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js */
/*!   export assertNotComplex [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindCanvasToFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindColorTextureToFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindTextureToProgramUniformSampler [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindTextureUnit [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindVertexBufferToProgramAttribute [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export callAndCheck [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export canBeRepresented [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFragmentShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createStaticIndexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createStaticVertexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createVertexShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getBatchDim [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getExtensionOrThrow [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getFramebufferErrorMessage [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getMaxTexturesInShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getNumChannels [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getProgramUniformLocation [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getProgramUniformLocationOrThrow [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getRowsCols [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getShapeAs3D [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getTextureShapeFromLogicalShape [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getWebGLDisjointQueryTimerVersion [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getWebGLErrorMessage [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getWebGLMaxTextureSize [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export hasExtension [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isCapableOfRenderingToFloatTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isDownloadFloatTextureEnabled [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isReshapeFree [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isWebGLFenceEnabled [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isWebGLVersionEnabled [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export linkProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export resetMaxTextureSize [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export resetMaxTexturesInShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export unbindColorTextureFromFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export unbindTextureUnit [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export validateFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export validateProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export validateTextureSize [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version_webgl\": () => /* reexport safe */ _version__WEBPACK_IMPORTED_MODULE_1__.version,\n/* harmony export */   \"GPGPUContext\": () => /* reexport safe */ _webgl__WEBPACK_IMPORTED_MODULE_3__.GPGPUContext,\n/* harmony export */   \"MathBackendWebGL\": () => /* reexport safe */ _webgl__WEBPACK_IMPORTED_MODULE_3__.MathBackendWebGL,\n/* harmony export */   \"forceHalfFloat\": () => /* reexport safe */ _webgl__WEBPACK_IMPORTED_MODULE_3__.forceHalfFloat,\n/* harmony export */   \"gpgpu_util\": () => /* reexport safe */ _webgl__WEBPACK_IMPORTED_MODULE_3__.gpgpu_util,\n/* harmony export */   \"setWebGLContext\": () => /* reexport safe */ _webgl__WEBPACK_IMPORTED_MODULE_3__.setWebGLContext,\n/* harmony export */   \"webgl_util\": () => /* reexport safe */ _webgl__WEBPACK_IMPORTED_MODULE_3__.webgl_util,\n/* harmony export */   \"webgl\": () => /* binding */ webgl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _backend_webgl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./backend_webgl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/backend_webgl.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./version */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/version.js\");\n/* harmony import */ var _webgl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./webgl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// base.ts is the webgl backend without auto kernel registration.\n;\n\n\nif (_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.device_util.isBrowser()) {\n    (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.registerBackend)('webgl', () => new _backend_webgl__WEBPACK_IMPORTED_MODULE_2__.MathBackendWebGL(), 2 /* priority */);\n}\n// Export webgl utilities\n\n// Export forceHalfFlost under webgl namespace for the union bundle.\n\nconst webgl = { forceHalfFloat: _webgl__WEBPACK_IMPORTED_MODULE_3__.forceHalfFloat };\n//# sourceMappingURL=base.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/base.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_gpu.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_gpu.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export BatchNormProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BatchNormProgram\": () => /* binding */ BatchNormProgram\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass BatchNormProgram {\n    constructor(xShape, meanShape, varianceShape, offsetShape, scaleShape, varianceEpsilon) {\n        this.outputShape = [];\n        this.variableNames = ['x', 'mean', 'variance'];\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(xShape, meanShape);\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(xShape, varianceShape);\n        let offsetSnippet = '0.0';\n        if (offsetShape != null) {\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(xShape, offsetShape);\n            this.variableNames.push('offset');\n            offsetSnippet = 'getOffsetAtOutCoords()';\n        }\n        let scaleSnippet = '1.0';\n        if (scaleShape != null) {\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(xShape, scaleShape);\n            this.variableNames.push('scale');\n            scaleSnippet = 'getScaleAtOutCoords()';\n        }\n        this.outputShape = xShape;\n        this.userCode = `\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${offsetSnippet};\n        float scale = ${scaleSnippet};\n        float inv = scale * inversesqrt(variance + float(${varianceEpsilon}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=batchnorm_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_packed_gpu.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_packed_gpu.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export BatchNormPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BatchNormPackedProgram\": () => /* binding */ BatchNormPackedProgram\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass BatchNormPackedProgram {\n    constructor(xShape, meanShape, varianceShape, offsetShape, scaleShape, varianceEpsilon) {\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.variableNames = ['x', 'mean', 'variance'];\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(xShape, meanShape);\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(xShape, varianceShape);\n        let offsetSnippet = 'vec4(0.0)';\n        if (offsetShape != null) {\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(xShape, offsetShape);\n            this.variableNames.push('offset');\n            offsetSnippet = 'getOffsetAtOutCoords()';\n        }\n        let scaleSnippet = 'vec4(1.0)';\n        if (scaleShape != null) {\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(xShape, scaleShape);\n            this.variableNames.push('scale');\n            scaleSnippet = 'getScaleAtOutCoords()';\n        }\n        this.outputShape = xShape;\n        this.userCode = `\n      void main() {\n        vec4 offset = ${offsetSnippet};\n        vec4 scale = ${scaleSnippet};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${varianceEpsilon}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=batchnorm_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_complex_gpu.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_complex_gpu.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export BinaryOpComplexProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export COMPLEX_MULTIPLY [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"COMPLEX_MULTIPLY\": () => /* binding */ COMPLEX_MULTIPLY,\n/* harmony export */   \"BinaryOpComplexProgram\": () => /* binding */ BinaryOpComplexProgram\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n// (Ar + Ai)(Br + Bi) =\n// ArBr + ArBi + AiBr + AiBi = ArBr - AB + ArBi + AiBr\n// Yr = ArBr - AB\n// Yi = ArBi + AiBr\nconst COMPLEX_MULTIPLY = {\n    REAL: 'return areal * breal - aimag * bimag;',\n    IMAG: 'return areal * bimag + aimag * breal;'\n};\nclass BinaryOpComplexProgram {\n    constructor(op, aShape, bShape) {\n        this.variableNames = ['AReal', 'AImag', 'BReal', 'BImag'];\n        this.outputShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        this.userCode = `\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${op}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=binaryop_complex_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_complex_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_gpu.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_gpu.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export BinaryOpProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CHECK_NAN_SNIPPET [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SQUARED_DIFFERENCE [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CHECK_NAN_SNIPPET\": () => /* binding */ CHECK_NAN_SNIPPET,\n/* harmony export */   \"SQUARED_DIFFERENCE\": () => /* binding */ SQUARED_DIFFERENCE,\n/* harmony export */   \"BinaryOpProgram\": () => /* binding */ BinaryOpProgram\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nconst CHECK_NAN_SNIPPET = `\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n`;\nconst SQUARED_DIFFERENCE = 'return (a - b) * (a - b);';\nclass BinaryOpProgram {\n    constructor(op, aShape, bShape) {\n        this.variableNames = ['A', 'B'];\n        this.outputShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        this.userCode = `\n      float binaryOperation(float a, float b) {\n        ${op}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=binaryop_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export BinaryOpPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CHECK_NAN_SNIPPET [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ELU_DER [provided] [no usage info] [missing usage info prevents renaming] */
/*! export NOT_EQUAL [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CHECK_NAN_SNIPPET\": () => /* binding */ CHECK_NAN_SNIPPET,\n/* harmony export */   \"ELU_DER\": () => /* binding */ ELU_DER,\n/* harmony export */   \"NOT_EQUAL\": () => /* binding */ NOT_EQUAL,\n/* harmony export */   \"BinaryOpPackedProgram\": () => /* binding */ BinaryOpPackedProgram\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _packing_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./packing_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js\");\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst CHECK_NAN_SNIPPET = `\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n`;\nconst ELU_DER = `\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n`;\nconst NOT_EQUAL = `\n  return vec4(notEqual(a, b));\n`;\nclass BinaryOpPackedProgram {\n    constructor(op, aShape, bShape, checkOutOfBounds = false) {\n        this.variableNames = ['A', 'B'];\n        this.supportsBroadcasting = true;\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        const rank = this.outputShape.length;\n        let checkOutOfBoundsString = '';\n        if (checkOutOfBounds) {\n            if (rank === 0 || _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(this.outputShape) === 1) {\n                checkOutOfBoundsString = `\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        `;\n            }\n            else {\n                const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_1__.getCoordsDataType)(rank);\n                checkOutOfBoundsString = `\n          ${dtype} coords = getOutputCoords();\n        `;\n                if (rank === 1) {\n                    checkOutOfBoundsString += `\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;\n                }\n                else {\n                    const channels = (0,_packing_util__WEBPACK_IMPORTED_MODULE_2__.getChannels)('coords', rank);\n                    checkOutOfBoundsString += `\n            bool nextRowOutOfBounds =\n              (${channels[rank - 2]} + 1) >= ${this.outputShape[rank - 2]};\n            bool nextColOutOfBounds =\n              (${channels[rank - 1]} + 1) >= ${this.outputShape[rank - 1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `;\n                }\n            }\n        }\n        this.userCode = `\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${op}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${checkOutOfBoundsString}\n\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=binaryop_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/canvas_util.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/canvas_util.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export clearWebGLContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getWebGLContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setWebGLContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clearWebGLContext\": () => /* binding */ clearWebGLContext,\n/* harmony export */   \"setWebGLContext\": () => /* binding */ setWebGLContext,\n/* harmony export */   \"getWebGLContext\": () => /* binding */ getWebGLContext\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst contexts = {};\nconst WEBGL_ATTRIBUTES = {\n    alpha: false,\n    antialias: false,\n    premultipliedAlpha: false,\n    preserveDrawingBuffer: false,\n    depth: false,\n    stencil: false,\n    failIfMajorPerformanceCaveat: true\n};\nfunction clearWebGLContext(webGLVersion) {\n    delete contexts[webGLVersion];\n}\nfunction setWebGLContext(webGLVersion, gl) {\n    contexts[webGLVersion] = gl;\n}\nfunction getWebGLContext(webGLVersion) {\n    if (!(webGLVersion in contexts)) {\n        const newCtx = getWebGLRenderingContext(webGLVersion);\n        if (newCtx !== null) {\n            contexts[webGLVersion] = newCtx;\n        }\n        else {\n            console.log('Could not get context for WebGL version', webGLVersion);\n            return null;\n        }\n    }\n    const gl = contexts[webGLVersion];\n    if (gl.isContextLost()) {\n        delete contexts[webGLVersion];\n        return getWebGLContext(webGLVersion);\n    }\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.STENCIL_TEST);\n    gl.disable(gl.BLEND);\n    gl.disable(gl.DITHER);\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n    gl.disable(gl.SAMPLE_COVERAGE);\n    gl.enable(gl.SCISSOR_TEST);\n    gl.enable(gl.CULL_FACE);\n    gl.cullFace(gl.BACK);\n    return contexts[webGLVersion];\n}\nfunction createCanvas(webGLVersion) {\n    if (typeof OffscreenCanvas !== 'undefined' && webGLVersion === 2) {\n        return new OffscreenCanvas(300, 150);\n    }\n    else if (typeof document !== 'undefined') {\n        return document.createElement('canvas');\n    }\n    else {\n        throw new Error('Cannot create a canvas in this context');\n    }\n}\nfunction getWebGLRenderingContext(webGLVersion) {\n    if (webGLVersion !== 1 && webGLVersion !== 2) {\n        throw new Error('Cannot get WebGL rendering context, WebGL is disabled.');\n    }\n    const canvas = createCanvas(webGLVersion);\n    canvas.addEventListener('webglcontextlost', (ev) => {\n        ev.preventDefault();\n        delete contexts[webGLVersion];\n    }, false);\n    if (webGLVersion === 1) {\n        return (canvas.getContext('webgl', WEBGL_ATTRIBUTES) ||\n            canvas.getContext('experimental-webgl', WEBGL_ATTRIBUTES));\n    }\n    return canvas.getContext('webgl2', WEBGL_ATTRIBUTES);\n}\n//# sourceMappingURL=canvas_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/canvas_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/clip_gpu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/clip_gpu.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export ClipProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ClipProgram\": () => /* binding */ ClipProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass ClipProgram {\n    constructor(aShape) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        this.userCode = `\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    `;\n    }\n    getCustomSetupFunc(min, max) {\n        return (gpgpu, webGLProgram) => {\n            if (this.minLoc == null) {\n                this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'minVal');\n                this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'maxVal');\n            }\n            gpgpu.gl.uniform1f(this.minLoc, min);\n            gpgpu.gl.uniform1f(this.maxLoc, max);\n        };\n    }\n}\n//# sourceMappingURL=clip_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/clip_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/clip_packed_gpu.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/clip_packed_gpu.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export ClipPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ClipPackedProgram\": () => /* binding */ ClipPackedProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass ClipPackedProgram {\n    constructor(aShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = aShape;\n        this.userCode = `\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    `;\n    }\n    getCustomSetupFunc(min, max) {\n        return (gpgpu, webGLProgram) => {\n            if (this.minLoc == null) {\n                this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'minVal');\n                this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'maxVal');\n            }\n            gpgpu.gl.uniform1f(this.minLoc, min);\n            gpgpu.gl.uniform1f(this.maxLoc, max);\n        };\n    }\n}\n//# sourceMappingURL=clip_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/clip_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/complex_abs_gpu.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/complex_abs_gpu.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export ComplexAbsProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ComplexAbsProgram\": () => /* binding */ ComplexAbsProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass ComplexAbsProgram {\n    constructor(shape) {\n        this.variableNames = ['real', 'imag'];\n        this.outputShape = shape;\n        this.userCode = `\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    `;\n    }\n}\n//# sourceMappingURL=complex_abs_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/complex_abs_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/concat_gpu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/concat_gpu.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export ConcatProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ConcatProgram\": () => /* binding */ ConcatProgram\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass ConcatProgram {\n    // Concats 2d tensors along axis=1. See comments in MathBackendWebGL.concat().\n    constructor(shapes) {\n        this.outputShape = [];\n        this.outputShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutShape(shapes, 1 /* axis */);\n        this.variableNames = shapes.map((_, i) => `T${i}`);\n        const offsets = new Array(shapes.length - 1);\n        offsets[0] = shapes[0][1];\n        for (let i = 1; i < offsets.length; i++) {\n            offsets[i] = offsets[i - 1] + shapes[i][1];\n        }\n        const snippets = [`if (yC < ${offsets[0]}) setOutput(getT0(yR, yC));`];\n        for (let i = 1; i < offsets.length; i++) {\n            const shift = offsets[i - 1];\n            snippets.push(`else if (yC < ${offsets[i]}) ` +\n                `setOutput(getT${i}(yR, yC-${shift}));`);\n        }\n        const lastIndex = offsets.length;\n        const lastShift = offsets[offsets.length - 1];\n        snippets.push(`else setOutput(getT${lastIndex}(yR, yC-${lastShift}));`);\n        this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${snippets.join('\\n        ')}\n      }\n    `;\n    }\n}\n//# sourceMappingURL=concat_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/concat_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/concat_packed_gpu.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/concat_packed_gpu.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export ConcatPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ConcatPackedProgram\": () => /* binding */ ConcatPackedProgram\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _packing_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./packing_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js\");\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nclass ConcatPackedProgram {\n    constructor(shapes, axis) {\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = [];\n        this.outputShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutShape(shapes, axis);\n        const shape = this.outputShape;\n        const rank = shape.length;\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_1__.getCoordsDataType)(rank);\n        const coords = (0,_packing_util__WEBPACK_IMPORTED_MODULE_2__.getChannels)('coords', rank);\n        const channels = ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n        this.variableNames = shapes.map((_, i) => `T${i}`);\n        const offsets = new Array(shapes.length - 1);\n        offsets[0] = shapes[0][axis];\n        for (let i = 1; i < offsets.length; i++) {\n            offsets[i] = offsets[i - 1] + shapes[i][axis];\n        }\n        const channel = channels[axis];\n        const lastChannels = channels.slice(-2);\n        const allChannels = channels.join();\n        let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getT0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n        for (let i = 1; i < offsets.length; i++) {\n            const shift = offsets[i - 1];\n            // Note: the >= comparison below may seem unnecessary given the check\n            // above but is needed to workaround branch execution issues on some\n            // devices. It makes all the conditions exclusive without relying on\n            // execution order.\n            getValueSnippet += `\n        if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n          return getChannel(\n            getT${i}(${shiftedChannels(channels, channel, shift)}),\n            vec2(${shiftedChannels(lastChannels, channel, shift)}));\n        }`;\n        }\n        const lastIndex = offsets.length;\n        const shift = offsets[offsets.length - 1];\n        getValueSnippet += `\n        return getChannel(\n          getT${lastIndex}(${shiftedChannels(channels, channel, shift)}),\n          vec2(${shiftedChannels(lastChannels, channel, shift)}));`;\n        this.userCode = `\n      float getValue(${channels.map(x => 'int ' + x)}) {\n        ${getValueSnippet}\n      }\n\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n        ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n        if (${coords[rank - 1]} < ${shape[rank - 1]}) {\n          result.g = getValue(${coords});\n        }\n\n        ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n        if (${coords[rank - 2]} < ${shape[rank - 2]}) {\n          result.a = getValue(${coords});\n        }\n\n        ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n        if (${coords[rank - 2]} < ${shape[rank - 2]} &&\n            ${coords[rank - 1]} < ${shape[rank - 1]}) {\n          result.b = getValue(${coords});\n        }\n        setOutput(result);\n      }\n    `;\n    }\n}\n/**\n * Return an expression for coordinates into a vector where a given channel\n * will be offset by [shift].\n *\n * @param channels the channels to consider\n * @param channel the channel we want shifted\n * @param shift  the amount to subtract from the channel.\n *\n * @returns a string of the form 'x, y-[shift], z' where any one channel can\n * have the shift applied.\n */\nfunction shiftedChannels(channels, channel, shift) {\n    const channelIdx = channels.indexOf(channel);\n    const res = channels.map((c, idx) => {\n        if (idx === channelIdx) {\n            return `${c} - ${shift}`;\n        }\n        else {\n            return c;\n        }\n    });\n    return res.join();\n}\n//# sourceMappingURL=concat_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/concat_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export Conv2DDerFilterProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Conv2DDerInputProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Conv3DDerFilterProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Conv3DDerInputProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Conv2DDerFilterProgram\": () => /* binding */ Conv2DDerFilterProgram,\n/* harmony export */   \"Conv2DDerInputProgram\": () => /* binding */ Conv2DDerInputProgram,\n/* harmony export */   \"Conv3DDerFilterProgram\": () => /* binding */ Conv3DDerFilterProgram,\n/* harmony export */   \"Conv3DDerInputProgram\": () => /* binding */ Conv3DDerInputProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass Conv2DDerFilterProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.outputShape = convInfo.filterShape;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${convInfo.batchSize}; b++) {\n          for (int yR = 0; yR < ${convInfo.outHeight}; yR++) {\n            int xR = wR + yR * ${strideHeight} - ${padTop};\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${convInfo.outWidth}; yC++) {\n              int xC = wC + yC * ${strideWidth} - ${padLeft};\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              if (${isChannelsLast}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\nclass Conv2DDerInputProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.outputShape = convInfo.inShape;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        const padTop = filterHeight - 1 - convInfo.padInfo.top;\n        const padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        const rowDim = isChannelsLast ? 1 : 2;\n        const colDim = isChannelsLast ? 2 : 3;\n        const channelDim = isChannelsLast ? 3 : 1;\n        this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${channelDim}];\n\n        ivec2 dyCorner = ivec2(coords[${rowDim}], coords[${colDim}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${filterHeight} - 1 - wR;\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${filterWidth} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${convInfo.outChannels}; d2++) {\n\n              if (${isChannelsLast}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\nclass Conv3DDerFilterProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.outputShape = convInfo.filterShape;\n        const strideDepth = convInfo.strideDepth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const padFront = convInfo.padInfo.front;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        this.userCode = `\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${convInfo.batchSize}; b++) {\n          for (int yF = 0; yF < ${convInfo.outDepth}; yF++) {\n            int xF = wF + yF * ${strideDepth} - ${padFront};\n\n            if (xF < 0 || xF >= ${convInfo.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${convInfo.outHeight}; yR++) {\n              int xR = wR + yR * ${strideHeight} - ${padTop};\n\n              if (xR < 0 || xR >= ${convInfo.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${convInfo.outWidth}; yC++) {\n                int xC = wC + yC * ${strideWidth} - ${padLeft};\n\n                if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\nclass Conv3DDerInputProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.outputShape = convInfo.inShape;\n        const filterDepth = convInfo.filterDepth;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const strideDepth = convInfo.strideDepth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const padFront = filterDepth - 1 - convInfo.padInfo.front;\n        const padTop = filterHeight - 1 - convInfo.padInfo.top;\n        const padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        this.userCode = `\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${filterDepth}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${convInfo.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${filterDepth} - 1 - wF;\n\n          for (int wR = 0; wR < ${filterHeight}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${filterHeight} - 1 - wR;\n\n            for (int wC = 0; wC < ${filterWidth}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${filterWidth} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${convInfo.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=conv_backprop_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu_depthwise.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu_depthwise.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! export DepthwiseConv2DDerFilterProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export DepthwiseConv2DDerInputProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DepthwiseConv2DDerFilterProgram\": () => /* binding */ DepthwiseConv2DDerFilterProgram,\n/* harmony export */   \"DepthwiseConv2DDerInputProgram\": () => /* binding */ DepthwiseConv2DDerInputProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass DepthwiseConv2DDerFilterProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'dy'];\n        this.outputShape = convInfo.filterShape;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        const channelMul = convInfo.outChannels / convInfo.inChannels;\n        this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${channelMul} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${convInfo.batchSize}; b++) {\n          for (int yR = 0; yR < ${convInfo.outHeight}; yR++) {\n            int xR = wR + yR * ${strideHeight} - ${padTop};\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${convInfo.outWidth}; yC++) {\n              int xC = wC + yC * ${strideWidth} - ${padLeft};\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\nclass DepthwiseConv2DDerInputProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'W'];\n        this.outputShape = convInfo.inShape;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const padTop = filterHeight - 1 - convInfo.padInfo.top;\n        const padLeft = filterWidth - 1 - convInfo.padInfo.left;\n        const channelMul = convInfo.outChannels / convInfo.inChannels;\n        this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${filterHeight} - 1 - wR;\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${filterWidth} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${channelMul}; dm++) {\n              int d2 = d1 * ${channelMul} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=conv_backprop_gpu_depthwise.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu_depthwise.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export Conv2DProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Conv3DProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Conv2DProgram\": () => /* binding */ Conv2DProgram,\n/* harmony export */   \"Conv3DProgram\": () => /* binding */ Conv3DProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass Conv2DProgram {\n    constructor(convInfo, addBias = false, activation = null, hasPreluActivationWeights = false, hasLeakyreluAlpha = false) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const inputDepthNearestVec4 = Math.floor(convInfo.inChannels / 4) * 4;\n        const inputDepthVec4Remainder = convInfo.inChannels % 4;\n        const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n        const rowDim = isChannelsLast ? 1 : 2;\n        const colDim = isChannelsLast ? 2 : 3;\n        const channelDim = isChannelsLast ? 3 : 1;\n        let activationSnippet = '', applyActivationSnippet = '';\n        if (activation) {\n            if (hasPreluActivationWeights) {\n                activationSnippet = `float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else if (hasLeakyreluAlpha) {\n                activationSnippet = `float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else {\n                activationSnippet = `\n          float activation(float x) {\n            ${activation}\n          }\n        `;\n            }\n            applyActivationSnippet = `result = activation(result);`;\n        }\n        const addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivationWeights) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        if (hasLeakyreluAlpha) {\n            this.variableNames.push('leakyreluAlpha');\n        }\n        this.userCode = `\n      ${activationSnippet}\n\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${channelDim}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${rowDim}], coords[${colDim}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          int xR = xRCorner + wR * ${dilationHeight};\n\n          if (xR < 0 || xR >= ${convInfo.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            int xC = xCCorner + wC * ${dilationWidth};\n\n            if (xC < 0 || xC >= ${convInfo.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${inputDepthNearestVec4}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${isChannelsLast}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${inputDepthVec4Remainder === 1}) {\n\n              if (${isChannelsLast}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${inputDepthNearestVec4}) *\n                    getW(wR, wC, ${inputDepthNearestVec4}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${inputDepthNearestVec4}, xR, xC) *\n                    getW(wR, wC, ${inputDepthNearestVec4}, d2);\n              }\n\n            } else if (${inputDepthVec4Remainder === 2}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${inputDepthNearestVec4}, d2),\n                getW(wR, wC, ${inputDepthNearestVec4} + 1, d2)\n              );\n\n              if (${isChannelsLast}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${inputDepthNearestVec4}),\n                  getX(batch, xR, xC, ${inputDepthNearestVec4} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${inputDepthNearestVec4}, xR, xC),\n                  getX(batch, ${inputDepthNearestVec4} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${inputDepthVec4Remainder === 3}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${inputDepthNearestVec4}, d2),\n                getW(wR, wC, ${inputDepthNearestVec4} + 1, d2),\n                getW(wR, wC, ${inputDepthNearestVec4} + 2, d2)\n              );\n\n              if (${isChannelsLast}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${inputDepthNearestVec4}),\n                  getX(batch, xR, xC, ${inputDepthNearestVec4} + 1),\n                  getX(batch, xR, xC, ${inputDepthNearestVec4} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${inputDepthNearestVec4}, xR, xC),\n                  getX(batch, ${inputDepthNearestVec4} + 1, xR, xC),\n                  getX(batch, ${inputDepthNearestVec4} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${addBiasSnippet}\n        ${applyActivationSnippet}\n        setOutput(result);\n      }\n    `;\n    }\n}\nclass Conv3DProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        const padFront = convInfo.padInfo.front;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        const strideDepth = convInfo.strideDepth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationDepth = convInfo.dilationDepth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const filterDepth = convInfo.filterDepth;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const inputDepthNearestVec4 = Math.floor(convInfo.inChannels / 4) * 4;\n        const inputDepthVec4Remainder = convInfo.inChannels % 4;\n        this.userCode = `\n      const ivec3 strides = ivec3(${strideDepth}, ${strideHeight}, ${strideWidth});\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${filterDepth}; wF++) {\n          int xF = xFCorner + wF * ${dilationDepth};\n\n          if (xF < 0 || xF >= ${convInfo.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${filterHeight}; wR++) {\n            int xR = xRCorner + wR * ${dilationHeight};\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${filterWidth}; wC++) {\n              int xC = xCCorner + wC * ${dilationWidth};\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${inputDepthNearestVec4}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${inputDepthVec4Remainder === 1}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4}) *\n                  getW(wF, wR, wC, ${inputDepthNearestVec4}, d2);\n              } else if (${inputDepthVec4Remainder === 2}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4}),\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${inputDepthNearestVec4}, d2),\n                  getW(wF, wR, wC, ${inputDepthNearestVec4} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${inputDepthVec4Remainder === 3}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4}),\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4} + 1),\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${inputDepthNearestVec4}, d2),\n                  getW(wF, wR, wC, ${inputDepthNearestVec4} + 1, d2),\n                  getW(wF, wR, wC, ${inputDepthNearestVec4} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=conv_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu_depthwise.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu_depthwise.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export DepthwiseConv2DProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DepthwiseConv2DProgram\": () => /* binding */ DepthwiseConv2DProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass DepthwiseConv2DProgram {\n    constructor(convInfo, addBias = false, activation = null, hasPreluActivation = false, hasLeakyReluAlpha = false) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        const xNumRows = convInfo.inHeight;\n        const xNumCols = convInfo.inWidth;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const channelMul = convInfo.outChannels / convInfo.inChannels;\n        let activationSnippet = '', applyActivationSnippet = '';\n        if (activation) {\n            if (hasPreluActivation) {\n                activationSnippet = `float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else if (hasLeakyReluAlpha) {\n                activationSnippet = `float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else {\n                activationSnippet = `\n          float activation(float x) {\n            ${activation}\n          }\n        `;\n            }\n            applyActivationSnippet = `result = activation(result);`;\n        }\n        const addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivation) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        if (hasLeakyReluAlpha) {\n            this.variableNames.push('leakyreluAlpha');\n        }\n        this.userCode = `\n      ${activationSnippet}\n\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${channelMul};\n        int q = d2 - d1 * ${channelMul};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          int xR = xRCorner + wR * ${dilationHeight};\n\n          if (xR < 0 || xR >= ${xNumRows}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            int xC = xCCorner + wC * ${dilationWidth};\n\n            if (xC < 0 || xC >= ${xNumCols}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${addBiasSnippet}\n        ${applyActivationSnippet}\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=conv_gpu_depthwise.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu_depthwise.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_packed_gpu_depthwise.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_packed_gpu_depthwise.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export DepthwiseConvPacked2DProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DepthwiseConvPacked2DProgram\": () => /* binding */ DepthwiseConvPacked2DProgram\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass DepthwiseConvPacked2DProgram {\n    constructor(convInfo, addBias = false, activation = null, hasPreluActivation = false, hasLeakyReluAlpha = false) {\n        this.variableNames = ['x', 'W'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = convInfo.outShape;\n        const xNumRows = convInfo.inHeight;\n        const xNumCols = convInfo.inWidth;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const filterHeight = convInfo.filterHeight;\n        const filterWidth = convInfo.filterWidth;\n        const texelsAcross = filterWidth;\n        let mainLoop = `int xR; int xC; int xCOffset;`;\n        for (let r = 0; r < filterHeight; r++) {\n            for (let c = 0; c < filterWidth; c++) {\n                mainLoop += `\n          vec4 xTexelR${r}C${c * 2} = vec4(0.);\n          vec4 wR${r}C${c} = vec4(0.);\n          vec4 xR${r}C${c} = vec4(0.);`;\n            }\n        }\n        /**\n         * This vectorized implementation works by gathering the values needed for\n         * each output channel's dot product into vec4's and then multiplying them\n         * all together (this happens in the final double for-loop below). Most of\n         * the main loop consists of constructing these vec4's with the minimum\n         * number of texture2D calls, which means making use of all four returned\n         * values from a texture2D call at once.\n         */\n        for (let r = 0; r < filterHeight; r++) {\n            for (let texelC = 0; texelC < texelsAcross; texelC++) {\n                const c = texelC * 2;\n                mainLoop += `\n          xR = xRCorner + ${r * dilationHeight};\n          xC = xCCorner + ${c * dilationWidth};\n        `;\n                if (strideWidth === 1) {\n                    if (c < filterWidth) {\n                        // If padding is odd, the outer texels have to be composed.\n                        if (padLeft % 2 === 1) {\n                            // TODO: Ensure vec4 previous does not result in redundant sample,\n                            // and avoid setting xTexelRC's that exceed the boundary in the\n                            // first place rather than resetting them to vec4(0)).\n                            // To compute xCOffset:\n                            // - If padding is odd, we must add 1 to ensure we ask for an\n                            // even-numbered row.\n                            // - We subtract 2 to access the previous texel.\n                            mainLoop += `\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${xNumRows} && xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                  xTexelR${r}C${c} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${xNumCols}) {\n                    xTexelR${r}C${c}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${r}C${c} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${xNumRows} && xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${xNumCols}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${r}C${c} = vec4(previous.zw, xTexelR${r}C${c}.xy);\n                } else {\n                  xR${r}C${c} = vec4(0, 0, xTexelR${r}C${c}.xy);\n                }\n              `;\n                        }\n                        else {\n                            // Padding is even, so xRC corresponds to a single texel.\n                            mainLoop += `\n                if(xR >= 0 && xR < ${xNumRows} && xC >= 0 && xC < ${xNumCols}) {\n                  xTexelR${r}C${c} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${r}C${c} = vec4(0.);\n                }\n\n                xR${r}C${c} = xTexelR${r}C${c};\n              `;\n                        }\n                        if (c + 1 < filterWidth) {\n                            // If dilation is even, the second entry should match the first\n                            // (either both are composed or both are single samples). But if\n                            // dilation is odd, then the second entry should be the opposite\n                            // of the first (if the first is composed, the second is a single\n                            // sample, and vice versa.)\n                            const nextTexelOffset = padLeft % 2 === 0 ?\n                                _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.nearestLargerEven(dilationWidth) :\n                                dilationWidth;\n                            if ((dilationWidth % 2 === 0 && padLeft % 2 === 1) ||\n                                (dilationWidth % 2 !== 0 && padLeft % 2 !== 1)) {\n                                mainLoop += `\n                  xCOffset = xC + ${padLeft % 2} + ${nextTexelOffset};\n\n                  if(xR >= 0 && xR < ${xNumRows} &&\n                    xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                    xTexelR${r}C${c + 2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `;\n                                // If dilation > 1 then the xRC's will not be able to share any\n                                // values, so each xRC will require two unique calls to getX.\n                                if (dilationWidth > 1) {\n                                    mainLoop += `\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${xNumRows} &&\n                      xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                      xTexelR${r}C${c} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${r}C${c} = vec4(0.);\n                    }\n                  `;\n                                }\n                                mainLoop += `\n                  xR${r}C${c + 1} = vec4(\n                    xTexelR${r}C${c}.zw, xTexelR${r}C${c + 2}.xy);\n                `;\n                            }\n                            else {\n                                mainLoop += `\n                  xCOffset = xC + ${nextTexelOffset};\n\n                  if(xR >= 0 && xR < ${xNumRows} &&\n                    xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                    xTexelR${r}C${c + 2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${r}C${c + 1} = xTexelR${r}C${c + 2};\n                `;\n                            }\n                        }\n                    }\n                }\n                else { // stride > 1\n                    if (c < filterWidth) {\n                        mainLoop += `\n              if(xR >= 0 && xR < ${xNumRows}) {\n            `;\n                        // Depending on whether padLeft is even or odd, we want either the\n                        // xy or zw channels from X texels for xR${r}C${c}. If padLeft is\n                        // even, xR${r}C${c + 1} is simply the zw channels of texels we've\n                        // already sampled. But if padLeft is odd, xR${r}C{$c + 1}.zw will\n                        // need to come from the xy channels of a new texel, hence the `vec4\n                        // final` initialized below.\n                        if (padLeft % 2 === 1) {\n                            mainLoop += `\n                xCOffset = xC + 1 - ${strideWidth};\n                if(xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                  xTexelR${r}C${c} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${r}C${c} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${xNumCols}) {\n                  xTexelR${r}C${c + 2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${r}C${c + 2} = vec4(0.);\n                }\n\n                xR${r}C${c} = vec4(\n                  xTexelR${r}C${c}.zw, xTexelR${r}C${c + 2}.zw);\n              `;\n                            if (c + 1 < filterWidth) {\n                                mainLoop += `\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${strideWidth};\n                  if(xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${r}C${c + 1} = vec4(xTexelR${r}C${c + 2}.xy, final.xy);\n                `;\n                            }\n                        }\n                        else {\n                            mainLoop += `\n                if(xC >= 0 && xC < ${xNumCols}) {\n                  xTexelR${r}C${c} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${r}C${c} = vec4(0.);\n                }\n\n                xCOffset = xC + ${strideWidth};\n                if(xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                  xTexelR${r}C${c + 2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${r}C${c + 2} = vec4(0.);\n                }\n\n                xR${r}C${c} = vec4(\n                  xTexelR${r}C${c}.xy, xTexelR${r}C${c + 2}.xy);\n              `;\n                            if (c + 1 < filterWidth) {\n                                mainLoop += `\n                  xR${r}C${c + 1} = vec4(\n                    xTexelR${r}C${c}.zw, xTexelR${r}C${c + 2}.zw);\n                `;\n                            }\n                        }\n                        mainLoop += `}`;\n                    }\n                }\n                if (c < filterWidth) {\n                    mainLoop += `\n            vec4 wTexelR${r}C${c} = getW(${r}, ${c}, d1, q);\n            wR${r}C${c} = vec4(wTexelR${r}C${c}.xz, wTexelR${r}C${c}.xz);\n          `;\n                    if (c + 1 < filterWidth) {\n                        mainLoop += `\n              vec4 wTexelR${r}C${c + 1} = getW(${r}, ${c + 1}, d1, q);\n              wR${r}C${c + 1} =\n                vec4(wTexelR${r}C${c + 1}.xz, wTexelR${r}C${c + 1}.xz);`;\n                    }\n                }\n            }\n        }\n        for (let r = 0; r < filterHeight; r++) {\n            for (let c = 0; c < filterWidth; c++) {\n                mainLoop += `dotProd += xR${r}C${c} * wR${r}C${c};`;\n            }\n        }\n        let activationSnippet = '', applyActivationSnippet = '';\n        if (activation) {\n            if (hasPreluActivation) {\n                activationSnippet = `vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else if (hasLeakyReluAlpha) {\n                activationSnippet = `vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else {\n                activationSnippet = `vec4 activation(vec4 x) {\n          ${activation}\n        }`;\n            }\n            applyActivationSnippet = `result = activation(result);`;\n        }\n        const addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivation) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        if (hasLeakyReluAlpha) {\n            this.variableNames.push('leakyreluAlpha');\n        }\n        this.userCode = `\n      ${activationSnippet}\n\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${mainLoop}\n\n        vec4 result = dotProd;\n        ${addBiasSnippet}\n        ${applyActivationSnippet}\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=conv_packed_gpu_depthwise.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_packed_gpu_depthwise.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/crop_and_resize_gpu.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/crop_and_resize_gpu.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export CropAndResizeProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CropAndResizeProgram\": () => /* binding */ CropAndResizeProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass CropAndResizeProgram {\n    constructor(imageShape, boxShape, cropSize, method, extrapolationValue) {\n        this.variableNames = ['Image', 'Boxes', 'BoxInd'];\n        this.outputShape = [];\n        const [batch, imageHeight, imageWidth, depth] = imageShape;\n        const [numBoxes,] = boxShape;\n        const [cropHeight, cropWidth] = cropSize;\n        this.outputShape = [numBoxes, cropHeight, cropWidth, depth];\n        const methodId = method === 'bilinear' ? 1 : 0;\n        const [inputHeightFloat, inputWidthFloat] = [`${imageHeight - 1}.0`, `${imageWidth - 1}.0`];\n        const [heightRatio, heightScale, inY] = cropHeight > 1 ?\n            [\n                `${(imageHeight - 1) / (cropHeight - 1)}`,\n                '(y2-y1) * height_ratio',\n                `y1*${inputHeightFloat} + float(y)*(height_scale)`,\n            ] :\n            [\n                '0.0',\n                '0.0',\n                `0.5 * (y1+y2) * ${inputHeightFloat}`,\n            ];\n        const [widthRatio, widthScale, inX] = cropWidth > 1 ?\n            [\n                `${(imageWidth - 1) / (cropWidth - 1)}`,\n                '(x2-x1) * width_ratio',\n                `x1*${inputWidthFloat} + float(x)*(width_scale)`,\n            ] :\n            [\n                '0.0',\n                '0.0',\n                `0.5 * (x1+x2) * ${inputWidthFloat}`,\n            ];\n        // Reference implementation\n        // tslint:disable-next-line:max-line-length\n        // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/crop_and_resize_op_gpu.cu.cc\n        this.userCode = `\n      const float height_ratio = float(${heightRatio});\n      const float width_ratio = float(${widthRatio});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${batch}) {\n          return;\n        }\n\n        float height_scale = ${heightScale};\n        float width_scale = ${widthScale};\n\n        float in_y = ${inY};\n        if( in_y < 0.0 || in_y > ${inputHeightFloat} ) {\n          setOutput(float(${extrapolationValue}));\n          return;\n        }\n        float in_x = ${inX};\n        if( in_x < 0.0 || in_x > ${inputWidthFloat} ) {\n          setOutput(float(${extrapolationValue}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${methodId} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `;\n    }\n}\n//# sourceMappingURL=crop_and_resize_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/crop_and_resize_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/cumsum_gpu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/cumsum_gpu.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export CumSumProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CumSumProgram\": () => /* binding */ CumSumProgram\n/* harmony export */ });\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n;\nclass CumSumProgram {\n    constructor(shape, exclusive, reverse) {\n        this.variableNames = ['x'];\n        this.outputShape = shape;\n        const rank = shape.length;\n        const val = exclusive ? '0.0' : `getX(${getCoords(rank, 'coords')})`;\n        const length = shape[shape.length - 1];\n        let condition = '';\n        let idxString = '';\n        // When exclusive is set, the cumsum op becomes roll op that copies the\n        // value from the previous index based on the direction specified by the\n        // reverse flag.\n        if (exclusive) {\n            condition = reverse ? `end != ${length - 1}` : 'end != 0';\n            idxString = reverse ? 'end + 1' : 'end - 1';\n        }\n        else {\n            condition = reverse ? `end + pow2 < ${length}` : 'end >= pow2';\n            idxString = (reverse ? 'end + pow2' : 'end - pow2');\n        }\n        this.userCode = `\n      uniform float index;\n      void main() {\n        ${(0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(rank)} coords = getOutputCoords();\n        int end = ${getFinalCoord(rank, 'coords')};\n        float val = ${val};\n        int pow2 = int(pow(2.0, index));\n        if (${condition}) {\n          int idx = ${idxString};\n          ${getFinalCoord(rank, 'coords')} = idx;\n          val += getX(${getCoords(rank, 'coords')});\n        }\n        setOutput(val);\n      }\n    `;\n    }\n    getCustomSetupFunc(index) {\n        return (gpgpu, webGLProgram) => {\n            if (this.index == null) {\n                this.index = gpgpu.getUniformLocation(webGLProgram, 'index');\n            }\n            gpgpu.gl.uniform1f(this.index, index);\n        };\n    }\n}\nfunction getCoords(rank, name) {\n    if (rank === 1) {\n        return `${name}`;\n    }\n    else if (rank === 2) {\n        return `${name}.x, ${name}.y`;\n    }\n    else if (rank === 3) {\n        return `${name}.x, ${name}.y, ${name}.z`;\n    }\n    else if (rank === 4) {\n        return `${name}.x, ${name}.y, ${name}.z, ${name}.w`;\n    }\n    else {\n        throw Error(`Cumulative sum for rank ${rank} is not yet supported`);\n    }\n}\nfunction getFinalCoord(rank, name) {\n    if (rank === 1) {\n        return `${name}`;\n    }\n    else if (rank === 2) {\n        return `${name}.y`;\n    }\n    else if (rank === 3) {\n        return `${name}.z`;\n    }\n    else if (rank === 4) {\n        return `${name}.w`;\n    }\n    else {\n        throw Error(`Cumulative sum for rank ${rank} is not yet supported`);\n    }\n}\n//# sourceMappingURL=cumsum_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/cumsum_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/decode_matrix_gpu.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/decode_matrix_gpu.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export DecodeMatrixProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DecodeMatrixProgram\": () => /* binding */ DecodeMatrixProgram\n/* harmony export */ });\n/* harmony import */ var _glsl_version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./glsl_version */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js\");\n/* harmony import */ var _shader_compiler_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shader_compiler_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler_util.js\");\n/* harmony import */ var _tex_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tex_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nclass DecodeMatrixProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = false;\n        this.packedOutput = true;\n        this.outPackingScheme = _tex_util__WEBPACK_IMPORTED_MODULE_0__.PackingScheme.DENSE;\n        const texShape = (0,_tex_util__WEBPACK_IMPORTED_MODULE_0__.getDenseTexShape)(outputShape);\n        const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_1__.getGlslDifferences)();\n        this.outputShape = outputShape;\n        this.userCode = `\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${_shader_compiler_util__WEBPACK_IMPORTED_MODULE_2__.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], outputShape)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${texShape[0]}, ${texShape[1]}));\n        int index = 4 * (resTexRC.x * ${texShape[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${glsl.output} = result;\n      }\n    `;\n    }\n}\n//# sourceMappingURL=decode_matrix_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/decode_matrix_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/decode_matrix_packed_gpu.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/decode_matrix_packed_gpu.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export DecodeMatrixPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DecodeMatrixPackedProgram\": () => /* binding */ DecodeMatrixPackedProgram\n/* harmony export */ });\n/* harmony import */ var _glsl_version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./glsl_version */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js\");\n/* harmony import */ var _shader_compiler_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shader_compiler_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler_util.js\");\n/* harmony import */ var _tex_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tex_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nclass DecodeMatrixPackedProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outPackingScheme = _tex_util__WEBPACK_IMPORTED_MODULE_0__.PackingScheme.DENSE;\n        const texShape = (0,_tex_util__WEBPACK_IMPORTED_MODULE_0__.getDenseTexShape)(outputShape);\n        const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_1__.getGlslDifferences)();\n        this.outputShape = outputShape;\n        this.userCode = `\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${_shader_compiler_util__WEBPACK_IMPORTED_MODULE_2__.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], outputShape)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${texShape[0]}, ${texShape[1]}));\n        int index = 4 * (resTexRC.x * ${texShape[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${glsl.output} = result;\n      }\n    `;\n    }\n}\n//# sourceMappingURL=decode_matrix_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/decode_matrix_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/depth_to_space_gpu.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/depth_to_space_gpu.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export DepthToSpaceProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DepthToSpaceProgram\": () => /* binding */ DepthToSpaceProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass DepthToSpaceProgram {\n    constructor(outputShape, blockSize, dataFormat) {\n        this.variableNames = ['x'];\n        this.outputShape = [];\n        this.outputShape = outputShape;\n        this.blockSize = blockSize;\n        this.dataFormat = dataFormat;\n        this.userCode = `\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${blockSize};\n      int offset_h = imod(h, ${blockSize});\n      int in_w = w / ${blockSize};\n      int offset_w = imod(w, ${blockSize});\n      int offset_d = (offset_h * ${blockSize} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `;\n    }\n    getHeightCoordString() {\n        if (this.dataFormat === 'NHWC') {\n            return `coords[1]`;\n        }\n        else {\n            return `coords[2]`;\n        }\n    }\n    getWidthCoordString() {\n        if (this.dataFormat === 'NHWC') {\n            return `coords[2]`;\n        }\n        else {\n            return `coords[3]`;\n        }\n    }\n    getDepthCoordString() {\n        if (this.dataFormat === 'NHWC') {\n            return `coords[3]`;\n        }\n        else {\n            return `coords[1]`;\n        }\n    }\n    getOutputDepthSize() {\n        if (this.dataFormat === 'NHWC') {\n            return this.outputShape[3];\n        }\n        else {\n            return this.outputShape[1];\n        }\n    }\n    getInputSamplingString() {\n        if (this.dataFormat === 'NHWC') {\n            return `getX(b, in_h, in_w, in_d)`;\n        }\n        else {\n            return `getX(b, in_d, in_h, in_w)`;\n        }\n    }\n}\n//# sourceMappingURL=depth_to_space_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/depth_to_space_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/diag_gpu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/diag_gpu.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export DiagProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DiagProgram\": () => /* binding */ DiagProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass DiagProgram {\n    constructor(size) {\n        this.variableNames = ['X'];\n        this.outputShape = [size, size];\n        this.userCode = `\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=diag_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/diag_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/dilation_gpu.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/dilation_gpu.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export Dilation2DProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Dilation2DProgram\": () => /* binding */ Dilation2DProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass Dilation2DProgram {\n    constructor(convInfo) {\n        this.variableNames = ['x', 'W'];\n        this.outputShape = convInfo.outShape;\n        const { inHeight, inWidth, padInfo, strideHeight, strideWidth, filterHeight, filterWidth, dilationHeight, dilationWidth } = convInfo;\n        const { top: padTop, left: padLeft } = padInfo;\n        this.userCode = `\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${filterHeight}; h++) {\n          int hIn = hBeg + h * ${dilationHeight};\n\n          if (hIn >= 0 && hIn < ${inHeight}) {\n            for (int w = 0; w < ${filterWidth}; w++) {\n              int wIn = wBeg + w * ${dilationWidth};\n\n              if (wIn >= 0 && wIn < ${inWidth}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=dilation_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/dilation_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_float_gpu.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_float_gpu.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export EncodeFloatProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EncodeFloatProgram\": () => /* binding */ EncodeFloatProgram\n/* harmony export */ });\n/* harmony import */ var _glsl_version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./glsl_version */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js\");\n/* harmony import */ var _shader_compiler_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shader_compiler_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler_util.js\");\n/* harmony import */ var _tex_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tex_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nclass EncodeFloatProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.outTexUsage = _tex_util__WEBPACK_IMPORTED_MODULE_0__.TextureUsage.DOWNLOAD;\n        const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_1__.getGlslDifferences)();\n        this.outputShape = outputShape;\n        this.userCode = `\n      ${_shader_compiler_util__WEBPACK_IMPORTED_MODULE_2__.ENCODE_FLOAT_SNIPPET}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${glsl.output} = encode_float(x);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=encode_float_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_float_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_float_packed_gpu.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_float_packed_gpu.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export EncodeFloatPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EncodeFloatPackedProgram\": () => /* binding */ EncodeFloatPackedProgram\n/* harmony export */ });\n/* harmony import */ var _glsl_version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./glsl_version */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js\");\n/* harmony import */ var _shader_compiler_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shader_compiler_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler_util.js\");\n/* harmony import */ var _tex_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tex_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nclass EncodeFloatPackedProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = false;\n        this.outTexUsage = _tex_util__WEBPACK_IMPORTED_MODULE_0__.TextureUsage.DOWNLOAD;\n        const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_1__.getGlslDifferences)();\n        this.outputShape = outputShape;\n        this.userCode = `\n      ${_shader_compiler_util__WEBPACK_IMPORTED_MODULE_2__.ENCODE_FLOAT_SNIPPET}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${glsl.output} = encode_float(x);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=encode_float_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_float_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_matrix_gpu.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_matrix_gpu.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export EncodeMatrixProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EncodeMatrixProgram\": () => /* binding */ EncodeMatrixProgram\n/* harmony export */ });\n/* harmony import */ var _glsl_version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./glsl_version */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js\");\n/* harmony import */ var _shader_compiler_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shader_compiler_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nclass EncodeMatrixProgram {\n    constructor(outputShape, texShape, inputIsUnsignedByte = false) {\n        this.variableNames = ['A'];\n        const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_0__.getGlslDifferences)();\n        const [height, width] = texShape;\n        this.outputShape = outputShape;\n        let output = `result`;\n        if (inputIsUnsignedByte) {\n            output = `floor(result * 255. + 0.5)`;\n        }\n        this.userCode = `\n      ${_shader_compiler_util__WEBPACK_IMPORTED_MODULE_1__.getFlatIndexFrom3D(outputShape)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${width};\n        int c = imod(flatIndex, ${width});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${width}.0, ${height}.0);\n        vec4 values = ${glsl.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${glsl.output} = vec4(${output}, 0., 0., 0.);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=encode_matrix_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_matrix_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_matrix_packed_gpu.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_matrix_packed_gpu.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export EncodeMatrixPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EncodeMatrixPackedProgram\": () => /* binding */ EncodeMatrixPackedProgram\n/* harmony export */ });\n/* harmony import */ var _glsl_version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./glsl_version */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js\");\n/* harmony import */ var _shader_compiler_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shader_compiler_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/*\nThis is how the shader encodes a tensor with shape = [2, 3, 5]\n(indices are [batch, row, col]).\n\n000|001   002|003   004|xxx   020|021   022|023   024|xxx\n-------   -------   -------   -------   -------   -------\n010|011   012|013   014|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n\n100|101   102|103   104|xxx   120|121   122|123   124|xxx\n-------   -------   -------   -------   -------   -------\n110|111   112|113   114|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n\nSingle texels contain only values from the same batch, and from adjacent rows\nand columns.\n */\nclass EncodeMatrixPackedProgram {\n    constructor(outputShape, texShape, inputIsUnsignedByte = false) {\n        this.variableNames = ['A'];\n        this.packedInputs = false;\n        this.packedOutput = true;\n        const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_0__.getGlslDifferences)();\n        const [height, width] = texShape;\n        this.outputShape = outputShape;\n        let mainLoop = '';\n        let output = 'result';\n        if (inputIsUnsignedByte) {\n            output = 'floor(result * 255. + 0.5)';\n        }\n        for (let row = 0; row <= 1; row++) {\n            for (let col = 0; col <= 1; col++) {\n                const channel = row * 2 + col;\n                mainLoop += `\n          localCoords = coords;\n          if(localCoords[2] + ${col} < ${outputShape[2]}) {\n            localCoords[2] += ${col};\n            if(localCoords[1] + ${row} < ${outputShape[1]}) {\n              localCoords[1] += ${row};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${width};\n              c = imod(flatIndex, ${width});\n              uv = (vec2(c, r) + halfCR) / vec2(${width}.0, ${height}.0);\n              values = ${glsl.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${channel}] = values[0];\n              } else if(offset == 1) {\n                result[${channel}] = values[1];\n              } else if(offset == 2) {\n                result[${channel}] = values[2];\n              } else {\n                result[${channel}] = values[3];\n              }\n            }\n          }\n        `;\n            }\n        }\n        this.userCode = `\n      ${_shader_compiler_util__WEBPACK_IMPORTED_MODULE_1__.getFlatIndexFrom3D(outputShape)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${mainLoop}\n\n        ${glsl.output} = ${output};\n      }\n    `;\n    }\n}\n//# sourceMappingURL=encode_matrix_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_matrix_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/fft_gpu.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/fft_gpu.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export FFTProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FFTProgram\": () => /* binding */ FFTProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass FFTProgram {\n    constructor(component, inputShape, inverse) {\n        this.variableNames = ['real', 'imag'];\n        const innerDim = inputShape[1];\n        this.outputShape = inputShape;\n        const exponentMultiplierSnippet = inverse ? `2.0 * ${Math.PI}` : `-2.0 * ${Math.PI}`;\n        const resultDenominator = inverse ? `${innerDim}.0` : '1.0';\n        let opString;\n        if (component === 'real') {\n            opString = 'return real * expR - imag * expI;';\n        }\n        else if (component === 'imag') {\n            opString = 'return real * expI + imag * expR;';\n        }\n        else {\n            throw new Error(`FFT component must be either \"real\" or \"imag\", got ${component}.`);\n        }\n        this.userCode = `\n      const float exponentMultiplier = ${exponentMultiplierSnippet};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${opString}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${innerDim});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${innerDim}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${resultDenominator};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=fft_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/fft_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/fill_gpu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/fill_gpu.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export FillProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FillProgram\": () => /* binding */ FillProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass FillProgram {\n    constructor(shape, value) {\n        this.outputShape = [];\n        this.variableNames = ['x'];\n        this.outputShape = shape;\n        this.userCode = `\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    `;\n    }\n    getCustomSetupFunc(value) {\n        return (gpgpu, webGLProgram) => {\n            if (this.valueLoc == null) {\n                this.valueLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'value');\n            }\n            gpgpu.gl.uniform1f(this.valueLoc, value);\n        };\n    }\n}\n//# sourceMappingURL=fill_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/fill_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/flags_webgl.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/flags_webgl.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _webgl_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webgl_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst ENV = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)();\n/**\n * This file contains WebGL-specific flag registrations.\n */\n/**\n * True if WebGL is supported.\n */\nENV.registerFlag('HAS_WEBGL', () => ENV.getNumber('WEBGL_VERSION') > 0);\n/** 0: No WebGL, 1: WebGL 1.0, 2: WebGL 2.0. */\nENV.registerFlag('WEBGL_VERSION', () => {\n    if ((0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.isWebGLVersionEnabled)(2)) {\n        return 2;\n    }\n    else if ((0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.isWebGLVersionEnabled)(1)) {\n        return 1;\n    }\n    return 0;\n});\n/** Whether to check for numerical representation problems. */\nENV.registerFlag('WEBGL_CHECK_NUMERICAL_PROBLEMS', () => false);\nENV.registerFlag('WEBGL_BUFFER_SUPPORTED', () => ENV.get('WEBGL_VERSION') === 2);\n/** Whether the WebGL backend will sometimes forward ops to the CPU. */\nENV.registerFlag('WEBGL_CPU_FORWARD', () => true);\n/** Whether the WebGL backend will always use f16 textures for rendering. */\nENV.registerFlag('WEBGL_FORCE_F16_TEXTURES', () => false);\n/** Whether to turn all packing related flags on. */\nENV.registerFlag('WEBGL_PACK', () => ENV.getBool('HAS_WEBGL'));\n/** Whether we will pack the batchnormalization op. */\nENV.registerFlag('WEBGL_PACK_NORMALIZATION', () => ENV.getBool('WEBGL_PACK'));\n/** Whether we will pack the clip op. */\nENV.registerFlag('WEBGL_PACK_CLIP', () => ENV.getBool('WEBGL_PACK'));\n/** Whether we will pack the depthwise conv op. */\n// TODO: https://github.com/tensorflow/tfjs/issues/1679\nENV.registerFlag('WEBGL_PACK_DEPTHWISECONV', () => false);\n/** Whether we will pack binary ops. */\nENV.registerFlag('WEBGL_PACK_BINARY_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n/** Whether we will pack unary ops. */\nENV.registerFlag('WEBGL_PACK_UNARY_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n/** Whether we will pack array ops. */\nENV.registerFlag('WEBGL_PACK_ARRAY_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n/** Whether we will pack image ops. */\nENV.registerFlag('WEBGL_PACK_IMAGE_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n/** Whether we will pack reduce ops. */\nENV.registerFlag('WEBGL_PACK_REDUCE', () => ENV.getBool('WEBGL_PACK'));\n/** Whether packed WebGL kernels lazily unpack their outputs. */\nENV.registerFlag('WEBGL_LAZILY_UNPACK', () => ENV.getBool('WEBGL_PACK'));\n/** Whether we will use the im2col algorithm to speed up convolutions. */\nENV.registerFlag('WEBGL_CONV_IM2COL', () => ENV.getBool('WEBGL_PACK'));\n/** The maximum texture dimension. */\nENV.registerFlag('WEBGL_MAX_TEXTURE_SIZE', () => (0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.getWebGLMaxTextureSize)(ENV.getNumber('WEBGL_VERSION')));\n/** The maximum texture dimension. */\nENV.registerFlag('WEBGL_MAX_TEXTURES_IN_SHADER', () => (0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.getMaxTexturesInShader)(ENV.getNumber('WEBGL_VERSION')));\n/**\n * The disjoint_query_timer extension version.\n * 0: disabled, 1: EXT_disjoint_timer_query, 2:\n * EXT_disjoint_timer_query_webgl2.\n * In Firefox with WebGL 2.0,\n * EXT_disjoint_timer_query_webgl2 is not available, so we must use the\n * WebGL 1.0 extension.\n */\nENV.registerFlag('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION', () => {\n    const webGLVersion = ENV.getNumber('WEBGL_VERSION');\n    if (webGLVersion === 0) {\n        return 0;\n    }\n    return (0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.getWebGLDisjointQueryTimerVersion)(webGLVersion);\n});\n/**\n * Whether the timer object from the disjoint_query_timer extension gives\n * timing information that is reliable.\n */\nENV.registerFlag('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE', () => ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0 &&\n    !_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.device_util.isMobile());\n/**\n * Whether the device is physically capable of rendering to float32 textures.\n */\nENV.registerFlag('WEBGL_RENDER_FLOAT32_CAPABLE', () => (0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.isCapableOfRenderingToFloatTexture)(ENV.getNumber('WEBGL_VERSION')));\n/**\n * Whether rendering to float32 textures is enabled. If disabled, renders to\n * float16 textures.\n */\nENV.registerFlag('WEBGL_RENDER_FLOAT32_ENABLED', () => {\n    return ENV.getBool('WEBGL_FORCE_F16_TEXTURES') ?\n        false :\n        ENV.getBool('WEBGL_RENDER_FLOAT32_CAPABLE');\n});\n/**\n * Whether downloading float textures is enabled (16 or 32 bit). If disabled,\n * uses IEEE 754 encoding of the float32 values to 4 uint8 when downloading.\n */\nENV.registerFlag('WEBGL_DOWNLOAD_FLOAT_ENABLED', () => (0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.isDownloadFloatTextureEnabled)(ENV.getNumber('WEBGL_VERSION')));\n/** Whether the fence API is available. */\nENV.registerFlag('WEBGL_FENCE_API_ENABLED', () => (0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.isWebGLFenceEnabled)(ENV.getNumber('WEBGL_VERSION')));\n/**\n * Tensors with size <= than this will be uploaded as uniforms, not textures.\n */\nENV.registerFlag('WEBGL_SIZE_UPLOAD_UNIFORM', () => {\n    // Use uniform uploads only when 32bit floats are supported. In\n    // 16bit\n    // environments there are problems with comparing a 16bit texture value\n    // with a 32bit uniform value.\n    const useUniforms = ENV.getBool('WEBGL_RENDER_FLOAT32_ENABLED');\n    return useUniforms ? 4 : 0;\n});\n/**\n * If the total number of bytes allocated on the GPU is greater than this\n * number, we will aggressively delete textures upon disposal with\n * gl.deleteMatrixTexture, rather than making them available for reuse.\n *\n * Default value -1 indicates that we will never aggressively delete textures.\n */\nENV.registerFlag('WEBGL_DELETE_TEXTURE_THRESHOLD', () => {\n    return -1;\n}, threshold => {\n    if (threshold < 0 && threshold !== -1) {\n        throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never ` +\n            `delete) or at least 0, but got ${threshold}.`);\n    }\n});\n/**\n * Trigger a manual GL command flush if the threshold of time has passed since\n * previous Kernel execution. This can be useful for Andorid device where GL\n * command flush are delayed un til the end of javascript task. This value is\n * measured in millisecond. Typically you want to set this value to close to 1.\n *\n * Default value -1 indicates that we will not enforce manual flush and depend\n * on system default flush schedule.\n */\nENV.registerFlag('WEBGL_FLUSH_THRESHOLD', () => {\n    return -1;\n}, threshold => {\n    if (threshold < 0 && threshold !== -1) {\n        throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never ` +\n            `manual flush) or at least 0, but got ${threshold}.`);\n    }\n});\n//# sourceMappingURL=flags_webgl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/flags_webgl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/flip_left_right_gpu.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/flip_left_right_gpu.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export FlipLeftRightProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FlipLeftRightProgram\": () => /* binding */ FlipLeftRightProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass FlipLeftRightProgram {\n    constructor(imageShape) {\n        this.variableNames = ['Image'];\n        this.outputShape = [];\n        const imageWidth = imageShape[2];\n        this.outputShape = imageShape;\n        this.userCode = `\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${imageWidth} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${imageWidth}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `;\n    }\n}\n//# sourceMappingURL=flip_left_right_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/flip_left_right_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/gather_gpu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/gather_gpu.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export GatherProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GatherProgram\": () => /* binding */ GatherProgram\n/* harmony export */ });\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass GatherProgram {\n    constructor(aShape, outputShape) {\n        this.variableNames = ['A', 'indices'];\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(this.rank);\n        const sourceCoords = getSourceCoords(aShape, 2);\n        this.userCode = `\n      void main() {\n        ${dtype} resRC = getOutputCoords();\n        setOutput(getA(${sourceCoords}));\n      }\n    `;\n    }\n}\n// The input and output are always flattened into rank 4 tensors.\nfunction getSourceCoords(aShape, axis) {\n    const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    const sourceCoords = [];\n    for (let i = 0; i < aShape.length; i++) {\n        if (i === 2) {\n            sourceCoords.push('int(getIndices(resRC.x, resRC.z))');\n        }\n        else {\n            sourceCoords.push(`${currentCoords[i]}`);\n        }\n    }\n    return sourceCoords.join();\n}\n//# sourceMappingURL=gather_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/gather_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/gather_nd_gpu.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/gather_nd_gpu.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export GatherNDProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GatherNDProgram\": () => /* binding */ GatherNDProgram\n/* harmony export */ });\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n;\nclass GatherNDProgram {\n    constructor(sliceDim, strides, shape) {\n        this.sliceDim = sliceDim;\n        this.strides = strides;\n        this.variableNames = ['x', 'indices'];\n        this.outputShape = shape;\n        const stridesType = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(strides.length);\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(shape.length);\n        const strideString = this.sliceDim > 1 ? 'strides[j]' : 'strides';\n        this.userCode = `\n        ${stridesType} strides = ${stridesType}(${this.strides});\n         void main() {\n          ${dtype} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${strideString};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `;\n    }\n}\n//# sourceMappingURL=gather_nd_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/gather_nd_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export getGlslDifferences [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getGlslDifferences\": () => /* binding */ getGlslDifferences\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction getGlslDifferences() {\n    let version;\n    let attribute;\n    let varyingVs;\n    let varyingFs;\n    let texture2D;\n    let output;\n    let defineOutput;\n    let defineSpecialNaN;\n    let defineSpecialInf;\n    let defineRound;\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_VERSION') === 2) {\n        version = '#version 300 es';\n        attribute = 'in';\n        varyingVs = 'out';\n        varyingFs = 'in';\n        texture2D = 'texture';\n        output = 'outputColor';\n        defineOutput = 'out vec4 outputColor;';\n        // Use custom isnan definition to work across differences between\n        // implementations on various platforms. While this should happen in ANGLE\n        // we still see differences between android and windows (on chrome) when\n        // using isnan directly.\n        defineSpecialNaN = `\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    `;\n        // In webgl 2 we do not need to specify a custom isinf so there is no\n        // need for a special INFINITY constant.\n        defineSpecialInf = ``;\n        defineRound = `\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    `;\n    }\n    else {\n        version = '';\n        attribute = 'attribute';\n        varyingVs = 'varying';\n        varyingFs = 'varying';\n        texture2D = 'texture2D';\n        output = 'gl_FragColor';\n        defineOutput = '';\n        // WebGL1 has no built in isnan so we define one here.\n        defineSpecialNaN = `\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    `;\n        defineSpecialInf = `\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    `;\n        defineRound = `\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    `;\n    }\n    return {\n        version,\n        attribute,\n        varyingVs,\n        varyingFs,\n        texture2D,\n        output,\n        defineOutput,\n        defineSpecialNaN,\n        defineSpecialInf,\n        defineRound\n    };\n}\n//# sourceMappingURL=glsl_version.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_context.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_context.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export GPGPUContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! export linearSearchLastTrue [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GPGPUContext\": () => /* binding */ GPGPUContext,\n/* harmony export */   \"linearSearchLastTrue\": () => /* binding */ linearSearchLastTrue\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _canvas_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./canvas_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/canvas_util.js\");\n/* harmony import */ var _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./gpgpu_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_util.js\");\n/* harmony import */ var _tex_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tex_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js\");\n/* harmony import */ var _webgl_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./webgl_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\nclass GPGPUContext {\n    constructor(gl) {\n        this.outputTexture = null;\n        this.program = null;\n        this.disposed = false;\n        this.vertexAttrsAreBound = false;\n        this.itemsToPoll = [];\n        const glVersion = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_VERSION');\n        if (gl != null) {\n            this.gl = gl;\n            (0,_canvas_util__WEBPACK_IMPORTED_MODULE_1__.setWebGLContext)(glVersion, gl);\n        }\n        else {\n            this.gl = (0,_canvas_util__WEBPACK_IMPORTED_MODULE_1__.getWebGLContext)(glVersion);\n        }\n        // WebGL 2.0 enables texture floats without an extension.\n        let COLOR_BUFFER_FLOAT = 'WEBGL_color_buffer_float';\n        const COLOR_BUFFER_HALF_FLOAT = 'EXT_color_buffer_half_float';\n        if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_VERSION') === 1) {\n            const TEXTURE_FLOAT = 'OES_texture_float';\n            const TEXTURE_HALF_FLOAT = 'OES_texture_half_float';\n            this.textureFloatExtension =\n                _webgl_util__WEBPACK_IMPORTED_MODULE_2__.getExtensionOrThrow(this.gl, TEXTURE_FLOAT);\n            if (_webgl_util__WEBPACK_IMPORTED_MODULE_2__.hasExtension(this.gl, TEXTURE_HALF_FLOAT)) {\n                this.textureHalfFloatExtension =\n                    _webgl_util__WEBPACK_IMPORTED_MODULE_2__.getExtensionOrThrow(this.gl, TEXTURE_HALF_FLOAT);\n            }\n            else if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().get('WEBGL_FORCE_F16_TEXTURES')) {\n                throw new Error('GL context does not support half float textures, yet the ' +\n                    'environment flag WEBGL_FORCE_F16_TEXTURES is set to true.');\n            }\n            this.colorBufferFloatExtension = this.gl.getExtension(COLOR_BUFFER_FLOAT);\n            if (_webgl_util__WEBPACK_IMPORTED_MODULE_2__.hasExtension(this.gl, COLOR_BUFFER_HALF_FLOAT)) {\n                this.colorBufferHalfFloatExtension =\n                    _webgl_util__WEBPACK_IMPORTED_MODULE_2__.getExtensionOrThrow(this.gl, COLOR_BUFFER_HALF_FLOAT);\n            }\n            else if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().get('WEBGL_FORCE_F16_TEXTURES')) {\n                throw new Error('GL context does not support color renderable half floats, yet ' +\n                    'the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.');\n            }\n        }\n        else {\n            COLOR_BUFFER_FLOAT = 'EXT_color_buffer_float';\n            if (_webgl_util__WEBPACK_IMPORTED_MODULE_2__.hasExtension(this.gl, COLOR_BUFFER_FLOAT)) {\n                this.colorBufferFloatExtension =\n                    this.gl.getExtension(COLOR_BUFFER_FLOAT);\n            }\n            else if (_webgl_util__WEBPACK_IMPORTED_MODULE_2__.hasExtension(this.gl, COLOR_BUFFER_HALF_FLOAT)) {\n                this.colorBufferHalfFloatExtension =\n                    this.gl.getExtension(COLOR_BUFFER_HALF_FLOAT);\n            }\n            else {\n                throw new Error('GL context does not support color renderable floats');\n            }\n        }\n        this.vertexBuffer = _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.createVertexBuffer(this.gl);\n        this.indexBuffer = _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.createIndexBuffer(this.gl);\n        this.framebuffer = _webgl_util__WEBPACK_IMPORTED_MODULE_2__.createFramebuffer(this.gl);\n        this.textureConfig =\n            _tex_util__WEBPACK_IMPORTED_MODULE_4__.getTextureConfig(this.gl, this.textureHalfFloatExtension);\n    }\n    get debug() {\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('DEBUG');\n    }\n    dispose() {\n        if (this.disposed) {\n            return;\n        }\n        if (this.program != null) {\n            console.warn('Disposing a GPGPUContext that still has a bound WebGLProgram.' +\n                ' This is probably a resource leak, delete the program with ' +\n                'GPGPUContext.deleteProgram before disposing.');\n        }\n        if (this.outputTexture != null) {\n            console.warn('Disposing a GPGPUContext that still has a bound output matrix ' +\n                'texture.  This is probably a resource leak, delete the output ' +\n                'matrix texture with GPGPUContext.deleteMatrixTexture before ' +\n                'disposing.');\n        }\n        const gl = this.gl;\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(gl, () => gl.finish());\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(gl, () => gl.bindFramebuffer(gl.FRAMEBUFFER, null));\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(gl, () => gl.deleteFramebuffer(this.framebuffer));\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(gl, () => gl.bindBuffer(gl.ARRAY_BUFFER, null));\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(gl, () => gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null));\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(gl, () => gl.deleteBuffer(this.indexBuffer));\n        this.disposed = true;\n    }\n    createFloat32MatrixTexture(rows, columns) {\n        this.throwIfDisposed();\n        return _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.createFloat32MatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n    createFloat16MatrixTexture(rows, columns) {\n        this.throwIfDisposed();\n        return _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.createFloat16MatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n    createUnsignedBytesMatrixTexture(rows, columns) {\n        this.throwIfDisposed();\n        return _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.createUnsignedBytesMatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n    uploadPixelDataToTexture(texture, pixels) {\n        this.throwIfDisposed();\n        _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.uploadPixelDataToTexture(this.gl, texture, pixels);\n    }\n    uploadDenseMatrixToTexture(texture, width, height, data) {\n        this.throwIfDisposed();\n        _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.uploadDenseMatrixToTexture(this.gl, texture, width, height, data, this.textureConfig);\n    }\n    createFloat16PackedMatrixTexture(rows, columns) {\n        this.throwIfDisposed();\n        return _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.createFloat16PackedMatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n    createPackedMatrixTexture(rows, columns) {\n        this.throwIfDisposed();\n        return _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.createPackedMatrixTexture(this.gl, rows, columns, this.textureConfig);\n    }\n    deleteMatrixTexture(texture) {\n        this.throwIfDisposed();\n        if (this.outputTexture === texture) {\n            _webgl_util__WEBPACK_IMPORTED_MODULE_2__.unbindColorTextureFromFramebuffer(this.gl, this.framebuffer);\n            this.outputTexture = null;\n        }\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(this.gl, () => this.gl.deleteTexture(texture));\n    }\n    downloadByteEncodedFloatMatrixFromOutputTexture(texture, rows, columns) {\n        return this.downloadMatrixDriver(texture, () => _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.downloadByteEncodedFloatMatrixFromOutputTexture(this.gl, rows, columns, this.textureConfig));\n    }\n    downloadPackedMatrixFromBuffer(buffer, batch, rows, columns, physicalRows, physicalCols) {\n        return _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.downloadPackedMatrixFromBuffer(this.gl, buffer, batch, rows, columns, physicalRows, physicalCols, this.textureConfig);\n    }\n    downloadFloat32MatrixFromBuffer(buffer, size) {\n        return _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.downloadFloat32MatrixFromBuffer(this.gl, buffer, size);\n    }\n    createBufferFromTexture(texture, rows, columns) {\n        this.bindTextureToFrameBuffer(texture);\n        const result = _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.createBufferFromOutputTexture(this.gl, rows, columns, this.textureConfig);\n        this.unbindTextureToFrameBuffer();\n        return result;\n    }\n    createAndWaitForFence() {\n        const fenceContext = this.createFence(this.gl);\n        return this.pollFence(fenceContext);\n    }\n    createFence(gl) {\n        let query;\n        let isFencePassed;\n        if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_FENCE_API_ENABLED')) {\n            const gl2 = gl;\n            const sync = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n            gl.flush();\n            isFencePassed = () => {\n                const status = gl2.clientWaitSync(sync, 0, 0);\n                return status === gl2.ALREADY_SIGNALED ||\n                    status === gl2.CONDITION_SATISFIED;\n            };\n            query = sync;\n        }\n        else if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n            query = this.beginQuery();\n            this.endQuery();\n            isFencePassed = () => this.isQueryAvailable(query, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION'));\n        }\n        else {\n            // If we have no way to fence, return true immediately. This will fire in\n            // WebGL 1.0 when there is no disjoint query timer. In this case, because\n            // the fence passes immediately, we'll immediately ask for a download of\n            // the texture, which will cause the UI thread to hang.\n            isFencePassed = () => true;\n        }\n        return { query, isFencePassed };\n    }\n    downloadMatrixFromPackedTexture(texture, physicalRows, physicalCols) {\n        return this.downloadMatrixDriver(texture, () => _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.downloadMatrixFromPackedOutputTexture(this.gl, physicalRows, physicalCols));\n    }\n    createProgram(fragmentShaderSource) {\n        this.throwIfDisposed();\n        const gl = this.gl;\n        const fragmentShader = _webgl_util__WEBPACK_IMPORTED_MODULE_2__.createFragmentShader(gl, fragmentShaderSource);\n        const vertexShader = _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.createVertexShader(gl);\n        const program = _webgl_util__WEBPACK_IMPORTED_MODULE_2__.createProgram(gl);\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(gl, () => gl.attachShader(program, vertexShader));\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(gl, () => gl.attachShader(program, fragmentShader));\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.linkProgram(gl, program);\n        if (this.debug) {\n            _webgl_util__WEBPACK_IMPORTED_MODULE_2__.validateProgram(gl, program);\n        }\n        if (!this.vertexAttrsAreBound) {\n            this.setProgram(program);\n            this.vertexAttrsAreBound = _gpgpu_util__WEBPACK_IMPORTED_MODULE_3__.bindVertexProgramAttributeStreams(gl, this.program, this.vertexBuffer);\n        }\n        return program;\n    }\n    deleteProgram(program) {\n        this.throwIfDisposed();\n        if (program === this.program) {\n            this.program = null;\n        }\n        if (program != null) {\n            _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(this.gl, () => this.gl.deleteProgram(program));\n        }\n    }\n    setProgram(program) {\n        this.throwIfDisposed();\n        this.program = program;\n        if ((this.program != null) && this.debug) {\n            _webgl_util__WEBPACK_IMPORTED_MODULE_2__.validateProgram(this.gl, this.program);\n        }\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(this.gl, () => this.gl.useProgram(program));\n    }\n    getUniformLocation(program, uniformName, shouldThrow = true) {\n        this.throwIfDisposed();\n        if (shouldThrow) {\n            return _webgl_util__WEBPACK_IMPORTED_MODULE_2__.getProgramUniformLocationOrThrow(this.gl, program, uniformName);\n        }\n        else {\n            return _webgl_util__WEBPACK_IMPORTED_MODULE_2__.getProgramUniformLocation(this.gl, program, uniformName);\n        }\n    }\n    getAttributeLocation(program, attribute) {\n        this.throwIfDisposed();\n        return _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(this.gl, () => this.gl.getAttribLocation(program, attribute));\n    }\n    getUniformLocationNoThrow(program, uniformName) {\n        this.throwIfDisposed();\n        return this.gl.getUniformLocation(program, uniformName);\n    }\n    setInputMatrixTexture(inputMatrixTexture, uniformLocation, textureUnit) {\n        this.throwIfDisposed();\n        this.throwIfNoProgram();\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.bindTextureToProgramUniformSampler(this.gl, inputMatrixTexture, uniformLocation, textureUnit);\n    }\n    setOutputMatrixTexture(outputMatrixTexture, rows, columns) {\n        this.setOutputMatrixTextureDriver(outputMatrixTexture, columns, rows);\n    }\n    setOutputPackedMatrixTexture(outputPackedMatrixTexture, rows, columns) {\n        this.throwIfDisposed();\n        const [width, height] = _tex_util__WEBPACK_IMPORTED_MODULE_4__.getPackedMatrixTextureShapeWidthHeight(rows, columns);\n        this.setOutputMatrixTextureDriver(outputPackedMatrixTexture, width, height);\n    }\n    setOutputMatrixWriteRegion(startRow, numRows, startColumn, numColumns) {\n        this.setOutputMatrixWriteRegionDriver(startColumn, startRow, numColumns, numRows);\n    }\n    setOutputPackedMatrixWriteRegion(startRow, numRows, startColumn, numColumns) {\n        throw new Error('setOutputPackedMatrixWriteRegion not implemented.');\n    }\n    debugValidate() {\n        if (this.program != null) {\n            _webgl_util__WEBPACK_IMPORTED_MODULE_2__.validateProgram(this.gl, this.program);\n        }\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.validateFramebuffer(this.gl);\n    }\n    executeProgram() {\n        this.throwIfDisposed();\n        this.throwIfNoProgram();\n        const gl = this.gl;\n        if (this.debug) {\n            this.debugValidate();\n        }\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(gl, () => gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0));\n    }\n    blockUntilAllProgramsCompleted() {\n        this.throwIfDisposed();\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(this.gl, () => this.gl.finish());\n    }\n    getQueryTimerExtension() {\n        if (this.disjointQueryTimerExtension == null) {\n            this.disjointQueryTimerExtension =\n                _webgl_util__WEBPACK_IMPORTED_MODULE_2__.getExtensionOrThrow(this.gl, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2 ?\n                    'EXT_disjoint_timer_query_webgl2' :\n                    'EXT_disjoint_timer_query');\n        }\n        return this.disjointQueryTimerExtension;\n    }\n    getQueryTimerExtensionWebGL2() {\n        return this.getQueryTimerExtension();\n    }\n    getQueryTimerExtensionWebGL1() {\n        return this.getQueryTimerExtension();\n    }\n    beginQuery() {\n        if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2) {\n            const gl2 = this.gl;\n            const ext = this.getQueryTimerExtensionWebGL2();\n            const query = gl2.createQuery();\n            gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n            return query;\n        }\n        const ext = this.getQueryTimerExtensionWebGL1();\n        const query = ext.createQueryEXT();\n        ext.beginQueryEXT(ext.TIME_ELAPSED_EXT, query);\n        return query;\n    }\n    endQuery() {\n        if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2) {\n            const gl2 = this.gl;\n            const ext = this.getQueryTimerExtensionWebGL2();\n            gl2.endQuery(ext.TIME_ELAPSED_EXT);\n            return;\n        }\n        const ext = this.getQueryTimerExtensionWebGL1();\n        ext.endQueryEXT(ext.TIME_ELAPSED_EXT);\n    }\n    async waitForQueryAndGetTime(query) {\n        await _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.repeatedTry(() => this.disposed || // while testing contexts are created / disposed\n            // in rapid succession, so without this check we\n            // may poll for the query timer indefinitely\n            this.isQueryAvailable(query, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION')));\n        return this.getQueryTime(query, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION'));\n    }\n    getQueryTime(query, queryTimerVersion) {\n        if (queryTimerVersion === 0) {\n            return null;\n        }\n        if (queryTimerVersion === 2) {\n            const gl2 = this.gl;\n            const timeElapsedNanos = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n            // Return milliseconds.\n            return timeElapsedNanos / 1000000;\n        }\n        else {\n            const ext = this.getQueryTimerExtensionWebGL1();\n            const timeElapsedNanos = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_EXT);\n            // Return milliseconds.\n            return timeElapsedNanos / 1000000;\n        }\n    }\n    isQueryAvailable(query, queryTimerVersion) {\n        if (queryTimerVersion === 0) {\n            return true;\n        }\n        if (queryTimerVersion === 2) {\n            const gl2 = this.gl;\n            const ext = this.getQueryTimerExtensionWebGL2();\n            const available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n            if (this.disjoint == null) {\n                this.disjoint = this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n            }\n            return available && !this.disjoint;\n        }\n        else {\n            const ext = this.getQueryTimerExtensionWebGL1();\n            const available = ext.getQueryObjectEXT(query, ext.QUERY_RESULT_AVAILABLE_EXT);\n            if (this.disjoint == null) {\n                this.disjoint = this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n            }\n            return available && !this.disjoint;\n        }\n    }\n    pollFence(fenceContext) {\n        return new Promise(resolve => {\n            this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n        });\n    }\n    pollItems() {\n        // Find the last query that has finished.\n        const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n        for (let i = 0; i <= index; ++i) {\n            const { resolveFn } = this.itemsToPoll[i];\n            resolveFn();\n        }\n        this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n    }\n    addItemToPoll(isDoneFn, resolveFn) {\n        this.itemsToPoll.push({ isDoneFn, resolveFn });\n        if (this.itemsToPoll.length > 1) {\n            // We already have a running loop that polls.\n            return;\n        }\n        // Start a new loop that polls.\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.repeatedTry(() => {\n            this.pollItems();\n            // End the loop if no more items to poll.\n            return this.itemsToPoll.length === 0;\n        });\n    }\n    bindTextureToFrameBuffer(texture) {\n        this.throwIfDisposed();\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.bindColorTextureToFramebuffer(this.gl, texture, this.framebuffer);\n        if (this.debug) {\n            _webgl_util__WEBPACK_IMPORTED_MODULE_2__.validateFramebuffer(this.gl);\n        }\n    }\n    unbindTextureToFrameBuffer() {\n        if (this.outputTexture != null) {\n            _webgl_util__WEBPACK_IMPORTED_MODULE_2__.bindColorTextureToFramebuffer(this.gl, this.outputTexture, this.framebuffer);\n            if (this.debug) {\n                _webgl_util__WEBPACK_IMPORTED_MODULE_2__.validateFramebuffer(this.gl);\n            }\n        }\n        else {\n            _webgl_util__WEBPACK_IMPORTED_MODULE_2__.unbindColorTextureFromFramebuffer(this.gl, this.framebuffer);\n        }\n    }\n    downloadMatrixDriver(texture, downloadAndDecode) {\n        this.bindTextureToFrameBuffer(texture);\n        const result = downloadAndDecode();\n        this.unbindTextureToFrameBuffer();\n        return result;\n    }\n    setOutputMatrixTextureDriver(outputMatrixTextureMaybePacked, width, height) {\n        this.throwIfDisposed();\n        const gl = this.gl;\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.bindColorTextureToFramebuffer(gl, outputMatrixTextureMaybePacked, this.framebuffer);\n        if (this.debug) {\n            _webgl_util__WEBPACK_IMPORTED_MODULE_2__.validateFramebuffer(gl);\n        }\n        this.outputTexture = outputMatrixTextureMaybePacked;\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(gl, () => gl.viewport(0, 0, width, height));\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(gl, () => gl.scissor(0, 0, width, height));\n    }\n    setOutputMatrixWriteRegionDriver(x, y, width, height) {\n        this.throwIfDisposed();\n        _webgl_util__WEBPACK_IMPORTED_MODULE_2__.callAndCheck(this.gl, () => this.gl.scissor(x, y, width, height));\n    }\n    throwIfDisposed() {\n        if (this.disposed) {\n            throw new Error('Attempted to use disposed GPGPUContext.');\n        }\n    }\n    throwIfNoProgram() {\n        if (this.program == null) {\n            throw new Error('No GPU program is currently set.');\n        }\n    }\n}\n/**\n * Finds the index of the last true element using linear search.\n * Note: We can't do binary search because Chrome expects us to explicitly\n * test all fences before download:\n * https://github.com/tensorflow/tfjs/issues/1145\n */\nfunction linearSearchLastTrue(arr) {\n    let i = 0;\n    for (; i < arr.length; ++i) {\n        const isDone = arr[i]();\n        if (!isDone) {\n            break;\n        }\n    }\n    return i - 1;\n}\n//# sourceMappingURL=gpgpu_context.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_context.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_math.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_math.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export compileProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export makeShaderKey [provided] [no usage info] [missing usage info prevents renaming] */
/*! export runProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"compileProgram\": () => /* binding */ compileProgram,\n/* harmony export */   \"runProgram\": () => /* binding */ runProgram,\n/* harmony export */   \"makeShaderKey\": () => /* binding */ makeShaderKey\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction compileProgram(gpgpu, program, inputs, output) {\n    const userCode = program.userCode;\n    const inputInfos = inputs.map((input, i) => {\n        const shapeInfo = {\n            logicalShape: input.shape,\n            texShape: input.isUniform ? null : input.texData.texShape,\n            isUniform: input.isUniform,\n            isPacked: input.isUniform ? false : input.texData.isPacked,\n            flatOffset: null\n        };\n        if (input.texData != null && input.texData.slice != null &&\n            input.texData.slice.flatOffset > 0) {\n            shapeInfo.flatOffset = input.texData.slice.flatOffset;\n        }\n        return { name: program.variableNames[i], shapeInfo };\n    });\n    const inShapeInfos = inputInfos.map(x => x.shapeInfo);\n    const outShapeInfo = {\n        logicalShape: output.shape,\n        texShape: output.texData.texShape,\n        isUniform: false,\n        isPacked: output.texData.isPacked,\n        flatOffset: null\n    };\n    const source = _shader_compiler__WEBPACK_IMPORTED_MODULE_1__.makeShader(inputInfos, outShapeInfo, userCode, program.packedInputs);\n    const webGLProgram = gpgpu.createProgram(source);\n    // Add special uniforms (NAN, INFINITY)\n    let infLoc = null;\n    const nanLoc = gpgpu.getUniformLocation(webGLProgram, 'NAN', false);\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_VERSION') === 1) {\n        infLoc = gpgpu.getUniformLocation(webGLProgram, 'INFINITY', false);\n    }\n    // Add user-defined uniforms\n    const uniformLocations = {};\n    for (let i = 0; i < program.variableNames.length; i++) {\n        const varName = program.variableNames[i];\n        const shouldThrow = false;\n        uniformLocations[varName] =\n            gpgpu.getUniformLocation(webGLProgram, varName, shouldThrow);\n        uniformLocations[`offset${varName}`] =\n            gpgpu.getUniformLocation(webGLProgram, `offset${varName}`, shouldThrow);\n    }\n    return {\n        program,\n        source,\n        webGLProgram,\n        uniformLocations,\n        inShapeInfos,\n        outShapeInfo,\n        infLoc,\n        nanLoc,\n    };\n}\nfunction validateBinaryAndProgram(shapeInfos, inputs) {\n    if (shapeInfos.length !== inputs.length) {\n        throw Error(`Binary was compiled with ${shapeInfos.length} inputs, but ` +\n            `was executed with ${inputs.length} inputs`);\n    }\n    shapeInfos.forEach((s, i) => {\n        const shapeA = s.logicalShape;\n        const input = inputs[i];\n        const shapeB = input.shape;\n        if (!_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(shapeA, shapeB)) {\n            throw Error(`Binary was compiled with different shapes than ` +\n                `the current args. Shapes ${shapeA} and ${shapeB} must match`);\n        }\n        // The input is uploaded as uniform.\n        if (s.isUniform && input.isUniform) {\n            return;\n        }\n        const texShapeA = s.texShape;\n        const texShapeB = input.isUniform ? null : input.texData.texShape;\n        if (!_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(texShapeA, texShapeB)) {\n            throw Error(`Binary was compiled with different texture shapes than the` +\n                ` current args. Shape ${texShapeA} and ${texShapeB} must match`);\n        }\n    });\n}\nfunction runProgram(gpgpu, binary, inputs, output, customSetup) {\n    validateBinaryAndProgram(binary.inShapeInfos, inputs);\n    validateBinaryAndProgram([binary.outShapeInfo], [output]);\n    const outTex = output.texData.texture;\n    const outTexShape = output.texData.texShape;\n    if (output.texData.isPacked) {\n        gpgpu.setOutputPackedMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n    }\n    else {\n        gpgpu.setOutputMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n    }\n    gpgpu.setProgram(binary.webGLProgram);\n    // Set special uniforms (NAN, INFINITY)\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_VERSION') === 1) {\n        if (binary.infLoc !== null) {\n            gpgpu.gl.uniform1f(binary.infLoc, Infinity);\n        }\n    }\n    if (binary.nanLoc !== null) {\n        gpgpu.gl.uniform1f(binary.nanLoc, NaN);\n    }\n    // Set user-defined inputs\n    inputs.forEach((input, i) => {\n        const varName = binary.program.variableNames[i];\n        const varLoc = binary.uniformLocations[varName];\n        const varOffsetLoc = binary.uniformLocations[`offset${varName}`];\n        if (varLoc == null) {\n            // The compiler inferred that this variable is not used in this shader.\n            return;\n        }\n        if (input.isUniform) {\n            // Upload the values of the tensor as uniform.\n            if (_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(input.shape) < 2) {\n                gpgpu.gl.uniform1f(varLoc, input.uniformValues[0]);\n            }\n            else {\n                let vals = input.uniformValues;\n                if (!(vals instanceof Float32Array)) {\n                    vals = new Float32Array(vals);\n                }\n                gpgpu.gl.uniform1fv(varLoc, vals);\n            }\n            return;\n        }\n        // If the input was sliced, upload the flat offset index.\n        if (input.texData.slice != null && varOffsetLoc != null) {\n            gpgpu.gl.uniform1i(varOffsetLoc, input.texData.slice.flatOffset);\n        }\n        gpgpu.setInputMatrixTexture(input.texData.texture, varLoc, i);\n    });\n    if (customSetup != null) {\n        customSetup(gpgpu, binary.webGLProgram);\n    }\n    gpgpu.executeProgram();\n}\nfunction makeShaderKey(program, inputs, output) {\n    let keyInputs = '';\n    inputs.concat(output).forEach(x => {\n        const hasOffset = x.texData != null && x.texData.slice != null &&\n            x.texData.slice.flatOffset > 0;\n        const texShape = x.isUniform ? 'uniform' : x.texData.texShape;\n        keyInputs += `${x.shape}_${texShape}_${hasOffset}`;\n    });\n    const keyUserCode = program.userCode;\n    let key = program.constructor.name;\n    // Fast string concat. See https://jsperf.com/string-concatenation/14.\n    key += '_' + keyInputs + '_' + keyUserCode;\n    return key;\n}\n//# sourceMappingURL=gpgpu_math.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_math.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_util.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_util.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export bindVertexProgramAttributeStreams [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createBufferFromOutputTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createFloat16MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createFloat16PackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createFloat32MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createIndexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createPackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createUnsignedBytesMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createVertexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createVertexShader [provided] [no usage info] [missing usage info prevents renaming] */
/*! export downloadByteEncodedFloatMatrixFromOutputTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export downloadFloat32MatrixFromBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export downloadMatrixFromPackedOutputTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export downloadPackedMatrixFromBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getInternalFormatForFloat16MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getInternalFormatForFloat16PackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getInternalFormatForFloat32MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getInternalFormatForPackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getInternalFormatForUnsignedBytesMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export uploadDenseMatrixToTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export uploadPixelDataToTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createVertexShader\": () => /* binding */ createVertexShader,\n/* harmony export */   \"createVertexBuffer\": () => /* binding */ createVertexBuffer,\n/* harmony export */   \"createIndexBuffer\": () => /* binding */ createIndexBuffer,\n/* harmony export */   \"getInternalFormatForFloat32MatrixTexture\": () => /* binding */ getInternalFormatForFloat32MatrixTexture,\n/* harmony export */   \"createFloat32MatrixTexture\": () => /* binding */ createFloat32MatrixTexture,\n/* harmony export */   \"getInternalFormatForFloat16MatrixTexture\": () => /* binding */ getInternalFormatForFloat16MatrixTexture,\n/* harmony export */   \"createFloat16MatrixTexture\": () => /* binding */ createFloat16MatrixTexture,\n/* harmony export */   \"getInternalFormatForUnsignedBytesMatrixTexture\": () => /* binding */ getInternalFormatForUnsignedBytesMatrixTexture,\n/* harmony export */   \"createUnsignedBytesMatrixTexture\": () => /* binding */ createUnsignedBytesMatrixTexture,\n/* harmony export */   \"getInternalFormatForPackedMatrixTexture\": () => /* binding */ getInternalFormatForPackedMatrixTexture,\n/* harmony export */   \"createPackedMatrixTexture\": () => /* binding */ createPackedMatrixTexture,\n/* harmony export */   \"getInternalFormatForFloat16PackedMatrixTexture\": () => /* binding */ getInternalFormatForFloat16PackedMatrixTexture,\n/* harmony export */   \"createFloat16PackedMatrixTexture\": () => /* binding */ createFloat16PackedMatrixTexture,\n/* harmony export */   \"bindVertexProgramAttributeStreams\": () => /* binding */ bindVertexProgramAttributeStreams,\n/* harmony export */   \"uploadDenseMatrixToTexture\": () => /* binding */ uploadDenseMatrixToTexture,\n/* harmony export */   \"uploadPixelDataToTexture\": () => /* binding */ uploadPixelDataToTexture,\n/* harmony export */   \"createBufferFromOutputTexture\": () => /* binding */ createBufferFromOutputTexture,\n/* harmony export */   \"downloadFloat32MatrixFromBuffer\": () => /* binding */ downloadFloat32MatrixFromBuffer,\n/* harmony export */   \"downloadByteEncodedFloatMatrixFromOutputTexture\": () => /* binding */ downloadByteEncodedFloatMatrixFromOutputTexture,\n/* harmony export */   \"downloadPackedMatrixFromBuffer\": () => /* binding */ downloadPackedMatrixFromBuffer,\n/* harmony export */   \"downloadMatrixFromPackedOutputTexture\": () => /* binding */ downloadMatrixFromPackedOutputTexture\n/* harmony export */ });\n/* harmony import */ var _glsl_version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./glsl_version */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js\");\n/* harmony import */ var _tex_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tex_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js\");\n/* harmony import */ var _webgl_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webgl_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction createVertexShader(gl) {\n    const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_0__.getGlslDifferences)();\n    const vertexShaderSource = `${glsl.version}\n    precision highp float;\n    ${glsl.attribute} vec3 clipSpacePos;\n    ${glsl.attribute} vec2 uv;\n    ${glsl.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;\n    return _webgl_util__WEBPACK_IMPORTED_MODULE_1__.createVertexShader(gl, vertexShaderSource);\n}\nfunction createVertexBuffer(gl) {\n    // [x y z u v] * [upper-left, lower-left, upper-right, lower-right]\n    const vertexArray = new Float32Array([-1, 1, 0, 0, 1, -1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0]);\n    return _webgl_util__WEBPACK_IMPORTED_MODULE_1__.createStaticVertexBuffer(gl, vertexArray);\n}\nfunction createIndexBuffer(gl) {\n    // OpenGL (and WebGL) have \"CCW == front\" winding\n    const triangleVertexIndices = new Uint16Array([0, 1, 2, 2, 1, 3]);\n    return _webgl_util__WEBPACK_IMPORTED_MODULE_1__.createStaticIndexBuffer(gl, triangleVertexIndices);\n}\nfunction createAndConfigureTexture(gl, width, height, internalFormat, textureFormat, textureType) {\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.validateTextureSize(width, height);\n    const texture = _webgl_util__WEBPACK_IMPORTED_MODULE_1__.createTexture(gl);\n    const tex2d = gl.TEXTURE_2D;\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.bindTexture(tex2d, texture));\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.texParameteri(tex2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE));\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.texParameteri(tex2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE));\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.texParameteri(tex2d, gl.TEXTURE_MIN_FILTER, gl.NEAREST));\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.texParameteri(tex2d, gl.TEXTURE_MAG_FILTER, gl.NEAREST));\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.texImage2D(tex2d, 0, internalFormat, width, height, 0, textureFormat, textureType, null));\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.bindTexture(gl.TEXTURE_2D, null));\n    return texture;\n}\nfunction getInternalFormatForFloat32MatrixTexture(textureConfig) {\n    return textureConfig.internalFormatFloat;\n}\nfunction createFloat32MatrixTexture(gl, rows, columns, textureConfig) {\n    const [width, height] = _tex_util__WEBPACK_IMPORTED_MODULE_2__.getUnpackedMatrixTextureShapeWidthHeight(rows, columns);\n    return createAndConfigureTexture(gl, width, height, getInternalFormatForFloat32MatrixTexture(textureConfig), textureConfig.textureFormatFloat, gl.FLOAT);\n}\nfunction getInternalFormatForFloat16MatrixTexture(textureConfig) {\n    return textureConfig.internalFormatHalfFloat;\n}\nfunction createFloat16MatrixTexture(gl, rows, columns, textureConfig) {\n    const [width, height] = _tex_util__WEBPACK_IMPORTED_MODULE_2__.getUnpackedMatrixTextureShapeWidthHeight(rows, columns);\n    return createAndConfigureTexture(gl, width, height, getInternalFormatForFloat16MatrixTexture(textureConfig), textureConfig.textureFormatFloat, textureConfig.textureTypeHalfFloat);\n}\nfunction getInternalFormatForUnsignedBytesMatrixTexture(textureConfig) {\n    return textureConfig.downloadTextureFormat;\n}\nfunction createUnsignedBytesMatrixTexture(gl, rows, columns, textureConfig) {\n    const [width, height] = _tex_util__WEBPACK_IMPORTED_MODULE_2__.getUnpackedMatrixTextureShapeWidthHeight(rows, columns);\n    return createAndConfigureTexture(gl, width, height, getInternalFormatForUnsignedBytesMatrixTexture(textureConfig), gl.RGBA, gl.UNSIGNED_BYTE);\n}\nfunction getInternalFormatForPackedMatrixTexture(textureConfig) {\n    return textureConfig.internalFormatPackedFloat;\n}\nfunction createPackedMatrixTexture(gl, rows, columns, textureConfig) {\n    const [width, height] = _tex_util__WEBPACK_IMPORTED_MODULE_2__.getPackedMatrixTextureShapeWidthHeight(rows, columns);\n    return createAndConfigureTexture(gl, width, height, getInternalFormatForPackedMatrixTexture(textureConfig), gl.RGBA, gl.FLOAT);\n}\nfunction getInternalFormatForFloat16PackedMatrixTexture(textureConfig) {\n    return textureConfig.internalFormatPackedHalfFloat;\n}\nfunction createFloat16PackedMatrixTexture(gl, rows, columns, textureConfig) {\n    const [width, height] = _tex_util__WEBPACK_IMPORTED_MODULE_2__.getPackedMatrixTextureShapeWidthHeight(rows, columns);\n    return createAndConfigureTexture(gl, width, height, getInternalFormatForFloat16PackedMatrixTexture(textureConfig), gl.RGBA, textureConfig.textureTypeHalfFloat);\n}\nfunction bindVertexProgramAttributeStreams(gl, program, vertexBuffer) {\n    const posOffset = 0; // x is the first buffer element\n    const uvOffset = 3 * 4; // uv comes after [x y z]\n    const stride = (3 * 4) + (2 * 4); // xyz + uv, each entry is 4-byte float.\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer));\n    const success = _webgl_util__WEBPACK_IMPORTED_MODULE_1__.bindVertexBufferToProgramAttribute(gl, program, 'clipSpacePos', vertexBuffer, 3, stride, posOffset);\n    return success &&\n        _webgl_util__WEBPACK_IMPORTED_MODULE_1__.bindVertexBufferToProgramAttribute(gl, program, 'uv', vertexBuffer, 2, stride, uvOffset);\n}\nfunction uploadDenseMatrixToTexture(gl, texture, width, height, data, textureConfig) {\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.bindTexture(gl.TEXTURE_2D, texture));\n    let dataForUpload, texelDataType, internalFormat;\n    if (data instanceof Uint8Array) {\n        dataForUpload = new Uint8Array(width * height * 4);\n        texelDataType = gl.UNSIGNED_BYTE;\n        internalFormat = gl.RGBA;\n    }\n    else {\n        dataForUpload = new Float32Array(width * height * 4);\n        texelDataType = gl.FLOAT;\n        internalFormat = textureConfig.internalFormatPackedFloat;\n    }\n    dataForUpload.set(data);\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, width, height, 0, gl.RGBA, texelDataType, dataForUpload));\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.bindTexture(gl.TEXTURE_2D, null));\n}\nfunction uploadPixelDataToTexture(gl, texture, pixels) {\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.bindTexture(gl.TEXTURE_2D, texture));\n    if (pixels.data instanceof Uint8Array) {\n        _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pixels.width, pixels.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, pixels.data));\n    }\n    else {\n        _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, pixels));\n    }\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.bindTexture(gl.TEXTURE_2D, null));\n}\nfunction createBufferFromOutputTexture(gl2, rows, columns, textureConfig) {\n    // Create and bind the buffer.\n    const buffer = gl2.createBuffer();\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl2, () => gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer));\n    // Initialize the buffer to the size of the texture in bytes.\n    const bytesPerFloat = 4;\n    const valuesPerTexel = 4;\n    const bufferSizeBytes = bytesPerFloat * valuesPerTexel * rows * columns;\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl2, () => gl2.bufferData(gl2.PIXEL_PACK_BUFFER, bufferSizeBytes, gl2.STREAM_READ));\n    // Enqueue a command on the GPU command queue to copy of texture into the\n    // buffer.\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl2, () => gl2.readPixels(0, 0, columns, rows, gl2.RGBA, gl2.FLOAT, 0));\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl2, () => gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null));\n    return buffer;\n}\nfunction downloadFloat32MatrixFromBuffer(gl, buffer, size) {\n    const gl2 = gl;\n    const downloadTarget = new Float32Array(size);\n    gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer);\n    gl2.getBufferSubData(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget);\n    gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null);\n    return downloadTarget;\n}\nfunction downloadByteEncodedFloatMatrixFromOutputTexture(gl, rows, columns, textureConfig) {\n    const [w, h] = _tex_util__WEBPACK_IMPORTED_MODULE_2__.getUnpackedMatrixTextureShapeWidthHeight(rows, columns);\n    const numChannels = 4;\n    const downloadTarget = new Uint8Array(_tex_util__WEBPACK_IMPORTED_MODULE_2__.getUnpackedArraySizeFromMatrixSize(rows * columns, numChannels));\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.readPixels(0, 0, w, h, textureConfig.downloadTextureFormat, gl.UNSIGNED_BYTE, downloadTarget));\n    // By wrapping the buffer in a Float32Array, we use native browser IEEE 754\n    // decoding of the 4 bytes that back each 32 bit float.\n    return new Float32Array(downloadTarget.buffer);\n}\nfunction downloadPackedMatrixFromBuffer(gl, buffer, batch, rows, cols, physicalRows, physicalCols, textureConfig) {\n    const gl2 = gl;\n    const downloadTarget = new Float32Array(_tex_util__WEBPACK_IMPORTED_MODULE_2__.getPackedRGBAArraySizeFromMatrixShape(physicalRows, physicalCols));\n    gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer);\n    gl2.getBufferSubData(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget);\n    gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null);\n    return downloadTarget;\n}\nfunction downloadMatrixFromPackedOutputTexture(gl, physicalRows, physicalCols) {\n    const packedRGBA = new Float32Array(physicalRows * physicalCols * 4);\n    _webgl_util__WEBPACK_IMPORTED_MODULE_1__.callAndCheck(gl, () => gl.readPixels(0, 0, physicalCols, physicalRows, gl.RGBA, gl.FLOAT, packedRGBA));\n    return packedRGBA;\n}\n//# sourceMappingURL=gpgpu_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/im2col_packed_gpu.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/im2col_packed_gpu.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export Im2ColPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Im2ColPackedProgram\": () => /* binding */ Im2ColPackedProgram\n/* harmony export */ });\n/* harmony import */ var _glsl_version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./glsl_version */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass Im2ColPackedProgram {\n    constructor(outputShape, inputShape, convInfo) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = outputShape;\n        const { filterWidth, inChannels, strideWidth, strideHeight, padInfo, outWidth, dilationWidth, dilationHeight, dataFormat } = convInfo;\n        const { left, top } = padInfo;\n        const itemsPerBlockRow = inChannels * filterWidth;\n        const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_0__.getGlslDifferences)();\n        const isChannelsLast = dataFormat === 'channelsLast';\n        const rowDim = isChannelsLast ? 0 : 1;\n        const colDim = isChannelsLast ? 1 : 2;\n        let unrolled = ``;\n        for (let row = 0; row <= 1; row++) {\n            for (let col = 0; col <= 1; col++) {\n                unrolled += `\n          blockIndex = rc.y + ${col};\n          pos = rc.x + ${row};\n\n          if(blockIndex < ${outputShape[1]} && pos < ${outputShape[0]}) {\n            offsetY = int(blockIndex / (${outWidth})) * ${strideHeight} - ${top};\n            d0 = offsetY + ${dilationHeight} * (pos / ${itemsPerBlockRow});\n\n            if(d0 < ${inputShape[rowDim]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${outWidth}.) * ${strideWidth}. - ${left}.);\n              d1 = offsetX + ${dilationWidth} * (int(mod(float(pos), ${itemsPerBlockRow}.) / ${inChannels}.));\n\n              if(d1 < ${inputShape[colDim]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${inChannels}.));\n\n                if (${isChannelsLast}) {\n                  innerDims = vec2(d1, ch);\n                  result[${row * 2 + col}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${row * 2 + col}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;\n            }\n        }\n        this.userCode = `\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${unrolled}\n\n        ${glsl.output} = result;\n      }\n    `;\n    }\n}\n//# sourceMappingURL=im2col_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/im2col_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/index.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export GPGPUContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_context.js .GPGPUContext */
/*! export MathBackendWebGL [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/backend_webgl.js .MathBackendWebGL */
/*! export forceHalfFloat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl.js .forceHalfFloat */
/*! export gpgpu_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_util.js */
/*!   export bindVertexProgramAttributeStreams [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createBufferFromOutputTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFloat16MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFloat16PackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFloat32MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createIndexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createPackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createUnsignedBytesMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createVertexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createVertexShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export downloadByteEncodedFloatMatrixFromOutputTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export downloadFloat32MatrixFromBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export downloadMatrixFromPackedOutputTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export downloadPackedMatrixFromBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForFloat16MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForFloat16PackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForFloat32MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForPackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForUnsignedBytesMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export uploadDenseMatrixToTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export uploadPixelDataToTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export setWebGLContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/canvas_util.js .setWebGLContext */
/*! export version_webgl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/version.js .version */
/*! export webgl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/base.js .webgl */
/*! export webgl_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js */
/*!   export assertNotComplex [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindCanvasToFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindColorTextureToFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindTextureToProgramUniformSampler [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindTextureUnit [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindVertexBufferToProgramAttribute [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export callAndCheck [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export canBeRepresented [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFragmentShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createStaticIndexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createStaticVertexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createVertexShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getBatchDim [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getExtensionOrThrow [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getFramebufferErrorMessage [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getMaxTexturesInShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getNumChannels [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getProgramUniformLocation [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getProgramUniformLocationOrThrow [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getRowsCols [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getShapeAs3D [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getTextureShapeFromLogicalShape [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getWebGLDisjointQueryTimerVersion [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getWebGLErrorMessage [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getWebGLMaxTextureSize [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export hasExtension [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isCapableOfRenderingToFloatTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isDownloadFloatTextureEnabled [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isReshapeFree [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isWebGLFenceEnabled [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isWebGLVersionEnabled [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export linkProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export resetMaxTextureSize [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export resetMaxTexturesInShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export unbindColorTextureFromFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export unbindTextureUnit [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export validateFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export validateProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export validateTextureSize [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GPGPUContext\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_0__.GPGPUContext,\n/* harmony export */   \"MathBackendWebGL\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_0__.MathBackendWebGL,\n/* harmony export */   \"forceHalfFloat\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_0__.forceHalfFloat,\n/* harmony export */   \"gpgpu_util\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_0__.gpgpu_util,\n/* harmony export */   \"setWebGLContext\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_0__.setWebGLContext,\n/* harmony export */   \"version_webgl\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_0__.version_webgl,\n/* harmony export */   \"webgl\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_0__.webgl,\n/* harmony export */   \"webgl_util\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_0__.webgl_util\n/* harmony export */ });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/base.js\");\n/* harmony import */ var _register_all_kernels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./register_all_kernels */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/register_all_kernels.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// All exports from this package should be in base.\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/index.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/arg_min_max.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/arg_min_max.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export argMinMaxReduce [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"argMinMaxReduce\": () => /* binding */ argMinMaxReduce\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _argminmax_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../argminmax_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/argminmax_gpu.js\");\n/* harmony import */ var _argminmax_packed_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../argminmax_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/argminmax_packed_gpu.js\");\n/* harmony import */ var _kernels_Reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernels/Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction argReduce(backend, x, reduceType, bestIndicesA = null) {\n    let batchSize = x.shape[0];\n    let inSize = x.shape[1];\n    if (bestIndicesA != null) {\n        batchSize = bestIndicesA.shape[0];\n        inSize = bestIndicesA.shape[1];\n    }\n    const windowSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOptimalWindowSize(inSize);\n    const reduceInfo = { windowSize, inSize, batchSize, outSize: Math.ceil(inSize / windowSize) };\n    const program = new _argminmax_gpu__WEBPACK_IMPORTED_MODULE_1__.ArgMinMaxProgram(reduceInfo, reduceType, bestIndicesA == null);\n    const inputs = [x];\n    if (bestIndicesA != null) {\n        inputs.push(bestIndicesA);\n    }\n    const output = backend.runWebGLProgram(program, inputs, 'int32');\n    // No need to run another GPGPU program.\n    if (output.shape[1] === 1) {\n        return output;\n    }\n    const result = argReduce(backend, x, reduceType, output);\n    backend.disposeIntermediateTensorInfo(output);\n    return result;\n}\nfunction argReducePacked(backend, x, reduceType, bestIndicesA = null) {\n    const inShape = bestIndicesA != null ? bestIndicesA.shape : x.shape;\n    const inSize = inShape[inShape.length - 1];\n    const windowSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOptimalWindowSize(inSize);\n    const program = new _argminmax_packed_gpu__WEBPACK_IMPORTED_MODULE_2__.ArgMinMaxPackedProgram(inShape, windowSize, reduceType, bestIndicesA == null);\n    const inputs = bestIndicesA == null ? [x] : [x, bestIndicesA];\n    const output = backend.runWebGLProgram(program, inputs, 'int32');\n    if (output.shape.length === x.shape.length) {\n        const result = argReducePacked(backend, x, reduceType, output);\n        backend.disposeIntermediateTensorInfo(output);\n        return result;\n    }\n    return output;\n}\nfunction argMinMaxReduce(backend, x, axis, reduceType) {\n    const axes = [axis];\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('arg' + reduceType.charAt(0).toUpperCase() + reduceType.slice(1), axes, x.shape.length);\n    if (!(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_REDUCE') || x.shape.length <= 2) {\n        const intermediateTensorInfos = [];\n        const [outShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes(x.shape, axes);\n        const inSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n        const a2D = (0,_kernels_Reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)({ inputs: { x }, backend, attrs: { shape: [-1, inSize] } });\n        intermediateTensorInfos.push(a2D);\n        const reduced = argReduce(backend, a2D, reduceType);\n        intermediateTensorInfos.push(reduced);\n        const reshaped = (0,_kernels_Reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)({ inputs: { x: reduced }, backend, attrs: { shape: outShape } });\n        intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n        return reshaped;\n    }\n    return argReducePacked(backend, x, reduceType);\n}\n//# sourceMappingURL=arg_min_max.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/arg_min_max.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/int.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/int.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export int [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"int\": () => /* binding */ int\n/* harmony export */ });\n/* harmony import */ var _unaryop_gpu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../unaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nconst TO_INT = `return float(int(x));`;\nfunction int(input, backend) {\n    const program = new _unaryop_gpu__WEBPACK_IMPORTED_MODULE_0__.UnaryOpProgram(input.shape, TO_INT);\n    const output = backend.runWebGLProgram(program, [input], 'int32');\n    return { dataId: output.dataId, shape: output.shape, dtype: output.dtype };\n}\n//# sourceMappingURL=int.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/int.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export CHECK_NAN_SNIPPET_BINARY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CHECK_NAN_SNIPPET_BINARY_PACKED [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CHECK_NAN_SNIPPET_UNARY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binaryKernelFunc [provided] [no usage info] [missing usage info prevents renaming] */
/*! export mapActivationToShaderProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export unaryKernelFunc [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CHECK_NAN_SNIPPET_UNARY\": () => /* binding */ CHECK_NAN_SNIPPET_UNARY,\n/* harmony export */   \"CHECK_NAN_SNIPPET_BINARY\": () => /* binding */ CHECK_NAN_SNIPPET_BINARY,\n/* harmony export */   \"CHECK_NAN_SNIPPET_BINARY_PACKED\": () => /* binding */ CHECK_NAN_SNIPPET_BINARY_PACKED,\n/* harmony export */   \"unaryKernelFunc\": () => /* binding */ unaryKernelFunc,\n/* harmony export */   \"binaryKernelFunc\": () => /* binding */ binaryKernelFunc,\n/* harmony export */   \"mapActivationToShaderProgram\": () => /* binding */ mapActivationToShaderProgram\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _binaryop_gpu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../binaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_gpu.js\");\n/* harmony import */ var _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../binaryop_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js\");\n/* harmony import */ var _kernels_Complex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernels/Complex */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Complex.js\");\n/* harmony import */ var _kernels_LeakyRelu__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../kernels/LeakyRelu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LeakyRelu.js\");\n/* harmony import */ var _kernels_Prelu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../kernels/Prelu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prelu.js\");\n/* harmony import */ var _unaryop_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../unaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js\");\n/* harmony import */ var _unaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../unaryop_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_packed_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\nconst CHECK_NAN_SNIPPET_UNARY = `if (isnan(x)) return x;`;\nconst CHECK_NAN_SNIPPET_BINARY = `\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n`;\nconst CHECK_NAN_SNIPPET_BINARY_PACKED = `\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n`;\n/**\n * Template that creates a `KernelFunc` for unary ops.\n * @param opSnippet Op snippet to create `UnaryOpProgram`.\n * @param packedOpSnippet Op snippet to create `UnaryOpPackedProgram`.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the first input. This is mainly used in\n *     comparison kernels, such as Equal, Less, Greater, etc.\n */\nfunction unaryKernelFunc({ opSnippet, packedOpSnippet, cpuKernelImpl, dtype }) {\n    return ({ inputs, backend }) => {\n        const { x } = inputs;\n        const webglBackend = backend;\n        const $dtype = dtype || x.dtype;\n        if (webglBackend.shouldExecuteOnCPU([x]) && cpuKernelImpl != null) {\n            const xData = webglBackend.texData.get(x.dataId);\n            const outValues = cpuKernelImpl(xData.values, $dtype);\n            return webglBackend.makeTensorInfo(x.shape, $dtype, outValues);\n        }\n        const shouldUsePackedProgram = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_UNARY_OPERATIONS') && packedOpSnippet != null;\n        let program;\n        if (shouldUsePackedProgram) {\n            program = new _unaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.UnaryOpPackedProgram(x.shape, packedOpSnippet);\n        }\n        else {\n            program = new _unaryop_gpu__WEBPACK_IMPORTED_MODULE_2__.UnaryOpProgram(x.shape, opSnippet);\n        }\n        return webglBackend.runWebGLProgram(program, [x], $dtype);\n    };\n}\n/**\n * Template that creates a `KernelFunc` for binary ops.\n * @param opSnippet Op snippet to create `BinaryOpProgram`.\n * @param packedOpSnippet Op snippet to create `BinaryOpPackedProgram`.\n * @param checkOutOfBoundsForPackedProgram Whether to set checkOutOfBounds=true\n *     when creating BinaryOpPackedProgram.\n * @param dtype Optional. If set, the result has this dtype. Otherwise, the\n *     result has the same dtype as the first input. This is mainly used in\n *     comparison kernels, such as Equal, Less, Greater, etc.\n */\nfunction binaryKernelFunc({ opSnippet, packedOpSnippet, checkOutOfBounds = false, supportsComplex = false, cpuKernelImpl, dtype }) {\n    return ({ inputs, backend }) => {\n        const { a, b } = inputs;\n        const webglBackend = backend;\n        if (supportsComplex && a.dtype === 'complex64') {\n            const aData = webglBackend.texData.get(a.dataId);\n            const bData = webglBackend.texData.get(b.dataId);\n            const [real, imag] = [\n                [aData.complexTensorInfos.real, bData.complexTensorInfos.real],\n                [aData.complexTensorInfos.imag, bData.complexTensorInfos.imag]\n            ].map(complexParts => {\n                const [aPart, bPart] = complexParts;\n                const aHandle = {\n                    dataId: aPart.dataId,\n                    dtype: aPart.dtype,\n                    shape: a.shape\n                };\n                const bHandle = {\n                    dataId: bPart.dataId,\n                    dtype: bPart.dtype,\n                    shape: b.shape\n                };\n                const program = new _binaryop_gpu__WEBPACK_IMPORTED_MODULE_3__.BinaryOpProgram(opSnippet, a.shape, b.shape);\n                return webglBackend.runWebGLProgram(program, [aHandle, bHandle], (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.upcastType)(aPart.dtype, bPart.dtype));\n            });\n            const complexOutput = (0,_kernels_Complex__WEBPACK_IMPORTED_MODULE_4__.complex)({ inputs: { real, imag }, backend: webglBackend });\n            webglBackend.disposeIntermediateTensorInfo(real);\n            webglBackend.disposeIntermediateTensorInfo(imag);\n            // TODO(annxingyuan): Implement CPU forwarding for complex inputs.\n            return complexOutput;\n        }\n        const $dtype = dtype || (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.upcastType)(a.dtype, b.dtype);\n        if (webglBackend.shouldExecuteOnCPU([a, b]) && cpuKernelImpl != null) {\n            const aData = webglBackend.texData.get(a.dataId);\n            const bData = webglBackend.texData.get(b.dataId);\n            const [outValues, outShape] = cpuKernelImpl(a.shape, b.shape, aData.values, bData.values, $dtype);\n            const out = webglBackend.makeTensorInfo(outShape, $dtype);\n            const outData = webglBackend.texData.get(out.dataId);\n            outData.values = outValues;\n            return out;\n        }\n        const shouldUsePackedProgram = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_BINARY_OPERATIONS') &&\n            packedOpSnippet != null;\n        let program;\n        if (shouldUsePackedProgram) {\n            program = new _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_5__.BinaryOpPackedProgram(packedOpSnippet, a.shape, b.shape, checkOutOfBounds);\n        }\n        else {\n            program = new _binaryop_gpu__WEBPACK_IMPORTED_MODULE_3__.BinaryOpProgram(opSnippet, a.shape, b.shape);\n        }\n        return webglBackend.runWebGLProgram(program, [a, b], $dtype);\n    };\n}\nfunction mapActivationToShaderProgram(activation, packed = false) {\n    if (activation === 'linear') {\n        if (packed) {\n            return _unaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.LINEAR;\n        }\n        return _unaryop_gpu__WEBPACK_IMPORTED_MODULE_2__.LINEAR;\n    }\n    else if (activation === 'relu') {\n        if (packed) {\n            return _unaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.RELU;\n        }\n        return _unaryop_gpu__WEBPACK_IMPORTED_MODULE_2__.RELU;\n    }\n    else if (activation === 'elu') {\n        if (packed) {\n            return _unaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.ELU;\n        }\n        return _unaryop_gpu__WEBPACK_IMPORTED_MODULE_2__.ELU;\n    }\n    else if (activation === 'relu6') {\n        if (packed) {\n            return _unaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.RELU6;\n        }\n        return _unaryop_gpu__WEBPACK_IMPORTED_MODULE_2__.RELU6;\n    }\n    else if (activation === 'prelu') {\n        if (packed) {\n            return _kernels_Prelu__WEBPACK_IMPORTED_MODULE_6__.PRELU_PACKED;\n        }\n        return _kernels_Prelu__WEBPACK_IMPORTED_MODULE_6__.PRELU;\n    }\n    else if (activation === 'leakyrelu') {\n        if (packed) {\n            return _kernels_LeakyRelu__WEBPACK_IMPORTED_MODULE_7__.LEAKYRELU_PACKED;\n        }\n        return _kernels_LeakyRelu__WEBPACK_IMPORTED_MODULE_7__.LEAKYRELU;\n    }\n    throw new Error(`Activation ${activation} has not been implemented for the WebGL backend.`);\n}\n//# sourceMappingURL=kernel_funcs_utils.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reduce.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reduce.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export reduce [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reduce\": () => /* binding */ reduce\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _mean_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mean_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/mean_gpu.js\");\n/* harmony import */ var _reduce_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../reduce_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/reduce_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n// Returns an array of configuration objects that describe each stage of the\n// reduction.\nfunction getReductionStages(inShape) {\n    const stages = [];\n    while (stages.length === 0 || stages[stages.length - 1].outSize !== 1) {\n        const outSize = stages.length ? stages[stages.length - 1].outSize : inShape[1];\n        const windowSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOptimalWindowSize(outSize);\n        stages.push({\n            inSize: outSize,\n            windowSize,\n            outSize: Math.ceil(outSize / windowSize)\n        });\n    }\n    return stages;\n}\nfunction reduce(x, dtype, reductionType, backend) {\n    const reductionStages = getReductionStages(x.shape);\n    let result = x;\n    for (let i = 0; i < reductionStages.length; i++) {\n        const { inSize, windowSize, outSize } = reductionStages[i];\n        let program;\n        let previousResult;\n        if (reductionType === 'mean') {\n            program = i === 0 ?\n                new _mean_gpu__WEBPACK_IMPORTED_MODULE_1__.MeanProgram({ windowSize, inSize, batchSize: x.shape[0], outSize }, inSize) :\n                new _mean_gpu__WEBPACK_IMPORTED_MODULE_1__.MeanProgram({ windowSize, inSize, batchSize: x.shape[0], outSize });\n        }\n        else {\n            program = new _reduce_gpu__WEBPACK_IMPORTED_MODULE_2__.ReduceProgram({ windowSize, inSize, batchSize: x.shape[0], outSize }, reductionType);\n        }\n        previousResult = result;\n        result = backend.runWebGLProgram(program, [result], dtype);\n        if (previousResult.dataId !== x.dataId) {\n            backend.disposeIntermediateTensorInfo(previousResult);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=reduce.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reduce.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reshape.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reshape.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export packedReshape [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"packedReshape\": () => /* binding */ packedReshape\n/* harmony export */ });\n/* harmony import */ var _reshape_packed_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../reshape_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/reshape_packed_gpu.js\");\n/* harmony import */ var _webgl_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../webgl_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction packedReshape(input, afterShape, backend) {\n    const input3DShape = [(0,_webgl_util__WEBPACK_IMPORTED_MODULE_0__.getBatchDim)(input.shape),\n        ...(0,_webgl_util__WEBPACK_IMPORTED_MODULE_0__.getRowsCols)(input.shape)];\n    const input3D = {\n        dtype: input.dtype,\n        shape: input3DShape,\n        dataId: input.dataId\n    };\n    const afterShapeAs3D = [(0,_webgl_util__WEBPACK_IMPORTED_MODULE_0__.getBatchDim)(afterShape),\n        ...(0,_webgl_util__WEBPACK_IMPORTED_MODULE_0__.getRowsCols)(afterShape)];\n    const program = new _reshape_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.ReshapePackedProgram(afterShapeAs3D, input3DShape);\n    const preventEagerUnpackingOfOutput = true;\n    const output = backend.runWebGLProgram(program, [input3D], input.dtype, null /* customSetup */, preventEagerUnpackingOfOutput);\n    return { dataId: output.dataId, shape: afterShape, dtype: output.dtype };\n}\n//# sourceMappingURL=reshape.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reshape.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export addImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bincountImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bincountReduceImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ceilImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export concatImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expm1ImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export floorImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export gatherV2ImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export greaterImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lessImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export linSpaceImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export logImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maxImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maximumImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export minimumImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export multiplyImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export negImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export prodImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export rangeImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export rsqrtImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export simpleAbsImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sliceImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stridedSliceImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export subImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export tileImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export topKImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export transposeImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export uniqueImplCPU [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addImplCPU\": () => /* binding */ addImplCPU,\n/* harmony export */   \"bincountImplCPU\": () => /* binding */ bincountImplCPU,\n/* harmony export */   \"bincountReduceImplCPU\": () => /* binding */ bincountReduceImplCPU,\n/* harmony export */   \"ceilImplCPU\": () => /* binding */ ceilImplCPU,\n/* harmony export */   \"concatImplCPU\": () => /* binding */ concatImplCPU,\n/* harmony export */   \"expImplCPU\": () => /* binding */ expImplCPU,\n/* harmony export */   \"expm1ImplCPU\": () => /* binding */ expm1ImplCPU,\n/* harmony export */   \"floorImplCPU\": () => /* binding */ floorImplCPU,\n/* harmony export */   \"gatherV2ImplCPU\": () => /* binding */ gatherV2ImplCPU,\n/* harmony export */   \"greaterImplCPU\": () => /* binding */ greaterImplCPU,\n/* harmony export */   \"lessImplCPU\": () => /* binding */ lessImplCPU,\n/* harmony export */   \"linSpaceImplCPU\": () => /* binding */ linSpaceImplCPU,\n/* harmony export */   \"logImplCPU\": () => /* binding */ logImplCPU,\n/* harmony export */   \"maxImplCPU\": () => /* binding */ maxImplCPU,\n/* harmony export */   \"maximumImplCPU\": () => /* binding */ maximumImplCPU,\n/* harmony export */   \"minimumImplCPU\": () => /* binding */ minimumImplCPU,\n/* harmony export */   \"multiplyImplCPU\": () => /* binding */ multiplyImplCPU,\n/* harmony export */   \"negImplCPU\": () => /* binding */ negImplCPU,\n/* harmony export */   \"prodImplCPU\": () => /* binding */ prodImplCPU,\n/* harmony export */   \"simpleAbsImplCPU\": () => /* binding */ simpleAbsImplCPU,\n/* harmony export */   \"sliceImplCPU\": () => /* binding */ sliceImplCPU,\n/* harmony export */   \"stridedSliceImplCPU\": () => /* binding */ stridedSliceImplCPU,\n/* harmony export */   \"subImplCPU\": () => /* binding */ subImplCPU,\n/* harmony export */   \"rangeImplCPU\": () => /* binding */ rangeImplCPU,\n/* harmony export */   \"rsqrtImplCPU\": () => /* binding */ rsqrtImplCPU,\n/* harmony export */   \"tileImplCPU\": () => /* binding */ tileImplCPU,\n/* harmony export */   \"topKImplCPU\": () => /* binding */ topKImplCPU,\n/* harmony export */   \"transposeImplCPU\": () => /* binding */ transposeImplCPU,\n/* harmony export */   \"uniqueImplCPU\": () => /* binding */ uniqueImplCPU\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_backend_cpu_dist_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-backend-cpu/dist/shared */ \"./node_modules/@tensorflow/tfjs-backend-cpu/dist/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\n;\nconst { addImpl: addImplCPU, bincountImpl: bincountImplCPU, bincountReduceImpl: bincountReduceImplCPU, ceilImpl: ceilImplCPU, concatImpl: concatImplCPU, expImpl: expImplCPU, expm1Impl: expm1ImplCPU, floorImpl: floorImplCPU, gatherV2Impl: gatherV2ImplCPU, greaterImpl: greaterImplCPU, lessImpl: lessImplCPU, linSpaceImpl: linSpaceImplCPU, logImpl: logImplCPU, maxImpl: maxImplCPU, maximumImpl: maximumImplCPU, minimumImpl: minimumImplCPU, multiplyImpl: multiplyImplCPU, negImpl: negImplCPU, prodImpl: prodImplCPU, rangeImpl: rangeImplCPU, rsqrtImpl: rsqrtImplCPU, simpleAbsImpl: simpleAbsImplCPU, sliceImpl: sliceImplCPU, stridedSliceImpl: stridedSliceImplCPU, subImpl: subImplCPU, tileImpl: tileImplCPU, topKImpl: topKImplCPU, transposeImpl: transposeImplCPU, uniqueImpl: uniqueImplCPU, } = _tensorflow_tfjs_backend_cpu_dist_shared__WEBPACK_IMPORTED_MODULE_0__;\n\n//# sourceMappingURL=shared.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Abs.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Abs.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export abs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export absConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"abs\": () => /* binding */ abs,\n/* harmony export */   \"absConfig\": () => /* binding */ absConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/* harmony import */ var _unaryop_gpu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../unaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js\");\n/* harmony import */ var _unaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../unaryop_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_packed_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nconst ABS = `return abs(x);`;\nfunction abs(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    // TODO: handle cases when x is complex. Once the cpu implementation\n    // can handle complex values, refactor to use unaryKernelFunc.\n    if (backend.shouldExecuteOnCPU([x]) && x.dtype !== 'complex64') {\n        const xData = backend.texData.get(x.dataId);\n        const outValues = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__.simpleAbsImplCPU)(xData.values);\n        return backend.makeTensorInfo(x.shape, x.dtype, outValues);\n    }\n    let program;\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n        program = new _unaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_2__.UnaryOpPackedProgram(x.shape, ABS);\n    }\n    else {\n        program = new _unaryop_gpu__WEBPACK_IMPORTED_MODULE_3__.UnaryOpProgram(x.shape, ABS);\n    }\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nconst absConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Abs,\n    backendName: 'webgl',\n    kernelFunc: abs\n};\n//# sourceMappingURL=Abs.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Abs.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Acos.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Acos.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export acos [provided] [no usage info] [missing usage info prevents renaming] */
/*! export acosConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"acos\": () => /* binding */ acos,\n/* harmony export */   \"acosConfig\": () => /* binding */ acosConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../unaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst ACOS = _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET + `\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n`;\nconst acos = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFunc)({ opSnippet: ACOS });\nconst acosConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Acos,\n    backendName: 'webgl',\n    kernelFunc: acos,\n};\n//# sourceMappingURL=Acos.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Acos.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Acosh.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Acosh.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export acosh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export acoshConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"acosh\": () => /* binding */ acosh,\n/* harmony export */   \"acoshConfig\": () => /* binding */ acoshConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../unaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst ACOSH = _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET + `\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));`;\nconst acosh = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFunc)({ opSnippet: ACOSH });\nconst acoshConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Acosh,\n    backendName: 'webgl',\n    kernelFunc: acosh,\n};\n//# sourceMappingURL=Acosh.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Acosh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Add.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Add.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export addConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export addKernelFunc [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addKernelFunc\": () => /* binding */ addKernelFunc,\n/* harmony export */   \"addConfig\": () => /* binding */ addConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst ADD = 'return a + b;';\nconst addKernelFunc = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.binaryKernelFunc)({\n    opSnippet: ADD,\n    packedOpSnippet: ADD,\n    supportsComplex: true,\n    cpuKernelImpl: _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__.addImplCPU\n});\nconst addConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Add,\n    backendName: 'webgl',\n    kernelFunc: addKernelFunc\n};\n//# sourceMappingURL=Add.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Add.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AddN.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AddN.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export addN [provided] [no usage info] [missing usage info prevents renaming] */
/*! export addNConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addN\": () => /* binding */ addN,\n/* harmony export */   \"addNConfig\": () => /* binding */ addNConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _addn_gpu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../addn_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/addn_gpu.js\");\n/* harmony import */ var _addn_packed_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../addn_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/addn_packed_gpu.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction addN(args) {\n    const { inputs, backend } = args;\n    const tensors = inputs;\n    if (tensors.length === 1) {\n        return (0,_Identity__WEBPACK_IMPORTED_MODULE_1__.identity)({ inputs: { x: tensors[0] }, backend });\n    }\n    // Limit the number of uploaded textures for optimization.\n    if (tensors.length > (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().get('WEBGL_MAX_TEXTURES_IN_SHADER')) {\n        const midIndex = Math.floor(tensors.length / 2);\n        const leftSide = addN({ inputs: tensors.slice(0, midIndex), backend });\n        const rightSide = addN({ inputs: tensors.slice(midIndex), backend });\n        return addN({ inputs: [leftSide, rightSide], backend });\n    }\n    const dtype = tensors.map(t => t.dtype).reduce((d1, d2) => (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.upcastType)(d1, d2));\n    const shapes = tensors.map(t => t.shape);\n    // We can make sure shapes are identical in op level.\n    const usePackedOp = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK');\n    const program = usePackedOp ?\n        new _addn_packed_gpu__WEBPACK_IMPORTED_MODULE_2__.AddNPackedProgram(tensors[0].shape, shapes) :\n        new _addn_gpu__WEBPACK_IMPORTED_MODULE_3__.AddNProgram(tensors[0].shape, shapes);\n    return backend.runWebGLProgram(program, tensors, dtype);\n}\nconst addNConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.AddN,\n    backendName: 'webgl',\n    kernelFunc: addN\n};\n//# sourceMappingURL=AddN.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AddN.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/All.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/All.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export all [provided] [no usage info] [missing usage info prevents renaming] */
/*! export allConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"all\": () => /* binding */ all,\n/* harmony export */   \"allConfig\": () => /* binding */ allConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_reduce__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_utils/reduce */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reduce.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction all(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    const xRank = x.shape.length;\n    const origAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, xRank);\n    let permutedX = x;\n    if (permutedAxes != null) {\n        permutedX = (0,_Transpose__WEBPACK_IMPORTED_MODULE_1__.transpose)({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, xRank);\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('all', axes, xRank);\n    const [outShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n    const inSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    const a2D = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n    const reduced = (0,_kernel_utils_reduce__WEBPACK_IMPORTED_MODULE_3__.reduce)(a2D, a2D.dtype, 'all', backend);\n    let res;\n    if (keepDims) {\n        const newShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(outShape, origAxes);\n        res = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: reduced }, backend, attrs: { shape: newShape } });\n    }\n    else {\n        res = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: reduced }, backend, attrs: { shape: outShape } });\n    }\n    backend.disposeIntermediateTensorInfo(a2D);\n    backend.disposeIntermediateTensorInfo(reduced);\n    if (permutedAxes != null) {\n        backend.disposeIntermediateTensorInfo(permutedX);\n    }\n    return res;\n}\nconst allConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.All,\n    backendName: 'webgl',\n    kernelFunc: all\n};\n//# sourceMappingURL=All.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/All.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Any.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Any.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export any [provided] [no usage info] [missing usage info prevents renaming] */
/*! export anyConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"any\": () => /* binding */ any,\n/* harmony export */   \"anyConfig\": () => /* binding */ anyConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_reduce__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_utils/reduce */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reduce.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction any(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    const xRank = x.shape.length;\n    const origAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, xRank);\n    let permutedX = x;\n    if (permutedAxes != null) {\n        permutedX = (0,_Transpose__WEBPACK_IMPORTED_MODULE_1__.transpose)({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, xRank);\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('any', axes, xRank);\n    const [outShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n    const inSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    const a2D = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n    const reduced = (0,_kernel_utils_reduce__WEBPACK_IMPORTED_MODULE_3__.reduce)(a2D, a2D.dtype, 'any', backend);\n    let res;\n    if (keepDims) {\n        const newShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(outShape, origAxes);\n        res = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: reduced }, backend, attrs: { shape: newShape } });\n    }\n    else {\n        res = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: reduced }, backend, attrs: { shape: outShape } });\n    }\n    backend.disposeIntermediateTensorInfo(a2D);\n    backend.disposeIntermediateTensorInfo(reduced);\n    if (permutedAxes != null) {\n        backend.disposeIntermediateTensorInfo(permutedX);\n    }\n    return res;\n}\nconst anyConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Any,\n    backendName: 'webgl',\n    kernelFunc: any\n};\n//# sourceMappingURL=Any.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Any.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ArgMax.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ArgMax.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export argMax [provided] [no usage info] [missing usage info prevents renaming] */
/*! export argMaxConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"argMax\": () => /* binding */ argMax,\n/* harmony export */   \"argMaxConfig\": () => /* binding */ argMaxConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_arg_min_max__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/arg_min_max */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/arg_min_max.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction argMax(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis } = attrs;\n    let axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n    const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    const intermediateTensorInfos = [];\n    if (permutedAxes != null) {\n        $x = (0,_Transpose__WEBPACK_IMPORTED_MODULE_1__.transpose)({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        intermediateTensorInfos.push($x);\n        axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('argMax', [axes[0]], $x.shape.length);\n    const out = (0,_kernel_utils_arg_min_max__WEBPACK_IMPORTED_MODULE_2__.argMinMaxReduce)(backend, $x, axes[0], 'max');\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return out;\n}\nconst argMaxConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ArgMax,\n    backendName: 'webgl',\n    kernelFunc: argMax\n};\n//# sourceMappingURL=ArgMax.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ArgMax.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ArgMin.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ArgMin.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export argMin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export argMinConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"argMin\": () => /* binding */ argMin,\n/* harmony export */   \"argMinConfig\": () => /* binding */ argMinConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_arg_min_max__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/arg_min_max */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/arg_min_max.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction argMin(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis } = attrs;\n    let axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n    const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    const intermediateTensorInfos = [];\n    if (permutedAxes != null) {\n        $x = (0,_Transpose__WEBPACK_IMPORTED_MODULE_1__.transpose)({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        intermediateTensorInfos.push($x);\n        axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('argMin', [axes[0]], $x.shape.length);\n    const out = (0,_kernel_utils_arg_min_max__WEBPACK_IMPORTED_MODULE_2__.argMinMaxReduce)(backend, $x, axes[0], 'min');\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return out;\n}\nconst argMinConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ArgMin,\n    backendName: 'webgl',\n    kernelFunc: argMin\n};\n//# sourceMappingURL=ArgMin.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ArgMin.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Asin.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Asin.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export asin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export asinConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"asin\": () => /* binding */ asin,\n/* harmony export */   \"asinConfig\": () => /* binding */ asinConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../unaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst ASIN = _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET + `\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n`;\nconst asin = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFunc)({ opSnippet: ASIN });\nconst asinConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Asin,\n    backendName: 'webgl',\n    kernelFunc: asin,\n};\n//# sourceMappingURL=Asin.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Asin.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Asinh.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Asinh.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export asinh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export asinhConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"asinh\": () => /* binding */ asinh,\n/* harmony export */   \"asinhConfig\": () => /* binding */ asinhConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../unaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst ASINH = _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET + `return log(x + sqrt(x * x + 1.0));`;\nconst asinh = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFunc)({ opSnippet: ASINH });\nconst asinhConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Asinh,\n    backendName: 'webgl',\n    kernelFunc: asinh,\n};\n//# sourceMappingURL=Asinh.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Asinh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atan.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atan.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export atan [provided] [no usage info] [missing usage info prevents renaming] */
/*! export atanConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"atan\": () => /* binding */ atan,\n/* harmony export */   \"atanConfig\": () => /* binding */ atanConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../unaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst ATAN = _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET + `\n  return atan(x);\n`;\nconst atan = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFunc)({ opSnippet: ATAN });\nconst atanConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Atan,\n    backendName: 'webgl',\n    kernelFunc: atan,\n};\n//# sourceMappingURL=Atan.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atan.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atan2.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atan2.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export atan2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export atan2Config [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"atan2\": () => /* binding */ atan2,\n/* harmony export */   \"atan2Config\": () => /* binding */ atan2Config\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst ATAN2 = _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET_BINARY + `\n  return atan(a, b);\n`;\nconst ATAN2_PACKED = `\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  ` +\n    _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET_BINARY_PACKED + `\n  return result;\n`;\nconst atan2 = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.binaryKernelFunc)({ opSnippet: ATAN2, packedOpSnippet: ATAN2_PACKED });\nconst atan2Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Atan2,\n    backendName: 'webgl',\n    kernelFunc: atan2,\n};\n//# sourceMappingURL=Atan2.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atan2.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atanh.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atanh.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export atanh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export atanhConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"atanh\": () => /* binding */ atanh,\n/* harmony export */   \"atanhConfig\": () => /* binding */ atanhConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../unaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst ATANH = _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET + `\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;`;\nconst atanh = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFunc)({ opSnippet: ATANH });\nconst atanhConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Atanh,\n    backendName: 'webgl',\n    kernelFunc: atanh,\n};\n//# sourceMappingURL=Atanh.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atanh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export avgPool [provided] [no usage info] [missing usage info prevents renaming] */
/*! export avgPoolConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"avgPool\": () => /* binding */ avgPool,\n/* harmony export */   \"avgPoolConfig\": () => /* binding */ avgPoolConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _pool_gpu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pool_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/pool_gpu.js\");\n/* harmony import */ var _webgl_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../webgl_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction avgPool(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    (0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'avgPool');\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = 1;\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in avgPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 &&\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n        return (0,_Identity__WEBPACK_IMPORTED_MODULE_2__.identity)({ inputs: { x }, backend });\n    }\n    const avgPoolProgram = new _pool_gpu__WEBPACK_IMPORTED_MODULE_3__.Pool2DProgram(convInfo, 'avg', false);\n    return backend.runWebGLProgram(avgPoolProgram, [x], 'float32');\n}\nconst avgPoolConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.AvgPool,\n    backendName: 'webgl',\n    kernelFunc: avgPool\n};\n//# sourceMappingURL=AvgPool.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool3D.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool3D.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export avgPool3D [provided] [no usage info] [missing usage info prevents renaming] */
/*! export avgPool3DConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"avgPool3D\": () => /* binding */ avgPool3D,\n/* harmony export */   \"avgPool3DConfig\": () => /* binding */ avgPool3DConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _pool_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pool_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/pool_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction avgPool3D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { filterSize, strides, pad, dimRoundingMode, dataFormat } = attrs;\n    const dilations = [1, 1, 1];\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode, dataFormat);\n    const avgPoolProgram = new _pool_gpu__WEBPACK_IMPORTED_MODULE_1__.Pool3DProgram(convInfo, 'avg', false);\n    return backend.runWebGLProgram(avgPoolProgram, [x], 'float32');\n}\nconst avgPool3DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.AvgPool3D,\n    backendName: 'webgl',\n    kernelFunc: avgPool3D\n};\n//# sourceMappingURL=AvgPool3D.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool3D.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool3DGrad.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool3DGrad.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export avgPool3DGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export avgPoolGrad3DConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"avgPool3DGrad\": () => /* binding */ avgPool3DGrad,\n/* harmony export */   \"avgPoolGrad3DConfig\": () => /* binding */ avgPoolGrad3DConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _avg_pool_backprop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../avg_pool_backprop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/avg_pool_backprop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction avgPool3DGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input } = inputs;\n    const x = input;\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = [1, 1, 1];\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    const avgPoolBackpropProgram = new _avg_pool_backprop_gpu__WEBPACK_IMPORTED_MODULE_1__.AvgPool3DBackpropProgram(convInfo);\n    return backend.runWebGLProgram(avgPoolBackpropProgram, [dy], x.dtype);\n}\nconst avgPoolGrad3DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.AvgPool3DGrad,\n    backendName: 'webgl',\n    kernelFunc: avgPool3DGrad\n};\n//# sourceMappingURL=AvgPool3DGrad.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool3DGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPoolGrad.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPoolGrad.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export avgPoolGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export avgPoolGradConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"avgPoolGrad\": () => /* binding */ avgPoolGrad,\n/* harmony export */   \"avgPoolGradConfig\": () => /* binding */ avgPoolGradConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _avg_pool_backprop_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../avg_pool_backprop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/avg_pool_backprop_gpu.js\");\n/* harmony import */ var _webgl_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../webgl_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction avgPoolGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input } = inputs;\n    const x = input;\n    (0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([dy, input], 'avgPoolGrad');\n    const { filterSize, strides, pad } = attrs;\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad);\n    const avgPoolBackpropProgram = new _avg_pool_backprop_gpu__WEBPACK_IMPORTED_MODULE_2__.AvgPool2DBackpropProgram(convInfo);\n    return backend.runWebGLProgram(avgPoolBackpropProgram, [dy], x.dtype);\n}\nconst avgPoolGradConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.AvgPoolGrad,\n    backendName: 'webgl',\n    kernelFunc: avgPoolGrad\n};\n//# sourceMappingURL=AvgPoolGrad.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPoolGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchMatMul.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchMatMul.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export batchMatMul [provided] [no usage info] [missing usage info prevents renaming] */
/*! export batchMatMulConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchMatMul\": () => /* binding */ batchMatMul,\n/* harmony export */   \"batchMatMulConfig\": () => /* binding */ batchMatMulConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _BatchMatMul_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BatchMatMul_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchMatMul_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction batchMatMul(args) {\n    const { inputs, backend, attrs } = args;\n    const { a, b } = inputs;\n    const { transposeA, transposeB } = attrs;\n    return (0,_BatchMatMul_impl__WEBPACK_IMPORTED_MODULE_1__.batchMatMulImpl)({ a, b, transposeA, transposeB, backend });\n}\nconst batchMatMulConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.BatchMatMul,\n    backendName: 'webgl',\n    kernelFunc: batchMatMul,\n};\n//# sourceMappingURL=BatchMatMul.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchMatMul.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchMatMul_impl.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchMatMul_impl.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export MATMUL_SHARED_DIM_THRESHOLD [provided] [no usage info] [missing usage info prevents renaming] */
/*! export batchMatMulImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MATMUL_SHARED_DIM_THRESHOLD\": () => /* binding */ MATMUL_SHARED_DIM_THRESHOLD,\n/* harmony export */   \"batchMatMulImpl\": () => /* binding */ batchMatMulImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _mulmat_packed_gpu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../mulmat_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/mulmat_packed_gpu.js\");\n/* harmony import */ var _Multiply__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Multiply */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Multiply.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/* harmony import */ var _Sum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Sum */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n// Empirically determined minimal shared dimension in matmul before we forward\n// to a.mul(b).sum() in order to take advantage of GPU parallelism. See\n// https://github.com/tensorflow/tfjs-core/pull/1379 for benchmarks.\nconst MATMUL_SHARED_DIM_THRESHOLD = 1000;\nfunction batchMatMulImpl({ a, b, transposeA, transposeB, backend, bias = null, preluActivationWeights = null, leakyreluAlpha = 0, activation = null }) {\n    const aRank = a.shape.length;\n    const bRank = b.shape.length;\n    const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n    const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n    const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n    const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n    const outerDimsA = a.shape.slice(0, -2);\n    const outerDimsB = b.shape.slice(0, -2);\n    const batchDimA = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outerDimsA);\n    const batchDimB = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outerDimsB);\n    const batchDimsCompatible = batchDimA === batchDimB || batchDimA === 1 || batchDimB === 1;\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(aRank >= 2 && bRank >= 2 && batchDimsCompatible, () => `Error in matMul: the input batch dimensions must either be the ` +\n        `same or at least one input batch dimension must be 1. Got input ` +\n        `batch dimensions of (${outerDimsA}) and (${outerDimsB}).`);\n    const outShapeOuterDims = batchDimA > batchDimB ? a.shape.slice(0, -2) : b.shape.slice(0, -2);\n    const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(innerShapeA === innerShapeB, () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n        `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\n        `${b.shape} and transposeA=${transposeA}` +\n        ` and transposeB=${transposeB} must match.`);\n    const a3dShape = transposeA ?\n        [batchDimA, innerShapeA, outerShapeA] :\n        [batchDimA, outerShapeA, innerShapeA];\n    const b3dShape = transposeB ?\n        [batchDimB, outerShapeB, innerShapeB] :\n        [batchDimB, innerShapeB, outerShapeB];\n    // The rest of the implementation is designed to operate on rank-3 tensors\n    const a3d = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: a }, backend, attrs: { shape: a3dShape } });\n    const b3d = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: b }, backend, attrs: { shape: b3dShape } });\n    const intermediates = [a3d, b3d];\n    const batchDim = Math.max(batchDimA, batchDimB);\n    const sharedDim = transposeA ? a3d.shape[1] : a3d.shape[2];\n    const hasBias = bias != null;\n    const hasPreluActivationWeights = preluActivationWeights != null;\n    const hasLeakyreluAlpha = activation === 'leakyrelu';\n    const fusedActivation = activation != null ?\n        (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__.mapActivationToShaderProgram)(activation, true) :\n        null;\n    const containsFusedOps = hasBias || hasPreluActivationWeights ||\n        hasLeakyreluAlpha || fusedActivation != null;\n    let out;\n    // Since the matrices are vectors, it is faster to call mul().sum()\n    // because sum() is O(sqrt(N)) due to divide-and-conquer.\n    if ((outerShapeA === 1 || outerShapeB === 1) &&\n        sharedDim > MATMUL_SHARED_DIM_THRESHOLD && containsFusedOps === false) {\n        let aVec = a3d;\n        let bVec = b3d;\n        if (transposeA) {\n            aVec = (0,_Transpose__WEBPACK_IMPORTED_MODULE_3__.transpose)({ inputs: { x: a3d }, backend, attrs: { perm: [0, 2, 1] } });\n            intermediates.push(aVec);\n        }\n        if (transposeB) {\n            bVec = (0,_Transpose__WEBPACK_IMPORTED_MODULE_3__.transpose)({ inputs: { x: b3d }, backend, attrs: { perm: [0, 2, 1] } });\n            intermediates.push(bVec);\n        }\n        const shouldReshapeA = outerShapeB !== 1;\n        const shouldReshapeB = outerShapeB === 1;\n        let aVec3d = aVec;\n        if (shouldReshapeA) {\n            aVec3d = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({\n                inputs: { x: aVec },\n                backend,\n                attrs: { shape: [batchDim, sharedDim, 1] }\n            });\n            intermediates.push(aVec3d);\n        }\n        const axis = outerShapeB === 1 ? 2 : 1;\n        let bVec3d = bVec;\n        if (shouldReshapeB) {\n            bVec3d = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({\n                inputs: { x: bVec },\n                backend,\n                attrs: { shape: [batchDim, 1, sharedDim] }\n            });\n            intermediates.push(bVec3d);\n        }\n        const product = (0,_Multiply__WEBPACK_IMPORTED_MODULE_4__.multiply)({ inputs: { a: aVec3d, b: bVec3d }, backend });\n        out = (0,_Sum__WEBPACK_IMPORTED_MODULE_5__.sum)({ inputs: { x: product }, backend, attrs: { axis, keepDims: true } });\n        intermediates.push(product);\n    }\n    else {\n        const dtype = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.upcastType)(a.dtype, b.dtype);\n        const program = new _mulmat_packed_gpu__WEBPACK_IMPORTED_MODULE_6__.MatMulPackedProgram(a3dShape, b3dShape, [batchDim, outerShapeA, outerShapeB], transposeA, transposeB, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n        const inputs = [a3d, b3d];\n        if (bias != null) {\n            inputs.push(bias);\n        }\n        if (hasPreluActivationWeights) {\n            inputs.push(preluActivationWeights);\n        }\n        if (hasLeakyreluAlpha) {\n            const $leakyreluAlpha = backend.makeTensorInfo([], 'float32', _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.createScalarValue(leakyreluAlpha, 'float32'));\n            inputs.push($leakyreluAlpha);\n            intermediates.push($leakyreluAlpha);\n        }\n        out = backend.runWebGLProgram(program, inputs, dtype);\n    }\n    const outReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: out }, backend, attrs: { shape: outShape } });\n    intermediates.push(out);\n    for (const i of intermediates) {\n        backend.disposeIntermediateTensorInfo(i);\n    }\n    return outReshaped;\n}\n//# sourceMappingURL=BatchMatMul_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchMatMul_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchNorm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchNorm.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export batchNorm [provided] [no usage info] [missing usage info prevents renaming] */
/*! export batchNormConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchNorm\": () => /* binding */ batchNorm,\n/* harmony export */   \"batchNormConfig\": () => /* binding */ batchNormConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _batchnorm_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../batchnorm_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_gpu.js\");\n/* harmony import */ var _batchnorm_packed_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../batchnorm_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_packed_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst batchNorm = ({ inputs, backend, attrs }) => {\n    const { x, mean, variance, offset, scale } = inputs;\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(mean.shape.length === variance.shape.length, () => 'Batch normalization gradient requires mean and variance to have ' +\n        'equal ranks.');\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(offset == null || mean.shape.length === offset.shape.length, () => 'Batch normalization gradient requires mean and offset to have ' +\n        'equal ranks.');\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(scale == null || mean.shape.length === scale.shape.length, () => 'Batch normalization gradient requires mean and scale to have ' +\n        'equal ranks.');\n    let { varianceEpsilon } = attrs;\n    if (varianceEpsilon == null) {\n        varianceEpsilon = 0.001;\n    }\n    const finalInputs = [x, mean, variance];\n    let offsetShape = null;\n    if (offset != null) {\n        offsetShape = offset.shape;\n        finalInputs.push(offset);\n    }\n    let scaleShape = null;\n    if (scale != null) {\n        scaleShape = scale.shape;\n        finalInputs.push(scale);\n    }\n    const program = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_NORMALIZATION') ?\n        new _batchnorm_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.BatchNormPackedProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape, varianceEpsilon) :\n        new _batchnorm_gpu__WEBPACK_IMPORTED_MODULE_2__.BatchNormProgram(x.shape, mean.shape, variance.shape, offsetShape, scaleShape, varianceEpsilon);\n    const output = backend.runWebGLProgram(program, finalInputs, finalInputs[0].dtype);\n    return output;\n};\nconst batchNormConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.FusedBatchNorm,\n    backendName: 'webgl',\n    kernelFunc: batchNorm,\n};\n//# sourceMappingURL=BatchNorm.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchNorm.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchToSpaceND.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchToSpaceND.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export batchToSpaceND [provided] [no usage info] [missing usage info prevents renaming] */
/*! export batchToSpaceNDConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchToSpaceND\": () => /* binding */ batchToSpaceND,\n/* harmony export */   \"batchToSpaceNDConfig\": () => /* binding */ batchToSpaceNDConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/* harmony import */ var _Slice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Slice */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Slice.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nconst batchToSpaceND = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockShape, crops } = attrs;\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(x.shape.length <= 4, () => 'batchToSpaceND for rank > 4 with a WebGL backend not ' +\n        'implemented yet');\n    const prod = blockShape.reduce((a, b) => a * b);\n    const reshaped = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getReshaped(x.shape, blockShape, prod);\n    const permuted = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getPermuted(reshaped.length, blockShape.length);\n    const reshapedPermuted = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n    const sliceBeginCoords = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getSliceBeginCoords(crops, blockShape.length);\n    const sliceSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n    const toDispose = [];\n    const reshapedIntermediate = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x }, backend, attrs: { shape: reshaped } });\n    const transposedIntermediate = (0,_Transpose__WEBPACK_IMPORTED_MODULE_2__.transpose)({ inputs: { x: reshapedIntermediate }, backend, attrs: { perm: permuted } });\n    const reshapedIntermediate2 = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({\n        inputs: { x: transposedIntermediate },\n        backend,\n        attrs: { shape: reshapedPermuted }\n    });\n    const sliced = (0,_Slice__WEBPACK_IMPORTED_MODULE_3__.slice)({\n        inputs: { x: reshapedIntermediate2 },\n        backend,\n        attrs: { begin: sliceBeginCoords, size: sliceSize }\n    });\n    toDispose.push(reshapedIntermediate);\n    toDispose.push(transposedIntermediate);\n    toDispose.push(reshapedIntermediate2);\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return sliced;\n};\nconst batchToSpaceNDConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.BatchToSpaceND,\n    backendName: 'webgl',\n    kernelFunc: batchToSpaceND\n};\n//# sourceMappingURL=BatchToSpaceND.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchToSpaceND.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Bincount.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Bincount.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export bincount [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bincountConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bincount\": () => /* binding */ bincount,\n/* harmony export */   \"bincountConfig\": () => /* binding */ bincountConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction bincount(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, weights } = inputs;\n    const { size } = attrs;\n    const xVals = backend.readSync(x.dataId);\n    const weightsVals = backend.readSync(weights.dataId);\n    const outVals = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__.bincountImplCPU)(xVals, weightsVals, weights.dtype, weights.shape, size);\n    return backend.makeTensorInfo([size], weights.dtype, outVals);\n}\nconst bincountConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Bincount,\n    backendName: 'webgl',\n    kernelFunc: bincount\n};\n//# sourceMappingURL=Bincount.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Bincount.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cast.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cast.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export cast [provided] [no usage info] [missing usage info prevents renaming] */
/*! export castConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cast\": () => /* binding */ cast,\n/* harmony export */   \"castConfig\": () => /* binding */ castConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Complex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Complex */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Complex.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js\");\n/* harmony import */ var _NotEqual__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./NotEqual */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NotEqual.js\");\n/* harmony import */ var _Real__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Real */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Real.js\");\n/* harmony import */ var _kernel_utils_int__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_utils/int */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/int.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\nfunction cast(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { dtype } = attrs;\n    // Casting to complex64.\n    if (dtype === 'complex64') {\n        if (x.dtype === 'complex64') {\n            return (0,_Identity__WEBPACK_IMPORTED_MODULE_1__.identity)({ inputs: { x }, backend });\n        }\n        // TODO(annxingyuan): Import kernel function once zeros is modularized.\n        const zerosTensor = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.zeros(x.shape);\n        const floatX = cast({ inputs: { x }, backend, attrs: { dtype: 'float32' } });\n        const result = (0,_Complex__WEBPACK_IMPORTED_MODULE_2__.complex)({ inputs: { real: floatX, imag: zerosTensor }, backend });\n        zerosTensor.dispose();\n        backend.disposeIntermediateTensorInfo(floatX);\n        return result;\n    }\n    // Casting from complex64\n    if (x.dtype === 'complex64') {\n        const realPart = (0,_Real__WEBPACK_IMPORTED_MODULE_3__.real)({ inputs: { input: x }, backend });\n        const result = cast({ inputs: { x: realPart }, backend, attrs: { dtype } });\n        backend.disposeIntermediateTensorInfo(realPart);\n        return result;\n    }\n    if (!_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.hasEncodingLoss(x.dtype, dtype)) {\n        // We don't change the underlying data, since we cast to higher\n        // precision.\n        const result = (0,_Identity__WEBPACK_IMPORTED_MODULE_1__.identity)({ inputs: { x }, backend });\n        return { dataId: result.dataId, shape: result.shape, dtype };\n    }\n    if (dtype === 'int32') {\n        return (0,_kernel_utils_int__WEBPACK_IMPORTED_MODULE_4__.int)(x, backend);\n    }\n    if (dtype === 'bool') {\n        const zerosTensorInfo = backend.makeTensorInfo([], 'bool', _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getTypedArrayFromDType('bool', 1));\n        const binaryInputs = { a: x, b: zerosTensorInfo };\n        const result = (0,_NotEqual__WEBPACK_IMPORTED_MODULE_5__.notEqual)({ inputs: binaryInputs, backend });\n        backend.disposeIntermediateTensorInfo(zerosTensorInfo);\n        return result;\n    }\n    throw new Error(`Error in Cast: failed to cast ${x.dtype} to ${dtype}`);\n}\nconst castConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Cast,\n    backendName: 'webgl',\n    kernelFunc: cast\n};\n//# sourceMappingURL=Cast.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cast.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Ceil.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Ceil.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export ceil [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ceilConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ceil\": () => /* binding */ ceil,\n/* harmony export */   \"ceilConfig\": () => /* binding */ ceilConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst CEIL = `return ceil(x);`;\nconst ceil = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: CEIL, packedOpSnippet: CEIL, cpuKernelImpl: _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__.ceilImplCPU });\nconst ceilConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Ceil,\n    backendName: 'webgl',\n    kernelFunc: ceil\n};\n//# sourceMappingURL=Ceil.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Ceil.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ClipByValue.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ClipByValue.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export clipByValue [provided] [no usage info] [missing usage info prevents renaming] */
/*! export clipByValueConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clipByValue\": () => /* binding */ clipByValue,\n/* harmony export */   \"clipByValueConfig\": () => /* binding */ clipByValueConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _clip_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../clip_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/clip_gpu.js\");\n/* harmony import */ var _clip_packed_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../clip_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/clip_packed_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction clipByValue(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { clipValueMin, clipValueMax } = attrs;\n    let program;\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_CLIP')) {\n        program = new _clip_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.ClipPackedProgram(x.shape);\n    }\n    else {\n        program = new _clip_gpu__WEBPACK_IMPORTED_MODULE_2__.ClipProgram(x.shape);\n    }\n    const customSetup = program.getCustomSetupFunc(clipValueMin, clipValueMax);\n    return backend.runWebGLProgram(program, [x], x.dtype, customSetup);\n}\nconst clipByValueConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ClipByValue,\n    backendName: 'webgl',\n    kernelFunc: clipByValue\n};\n//# sourceMappingURL=ClipByValue.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ClipByValue.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Complex.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Complex.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export complex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export complexConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"complex\": () => /* binding */ complex,\n/* harmony export */   \"complexConfig\": () => /* binding */ complexConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * In WebGL data is stored in GPU textures which can't be efficiently copied, so\n * complex tensors share data with their real and imaginary components. Complex\n * tensors' reference to the components is tracked by refCount on the individual\n * component. The refCounts are increased by the identity call.\n *\n * When a complex tensor is disposed, it will reduce the refCount on the\n * components by calling disposeData on each.\n */\nfunction complex(args) {\n    const { inputs, backend } = args;\n    const { real, imag } = inputs;\n    const complexInfo = backend.makeTensorInfo(real.shape, 'complex64');\n    const complex = backend.texData.get(complexInfo.dataId);\n    const realTensorInfo = (0,_Identity__WEBPACK_IMPORTED_MODULE_1__.identity)({ inputs: { x: real }, backend });\n    const imagTensorInfo = (0,_Identity__WEBPACK_IMPORTED_MODULE_1__.identity)({ inputs: { x: imag }, backend });\n    complex.complexTensorInfos = { real: realTensorInfo, imag: imagTensorInfo };\n    return complexInfo;\n}\nconst complexConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Complex,\n    backendName: 'webgl',\n    kernelFunc: complex\n};\n//# sourceMappingURL=Complex.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Complex.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ComplexAbs.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ComplexAbs.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export complexAbs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export complexAbsConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"complexAbs\": () => /* binding */ complexAbs,\n/* harmony export */   \"complexAbsConfig\": () => /* binding */ complexAbsConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _complex_abs_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../complex_abs_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/complex_abs_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n// Returns a TensorInfo with the complex shape and the dataId of the\n// underlying part. We need to do this because a reshaped complex tensor is\n// not reflected in its parts.\nfunction makeComplexComponentTensorInfo(complexTensor, complexPart) {\n    return {\n        dataId: complexPart.dataId,\n        dtype: complexPart.dtype,\n        shape: complexTensor.shape\n    };\n}\nfunction complexAbs(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    const xData = backend.texData.get(x.dataId);\n    const program = new _complex_abs_gpu__WEBPACK_IMPORTED_MODULE_1__.ComplexAbsProgram(x.shape);\n    const programInputs = [\n        makeComplexComponentTensorInfo(x, xData.complexTensorInfos.real),\n        makeComplexComponentTensorInfo(x, xData.complexTensorInfos.imag),\n    ];\n    return backend.runWebGLProgram(program, programInputs, programInputs[0].dtype);\n}\nconst complexAbsConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ComplexAbs,\n    backendName: 'webgl',\n    kernelFunc: complexAbs\n};\n//# sourceMappingURL=ComplexAbs.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ComplexAbs.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Concat.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Concat.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export concat [provided] [no usage info] [missing usage info prevents renaming] */
/*! export concatConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concat\": () => /* binding */ concat,\n/* harmony export */   \"concatConfig\": () => /* binding */ concatConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Concat_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Concat_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Concat_impl.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction concat(args) {\n    const { inputs, backend, attrs } = args;\n    const { axis } = attrs;\n    const $axis = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, inputs[0].shape)[0];\n    const outShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutShape(inputs.map(t => t.shape), $axis);\n    if (_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShape) === 0) {\n        return backend.makeTensorInfo(outShape, inputs[0].dtype, []);\n    }\n    // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n    const $inputs = inputs.filter(t => _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(t.shape) > 0);\n    if ($inputs.length === 1) {\n        return (0,_Identity__WEBPACK_IMPORTED_MODULE_1__.identity)({ inputs: { x: $inputs[0] }, backend });\n    }\n    const shapes = $inputs.map(t => t.shape);\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertParamsConsistent(shapes, $axis);\n    return (0,_Concat_impl__WEBPACK_IMPORTED_MODULE_2__.concatImpl)($inputs, $axis, backend);\n}\nconst concatConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Concat,\n    backendName: 'webgl',\n    kernelFunc: concat\n};\n//# sourceMappingURL=Concat.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Concat.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Concat_impl.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Concat_impl.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export concatImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concatImpl\": () => /* binding */ concatImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _concat_gpu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../concat_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/concat_gpu.js\");\n/* harmony import */ var _concat_packed_gpu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../concat_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/concat_packed_gpu.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/* harmony import */ var _Complex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Complex */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Complex.js\");\n/* harmony import */ var _Imag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Imag */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Imag.js\");\n/* harmony import */ var _Real__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Real */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Real.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\nfunction concatImpl(inputs, axis, backend) {\n    const dtype = inputs[0].dtype;\n    if (dtype === 'complex64') {\n        const reals = inputs.map((t) => (0,_Real__WEBPACK_IMPORTED_MODULE_1__.real)({ inputs: { input: t }, backend }));\n        const imags = inputs.map((t) => (0,_Imag__WEBPACK_IMPORTED_MODULE_2__.imag)({ inputs: { input: t }, backend }));\n        const realConcated = concatImpl(reals, axis, backend);\n        const imagConcated = concatImpl(imags, axis, backend);\n        const result = (0,_Complex__WEBPACK_IMPORTED_MODULE_3__.complex)({ inputs: { real: realConcated, imag: imagConcated }, backend });\n        reals.forEach(r => backend.disposeIntermediateTensorInfo(r));\n        imags.forEach(i => backend.disposeIntermediateTensorInfo(i));\n        backend.disposeIntermediateTensorInfo(realConcated);\n        backend.disposeIntermediateTensorInfo(imagConcated);\n        return result;\n    }\n    // Run on cpu if dtype is string. For string, the backend represents it\n    // as Uint8Array[], where each Uint8Array is a character. Given that the\n    // computation is only on the outer array, uploading the whole data onto\n    // gpu is wasteful. Also, currently webgl doesn't have a design to\n    // upload and retrieve Uint8Array[] between cpu and gpu. Therefore, we\n    // just run the kernel on cpu if dtype is string.\n    if (dtype === 'string') {\n        const { tensors2D, outShape } = computeTensors2D(inputs, axis, backend);\n        const inputsValShapes = tensors2D.map(t => {\n            return { vals: backend.readSync(t.dataId), shape: t.shape };\n        });\n        const simplyConcat = tensors2D[0].shape[0] === 1;\n        const outVals = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_4__.concatImplCPU)(inputsValShapes, outShape, dtype, simplyConcat);\n        const finalOutShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n        const outInfo = backend.makeTensorInfo(finalOutShape, dtype, outVals);\n        tensors2D.forEach(t => backend.disposeIntermediateTensorInfo(t));\n        return outInfo;\n    }\n    if (inputs.length > (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_MAX_TEXTURES_IN_SHADER')) {\n        const midIndex = Math.floor(inputs.length / 2);\n        const leftSide = concatImpl(inputs.slice(0, midIndex), axis, backend);\n        const rightSide = concatImpl(inputs.slice(midIndex), axis, backend);\n        const result = concatImpl([leftSide, rightSide], axis, backend);\n        backend.disposeIntermediateTensorInfo(leftSide);\n        backend.disposeIntermediateTensorInfo(rightSide);\n        return result;\n    }\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_ARRAY_OPERATIONS') &&\n        inputs[0].shape.length > 1) {\n        const program = new _concat_packed_gpu__WEBPACK_IMPORTED_MODULE_5__.ConcatPackedProgram(inputs.map(t => t.shape), axis);\n        return backend.runWebGLProgram(program, inputs, dtype);\n    }\n    const { tensors2D, outShape } = computeTensors2D(inputs, axis, backend);\n    const program = new _concat_gpu__WEBPACK_IMPORTED_MODULE_6__.ConcatProgram(tensors2D.map(t => t.shape));\n    const result = backend.runWebGLProgram(program, tensors2D, dtype);\n    tensors2D.forEach(r => backend.disposeIntermediateTensorInfo(r));\n    const reshapedResult = (0,_Reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)({ inputs: { x: result }, attrs: { shape: outShape }, backend });\n    backend.disposeIntermediateTensorInfo(result);\n    return reshapedResult;\n}\nfunction computeTensors2D(inputs, axis, backend) {\n    // Any concat of n-dimensional tensors across any axis can be reduced to\n    // a concatenation of two-dimensional tensors across the axis 1 by first\n    // partitioning the axes of the original tensors into those less than the\n    // axis to be concatenated and the rest. Then reshape the tensors\n    // into a two-dimensional tensor by collapsing these two sets of axes and\n    // concatenate the resulting matrices across the axis 1, finally reshaping\n    // the result to have the proper shape.\n    const outShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n    const tensors2D = inputs.map(x => (0,_Reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)({\n        inputs: { x },\n        attrs: { shape: [-1, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape.slice(axis))] },\n        backend\n    }));\n    return { tensors2D, outShape };\n}\n//# sourceMappingURL=Concat_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Concat_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2D.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2D.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export conv2DConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export conv2d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2d\": () => /* binding */ conv2d,\n/* harmony export */   \"conv2DConfig\": () => /* binding */ conv2DConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _conv_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../conv_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu.js\");\n/* harmony import */ var _Conv2D_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Conv2D_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2D_impl.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction conv2d(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dataFormat, dilations, dimRoundingMode } = attrs;\n    const $dataFormat = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n    let out;\n    if (convInfo.filterHeight === 1 && convInfo.filterWidth === 1 &&\n        convInfo.dilationHeight === 1 && convInfo.dilationWidth === 1 &&\n        convInfo.strideHeight === 1 && convInfo.strideWidth === 1 &&\n        (convInfo.padInfo.type === 'SAME' || convInfo.padInfo.type === 'VALID')) {\n        out = (0,_Conv2D_impl__WEBPACK_IMPORTED_MODULE_1__.conv2dByMatMul)({ x, filter, convInfo, backend });\n    }\n    else if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_CONV_IM2COL') && x.shape[0] === 1) {\n        out = (0,_Conv2D_impl__WEBPACK_IMPORTED_MODULE_1__.conv2dWithIm2Row)({ x, filter, convInfo, backend });\n    }\n    else {\n        const program = new _conv_gpu__WEBPACK_IMPORTED_MODULE_2__.Conv2DProgram(convInfo);\n        out = backend.runWebGLProgram(program, [x, filter], 'float32');\n    }\n    const outReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)({ inputs: { x: out }, backend, attrs: { shape: convInfo.outShape } });\n    backend.disposeIntermediateTensorInfo(out);\n    return outReshaped;\n}\nconst conv2DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Conv2D,\n    backendName: 'webgl',\n    kernelFunc: conv2d,\n};\n//# sourceMappingURL=Conv2D.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2D.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2DBackpropFilter.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2DBackpropFilter.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export conv2DBackpropFilter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export conv2DBackpropFilterConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2DBackpropFilter\": () => /* binding */ conv2DBackpropFilter,\n/* harmony export */   \"conv2DBackpropFilterConfig\": () => /* binding */ conv2DBackpropFilterConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _conv_backprop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../conv_backprop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction conv2DBackpropFilter(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, dy } = inputs;\n    const { strides, pad, dataFormat, dimRoundingMode, filterShape } = attrs;\n    const $dataFormat = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv2DInfo(x.shape, filterShape, strides, 1 /* dilations */, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n    const program = new _conv_backprop_gpu__WEBPACK_IMPORTED_MODULE_1__.Conv2DDerFilterProgram(convInfo);\n    return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\nconst conv2DBackpropFilterConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Conv2DBackpropFilter,\n    backendName: 'webgl',\n    kernelFunc: conv2DBackpropFilter,\n};\n//# sourceMappingURL=Conv2DBackpropFilter.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2DBackpropFilter.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2DBackpropInput.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2DBackpropInput.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! export conv2DBackpropInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export conv2DBackpropInputConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2DBackpropInput\": () => /* binding */ conv2DBackpropInput,\n/* harmony export */   \"conv2DBackpropInputConfig\": () => /* binding */ conv2DBackpropInputConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _conv_backprop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../conv_backprop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction conv2DBackpropInput(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, filter } = inputs;\n    const { inputShape, strides, pad, dataFormat, dimRoundingMode } = attrs;\n    const $dataFormat = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv2DInfo(inputShape, filter.shape, strides, 1 /* dilations */, pad, dimRoundingMode, false, $dataFormat);\n    const program = new _conv_backprop_gpu__WEBPACK_IMPORTED_MODULE_1__.Conv2DDerInputProgram(convInfo);\n    return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\nconst conv2DBackpropInputConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Conv2DBackpropInput,\n    backendName: 'webgl',\n    kernelFunc: conv2DBackpropInput,\n};\n//# sourceMappingURL=Conv2DBackpropInput.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2DBackpropInput.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2D_impl.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2D_impl.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export conv2dByMatMul [provided] [no usage info] [missing usage info prevents renaming] */
/*! export conv2dWithIm2Row [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2dByMatMul\": () => /* binding */ conv2dByMatMul,\n/* harmony export */   \"conv2dWithIm2Row\": () => /* binding */ conv2dWithIm2Row\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _im2col_packed_gpu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../im2col_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/im2col_packed_gpu.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _mulmat_packed_gpu__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../mulmat_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/mulmat_packed_gpu.js\");\n/* harmony import */ var _webgl_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../webgl_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js\");\n/* harmony import */ var _BatchMatMul_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BatchMatMul_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchMatMul_impl.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n// For 1x1 kernels that iterate through every point in the input, convolution\n// can be expressed as matrix multiplication (without need for memory\n// remapping).\nfunction conv2dByMatMul({ x, filter, convInfo, backend, bias = null, preluActivationWeights = null, leakyreluAlpha = 0, activation = null }) {\n    // Reshapes conv2D input to 2D tensors, uses matMul and then reshape the\n    // result from 2D to 4D.\n    const xShape = x.shape;\n    const xTexData = backend.texData.get(x.dataId);\n    const sharedMatMulDim = convInfo.inChannels;\n    const outerShapeX = xShape[0] * xShape[1] * xShape[2];\n    const outerShapeFilter = convInfo.outChannels;\n    const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n    const transposeA = false;\n    const transposeB = false;\n    let out;\n    const intermediates = [];\n    // TODO: Once reduction ops are packed, batchMatMul will always be packed\n    // and we can remove this condition.\n    const batchMatMulWillBeUnpacked = (outerShapeX === 1 || outerShapeFilter === 1) &&\n        sharedMatMulDim > _BatchMatMul_impl__WEBPACK_IMPORTED_MODULE_1__.MATMUL_SHARED_DIM_THRESHOLD;\n    const reshapeWillBeExpensive = xShape[2] % 2 !== 0 && !!xTexData.isPacked;\n    if (batchMatMulWillBeUnpacked || !(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_LAZILY_UNPACK') ||\n        !(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_BINARY_OPERATIONS') ||\n        !reshapeWillBeExpensive) {\n        const targetShape = isChannelsLast ? xShape[0] * xShape[1] * xShape[2] :\n            xShape[0] * xShape[2] * xShape[3];\n        const xReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({\n            inputs: { x },\n            backend,\n            attrs: { shape: [1, targetShape, convInfo.inChannels] }\n        });\n        const filterReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({\n            inputs: { x: filter },\n            backend,\n            attrs: { shape: [1, convInfo.inChannels, convInfo.outChannels] }\n        });\n        const result = (0,_BatchMatMul_impl__WEBPACK_IMPORTED_MODULE_1__.batchMatMulImpl)({\n            a: xReshaped,\n            b: filterReshaped,\n            transposeA,\n            transposeB,\n            backend,\n            bias,\n            activation,\n            preluActivationWeights,\n            leakyreluAlpha\n        });\n        out = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: result }, backend, attrs: { shape: convInfo.outShape } });\n        intermediates.push(xReshaped);\n        intermediates.push(filterReshaped);\n        intermediates.push(result);\n    }\n    else {\n        // Following optimization is specific to packed |x| with odd row count\n        // (For example, in channelLast mode, 'row count' refers to x.shape[2]):\n        // we avoid expensive packed 2x2 reshape by padding row count to next,\n        // even number. When x.shape[2] is odd, the result of packed batchMatMul is\n        // the same (has the same texture layout and and values in the texture) as\n        // it is for even x.shape[2] + 1. We make the odd-rows tensor to look like\n        // even-rows tensor before the operation and, after the batchMatMul,\n        // fix the even-rows result to have odd number of rows.\n        const targetShape = isChannelsLast ?\n            xShape[0] * xShape[1] * (xShape[2] + 1) :\n            xShape[0] * xShape[2] * (xShape[3] + 1);\n        const xReshaped = {\n            dataId: x.dataId,\n            shape: [1, targetShape, convInfo.inChannels],\n            dtype: x.dtype\n        };\n        // xTexData.shape gets referenced from GPGPUBinary.inShapeInfos.\n        // Decrementing row count, after batchMatMul->...->compileProgram leads to\n        // invalid row count within the reference in GPGPUBinary.inShapeInfos.\n        // Alternative fix would be to provide a copy to GPGPUBinary.inShapeInfos\n        // in compileProgram method, but that would affect compilation of all\n        // programs - instead, provide a copy here, with even row count, before\n        // calling batchMatMul->...->compileProgram and after that, the original\n        // xTexData.shape is restored.\n        const originalXTexDataShape = xTexData.shape;\n        xTexData.shape = xTexData.shape.slice();\n        xTexData.shape[xTexData.shape.length - 2]++;\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(_webgl_util__WEBPACK_IMPORTED_MODULE_3__.isReshapeFree(xTexData.shape, xReshaped.shape), () => `packed reshape ${xTexData.shape} to ${xReshaped.shape} isn't free`);\n        const filterReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({\n            inputs: { x: filter },\n            backend,\n            attrs: { shape: [1, convInfo.inChannels, convInfo.outChannels] }\n        });\n        intermediates.push(filterReshaped);\n        const pointwiseConv = (0,_BatchMatMul_impl__WEBPACK_IMPORTED_MODULE_1__.batchMatMulImpl)({\n            a: xReshaped,\n            b: filterReshaped,\n            backend,\n            transposeA,\n            transposeB,\n            bias,\n            activation,\n            preluActivationWeights,\n            leakyreluAlpha\n        });\n        const pointwiseConvTexData = backend.texData.get(pointwiseConv.dataId);\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(pointwiseConvTexData.isPacked, () => 'batchMatMul result is expected to be packed');\n        // Restore the input shape to original.\n        xTexData.shape = originalXTexDataShape;\n        // Set the output shape - there is no need for expensive reshape as data\n        // layout is already correct.\n        pointwiseConvTexData.shape = convInfo.outShape;\n        out = (0,_Identity__WEBPACK_IMPORTED_MODULE_4__.identity)({ inputs: { x: pointwiseConv }, backend });\n        out.shape = convInfo.outShape;\n        intermediates.push(pointwiseConv);\n    }\n    for (const i of intermediates) {\n        backend.disposeIntermediateTensorInfo(i);\n    }\n    return out;\n}\n// Implements the im2row algorithm as outlined in \"High Performance\n// Convolutional Neural Networks for Document Processing\" (Suvisoft, 2006)\nfunction conv2dWithIm2Row({ x, filter, convInfo, backend, bias = null, preluActivationWeights = null, leakyreluAlpha = 0, activation = null }) {\n    // Rearranges conv2d input so each block to be convolved over forms the\n    // column of a new matrix with shape [filterWidth * filterHeight *\n    // inChannels, outHeight * outWidth]. The filter is also rearranged so each\n    // output channel forms a row of a new matrix with shape [outChannels,\n    // filterWidth * filterHeight * inChannels]. The convolution is then\n    // computed by multiplying these matrices and reshaping the result.\n    const { filterWidth, filterHeight, inChannels, outWidth, outHeight, dataFormat } = convInfo;\n    const isChannelsLast = dataFormat === 'channelsLast';\n    const sharedDim = filterWidth * filterHeight * inChannels;\n    const numCols = outHeight * outWidth;\n    const x2ColShape = [sharedDim, numCols];\n    const transposeA = true;\n    const transposeB = false;\n    const intermediates = [];\n    const xSqueezed = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x }, backend, attrs: { shape: x.shape.slice(1) } });\n    const w2Row = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({\n        inputs: { x: filter },\n        backend,\n        attrs: { shape: [1, sharedDim, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(filter.shape) / sharedDim] }\n    });\n    intermediates.push(xSqueezed);\n    intermediates.push(w2Row);\n    const im2ColProgram = new _im2col_packed_gpu__WEBPACK_IMPORTED_MODULE_5__.Im2ColPackedProgram(x2ColShape, xSqueezed.shape, convInfo);\n    const im2Col = backend.runWebGLProgram(im2ColProgram, [xSqueezed], 'float32');\n    const im2ColReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({\n        inputs: { x: im2Col },\n        backend,\n        attrs: { shape: [1, x2ColShape[0], x2ColShape[1]] }\n    });\n    intermediates.push(im2Col);\n    intermediates.push(im2ColReshaped);\n    const hasBias = bias != null;\n    const hasPreluActivationWeights = preluActivationWeights != null;\n    const hasLeakyreluAlpha = activation === 'leakyrelu';\n    const fusedActivation = activation ? (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_6__.mapActivationToShaderProgram)(activation, true) : null;\n    const matmulProgram = new _mulmat_packed_gpu__WEBPACK_IMPORTED_MODULE_7__.MatMulPackedProgram(im2ColReshaped.shape, w2Row.shape, [1, numCols, convInfo.outChannels], transposeA, transposeB, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n    const inputs = [im2ColReshaped, w2Row];\n    if (bias) {\n        inputs.push(bias);\n    }\n    if (hasPreluActivationWeights) {\n        inputs.push(preluActivationWeights);\n    }\n    if (hasLeakyreluAlpha) {\n        const $leakyreluAlpha = backend.makeTensorInfo([], 'float32', _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.createScalarValue(leakyreluAlpha, 'float32'));\n        inputs.push($leakyreluAlpha);\n        intermediates.push($leakyreluAlpha);\n    }\n    const product = backend.runWebGLProgram(matmulProgram, inputs, 'float32');\n    const outShape = isChannelsLast ?\n        [1, outHeight, outWidth, convInfo.outChannels] :\n        [1, convInfo.outChannels, outHeight, outWidth];\n    const out = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: product }, backend, attrs: { shape: outShape } });\n    intermediates.push(product);\n    for (const i of intermediates) {\n        backend.disposeIntermediateTensorInfo(i);\n    }\n    return out;\n}\n//# sourceMappingURL=Conv2D_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2D_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3D.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3D.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export conv3D [provided] [no usage info] [missing usage info prevents renaming] */
/*! export conv3DConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv3D\": () => /* binding */ conv3D,\n/* harmony export */   \"conv3DConfig\": () => /* binding */ conv3DConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _conv_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../conv_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction conv3D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dilations } = attrs;\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv3DInfo(x.shape, filter.shape, strides, dilations, pad);\n    const program = new _conv_gpu__WEBPACK_IMPORTED_MODULE_1__.Conv3DProgram(convInfo);\n    return backend.runWebGLProgram(program, [x, filter], 'float32');\n}\nconst conv3DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Conv3D,\n    backendName: 'webgl',\n    kernelFunc: conv3D,\n};\n//# sourceMappingURL=Conv3D.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3D.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3DBackpropFilterV2.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3DBackpropFilterV2.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export conv3DBackpropFilterV2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export conv3DBackpropFilterV2Config [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv3DBackpropFilterV2\": () => /* binding */ conv3DBackpropFilterV2,\n/* harmony export */   \"conv3DBackpropFilterV2Config\": () => /* binding */ conv3DBackpropFilterV2Config\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _conv_backprop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../conv_backprop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction conv3DBackpropFilterV2(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, dy } = inputs;\n    const { strides, pad, filterShape } = attrs;\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv3DInfo(x.shape, filterShape, strides, 1 /* dilations */, pad);\n    const program = new _conv_backprop_gpu__WEBPACK_IMPORTED_MODULE_1__.Conv3DDerFilterProgram(convInfo);\n    return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\nconst conv3DBackpropFilterV2Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Conv3DBackpropFilterV2,\n    backendName: 'webgl',\n    kernelFunc: conv3DBackpropFilterV2\n};\n//# sourceMappingURL=Conv3DBackpropFilterV2.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3DBackpropFilterV2.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3DBackpropInputV2.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3DBackpropInputV2.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export conv3DBackpropInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export conv3DBackpropInputConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv3DBackpropInput\": () => /* binding */ conv3DBackpropInput,\n/* harmony export */   \"conv3DBackpropInputConfig\": () => /* binding */ conv3DBackpropInputConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _conv_backprop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../conv_backprop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction conv3DBackpropInput(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, filter } = inputs;\n    const { pad, strides, inputShape } = attrs;\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv3DInfo(inputShape, filter.shape, strides, 1 /* dilations */, pad);\n    const program = new _conv_backprop_gpu__WEBPACK_IMPORTED_MODULE_1__.Conv3DDerInputProgram(convInfo);\n    return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\nconst conv3DBackpropInputConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Conv3DBackpropInputV2,\n    backendName: 'webgl',\n    kernelFunc: conv3DBackpropInput,\n};\n//# sourceMappingURL=Conv3DBackpropInputV2.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3DBackpropInputV2.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cos.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cos.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export cos [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cosConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cos\": () => /* binding */ cos,\n/* harmony export */   \"cosConfig\": () => /* binding */ cosConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst COS = _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET_UNARY + `\n  return cos(x);\n`;\nconst cos = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: COS });\nconst cosConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Cos,\n    backendName: 'webgl',\n    kernelFunc: cos,\n};\n//# sourceMappingURL=Cos.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cos.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cosh.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cosh.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export cosh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export coshConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cosh\": () => /* binding */ cosh,\n/* harmony export */   \"coshConfig\": () => /* binding */ coshConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst COSH = `\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n`;\nconst cosh = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: COSH });\nconst coshConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Cosh,\n    backendName: 'webgl',\n    kernelFunc: cosh,\n};\n//# sourceMappingURL=Cosh.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cosh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/CropAndResize.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/CropAndResize.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export cropAndResize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cropAndResizeConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cropAndResize\": () => /* binding */ cropAndResize,\n/* harmony export */   \"cropAndResizeConfig\": () => /* binding */ cropAndResizeConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _crop_and_resize_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../crop_and_resize_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/crop_and_resize_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst cropAndResize = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { image, boxes, boxInd } = inputs;\n    const { cropSize, method, extrapolationValue } = attrs;\n    const program = new _crop_and_resize_gpu__WEBPACK_IMPORTED_MODULE_1__.CropAndResizeProgram(image.shape, boxes.shape, cropSize, method, extrapolationValue);\n    return backend.runWebGLProgram(program, [image, boxes, boxInd], 'float32');\n};\nconst cropAndResizeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.CropAndResize,\n    backendName: 'webgl',\n    kernelFunc: cropAndResize\n};\n//# sourceMappingURL=CropAndResize.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/CropAndResize.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cumsum.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cumsum.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export cumsum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export cumsumConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cumsum\": () => /* binding */ cumsum,\n/* harmony export */   \"cumsumConfig\": () => /* binding */ cumsumConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _cumsum_gpu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../cumsum_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/cumsum_gpu.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction cumsum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, exclusive, reverse } = attrs;\n    const xRank = x.shape.length;\n    const permutation = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation([axis], xRank);\n    let permutedX = x;\n    if (permutation != null) {\n        permutedX = (0,_Transpose__WEBPACK_IMPORTED_MODULE_1__.transpose)({ inputs: { x }, backend, attrs: { perm: permutation } });\n    }\n    const permutedAxis = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(1, xRank)[0];\n    if (permutedAxis !== xRank - 1) {\n        throw new Error(`WebGL cumsum shader expects an inner-most axis=${x.shape.length - 1} ` +\n            `but got axis=${axis}`);\n    }\n    const size = permutedX.shape[permutedAxis];\n    let result = (0,_Identity__WEBPACK_IMPORTED_MODULE_2__.identity)({ inputs: { x: permutedX }, backend });\n    // Use cumsum parallel algorithm, ref:\n    // https://developer.nvidia.com/gpugems/gpugems3/part-vi-gpu-computing/chapter-39-parallel-prefix-sum-scan-cuda\n    for (let i = 0; i <= Math.ceil(Math.log2(size)) - 1; i++) {\n        const program = new _cumsum_gpu__WEBPACK_IMPORTED_MODULE_3__.CumSumProgram(permutedX.shape, false, reverse);\n        const customSetup = program.getCustomSetupFunc(i);\n        const prevResult = result;\n        result =\n            backend.runWebGLProgram(program, [result], result.dtype, customSetup);\n        backend.disposeIntermediateTensorInfo(prevResult);\n    }\n    // For exclusive cumsum, shift the end result in the direction of sum\n    // and add 0 to the front index.\n    if (exclusive) {\n        const program = new _cumsum_gpu__WEBPACK_IMPORTED_MODULE_3__.CumSumProgram(permutedX.shape, exclusive, reverse);\n        const prevResult = result;\n        result = backend.runWebGLProgram(program, [result], result.dtype);\n        backend.disposeIntermediateTensorInfo(prevResult);\n    }\n    if (permutation != null) {\n        const reversePermutation = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getUndoAxesPermutation(permutation);\n        const reverseTransposedResult = (0,_Transpose__WEBPACK_IMPORTED_MODULE_1__.transpose)({ inputs: { x: result }, backend, attrs: { perm: reversePermutation } });\n        backend.disposeIntermediateTensorInfo(result);\n        backend.disposeIntermediateTensorInfo(permutedX);\n        return reverseTransposedResult;\n    }\n    return result;\n}\nconst cumsumConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Cumsum,\n    backendName: 'webgl',\n    kernelFunc: cumsum\n};\n//# sourceMappingURL=Cumsum.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cumsum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DenseBincount.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DenseBincount.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export denseBincount [provided] [no usage info] [missing usage info prevents renaming] */
/*! export denseBincountConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"denseBincount\": () => /* binding */ denseBincount,\n/* harmony export */   \"denseBincountConfig\": () => /* binding */ denseBincountConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction denseBincount(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, weights } = inputs;\n    const { size, binaryOutput } = attrs;\n    if (x.shape.length === 1) {\n        const xVals = backend.readSync(x.dataId);\n        const weightsVals = backend.readSync(weights.dataId);\n        const outVals = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__.bincountImplCPU)(xVals, weightsVals, weights.dtype, weights.shape, size);\n        return backend.makeTensorInfo([size], weights.dtype, outVals);\n    }\n    else if (x.shape.length === 2) {\n        const xBuf = backend.bufferSync(x);\n        const weightsBuf = backend.bufferSync(weights);\n        const outBuf = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__.bincountReduceImplCPU)(xBuf, weightsBuf, size, binaryOutput);\n        return backend.makeTensorInfo(outBuf.shape, weights.dtype, outBuf.values);\n    }\n    throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank` +\n        `${x.shape.length}.`);\n}\nconst denseBincountConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.DenseBincount,\n    backendName: 'webgl',\n    kernelFunc: denseBincount\n};\n//# sourceMappingURL=DenseBincount.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DenseBincount.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthToSpace.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthToSpace.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export depthToSpace [provided] [no usage info] [missing usage info prevents renaming] */
/*! export depthToSpaceConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthToSpace\": () => /* binding */ depthToSpace,\n/* harmony export */   \"depthToSpaceConfig\": () => /* binding */ depthToSpaceConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _depth_to_space_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../depth_to_space_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/depth_to_space_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction depthToSpace(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockSize, dataFormat } = attrs;\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(blockSize > 1, () => `blockSize should be > 1 for depthToSpace, but was: ${blockSize}`);\n    const batchSize = x.shape[0];\n    const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n    const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n    const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n    const outputHeight = inputHeight * blockSize;\n    const outputWidth = inputWidth * blockSize;\n    const outputDepth = inputDepth / (blockSize * blockSize);\n    const outputShape = (dataFormat === 'NHWC') ?\n        [batchSize, outputHeight, outputWidth, outputDepth] :\n        [batchSize, outputDepth, outputHeight, outputWidth];\n    const program = new _depth_to_space_gpu__WEBPACK_IMPORTED_MODULE_1__.DepthToSpaceProgram(outputShape, blockSize, dataFormat);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nconst depthToSpaceConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.DepthToSpace,\n    backendName: 'webgl',\n    kernelFunc: depthToSpace\n};\n//# sourceMappingURL=DepthToSpace.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthToSpace.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNative.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNative.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export depthwiseConv2dNative [provided] [no usage info] [missing usage info prevents renaming] */
/*! export depthwiseConv2dNativeConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthwiseConv2dNative\": () => /* binding */ depthwiseConv2dNative,\n/* harmony export */   \"depthwiseConv2dNativeConfig\": () => /* binding */ depthwiseConv2dNativeConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _conv_gpu_depthwise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../conv_gpu_depthwise */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu_depthwise.js\");\n/* harmony import */ var _conv_packed_gpu_depthwise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../conv_packed_gpu_depthwise */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_packed_gpu_depthwise.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction depthwiseConv2dNative(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dilations, dimRoundingMode } = attrs;\n    let $dilations = dilations;\n    if ($dilations == null) {\n        $dilations = [1, 1];\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.eitherStridesOrDilationsAreOne(strides, $dilations), () => 'Error in depthwiseConv2d: Either strides or dilations must be ' +\n        `1. Got strides ${strides} and dilations '${$dilations}'`);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true /* depthwise */);\n    let program;\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_DEPTHWISECONV') && convInfo.strideWidth <= 2 &&\n        convInfo.outChannels / convInfo.inChannels === 1) {\n        program = new _conv_packed_gpu_depthwise__WEBPACK_IMPORTED_MODULE_1__.DepthwiseConvPacked2DProgram(convInfo);\n    }\n    else {\n        program = new _conv_gpu_depthwise__WEBPACK_IMPORTED_MODULE_2__.DepthwiseConv2DProgram(convInfo);\n    }\n    return backend.runWebGLProgram(program, [x, filter], 'float32');\n}\nconst depthwiseConv2dNativeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.DepthwiseConv2dNative,\n    backendName: 'webgl',\n    kernelFunc: depthwiseConv2dNative,\n};\n//# sourceMappingURL=DepthwiseConv2dNative.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNative.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNativeBackpropFilter.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNativeBackpropFilter.js ***!
  \*********************************************************************************************************/
/*! namespace exports */
/*! export depthwiseConv2dNativeBackpropFilter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export depthwiseConv2dNativeBackpropFilterConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthwiseConv2dNativeBackpropFilter\": () => /* binding */ depthwiseConv2dNativeBackpropFilter,\n/* harmony export */   \"depthwiseConv2dNativeBackpropFilterConfig\": () => /* binding */ depthwiseConv2dNativeBackpropFilterConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _conv_backprop_gpu_depthwise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../conv_backprop_gpu_depthwise */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu_depthwise.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction depthwiseConv2dNativeBackpropFilter(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, dy } = inputs;\n    const { strides, dilations, pad, dimRoundingMode, filterShape } = attrs;\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv2DInfo(x.shape, filterShape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    const program = new _conv_backprop_gpu_depthwise__WEBPACK_IMPORTED_MODULE_1__.DepthwiseConv2DDerFilterProgram(convInfo);\n    return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\nconst depthwiseConv2dNativeBackpropFilterConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.DepthwiseConv2dNativeBackpropFilter,\n    backendName: 'webgl',\n    kernelFunc: depthwiseConv2dNativeBackpropFilter\n};\n//# sourceMappingURL=DepthwiseConv2dNativeBackpropFilter.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNativeBackpropFilter.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNativeBackpropInput.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNativeBackpropInput.js ***!
  \********************************************************************************************************/
/*! namespace exports */
/*! export depthwiseConv2dNativeBackpropInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export depthwiseConv2dNativeBackpropInputConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthwiseConv2dNativeBackpropInput\": () => /* binding */ depthwiseConv2dNativeBackpropInput,\n/* harmony export */   \"depthwiseConv2dNativeBackpropInputConfig\": () => /* binding */ depthwiseConv2dNativeBackpropInputConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _conv_backprop_gpu_depthwise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../conv_backprop_gpu_depthwise */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_backprop_gpu_depthwise.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction depthwiseConv2dNativeBackpropInput(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, filter } = inputs;\n    const { strides, dilations, pad, dimRoundingMode, inputShape } = attrs;\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv2DInfo(inputShape, filter.shape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    const program = new _conv_backprop_gpu_depthwise__WEBPACK_IMPORTED_MODULE_1__.DepthwiseConv2DDerInputProgram(convInfo);\n    return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\nconst depthwiseConv2dNativeBackpropInputConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.DepthwiseConv2dNativeBackpropInput,\n    backendName: 'webgl',\n    kernelFunc: depthwiseConv2dNativeBackpropInput\n};\n//# sourceMappingURL=DepthwiseConv2dNativeBackpropInput.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNativeBackpropInput.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Diag.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Diag.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export diag [provided] [no usage info] [missing usage info prevents renaming] */
/*! export diagConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"diag\": () => /* binding */ diag,\n/* harmony export */   \"diagConfig\": () => /* binding */ diagConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _diag_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../diag_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/diag_gpu.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction diag(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    const outShape = [...x.shape, ...x.shape];\n    const xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape);\n    const flat = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x }, backend, attrs: { shape: [xSize] } });\n    const program = new _diag_gpu__WEBPACK_IMPORTED_MODULE_2__.DiagProgram(xSize);\n    const res = backend.runWebGLProgram(program, [flat], flat.dtype);\n    const out = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: res }, backend, attrs: { shape: outShape } });\n    backend.disposeIntermediateTensorInfo(flat);\n    backend.disposeIntermediateTensorInfo(res);\n    return out;\n}\nconst diagConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Diag,\n    backendName: 'webgl',\n    kernelFunc: diag\n};\n//# sourceMappingURL=Diag.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Diag.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Dilation2D.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Dilation2D.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export dilation2D [provided] [no usage info] [missing usage info prevents renaming] */
/*! export dilation2DConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dilation2D\": () => /* binding */ dilation2D,\n/* harmony export */   \"dilation2DConfig\": () => /* binding */ dilation2DConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _dilation_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dilation_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/dilation_gpu.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction dilation2D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dilations } = attrs;\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, 'NHWC' /* dataFormat */, dilations);\n    let out;\n    const program = new _dilation_gpu__WEBPACK_IMPORTED_MODULE_1__.Dilation2DProgram(convInfo);\n    out = backend.runWebGLProgram(program, [x, filter], 'float32');\n    const outReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: out }, backend, attrs: { shape: convInfo.outShape } });\n    backend.disposeIntermediateTensorInfo(out);\n    return outReshaped;\n}\nconst dilation2DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Dilation2D,\n    backendName: 'webgl',\n    kernelFunc: dilation2D,\n};\n//# sourceMappingURL=Dilation2D.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Dilation2D.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Elu.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Elu.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export eluConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eluConfig\": () => /* binding */ eluConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst ELU = `return (x >= 0.0) ? x : (exp(x) - 1.0);`;\nconst ELU_PACKED = `\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n`;\nconst elu = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: ELU, packedOpSnippet: ELU_PACKED });\nconst eluConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Elu,\n    backendName: 'webgl',\n    kernelFunc: elu\n};\n//# sourceMappingURL=Elu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Elu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/EluGrad.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/EluGrad.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export eluGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eluGradConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eluGrad\": () => /* binding */ eluGrad,\n/* harmony export */   \"eluGradConfig\": () => /* binding */ eluGradConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _binaryop_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../binaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_gpu.js\");\n/* harmony import */ var _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../binaryop_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst ELU_DER = `return (b >= 1.0) ? a : a * (b + 1.0);`;\nconst ELU_DER_PACKED = `\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n`;\nconst eluGrad = (args) => {\n    const { inputs, backend } = args;\n    const { dy, y } = inputs;\n    const program = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n        new _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.BinaryOpPackedProgram(ELU_DER_PACKED, dy.shape, y.shape) :\n        new _binaryop_gpu__WEBPACK_IMPORTED_MODULE_2__.BinaryOpProgram(ELU_DER, dy.shape, y.shape);\n    return backend.runWebGLProgram(program, [dy, y], dy.dtype);\n};\nconst eluGradConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.EluGrad,\n    backendName: 'webgl',\n    kernelFunc: eluGrad\n};\n//# sourceMappingURL=EluGrad.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/EluGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Equal.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Equal.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export equal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export equalConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"equal\": () => /* binding */ equal,\n/* harmony export */   \"equalConfig\": () => /* binding */ equalConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst PACKED_EQUAL = `\n  return vec4(equal(a, b));\n`;\nconst EQUAL = `return float(a == b);`;\nconst equal = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.binaryKernelFunc)({ opSnippet: EQUAL, packedOpSnippet: PACKED_EQUAL, dtype: 'bool' });\nconst equalConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Equal,\n    backendName: 'webgl',\n    kernelFunc: equal\n};\n//# sourceMappingURL=Equal.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Equal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Erf.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Erf.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export erf [provided] [no usage info] [missing usage info prevents renaming] */
/*! export erfConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"erf\": () => /* binding */ erf,\n/* harmony export */   \"erfConfig\": () => /* binding */ erfConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst ERF = `\n  // Error function is calculated approximately with elementary function.\n  // See \"Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables\", Abramowitz and Stegun.\n  float p = ${_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.ERF_P};\n  float a1 = ${_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.ERF_A1};\n  float a2 = ${_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.ERF_A2};\n  float a3 = ${_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.ERF_A3};\n  float a4 = ${_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.ERF_A4};\n  float a5 = ${_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`;\nconst erf = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: ERF });\nconst erfConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Erf,\n    backendName: 'webgl',\n    kernelFunc: erf,\n};\n//# sourceMappingURL=Erf.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Erf.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Exp.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Exp.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export EXP [provided] [no usage info] [missing usage info prevents renaming] */
/*! export exp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EXP\": () => /* binding */ EXP,\n/* harmony export */   \"exp\": () => /* binding */ exp,\n/* harmony export */   \"expConfig\": () => /* binding */ expConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst EXP = `return exp(x);`;\nconst exp = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: EXP, packedOpSnippet: EXP, cpuKernelImpl: _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__.expImplCPU });\nconst expConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Exp,\n    backendName: 'webgl',\n    kernelFunc: exp\n};\n//# sourceMappingURL=Exp.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Exp.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ExpandDims.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ExpandDims.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export expandDims [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expandDimsConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"expandDims\": () => /* binding */ expandDims,\n/* harmony export */   \"expandDimsConfig\": () => /* binding */ expandDimsConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction expandDims(args) {\n    const { inputs, attrs, backend } = args;\n    const { dim } = attrs;\n    const { input } = inputs;\n    const inputRank = input.shape.length;\n    const newShape = input.shape.slice();\n    let $dim = dim;\n    if (dim < 0) {\n        // Negative value is counted from the tail of rank.\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(-(inputRank + 1) <= dim, () => `Axis must be in the interval [${-(inputRank + 1)}, ${inputRank}]`);\n        $dim = inputRank + dim + 1;\n    }\n    newShape.splice($dim, 0, 1);\n    return (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: input }, backend, attrs: { shape: newShape } });\n}\nconst expandDimsConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ExpandDims,\n    backendName: 'webgl',\n    kernelFunc: expandDims,\n};\n//# sourceMappingURL=ExpandDims.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ExpandDims.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Expm1.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Expm1.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export expm1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expm1Config [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"expm1\": () => /* binding */ expm1,\n/* harmony export */   \"expm1Config\": () => /* binding */ expm1Config\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst EXPM1 = `return exp(x) - 1.0;`;\nconst expm1 = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: EXPM1, packedOpSnippet: EXPM1, cpuKernelImpl: _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__.expm1ImplCPU });\nconst expm1Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Expm1,\n    backendName: 'webgl',\n    kernelFunc: expm1\n};\n//# sourceMappingURL=Expm1.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Expm1.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FFT.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FFT.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export fft [provided] [no usage info] [missing usage info prevents renaming] */
/*! export fftConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fft\": () => /* binding */ fft,\n/* harmony export */   \"fftConfig\": () => /* binding */ fftConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _FFT_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FFT_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FFT_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction fft(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    return (0,_FFT_impl__WEBPACK_IMPORTED_MODULE_1__.fftImpl)(input, false /* inverse */, backend);\n}\nconst fftConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.FFT,\n    backendName: 'webgl',\n    kernelFunc: fft\n};\n//# sourceMappingURL=FFT.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FFT.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FFT_impl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FFT_impl.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export fftImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fftImpl\": () => /* binding */ fftImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _fft_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../fft_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/fft_gpu.js\");\n/* harmony import */ var _Complex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Complex */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Complex.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction fftImpl(x, inverse, backend) {\n    const xData = backend.texData.get(x.dataId);\n    const inputSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape);\n    // Collapse all outer dimensions to a single batch dimension.\n    const innerDimensionSize = x.shape[x.shape.length - 1];\n    const batch = inputSize / innerDimensionSize;\n    const input2D = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x }, backend, attrs: { shape: [batch, innerDimensionSize] } });\n    const xShape = input2D.shape;\n    const realProgram = new _fft_gpu__WEBPACK_IMPORTED_MODULE_2__.FFTProgram('real', xShape, inverse);\n    const imagProgram = new _fft_gpu__WEBPACK_IMPORTED_MODULE_2__.FFTProgram('imag', xShape, inverse);\n    const inputs = [\n        {\n            dataId: xData.complexTensorInfos.real.dataId,\n            dtype: xData.complexTensorInfos.real.dtype,\n            shape: xShape\n        },\n        {\n            dataId: xData.complexTensorInfos.imag.dataId,\n            dtype: xData.complexTensorInfos.imag.dtype,\n            shape: xShape\n        }\n    ];\n    const realPart = backend.runWebGLProgram(realProgram, inputs, 'float32');\n    const imagPart = backend.runWebGLProgram(imagProgram, inputs, 'float32');\n    const complexOutput = (0,_Complex__WEBPACK_IMPORTED_MODULE_3__.complex)({ inputs: { real: realPart, imag: imagPart }, backend });\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(imagPart);\n    const complexOutputReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: complexOutput }, backend, attrs: { shape: x.shape } });\n    backend.disposeIntermediateTensorInfo(input2D);\n    backend.disposeIntermediateTensorInfo(complexOutput);\n    return complexOutputReshaped;\n}\n//# sourceMappingURL=FFT_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FFT_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Fill.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Fill.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export fill [provided] [no usage info] [missing usage info prevents renaming] */
/*! export fillConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fill\": () => /* binding */ fill,\n/* harmony export */   \"fillConfig\": () => /* binding */ fillConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _fill_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fill_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/fill_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction fill(args) {\n    const { backend, attrs } = args;\n    const { shape, value } = attrs;\n    let { dtype } = attrs;\n    dtype = dtype || _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.inferDtype(value);\n    if (dtype === 'string') {\n        // String type should be handled in CPU memory.\n        const values = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.getArrayFromDType(dtype, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(shape));\n        values.fill(value);\n        return backend.makeTensorInfo(shape, dtype, values);\n    }\n    else {\n        const program = new _fill_gpu__WEBPACK_IMPORTED_MODULE_1__.FillProgram(shape, value);\n        const customSetup = program.getCustomSetupFunc(value);\n        return backend.runWebGLProgram(program, [], dtype, customSetup);\n    }\n}\nconst fillConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Fill,\n    backendName: 'webgl',\n    kernelFunc: fill\n};\n//# sourceMappingURL=Fill.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Fill.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FlipLeftRight.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FlipLeftRight.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export flipLeftRightConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"flipLeftRightConfig\": () => /* binding */ flipLeftRightConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _flip_left_right_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../flip_left_right_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/flip_left_right_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst flipLeftRightConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.FlipLeftRight,\n    backendName: 'webgl',\n    kernelFunc: ({ inputs, backend }) => {\n        const { image } = inputs;\n        const webglBackend = backend;\n        const program = new _flip_left_right_gpu__WEBPACK_IMPORTED_MODULE_1__.FlipLeftRightProgram(image.shape);\n        const output = webglBackend.runWebGLProgram(program, [image], image.dtype);\n        return output;\n    }\n};\n//# sourceMappingURL=FlipLeftRight.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FlipLeftRight.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Floor.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Floor.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export floor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export floorConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"floor\": () => /* binding */ floor,\n/* harmony export */   \"floorConfig\": () => /* binding */ floorConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst FLOOR = `return floor(x);`;\nconst floor = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: FLOOR, packedOpSnippet: FLOOR, cpuKernelImpl: _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__.floorImplCPU });\nconst floorConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Floor,\n    backendName: 'webgl',\n    kernelFunc: floor,\n};\n//# sourceMappingURL=Floor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Floor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FloorDiv.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FloorDiv.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export floorDiv [provided] [no usage info] [missing usage info prevents renaming] */
/*! export floorDivConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"floorDiv\": () => /* binding */ floorDiv,\n/* harmony export */   \"floorDivConfig\": () => /* binding */ floorDivConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n// We use native integer division to deal with floating point imprecision. Since\n// we implement floor division and glsl implements truncated division, we\n// correct for this by subtracting 1 from result when the result is negative and\n// there is a remainder.\nconst INT_DIV = `\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n`;\nconst INT_DIV_PACKED = `\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n`;\nconst floorDiv = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.binaryKernelFunc)({ opSnippet: INT_DIV, packedOpSnippet: INT_DIV_PACKED, dtype: 'int32' });\nconst floorDivConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.FloorDiv,\n    backendName: 'webgl',\n    kernelFunc: floorDiv\n};\n//# sourceMappingURL=FloorDiv.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FloorDiv.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export fromPixelsConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fromPixelsConfig\": () => /* binding */ fromPixelsConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _tex_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tex_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js\");\n/* harmony import */ var _FromPixels_utils_from_pixels_gpu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FromPixels_utils/from_pixels_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels_utils/from_pixels_gpu.js\");\n/* harmony import */ var _FromPixels_utils_from_pixels_packed_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FromPixels_utils/from_pixels_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels_utils/from_pixels_packed_gpu.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\nconst fromPixelsConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.FromPixels,\n    backendName: 'webgl',\n    kernelFunc: fromPixels,\n};\nlet fromPixels2DContext;\nfunction fromPixels(args) {\n    const { inputs, backend, attrs } = args;\n    let { pixels } = inputs;\n    const { numChannels } = attrs;\n    const isVideo = typeof (HTMLVideoElement) !== 'undefined' &&\n        pixels instanceof HTMLVideoElement;\n    const isImage = typeof (HTMLImageElement) !== 'undefined' &&\n        pixels instanceof HTMLImageElement;\n    const isImageBitmap = typeof (ImageBitmap) !== 'undefined' &&\n        pixels instanceof ImageBitmap;\n    const [width, height] = isVideo ?\n        [\n            pixels.videoWidth,\n            pixels.videoHeight\n        ] :\n        [pixels.width, pixels.height];\n    const texShape = [height, width];\n    const outShape = [height, width, numChannels];\n    if (isImage || isVideo || isImageBitmap) {\n        if (fromPixels2DContext == null) {\n            fromPixels2DContext = document.createElement('canvas').getContext('2d');\n        }\n        fromPixels2DContext.canvas.width = width;\n        fromPixels2DContext.canvas.height = height;\n        fromPixels2DContext.drawImage(pixels, 0, 0, width, height);\n        pixels = fromPixels2DContext.canvas;\n    }\n    const tempPixelHandle = backend.makeTensorInfo(texShape, 'int32');\n    // This is a byte texture with pixels.\n    backend.texData.get(tempPixelHandle.dataId).usage = _tex_util__WEBPACK_IMPORTED_MODULE_1__.TextureUsage.PIXELS;\n    backend.gpgpu.uploadPixelDataToTexture(backend.getTexture(tempPixelHandle.dataId), pixels);\n    const program = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK') ?\n        new _FromPixels_utils_from_pixels_packed_gpu__WEBPACK_IMPORTED_MODULE_2__.FromPixelsPackedProgram(outShape) :\n        new _FromPixels_utils_from_pixels_gpu__WEBPACK_IMPORTED_MODULE_3__.FromPixelsProgram(outShape);\n    const res = backend.runWebGLProgram(program, [tempPixelHandle], 'int32');\n    backend.disposeData(tempPixelHandle.dataId);\n    return res;\n}\n//# sourceMappingURL=FromPixels.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels_utils/from_pixels_gpu.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels_utils/from_pixels_gpu.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! export FromPixelsProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FromPixelsProgram\": () => /* binding */ FromPixelsProgram\n/* harmony export */ });\n/* harmony import */ var _glsl_version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../glsl_version */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass FromPixelsProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_0__.getGlslDifferences)();\n        const [height, width,] = outputShape;\n        this.outputShape = outputShape;\n        this.userCode = `\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${width}.0, ${height}.0);\n\n        vec4 values = ${glsl.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=from_pixels_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels_utils/from_pixels_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels_utils/from_pixels_packed_gpu.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels_utils/from_pixels_packed_gpu.js ***!
  \*************************************************************************************************************/
/*! namespace exports */
/*! export FromPixelsPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FromPixelsPackedProgram\": () => /* binding */ FromPixelsPackedProgram\n/* harmony export */ });\n/* harmony import */ var _glsl_version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../glsl_version */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass FromPixelsPackedProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = false;\n        this.packedOutput = true;\n        const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_0__.getGlslDifferences)();\n        const [height, width,] = outputShape;\n        this.outputShape = outputShape;\n        this.userCode = `\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${width}.0, ${height}.0);\n            vec4 values = ${glsl.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${glsl.output} = result;\n      }\n    `;\n    }\n}\n//# sourceMappingURL=from_pixels_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels_utils/from_pixels_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FusedConv2D.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FusedConv2D.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export fusedConv2DConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export fusedConv2d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fusedConv2d\": () => /* binding */ fusedConv2d,\n/* harmony export */   \"fusedConv2DConfig\": () => /* binding */ fusedConv2DConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _conv_gpu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../conv_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _Conv2D_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Conv2D_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2D_impl.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\nfunction fusedConv2d(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter, bias, preluActivationWeights } = inputs;\n    const { strides, pad, dataFormat, dilations, dimRoundingMode, activation, leakyreluAlpha } = attrs;\n    const $dataFormat = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.convertConv2DDataFormat(dataFormat);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n    let out;\n    const intermediates = [];\n    if (convInfo.filterHeight === 1 && convInfo.filterWidth === 1 &&\n        convInfo.dilationHeight === 1 && convInfo.dilationWidth === 1 &&\n        convInfo.strideHeight === 1 && convInfo.strideWidth === 1 &&\n        (convInfo.padInfo.type === 'SAME' || convInfo.padInfo.type === 'VALID')) {\n        out = (0,_Conv2D_impl__WEBPACK_IMPORTED_MODULE_1__.conv2dByMatMul)({\n            x,\n            filter,\n            convInfo,\n            backend,\n            bias,\n            activation,\n            preluActivationWeights,\n            leakyreluAlpha\n        });\n    }\n    else if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_CONV_IM2COL') && x.shape[0] === 1) {\n        out = (0,_Conv2D_impl__WEBPACK_IMPORTED_MODULE_1__.conv2dWithIm2Row)({\n            x,\n            filter,\n            convInfo,\n            backend,\n            bias,\n            activation,\n            preluActivationWeights,\n            leakyreluAlpha\n        });\n    }\n    else {\n        const hasBias = bias != null;\n        const hasPreluActivationWeights = preluActivationWeights != null;\n        const hasLeakyreluAlpha = activation === 'leakyrelu';\n        const fusedActivation = activation ? (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__.mapActivationToShaderProgram)(activation, false) : null;\n        const program = new _conv_gpu__WEBPACK_IMPORTED_MODULE_3__.Conv2DProgram(convInfo, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n        const inputs = [x, filter];\n        if (bias) {\n            inputs.push(bias);\n        }\n        if (preluActivationWeights) {\n            inputs.push(preluActivationWeights);\n        }\n        if (hasLeakyreluAlpha) {\n            const $leakyreluAlpha = backend.makeTensorInfo([], 'float32', _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.createScalarValue(leakyreluAlpha, 'float32'));\n            inputs.push($leakyreluAlpha);\n            intermediates.push($leakyreluAlpha);\n        }\n        out = backend.runWebGLProgram(program, inputs, 'float32');\n    }\n    const outReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_4__.reshape)({ inputs: { x: out }, backend, attrs: { shape: convInfo.outShape } });\n    intermediates.push(out);\n    intermediates.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return outReshaped;\n}\nconst fusedConv2DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.FusedConv2D,\n    backendName: 'webgl',\n    kernelFunc: fusedConv2d,\n};\n//# sourceMappingURL=FusedConv2D.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FusedConv2D.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FusedDepthwiseConv2D.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FusedDepthwiseConv2D.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export fusedDepthwiseConv2D [provided] [no usage info] [missing usage info prevents renaming] */
/*! export fusedDepthwiseConv2DConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fusedDepthwiseConv2D\": () => /* binding */ fusedDepthwiseConv2D,\n/* harmony export */   \"fusedDepthwiseConv2DConfig\": () => /* binding */ fusedDepthwiseConv2DConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _conv_gpu_depthwise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../conv_gpu_depthwise */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_gpu_depthwise.js\");\n/* harmony import */ var _conv_packed_gpu_depthwise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../conv_packed_gpu_depthwise */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/conv_packed_gpu_depthwise.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction fusedDepthwiseConv2D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter, bias, preluActivationWeights } = inputs;\n    const { strides, pad, dilations, dimRoundingMode, activation, leakyreluAlpha } = attrs;\n    const intermediates = [];\n    let $dilations = dilations;\n    if ($dilations == null) {\n        $dilations = [1, 1];\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.eitherStridesOrDilationsAreOne(strides, $dilations), () => 'Error in depthwiseConv2d: Either strides or dilations must be ' +\n        `1. Got strides ${strides} and dilations '${$dilations}'`);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true /* depthwise */);\n    const shouldPackDepthwiseConv = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_DEPTHWISECONV') &&\n        convInfo.strideWidth <= 2 &&\n        convInfo.outChannels / convInfo.inChannels === 1;\n    const fusedActivation = activation ?\n        (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.mapActivationToShaderProgram)(activation, shouldPackDepthwiseConv) :\n        null;\n    const programInputs = [x, filter];\n    const hasBias = bias != null;\n    const hasPreluActivationWeights = preluActivationWeights != null;\n    const hasLeakyreluAlpha = activation === 'leakyrelu';\n    if (hasBias) {\n        programInputs.push(bias);\n    }\n    if (hasPreluActivationWeights) {\n        programInputs.push(preluActivationWeights);\n    }\n    if (hasLeakyreluAlpha) {\n        const $leakyreluAlpha = backend.makeTensorInfo([], 'float32', _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.createScalarValue(leakyreluAlpha, 'float32'));\n        programInputs.push($leakyreluAlpha);\n        intermediates.push($leakyreluAlpha);\n    }\n    let program;\n    if (shouldPackDepthwiseConv) {\n        program = new _conv_packed_gpu_depthwise__WEBPACK_IMPORTED_MODULE_2__.DepthwiseConvPacked2DProgram(convInfo, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n    }\n    else {\n        program = new _conv_gpu_depthwise__WEBPACK_IMPORTED_MODULE_3__.DepthwiseConv2DProgram(convInfo, hasBias, fusedActivation, hasPreluActivationWeights, hasLeakyreluAlpha);\n    }\n    const result = backend.runWebGLProgram(program, programInputs, 'float32');\n    intermediates.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n}\nconst fusedDepthwiseConv2DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.FusedDepthwiseConv2D,\n    backendName: 'webgl',\n    kernelFunc: fusedDepthwiseConv2D,\n};\n//# sourceMappingURL=FusedDepthwiseConv2D.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FusedDepthwiseConv2D.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GatherNd.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GatherNd.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export gatherNd [provided] [no usage info] [missing usage info prevents renaming] */
/*! export gatherNdConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gatherNd\": () => /* binding */ gatherNd,\n/* harmony export */   \"gatherNdConfig\": () => /* binding */ gatherNdConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _gather_nd_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../gather_nd_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/gather_nd_gpu.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction gatherNd(args) {\n    const { inputs, backend } = args;\n    const { params, indices } = inputs;\n    const indicesShape = indices.shape;\n    const sliceRank = indicesShape[indicesShape.length - 1];\n    const [resultShape, numSlices, sliceSize, strides] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.prepareAndValidate(params, indices);\n    const flattenIndices = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: indices }, backend, attrs: { shape: [numSlices, sliceRank] } });\n    const flattenX = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({\n        inputs: { x: params },\n        backend,\n        attrs: { shape: [(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(params.shape) / sliceSize), sliceSize] }\n    });\n    const program = new _gather_nd_gpu__WEBPACK_IMPORTED_MODULE_2__.GatherNDProgram(sliceRank, strides, [numSlices, sliceSize]);\n    const res = backend.runWebGLProgram(program, [flattenX, flattenIndices], flattenX.dtype);\n    const reshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: res }, backend, attrs: { shape: resultShape } });\n    backend.disposeIntermediateTensorInfo(flattenIndices);\n    backend.disposeIntermediateTensorInfo(flattenX);\n    backend.disposeIntermediateTensorInfo(res);\n    return reshaped;\n}\nconst gatherNdConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.GatherNd,\n    backendName: 'webgl',\n    kernelFunc: gatherNd\n};\n//# sourceMappingURL=GatherNd.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GatherNd.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GatherV2.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GatherV2.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export gatherV2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export gatherV2Config [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gatherV2\": () => /* binding */ gatherV2,\n/* harmony export */   \"gatherV2Config\": () => /* binding */ gatherV2Config\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _gather_gpu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../gather_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/gather_gpu.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction gatherV2(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, indices } = inputs;\n    const { axis, batchDims } = attrs;\n    const parsedAxis = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape)[0];\n    const shapeInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.segment_util.collectGatherOpShapeInfo(x, indices, parsedAxis, batchDims);\n    const indicesSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(indices.shape);\n    const toDispose = [];\n    const flattenX = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({\n        inputs: { x },\n        backend,\n        attrs: {\n            shape: [\n                shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n                shapeInfo.sliceSize\n            ]\n        }\n    });\n    const flattenIndex = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({\n        inputs: { x: indices },\n        backend,\n        attrs: { shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize] }\n    });\n    toDispose.push(flattenX);\n    toDispose.push(flattenIndex);\n    const flattenOutputShape = [\n        shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n        shapeInfo.sliceSize\n    ];\n    if (backend.shouldExecuteOnCPU([x, indices]) || x.dtype === 'string') {\n        const indicesBuf = backend.bufferSync(flattenIndex);\n        const xBuf = backend.bufferSync(flattenX);\n        const outBuf = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__.gatherV2ImplCPU)(xBuf, indicesBuf, flattenOutputShape);\n        toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n        return backend.makeTensorInfo(shapeInfo.outputShape, outBuf.dtype, outBuf.values);\n    }\n    const program = new _gather_gpu__WEBPACK_IMPORTED_MODULE_3__.GatherProgram(flattenX.shape, flattenOutputShape);\n    const res = backend.runWebGLProgram(program, [flattenX, flattenIndex], flattenX.dtype);\n    toDispose.push(res);\n    const reshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: res }, backend, attrs: { shape: shapeInfo.outputShape } });\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return reshaped;\n}\nconst gatherV2Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.GatherV2,\n    backendName: 'webgl',\n    kernelFunc: gatherV2\n};\n//# sourceMappingURL=GatherV2.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GatherV2.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Greater.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Greater.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export greater [provided] [no usage info] [missing usage info prevents renaming] */
/*! export greaterConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"greater\": () => /* binding */ greater,\n/* harmony export */   \"greaterConfig\": () => /* binding */ greaterConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst GREATER = `return float(a > b);`;\nconst GREATER_PACKED = `\n  return vec4(greaterThan(a, b));\n`;\nconst greater = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.binaryKernelFunc)({\n    opSnippet: GREATER,\n    packedOpSnippet: GREATER_PACKED,\n    cpuKernelImpl: _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__.greaterImplCPU,\n    dtype: 'bool'\n});\nconst greaterConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Greater,\n    backendName: 'webgl',\n    kernelFunc: greater\n};\n//# sourceMappingURL=Greater.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Greater.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GreaterEqual.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GreaterEqual.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export greaterEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export greaterEqualConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"greaterEqual\": () => /* binding */ greaterEqual,\n/* harmony export */   \"greaterEqualConfig\": () => /* binding */ greaterEqualConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst GREATER_EQUAL = `return float(a >= b);`;\nconst GREATER_EQUAL_PACKED = `\n  return vec4(greaterThanEqual(a, b));\n`;\nconst greaterEqual = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.binaryKernelFunc)({\n    opSnippet: GREATER_EQUAL,\n    packedOpSnippet: GREATER_EQUAL_PACKED,\n    dtype: 'bool'\n});\nconst greaterEqualConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.GreaterEqual,\n    backendName: 'webgl',\n    kernelFunc: greaterEqual\n};\n//# sourceMappingURL=GreaterEqual.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GreaterEqual.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IFFT.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IFFT.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export ifft [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ifftConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ifft\": () => /* binding */ ifft,\n/* harmony export */   \"ifftConfig\": () => /* binding */ ifftConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _FFT_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FFT_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FFT_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction ifft(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    return (0,_FFT_impl__WEBPACK_IMPORTED_MODULE_1__.fftImpl)(input, true /* inverse */, backend);\n}\nconst ifftConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.IFFT,\n    backendName: 'webgl',\n    kernelFunc: ifft\n};\n//# sourceMappingURL=IFFT.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IFFT.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export identity [provided] [no usage info] [missing usage info prevents renaming] */
/*! export identityConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"identity\": () => /* binding */ identity,\n/* harmony export */   \"identityConfig\": () => /* binding */ identityConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction identity(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    backend.incRef(x.dataId);\n    return { dataId: x.dataId, shape: x.shape, dtype: x.dtype };\n}\nconst identityConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Identity,\n    backendName: 'webgl',\n    kernelFunc: identity\n};\n//# sourceMappingURL=Identity.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Imag.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Imag.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export imag [provided] [no usage info] [missing usage info prevents renaming] */
/*! export imagConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"imag\": () => /* binding */ imag,\n/* harmony export */   \"imagConfig\": () => /* binding */ imagConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction imag(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    const inputData = backend.texData.get(input.dataId);\n    return (0,_Identity__WEBPACK_IMPORTED_MODULE_1__.identity)({ inputs: { x: inputData.complexTensorInfos.imag }, backend });\n}\nconst imagConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Imag,\n    backendName: 'webgl',\n    kernelFunc: imag\n};\n//# sourceMappingURL=Imag.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Imag.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsFinite.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsFinite.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export isFinite [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isFiniteConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isFinite\": () => /* binding */ isFinite,\n/* harmony export */   \"isFiniteConfig\": () => /* binding */ isFiniteConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst IS_FINITE = `return float(!isnan(x) && !isinf(x));`;\nconst isFinite = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: IS_FINITE, dtype: 'bool' });\nconst isFiniteConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.IsFinite,\n    backendName: 'webgl',\n    kernelFunc: isFinite,\n};\n//# sourceMappingURL=IsFinite.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsFinite.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsInf.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsInf.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export isInf [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isInfConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isInf\": () => /* binding */ isInf,\n/* harmony export */   \"isInfConfig\": () => /* binding */ isInfConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst IS_INF = `return float(isinf(x));`;\nconst isInf = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: IS_INF, dtype: 'bool' });\nconst isInfConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.IsInf,\n    backendName: 'webgl',\n    kernelFunc: isInf,\n};\n//# sourceMappingURL=IsInf.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsInf.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsNaN.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsNaN.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export isNaN [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isNaNConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isNaN\": () => /* binding */ isNaN,\n/* harmony export */   \"isNaNConfig\": () => /* binding */ isNaNConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst IS_NAN = `return float(isnan(x));`;\nconst isNaN = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: IS_NAN, dtype: 'bool' });\nconst isNaNConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.IsNan,\n    backendName: 'webgl',\n    kernelFunc: isNaN,\n};\n//# sourceMappingURL=IsNaN.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsNaN.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LRN.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LRN.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export LRNConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lrn [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lrn\": () => /* binding */ lrn,\n/* harmony export */   \"LRNConfig\": () => /* binding */ LRNConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _lrn_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lrn_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_gpu.js\");\n/* harmony import */ var _lrn_packed_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lrn_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_packed_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst lrn = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { depthRadius, bias, alpha, beta } = attrs;\n    const program = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_NORMALIZATION') ?\n        new _lrn_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.LRNPackedProgram(x.shape, depthRadius, bias, alpha, beta) :\n        new _lrn_gpu__WEBPACK_IMPORTED_MODULE_2__.LRNProgram(x.shape, depthRadius, bias, alpha, beta);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n};\n// tslint:disable-next-line: variable-name\nconst LRNConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LRN,\n    backendName: 'webgl',\n    kernelFunc: lrn\n};\n//# sourceMappingURL=LRN.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LRN.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LRNGrad.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LRNGrad.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export LRNGradConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lrnGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lrnGrad\": () => /* binding */ lrnGrad,\n/* harmony export */   \"LRNGradConfig\": () => /* binding */ LRNGradConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _lrn_grad_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lrn_grad_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_grad_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst lrnGrad = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x, y, dy } = inputs;\n    const { depthRadius, bias, alpha, beta } = attrs;\n    const program = new _lrn_grad_gpu__WEBPACK_IMPORTED_MODULE_1__.LRNGradProgram(x.shape, depthRadius, bias, alpha, beta);\n    return backend.runWebGLProgram(program, [x, y, dy], x.dtype);\n};\n// tslint:disable-next-line: variable-name\nconst LRNGradConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LRNGrad,\n    backendName: 'webgl',\n    kernelFunc: lrnGrad\n};\n//# sourceMappingURL=LRNGrad.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LRNGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LeakyRelu.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LeakyRelu.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export LEAKYRELU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LEAKYRELU_PACKED [provided] [no usage info] [missing usage info prevents renaming] */
/*! export leakyRelu [provided] [no usage info] [missing usage info prevents renaming] */
/*! export leakyReluConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LEAKYRELU\": () => /* binding */ LEAKYRELU,\n/* harmony export */   \"LEAKYRELU_PACKED\": () => /* binding */ LEAKYRELU_PACKED,\n/* harmony export */   \"leakyRelu\": () => /* binding */ leakyRelu,\n/* harmony export */   \"leakyReluConfig\": () => /* binding */ leakyReluConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _binaryop_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../binaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_gpu.js\");\n/* harmony import */ var _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../binaryop_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst LEAKYRELU = `return (a < 0.) ? b * a : a;`;\nconst LEAKYRELU_PACKED = `\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n`;\nfunction leakyRelu(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { alpha } = attrs;\n    const $alpha = backend.makeTensorInfo([], 'float32', _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.createScalarValue(alpha, 'float32'));\n    const program = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n        new _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.BinaryOpPackedProgram(LEAKYRELU_PACKED, x.shape, $alpha.shape) :\n        new _binaryop_gpu__WEBPACK_IMPORTED_MODULE_2__.BinaryOpProgram(LEAKYRELU, x.shape, $alpha.shape);\n    const result = backend.runWebGLProgram(program, [x, $alpha], x.dtype);\n    backend.disposeIntermediateTensorInfo($alpha);\n    return result;\n}\nconst leakyReluConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LeakyRelu,\n    backendName: 'webgl',\n    kernelFunc: leakyRelu\n};\n//# sourceMappingURL=LeakyRelu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LeakyRelu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Less.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Less.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export less [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lessConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"less\": () => /* binding */ less,\n/* harmony export */   \"lessConfig\": () => /* binding */ lessConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst LESS = `return float(a < b);`;\nconst LESS_PACKED = `\n  return vec4(lessThan(a, b));\n`;\nconst less = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.binaryKernelFunc)({\n    opSnippet: LESS,\n    packedOpSnippet: LESS_PACKED,\n    cpuKernelImpl: _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__.lessImplCPU,\n    dtype: 'bool'\n});\nconst lessConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Less,\n    backendName: 'webgl',\n    kernelFunc: less\n};\n//# sourceMappingURL=Less.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Less.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LessEqual.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LessEqual.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export LESS_EQUAL [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LESS_EQUAL_PACKED [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lessEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export lessEqualConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LESS_EQUAL\": () => /* binding */ LESS_EQUAL,\n/* harmony export */   \"LESS_EQUAL_PACKED\": () => /* binding */ LESS_EQUAL_PACKED,\n/* harmony export */   \"lessEqual\": () => /* binding */ lessEqual,\n/* harmony export */   \"lessEqualConfig\": () => /* binding */ lessEqualConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst LESS_EQUAL = `return float(a <= b);`;\nconst LESS_EQUAL_PACKED = `\n  return vec4(lessThanEqual(a, b));\n`;\nconst lessEqual = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.binaryKernelFunc)({ opSnippet: LESS_EQUAL, packedOpSnippet: LESS_EQUAL_PACKED, dtype: 'bool' });\nconst lessEqualConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LessEqual,\n    backendName: 'webgl',\n    kernelFunc: lessEqual\n};\n//# sourceMappingURL=LessEqual.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LessEqual.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LinSpace.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LinSpace.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export linSpace [provided] [no usage info] [missing usage info prevents renaming] */
/*! export linSpaceConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"linSpace\": () => /* binding */ linSpace,\n/* harmony export */   \"linSpaceConfig\": () => /* binding */ linSpaceConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction linSpace(args) {\n    const { backend, attrs } = args;\n    const { start, stop, num } = attrs;\n    // TODO: Use CPU implementation due to the precision problem in Safari.\n    const outVals = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__.linSpaceImplCPU)(start, stop, num);\n    return backend.makeTensorInfo([outVals.length], 'float32', outVals);\n}\nconst linSpaceConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LinSpace,\n    backendName: 'webgl',\n    kernelFunc: linSpace\n};\n//# sourceMappingURL=LinSpace.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LinSpace.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export log [provided] [no usage info] [missing usage info prevents renaming] */
/*! export logConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"log\": () => /* binding */ log,\n/* harmony export */   \"logConfig\": () => /* binding */ logConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst LOG = `if (x < 0.0) return NAN;\n  return log(x);`;\nconst LOG_PACKED = `\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n`;\nconst log = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: LOG, packedOpSnippet: LOG_PACKED, cpuKernelImpl: _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__.logImplCPU });\nconst logConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Log,\n    backendName: 'webgl',\n    kernelFunc: log\n};\n//# sourceMappingURL=Log.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log1p.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log1p.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export log1p [provided] [no usage info] [missing usage info prevents renaming] */
/*! export log1pConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"log1p\": () => /* binding */ log1p,\n/* harmony export */   \"log1pConfig\": () => /* binding */ log1pConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst LOG1P = `return log(1.0 + x);`;\nconst log1p = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: LOG1P });\nconst log1pConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Log1p,\n    backendName: 'webgl',\n    kernelFunc: log1p,\n};\n//# sourceMappingURL=Log1p.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log1p.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalAnd.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalAnd.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export logicalAnd [provided] [no usage info] [missing usage info prevents renaming] */
/*! export logicalAndConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicalAnd\": () => /* binding */ logicalAnd,\n/* harmony export */   \"logicalAndConfig\": () => /* binding */ logicalAndConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst LOGICAL_AND = `return float(a >= 1.0 && b >= 1.0);`;\nconst LOGICAL_AND_PACKED = `\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n`;\nconst logicalAnd = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.binaryKernelFunc)({\n    opSnippet: LOGICAL_AND,\n    packedOpSnippet: LOGICAL_AND_PACKED,\n    dtype: 'bool'\n});\nconst logicalAndConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LogicalAnd,\n    backendName: 'webgl',\n    kernelFunc: logicalAnd\n};\n//# sourceMappingURL=LogicalAnd.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalAnd.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalNot.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalNot.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export logicalNot [provided] [no usage info] [missing usage info prevents renaming] */
/*! export logicalNotConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicalNot\": () => /* binding */ logicalNot,\n/* harmony export */   \"logicalNotConfig\": () => /* binding */ logicalNotConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst LOGICAL_NOT = `return float(!(x >= 1.0));`;\nconst logicalNot = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: LOGICAL_NOT });\nconst logicalNotConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LogicalNot,\n    backendName: 'webgl',\n    kernelFunc: logicalNot,\n};\n//# sourceMappingURL=LogicalNot.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalNot.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalOr.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalOr.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export logicalOr [provided] [no usage info] [missing usage info prevents renaming] */
/*! export logicalOrConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicalOr\": () => /* binding */ logicalOr,\n/* harmony export */   \"logicalOrConfig\": () => /* binding */ logicalOrConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst LOGICAL_OR = `return float(a >= 1.0 || b >= 1.0);`;\nconst LOGICAL_OR_PACKED = `\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n`;\nconst logicalOr = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.binaryKernelFunc)({ opSnippet: LOGICAL_OR, packedOpSnippet: LOGICAL_OR_PACKED, dtype: 'bool' });\nconst logicalOrConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.LogicalOr,\n    backendName: 'webgl',\n    kernelFunc: logicalOr\n};\n//# sourceMappingURL=LogicalOr.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalOr.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Max.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Max.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export max [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maxConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"max\": () => /* binding */ max,\n/* harmony export */   \"maxConfig\": () => /* binding */ maxConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Transpose_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transpose_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/* harmony import */ var _Max_impl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Max_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Max_impl.js\");\n/* harmony import */ var _Transpose_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transpose_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\nfunction max(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { reductionIndices, keepDims } = attrs;\n    const xRank = x.shape.length;\n    const origAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(reductionIndices, x.shape);\n    let axes = origAxes;\n    const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, xRank);\n    const maxInputIsTransposed = permutedAxes != null;\n    const shouldExecuteOnCPU = backend.shouldExecuteOnCPU([x]);\n    let maxInput = x;\n    if (maxInputIsTransposed) {\n        if (shouldExecuteOnCPU) {\n            const xTexData = backend.texData.get(maxInput.dataId);\n            const values = xTexData.values;\n            const newShape = new Array(xRank);\n            for (let i = 0; i < newShape.length; i++) {\n                newShape[i] = x.shape[permutedAxes[i]];\n            }\n            const maxInputValues = (0,_Transpose_impl__WEBPACK_IMPORTED_MODULE_1__.transposeImplCPU)(values, x.shape, x.dtype, permutedAxes, newShape);\n            maxInput = backend.makeTensorInfo(newShape, x.dtype);\n            const maxInputData = backend.texData.get(maxInput.dataId);\n            maxInputData.values = maxInputValues;\n        }\n        else {\n            maxInput = (0,_Transpose_impl__WEBPACK_IMPORTED_MODULE_2__.transposeImpl)(x, permutedAxes, backend);\n        }\n        axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, xRank);\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('max', axes, xRank);\n    const [maxOutShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes(maxInput.shape, axes);\n    let outShape = maxOutShape;\n    if (keepDims) {\n        // rather than reshape at the end, set the target shape here.\n        outShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(maxOutShape, origAxes);\n    }\n    let out;\n    if (shouldExecuteOnCPU) {\n        const xTexData = backend.texData.get(maxInput.dataId);\n        const values = xTexData.values;\n        const outValues = (0,_Transpose_impl__WEBPACK_IMPORTED_MODULE_1__.maxImplCPU)(values, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape), outShape, x.dtype);\n        out = backend.makeTensorInfo(outShape, x.dtype);\n        const outData = backend.texData.get(out.dataId);\n        outData.values = outValues;\n    }\n    else {\n        out = (0,_Max_impl__WEBPACK_IMPORTED_MODULE_3__.maxImpl)(maxInput, reduceShape, outShape, backend);\n    }\n    if (maxInputIsTransposed) {\n        backend.disposeIntermediateTensorInfo(maxInput);\n    }\n    return out;\n}\nconst maxConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Max,\n    backendName: 'webgl',\n    kernelFunc: max\n};\n//# sourceMappingURL=Max.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Max.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export maxPool [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maxPoolConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPool\": () => /* binding */ maxPool,\n/* harmony export */   \"maxPoolConfig\": () => /* binding */ maxPoolConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _pool_gpu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pool_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/pool_gpu.js\");\n/* harmony import */ var _webgl_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../webgl_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction maxPool(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    (0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'maxPool');\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = 1;\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    if (convInfo.filterWidth === 1 && convInfo.filterHeight === 1 &&\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(convInfo.inShape, convInfo.outShape)) {\n        return (0,_Identity__WEBPACK_IMPORTED_MODULE_2__.identity)({ inputs: { x }, backend });\n    }\n    const maxPoolProgram = new _pool_gpu__WEBPACK_IMPORTED_MODULE_3__.Pool2DProgram(convInfo, 'max', false);\n    return backend.runWebGLProgram(maxPoolProgram, [x], x.dtype);\n}\nconst maxPoolConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.MaxPool,\n    backendName: 'webgl',\n    kernelFunc: maxPool\n};\n//# sourceMappingURL=MaxPool.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool3D.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool3D.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export maxPool3DConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maxPool3d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPool3d\": () => /* binding */ maxPool3d,\n/* harmony export */   \"maxPool3DConfig\": () => /* binding */ maxPool3DConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _pool_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pool_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/pool_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction maxPool3d(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { filterSize, strides, pad, dataFormat, dimRoundingMode } = attrs;\n    const dilations = [1, 1, 1];\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode, dataFormat);\n    const maxPoolProgram = new _pool_gpu__WEBPACK_IMPORTED_MODULE_1__.Pool3DProgram(convInfo, 'max', false);\n    return backend.runWebGLProgram(maxPoolProgram, [x], x.dtype);\n}\nconst maxPool3DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.MaxPool3D,\n    backendName: 'webgl',\n    kernelFunc: maxPool3d\n};\n//# sourceMappingURL=MaxPool3D.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool3D.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool3DGrad.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool3DGrad.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export maxPool3DGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maxPoolGrad3DConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPool3DGrad\": () => /* binding */ maxPool3DGrad,\n/* harmony export */   \"maxPoolGrad3DConfig\": () => /* binding */ maxPoolGrad3DConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _max_pool_backprop_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../max_pool_backprop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/max_pool_backprop_gpu.js\");\n/* harmony import */ var _pool_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pool_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/pool_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction maxPool3DGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input } = inputs;\n    const x = input;\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const dilations = [1, 1, 1];\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool3DInfo(x.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n    const maxPool3dPositionsProgram = new _pool_gpu__WEBPACK_IMPORTED_MODULE_1__.Pool3DProgram(convInfo, 'max', true /* get positions */);\n    const maxPool3dPositions = backend.runWebGLProgram(maxPool3dPositionsProgram, [x], x.dtype);\n    const maxPoolBackpropProgram = new _max_pool_backprop_gpu__WEBPACK_IMPORTED_MODULE_2__.MaxPool3DBackpropProgram(convInfo);\n    const result = backend.runWebGLProgram(maxPoolBackpropProgram, [dy, maxPool3dPositions], x.dtype);\n    backend.disposeIntermediateTensorInfo(maxPool3dPositions);\n    return result;\n}\nconst maxPoolGrad3DConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.MaxPool3DGrad,\n    backendName: 'webgl',\n    kernelFunc: maxPool3DGrad\n};\n//# sourceMappingURL=MaxPool3DGrad.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool3DGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolGrad.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolGrad.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export maxPoolGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maxPoolGradConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPoolGrad\": () => /* binding */ maxPoolGrad,\n/* harmony export */   \"maxPoolGradConfig\": () => /* binding */ maxPoolGradConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _max_pool_backprop_gpu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../max_pool_backprop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/max_pool_backprop_gpu.js\");\n/* harmony import */ var _pool_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pool_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/pool_gpu.js\");\n/* harmony import */ var _webgl_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../webgl_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction maxPoolGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { dy, input, output } = inputs;\n    const x = input;\n    (0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)([input, output], 'maxPoolGrad');\n    const { filterSize, strides, pad, dimRoundingMode } = attrs;\n    const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool2DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n    const getPositions = true;\n    const maxPoolPositionsProgram = new _pool_gpu__WEBPACK_IMPORTED_MODULE_2__.Pool2DProgram(convInfo, 'max', getPositions);\n    const maxPoolPositions = backend.runWebGLProgram(maxPoolPositionsProgram, [x], x.dtype);\n    const maxPoolBackPropProgram = new _max_pool_backprop_gpu__WEBPACK_IMPORTED_MODULE_3__.MaxPool2DBackpropProgram(convInfo);\n    const result = backend.runWebGLProgram(maxPoolBackPropProgram, [dy, maxPoolPositions], x.dtype);\n    backend.disposeIntermediateTensorInfo(maxPoolPositions);\n    return result;\n}\nconst maxPoolGradConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.MaxPoolGrad,\n    backendName: 'webgl',\n    kernelFunc: maxPoolGrad\n};\n//# sourceMappingURL=MaxPoolGrad.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolWithArgmax.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolWithArgmax.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export maxPoolWithArgmaxConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPoolWithArgmaxConfig\": () => /* binding */ maxPoolWithArgmaxConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _MaxPoolWithArgmax_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MaxPoolWithArgmax_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolWithArgmax_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst maxPoolWithArgmaxConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.MaxPoolWithArgmax,\n    backendName: 'webgl',\n    kernelFunc: ({ inputs, attrs, backend }) => {\n        const { x } = inputs;\n        const { filterSize, strides, pad, includeBatchInIndex } = attrs;\n        const webglBackend = backend;\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(x.shape.length === 4, () => `Error in maxPool: input must be rank 4 but got rank ${x.shape.length}.`);\n        const dilations = [1, 1];\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n            `Got strides ${strides} and dilations '${dilations}'`);\n        const convInfo = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computePool2DInfo(x.shape, filterSize, strides, dilations, pad);\n        const [result, indexes] = (0,_MaxPoolWithArgmax_impl__WEBPACK_IMPORTED_MODULE_1__.maxPoolWithArgmaxImpl)(x, includeBatchInIndex, convInfo, webglBackend);\n        return [result, indexes];\n    }\n};\n//# sourceMappingURL=MaxPoolWithArgmax.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolWithArgmax.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolWithArgmax_impl.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolWithArgmax_impl.js ***!
  \********************************************************************************************/
/*! namespace exports */
/*! export maxPoolWithArgmaxImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPoolWithArgmaxImpl\": () => /* binding */ maxPoolWithArgmaxImpl\n/* harmony export */ });\n/* harmony import */ var _pool_gpu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pool_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/pool_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction maxPoolWithArgmaxImpl(x, includeBatchInIndex, convInfo, backend) {\n    let program = new _pool_gpu__WEBPACK_IMPORTED_MODULE_0__.Pool2DProgram(convInfo, 'max', false);\n    const poolOutput = backend.runWebGLProgram(program, [x], 'float32');\n    program = new _pool_gpu__WEBPACK_IMPORTED_MODULE_0__.Pool2DProgram(convInfo, 'max', true, true, includeBatchInIndex);\n    const indexOutput = backend.runWebGLProgram(program, [x], 'float32');\n    return [poolOutput, indexOutput];\n}\n//# sourceMappingURL=MaxPoolWithArgmax_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolWithArgmax_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Max_impl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Max_impl.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export maxImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxImpl\": () => /* binding */ maxImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_reduce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/reduce */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reduce.js\");\n/* harmony import */ var _kernels_Reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernels/Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction maxImpl(x, reduceShape, outShape, backend) {\n    const inSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    const xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape);\n    const batchSize = xSize / inSize;\n    const reshapedInput = (0,_kernels_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x }, attrs: { shape: [batchSize, inSize] }, backend });\n    const reduced = (0,_kernel_utils_reduce__WEBPACK_IMPORTED_MODULE_2__.reduce)(reshapedInput, x.dtype, 'max', backend);\n    const reshapedOutput = (0,_kernels_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: reduced }, attrs: { shape: outShape }, backend });\n    backend.disposeIntermediateTensorInfo(reshapedInput);\n    backend.disposeIntermediateTensorInfo(reduced);\n    return reshapedOutput;\n}\n//# sourceMappingURL=Max_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Max_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Maximum.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Maximum.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export maximum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maximumConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maximum\": () => /* binding */ maximum,\n/* harmony export */   \"maximumConfig\": () => /* binding */ maximumConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _binaryop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../binaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_gpu.js\");\n/* harmony import */ var _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../binaryop_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\nconst MAXIMUM = _binaryop_gpu__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET + `\n  return max(a, b);\n`;\nconst MAXIMUM_PACKED = `\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  ` +\n    _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_2__.CHECK_NAN_SNIPPET + `\n  return result;\n`;\nconst maximum = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_3__.binaryKernelFunc)({\n    opSnippet: MAXIMUM,\n    packedOpSnippet: MAXIMUM_PACKED,\n    cpuKernelImpl: _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_4__.maximumImplCPU\n});\nconst maximumConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Maximum,\n    backendName: 'webgl',\n    kernelFunc: maximum\n};\n//# sourceMappingURL=Maximum.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Maximum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mean.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mean.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export meanConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"meanConfig\": () => /* binding */ meanConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Mean_impl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Mean_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mean_impl.js\");\n/* harmony import */ var _Transpose_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transpose_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/* harmony import */ var _Transpose_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transpose_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst meanConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Mean,\n    backendName: 'webgl',\n    kernelFunc: ({ inputs, attrs, backend }) => {\n        const { x } = inputs;\n        const { keepDims, axis } = attrs;\n        const webglBackend = backend;\n        const xRank = x.shape.length;\n        const origAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n        let axes = origAxes;\n        const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, xRank);\n        const meanInputIsTransposed = permutedAxes != null;\n        const shouldExecuteOnCPU = webglBackend.shouldExecuteOnCPU([x]);\n        const intermediates = [];\n        let meanInput = x;\n        if (meanInputIsTransposed) {\n            if (shouldExecuteOnCPU) {\n                const xTexData = webglBackend.texData.get(meanInput.dataId);\n                const values = xTexData.values;\n                const newShape = new Array(xRank);\n                for (let i = 0; i < newShape.length; i++) {\n                    newShape[i] = x.shape[permutedAxes[i]];\n                }\n                const meanInputValues = (0,_Transpose_impl__WEBPACK_IMPORTED_MODULE_1__.transposeImplCPU)(values, x.shape, x.dtype, permutedAxes, newShape);\n                meanInput = webglBackend.makeTensorInfo(newShape, x.dtype);\n                const meanInputData = webglBackend.texData.get(meanInput.dataId);\n                meanInputData.values = meanInputValues;\n            }\n            else {\n                meanInput = (0,_Transpose_impl__WEBPACK_IMPORTED_MODULE_2__.transposeImpl)(x, permutedAxes, webglBackend);\n            }\n            intermediates.push(meanInput);\n            axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, xRank);\n        }\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('sum', axes, xRank);\n        const [meanOutShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes(meanInput.shape, axes);\n        let outShape = meanOutShape;\n        if (keepDims) {\n            // rather than reshape at the end, set the target shape here.\n            outShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(meanOutShape, origAxes);\n        }\n        const out = (0,_Mean_impl__WEBPACK_IMPORTED_MODULE_3__.meanImpl)(meanInput, reduceShape, outShape, webglBackend);\n        for (const i of intermediates) {\n            webglBackend.disposeIntermediateTensorInfo(i);\n        }\n        return out;\n    }\n};\n//# sourceMappingURL=Mean.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mean.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mean_impl.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mean_impl.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export meanImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"meanImpl\": () => /* binding */ meanImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_reduce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/reduce */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reduce.js\");\n/* harmony import */ var _kernels_Reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernels/Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction meanImpl(x, reduceShape, outShape, backend) {\n    const inSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    const xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape);\n    const batchSize = xSize / inSize;\n    const reshapedInput = (0,_kernels_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x }, attrs: { shape: [batchSize, inSize] }, backend });\n    const reduced = (0,_kernel_utils_reduce__WEBPACK_IMPORTED_MODULE_2__.reduce)(reshapedInput, 'float32', 'mean', backend);\n    const reshapedOutput = (0,_kernels_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: reduced }, attrs: { shape: outShape }, backend });\n    backend.disposeIntermediateTensorInfo(reshapedInput);\n    backend.disposeIntermediateTensorInfo(reduced);\n    return reshapedOutput;\n}\n//# sourceMappingURL=Mean_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mean_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Min.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Min.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export min [provided] [no usage info] [missing usage info prevents renaming] */
/*! export minConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"min\": () => /* binding */ min,\n/* harmony export */   \"minConfig\": () => /* binding */ minConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_reduce__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_utils/reduce */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reduce.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction min(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    const xRank = x.shape.length;\n    const origAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, xRank);\n    let permutedX = x;\n    if (permutedAxes != null) {\n        permutedX = (0,_Transpose__WEBPACK_IMPORTED_MODULE_1__.transpose)({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, x.shape.length);\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('min', axes, xRank);\n    const [outShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n    const inSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    const a2D = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n    const reduced = (0,_kernel_utils_reduce__WEBPACK_IMPORTED_MODULE_3__.reduce)(a2D, a2D.dtype, 'min', backend);\n    let res;\n    if (keepDims) {\n        const newShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(outShape, origAxes);\n        res = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: reduced }, backend, attrs: { shape: newShape } });\n    }\n    else {\n        res = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: reduced }, backend, attrs: { shape: outShape } });\n    }\n    backend.disposeIntermediateTensorInfo(a2D);\n    backend.disposeIntermediateTensorInfo(reduced);\n    if (permutedAxes != null) {\n        backend.disposeIntermediateTensorInfo(permutedX);\n    }\n    return res;\n}\nconst minConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Min,\n    backendName: 'webgl',\n    kernelFunc: min\n};\n//# sourceMappingURL=Min.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Min.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Minimum.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Minimum.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export minimum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export minimumConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"minimum\": () => /* binding */ minimum,\n/* harmony export */   \"minimumConfig\": () => /* binding */ minimumConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _binaryop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../binaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_gpu.js\");\n/* harmony import */ var _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../binaryop_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\nconst MINIMUM = _binaryop_gpu__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET + `\n  return min(a, b);\n`;\nconst MINIMUM_PACKED = `\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  ` +\n    _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_2__.CHECK_NAN_SNIPPET + `\n  return result;\n`;\nconst minimum = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_3__.binaryKernelFunc)({\n    opSnippet: MINIMUM,\n    packedOpSnippet: MINIMUM_PACKED,\n    cpuKernelImpl: _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_4__.minimumImplCPU\n});\nconst minimumConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Minimum,\n    backendName: 'webgl',\n    kernelFunc: minimum\n};\n//# sourceMappingURL=Minimum.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Minimum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MirrorPad.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MirrorPad.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export mirrorPadConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export mirrorPadKernelFunc [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mirrorPadKernelFunc\": () => /* binding */ mirrorPadKernelFunc,\n/* harmony export */   \"mirrorPadConfig\": () => /* binding */ mirrorPadConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _mirror_pad_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mirror_pad_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/mirror_pad_gpu.js\");\n/* harmony import */ var _mirror_pad_packed_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mirror_pad_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/mirror_pad_packed_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst mirrorPadKernelFunc = ({ inputs, backend, attrs }) => {\n    const { x } = inputs;\n    const { paddings, mode } = attrs;\n    const program = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n        new _mirror_pad_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.MirrorPadPackedProgram(x.shape, paddings, mode) :\n        new _mirror_pad_gpu__WEBPACK_IMPORTED_MODULE_2__.MirrorPadProgram(x.shape, paddings, mode);\n    const output = backend.runWebGLProgram(program, [x], x.dtype);\n    return output;\n};\nconst mirrorPadConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.MirrorPad,\n    backendName: 'webgl',\n    kernelFunc: mirrorPadKernelFunc,\n};\n//# sourceMappingURL=MirrorPad.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MirrorPad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mod.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mod.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export mod [provided] [no usage info] [missing usage info prevents renaming] */
/*! export modConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mod\": () => /* binding */ mod,\n/* harmony export */   \"modConfig\": () => /* binding */ modConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../binaryop_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst MOD = `if (b == 0.0) return NAN;\n  return mod(a, b);`;\nconst MOD_PACKED = `\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  ` +\n    _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET + `\n  return result;\n`;\nconst mod = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)({\n    opSnippet: MOD,\n    packedOpSnippet: MOD_PACKED,\n});\nconst modConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Mod,\n    backendName: 'webgl',\n    kernelFunc: mod\n};\n//# sourceMappingURL=Mod.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mod.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Multinomial.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Multinomial.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export multinomial [provided] [no usage info] [missing usage info prevents renaming] */
/*! export multinomialConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"multinomial\": () => /* binding */ multinomial,\n/* harmony export */   \"multinomialConfig\": () => /* binding */ multinomialConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _multinomial_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../multinomial_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/multinomial_gpu.js\");\n/* harmony import */ var _Softmax__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Softmax */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softmax.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction multinomial(args) {\n    const { inputs, backend, attrs } = args;\n    const { logits } = inputs;\n    const { numSamples, seed, normalized } = attrs;\n    const probs = normalized ?\n        logits :\n        (0,_Softmax__WEBPACK_IMPORTED_MODULE_1__.softmax)({ inputs: { logits }, backend, attrs: { dim: logits.shape.length - 1 } });\n    const batchSize = probs.shape[0];\n    const numOutcomes = probs.shape[1];\n    const program = new _multinomial_gpu__WEBPACK_IMPORTED_MODULE_2__.MultinomialProgram(batchSize, numOutcomes, numSamples);\n    const customSetup = program.getCustomSetupFunc(seed);\n    const res = backend.runWebGLProgram(program, [probs], 'int32', customSetup);\n    if (!normalized) {\n        backend.disposeIntermediateTensorInfo(probs);\n    }\n    return res;\n}\nconst multinomialConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Multinomial,\n    backendName: 'webgl',\n    kernelFunc: multinomial\n};\n//# sourceMappingURL=Multinomial.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Multinomial.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Multiply.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Multiply.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export multiply [provided] [no usage info] [missing usage info prevents renaming] */
/*! export multiplyConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"multiply\": () => /* binding */ multiply,\n/* harmony export */   \"multiplyConfig\": () => /* binding */ multiplyConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _binaryop_complex_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../binaryop_complex_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_complex_gpu.js\");\n/* harmony import */ var _binaryop_gpu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../binaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_gpu.js\");\n/* harmony import */ var _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../binaryop_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/* harmony import */ var _Complex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Complex */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Complex.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\nconst MUL = 'return a * b;';\nfunction multiply(args) {\n    const { inputs, backend } = args;\n    const { a, b } = inputs;\n    const dtype = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.upcastType(a.dtype, b.dtype);\n    if (a.dtype === 'complex64') {\n        const aData = backend.texData.get(a.dataId);\n        const bData = backend.texData.get(b.dataId);\n        const realProgram = new _binaryop_complex_gpu__WEBPACK_IMPORTED_MODULE_1__.BinaryOpComplexProgram(_binaryop_complex_gpu__WEBPACK_IMPORTED_MODULE_1__.COMPLEX_MULTIPLY.REAL, a.shape, b.shape);\n        const imagProgram = new _binaryop_complex_gpu__WEBPACK_IMPORTED_MODULE_1__.BinaryOpComplexProgram(_binaryop_complex_gpu__WEBPACK_IMPORTED_MODULE_1__.COMPLEX_MULTIPLY.IMAG, a.shape, b.shape);\n        const inputs = [\n            {\n                dataId: aData.complexTensorInfos.real.dataId,\n                dtype: aData.complexTensorInfos.real.dtype,\n                shape: a.shape\n            },\n            {\n                dataId: aData.complexTensorInfos.imag.dataId,\n                dtype: aData.complexTensorInfos.imag.dtype,\n                shape: a.shape\n            },\n            {\n                dataId: bData.complexTensorInfos.real.dataId,\n                dtype: bData.complexTensorInfos.real.dtype,\n                shape: b.shape\n            },\n            {\n                dataId: bData.complexTensorInfos.imag.dataId,\n                dtype: bData.complexTensorInfos.imag.dtype,\n                shape: b.shape\n            }\n        ];\n        const realPart = backend.runWebGLProgram(realProgram, inputs, 'float32');\n        const imagPart = backend.runWebGLProgram(imagProgram, inputs, 'float32');\n        const complexOutput = (0,_Complex__WEBPACK_IMPORTED_MODULE_2__.complex)({ inputs: { real: realPart, imag: imagPart }, backend });\n        backend.disposeIntermediateTensorInfo(realPart);\n        backend.disposeIntermediateTensorInfo(imagPart);\n        // TODO(annxingyuan): CPU forwarding for complex inputs.\n        return complexOutput;\n    }\n    if (backend.shouldExecuteOnCPU([a, b])) {\n        const aData = backend.texData.get(a.dataId);\n        const bData = backend.texData.get(b.dataId);\n        const [outValues, outShape] = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_3__.multiplyImplCPU)(a.shape, b.shape, aData.values, bData.values, dtype);\n        const out = backend.makeTensorInfo(outShape, dtype);\n        const outData = backend.texData.get(out.dataId);\n        outData.values = outValues;\n        return out;\n    }\n    let program;\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n        program = new _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_4__.BinaryOpPackedProgram(MUL, a.shape, b.shape);\n    }\n    else {\n        program = new _binaryop_gpu__WEBPACK_IMPORTED_MODULE_5__.BinaryOpProgram(MUL, a.shape, b.shape);\n    }\n    return backend.runWebGLProgram(program, [a, b], dtype);\n}\nconst multiplyConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Multiply,\n    backendName: 'webgl',\n    kernelFunc: multiply\n};\n//# sourceMappingURL=Multiply.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Multiply.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Neg.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Neg.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export neg [provided] [no usage info] [missing usage info prevents renaming] */
/*! export negConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"neg\": () => /* binding */ neg,\n/* harmony export */   \"negConfig\": () => /* binding */ negConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/* harmony import */ var _unaryop_gpu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../unaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js\");\n/* harmony import */ var _unaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../unaryop_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_packed_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nconst NEG = `return -x;`;\n// This doesn't use unaryKernelFunc because negImplCPU is not of type\n// SimpleUnaryKernelImplCPU.\nfunction neg(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    if (backend.shouldExecuteOnCPU([x])) {\n        const xData = backend.texData.get(x.dataId);\n        const [outValues, newShape] = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__.negImplCPU)(xData.values, x.shape, x.dtype);\n        return backend.makeTensorInfo(newShape, x.dtype, outValues);\n    }\n    let program;\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_UNARY_OPERATIONS')) {\n        program = new _unaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_2__.UnaryOpPackedProgram(x.shape, NEG);\n    }\n    else {\n        program = new _unaryop_gpu__WEBPACK_IMPORTED_MODULE_3__.UnaryOpProgram(x.shape, NEG);\n    }\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nconst negConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Neg,\n    backendName: 'webgl',\n    kernelFunc: neg\n};\n//# sourceMappingURL=Neg.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Neg.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV3.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV3.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! export nonMaxSuppressionV3 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export nonMaxSuppressionV3Config [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionV3\": () => /* binding */ nonMaxSuppressionV3,\n/* harmony export */   \"nonMaxSuppressionV3Config\": () => /* binding */ nonMaxSuppressionV3Config\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nconst nonMaxSuppressionV3Impl = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.kernel_impls.nonMaxSuppressionV3Impl;\nfunction nonMaxSuppressionV3(args) {\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' +\n        'Call tf.nonMaxSuppressionAsync() instead');\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold } = attrs;\n    const boxesVals = backend.readSync(boxes.dataId);\n    const scoresVals = backend.readSync(scores.dataId);\n    const { selectedIndices } = nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n    return backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices));\n}\nconst nonMaxSuppressionV3Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.NonMaxSuppressionV3,\n    backendName: 'webgl',\n    kernelFunc: nonMaxSuppressionV3\n};\n//# sourceMappingURL=NonMaxSuppressionV3.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV3.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV4.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV4.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! export nonMaxSuppressionV4 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export nonMaxSuppressionV4Config [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionV4\": () => /* binding */ nonMaxSuppressionV4,\n/* harmony export */   \"nonMaxSuppressionV4Config\": () => /* binding */ nonMaxSuppressionV4Config\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nconst nonMaxSuppressionV4Impl = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.kernel_impls.nonMaxSuppressionV4Impl;\nfunction nonMaxSuppressionV4(args) {\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' +\n        'Call tf.nonMaxSuppressionAsync() instead');\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize } = attrs;\n    const boxesVals = backend.readSync(boxes.dataId);\n    const scoresVals = backend.readSync(scores.dataId);\n    const { selectedIndices, validOutputs } = nonMaxSuppressionV4Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize);\n    return [\n        backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n        backend.makeTensorInfo([], 'int32', new Int32Array([validOutputs]))\n    ];\n}\nconst nonMaxSuppressionV4Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.NonMaxSuppressionV4,\n    backendName: 'webgl',\n    kernelFunc: nonMaxSuppressionV4\n};\n//# sourceMappingURL=NonMaxSuppressionV4.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV4.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV5.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV5.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! export nonMaxSuppressionV5 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export nonMaxSuppressionV5Config [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionV5\": () => /* binding */ nonMaxSuppressionV5,\n/* harmony export */   \"nonMaxSuppressionV5Config\": () => /* binding */ nonMaxSuppressionV5Config\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nconst nonMaxSuppressionV5Impl = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.kernel_impls.nonMaxSuppressionV5Impl;\nfunction nonMaxSuppressionV5(args) {\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' +\n        'Call tf.nonMaxSuppressionAsync() instead');\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma } = attrs;\n    const boxesVals = backend.readSync(boxes.dataId);\n    const scoresVals = backend.readSync(scores.dataId);\n    const maxOutputSizeVal = maxOutputSize;\n    const iouThresholdVal = iouThreshold;\n    const scoreThresholdVal = scoreThreshold;\n    const softNmsSigmaVal = softNmsSigma;\n    const { selectedIndices, selectedScores } = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal);\n    return [\n        backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n        backend.makeTensorInfo([selectedScores.length], 'float32', new Float32Array(selectedScores))\n    ];\n}\nconst nonMaxSuppressionV5Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.NonMaxSuppressionV5,\n    backendName: 'webgl',\n    kernelFunc: nonMaxSuppressionV5\n};\n//# sourceMappingURL=NonMaxSuppressionV5.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV5.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NotEqual.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NotEqual.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export notEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export notEqualConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"notEqual\": () => /* binding */ notEqual,\n/* harmony export */   \"notEqualConfig\": () => /* binding */ notEqualConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst NOT_EQUAL = `return float(a != b);`;\nconst notEqual = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.binaryKernelFunc)({ opSnippet: NOT_EQUAL, dtype: 'bool' });\nconst notEqualConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.NotEqual,\n    backendName: 'webgl',\n    kernelFunc: notEqual,\n};\n//# sourceMappingURL=NotEqual.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NotEqual.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/OneHot.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/OneHot.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export oneHot [provided] [no usage info] [missing usage info prevents renaming] */
/*! export oneHotConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"oneHot\": () => /* binding */ oneHot,\n/* harmony export */   \"oneHotConfig\": () => /* binding */ oneHotConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _onehot_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../onehot_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/onehot_gpu.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst oneHot = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { indices } = inputs;\n    const { depth, onValue, offValue } = attrs;\n    const indicesSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(indices.shape);\n    const program = new _onehot_gpu__WEBPACK_IMPORTED_MODULE_1__.OneHotProgram(indicesSize, depth, onValue, offValue);\n    const reshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: indices }, backend, attrs: { shape: [indicesSize] } });\n    const result = backend.runWebGLProgram(program, [reshaped], indices.dtype);\n    backend.disposeIntermediateTensorInfo(reshaped);\n    const outShape = [...indices.shape, depth];\n    const out = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: result }, backend, attrs: { shape: outShape } });\n    backend.disposeIntermediateTensorInfo(result);\n    return out;\n};\nconst oneHotConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.OneHot,\n    backendName: 'webgl',\n    kernelFunc: oneHot\n};\n//# sourceMappingURL=OneHot.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/OneHot.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/OnesLike.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/OnesLike.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export onesLike [provided] [no usage info] [missing usage info prevents renaming] */
/*! export onesLikeConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onesLike\": () => /* binding */ onesLike,\n/* harmony export */   \"onesLikeConfig\": () => /* binding */ onesLikeConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Complex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Complex */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Complex.js\");\n/* harmony import */ var _Fill__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Fill */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Fill.js\");\n/* harmony import */ var _Imag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Imag */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Imag.js\");\n/* harmony import */ var _Real__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Real */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Real.js\");\n/* harmony import */ var _ZerosLike__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ZerosLike */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ZerosLike.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\nfunction onesLike(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    if (x.dtype === 'string') {\n        throw new Error('onesLike is not supported under string dtype');\n    }\n    else if (x.dtype === 'complex64') {\n        const realPart = (0,_Real__WEBPACK_IMPORTED_MODULE_1__.real)({ inputs: { input: x }, backend });\n        const r = onesLike({ inputs: { x: realPart }, backend });\n        const imagPart = (0,_Imag__WEBPACK_IMPORTED_MODULE_2__.imag)({ inputs: { input: x }, backend });\n        const i = (0,_ZerosLike__WEBPACK_IMPORTED_MODULE_3__.zerosLike)({ inputs: { x: imagPart }, backend });\n        const result = (0,_Complex__WEBPACK_IMPORTED_MODULE_4__.complex)({ inputs: { real: r, imag: i }, backend });\n        backend.disposeIntermediateTensorInfo(realPart);\n        backend.disposeIntermediateTensorInfo(r);\n        backend.disposeIntermediateTensorInfo(imagPart);\n        backend.disposeIntermediateTensorInfo(i);\n        return result;\n    }\n    else {\n        // TODO(cais, smilkov): Add WebGL shader for onesLike:\n        //   https://github.com/tensorflow/tfjs/issues/1293\n        return (0,_Fill__WEBPACK_IMPORTED_MODULE_5__.fill)({ attrs: { shape: x.shape, dtype: x.dtype, value: 1 }, backend });\n    }\n}\nconst onesLikeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.OnesLike,\n    backendName: 'webgl',\n    kernelFunc: onesLike\n};\n//# sourceMappingURL=OnesLike.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/OnesLike.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Pack.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Pack.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export pack [provided] [no usage info] [missing usage info prevents renaming] */
/*! export packConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pack\": () => /* binding */ pack,\n/* harmony export */   \"packConfig\": () => /* binding */ packConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Concat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Concat */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Concat.js\");\n/* harmony import */ var _ExpandDims__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ExpandDims */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ExpandDims.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction pack(args) {\n    const { inputs, backend, attrs } = args;\n    const { axis } = attrs;\n    if (inputs.length === 1) {\n        return (0,_ExpandDims__WEBPACK_IMPORTED_MODULE_1__.expandDims)({ inputs: { input: inputs[0] }, backend, attrs: { dim: axis } });\n    }\n    const shape = inputs[0].shape;\n    const dtype = inputs[0].dtype;\n    inputs.forEach(t => {\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(dtype === t.dtype, () => 'All tensors passed to stack must have matching dtypes');\n    });\n    const intermediateTensorInfos = [];\n    const expandedTensors = inputs.map(t => {\n        const expandedT = (0,_ExpandDims__WEBPACK_IMPORTED_MODULE_1__.expandDims)({ inputs: { input: t }, backend, attrs: { dim: axis } });\n        intermediateTensorInfos.push(expandedT);\n        return expandedT;\n    });\n    const result = (0,_Concat__WEBPACK_IMPORTED_MODULE_2__.concat)({ inputs: expandedTensors, backend, attrs: { axis } });\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n}\nconst packConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Pack,\n    backendName: 'webgl',\n    kernelFunc: pack\n};\n//# sourceMappingURL=Pack.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Pack.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/PadV2.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/PadV2.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export padV2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export padV2Config [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"padV2\": () => /* binding */ padV2,\n/* harmony export */   \"padV2Config\": () => /* binding */ padV2Config\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _pad_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pad_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/pad_gpu.js\");\n/* harmony import */ var _pad_packed_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pad_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/pad_packed_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst padV2 = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { paddings, constantValue } = attrs;\n    const program = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n        new _pad_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.PadPackedProgram(x.shape, paddings, constantValue) :\n        new _pad_gpu__WEBPACK_IMPORTED_MODULE_2__.PadProgram(x.shape, paddings, constantValue);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n};\nconst padV2Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.PadV2,\n    backendName: 'webgl',\n    kernelFunc: padV2\n};\n//# sourceMappingURL=PadV2.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/PadV2.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Pow.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Pow.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export pow [provided] [no usage info] [missing usage info prevents renaming] */
/*! export powConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pow\": () => /* binding */ pow,\n/* harmony export */   \"powConfig\": () => /* binding */ powConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../binaryop_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst POW = `\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n`;\nconst POW_PACKED = `\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  ` +\n    _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET + `\n  return result;\n`;\nconst pow = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__.binaryKernelFunc)({ opSnippet: POW, packedOpSnippet: POW_PACKED });\nconst powConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Pow,\n    backendName: 'webgl',\n    kernelFunc: pow\n};\n//# sourceMappingURL=Pow.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Pow.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prelu.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prelu.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export PRELU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PRELU_PACKED [provided] [no usage info] [missing usage info prevents renaming] */
/*! export prelu [provided] [no usage info] [missing usage info prevents renaming] */
/*! export preluConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PRELU\": () => /* binding */ PRELU,\n/* harmony export */   \"PRELU_PACKED\": () => /* binding */ PRELU_PACKED,\n/* harmony export */   \"prelu\": () => /* binding */ prelu,\n/* harmony export */   \"preluConfig\": () => /* binding */ preluConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _binaryop_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../binaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_gpu.js\");\n/* harmony import */ var _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../binaryop_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst PRELU = `return (a < 0.) ? b * a : a;`;\nconst PRELU_PACKED = `\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n`;\nfunction prelu(args) {\n    const { inputs, backend } = args;\n    const { x, alpha } = inputs;\n    const program = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n        new _binaryop_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.BinaryOpPackedProgram(PRELU_PACKED, x.shape, alpha.shape) :\n        new _binaryop_gpu__WEBPACK_IMPORTED_MODULE_2__.BinaryOpProgram(PRELU, x.shape, alpha.shape);\n    return backend.runWebGLProgram(program, [x, alpha], x.dtype);\n}\nconst preluConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Prelu,\n    backendName: 'webgl',\n    kernelFunc: prelu\n};\n//# sourceMappingURL=Prelu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prelu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prod.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prod.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export prod [provided] [no usage info] [missing usage info prevents renaming] */
/*! export prodConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prod\": () => /* binding */ prod,\n/* harmony export */   \"prodConfig\": () => /* binding */ prodConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_reduce__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_utils/reduce */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reduce.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\nfunction prod(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    const xRank = x.shape.length;\n    const toDispose = [];\n    const origAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, xRank);\n    let permutedX = x;\n    if (permutedAxes != null) {\n        permutedX = (0,_Transpose__WEBPACK_IMPORTED_MODULE_1__.transpose)({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, xRank);\n        toDispose.push(permutedX);\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('prod', axes, xRank);\n    let res;\n    if (backend.shouldExecuteOnCPU([permutedX])) {\n        const xVals = backend.texData.get(permutedX.dataId).values;\n        const { outVals, outShape, outDtype } = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__.prodImplCPU)(permutedX.shape, permutedX.dtype, xVals, axes);\n        res = backend.makeTensorInfo(outShape, outDtype, outVals);\n    }\n    else {\n        const [outShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n        const inSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n        const a2D = (0,_Reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n        const outputDType = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sumOutType)(x.dtype);\n        const reduced = (0,_kernel_utils_reduce__WEBPACK_IMPORTED_MODULE_4__.reduce)(a2D, outputDType, 'prod', backend);\n        res = (0,_Reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)({ inputs: { x: reduced }, backend, attrs: { shape: outShape } });\n        toDispose.push(a2D);\n        toDispose.push(reduced);\n    }\n    if (keepDims) {\n        toDispose.push(res);\n        const newShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(res.shape, origAxes);\n        res = (0,_Reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)({ inputs: { x: res }, backend, attrs: { shape: newShape } });\n    }\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return res;\n}\nconst prodConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Prod,\n    backendName: 'webgl',\n    kernelFunc: prod\n};\n//# sourceMappingURL=Prod.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prod.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Range.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Range.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export range [provided] [no usage info] [missing usage info prevents renaming] */
/*! export rangeConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"range\": () => /* binding */ range,\n/* harmony export */   \"rangeConfig\": () => /* binding */ rangeConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst range = (args) => {\n    const { backend, attrs } = args;\n    const { start, stop, step, dtype } = attrs;\n    const values = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__.rangeImplCPU)(start, stop, step, dtype);\n    return backend.makeTensorInfo([values.length], dtype, values);\n};\nconst rangeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Range,\n    backendName: 'webgl',\n    kernelFunc: range\n};\n//# sourceMappingURL=Range.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Range.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Real.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Real.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export real [provided] [no usage info] [missing usage info prevents renaming] */
/*! export realConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"real\": () => /* binding */ real,\n/* harmony export */   \"realConfig\": () => /* binding */ realConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction real(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    const inputData = backend.texData.get(input.dataId);\n    return (0,_Identity__WEBPACK_IMPORTED_MODULE_1__.identity)({ inputs: { x: inputData.complexTensorInfos.real }, backend });\n}\nconst realConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Real,\n    backendName: 'webgl',\n    kernelFunc: real\n};\n//# sourceMappingURL=Real.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Real.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RealDiv.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RealDiv.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export realDiv [provided] [no usage info] [missing usage info prevents renaming] */
/*! export realDivConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"realDiv\": () => /* binding */ realDiv,\n/* harmony export */   \"realDivConfig\": () => /* binding */ realDivConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n// Without the equality check div produces 0.9999 for a = b, which when\n// floored can cause errors.\nconst DIV = `\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;`;\n// We do the same as in ./binaryop_gpu, with vec4 and ivec4.\n// On Linux, the vectorized implementation produces NaNs when a and b are 0.\nconst DIV_PACKED = `\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n`;\nconst realDiv = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.binaryKernelFunc)({ opSnippet: DIV, packedOpSnippet: DIV_PACKED, checkOutOfBounds: true });\nconst realDivConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.RealDiv,\n    backendName: 'webgl',\n    kernelFunc: realDiv,\n};\n//# sourceMappingURL=RealDiv.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RealDiv.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reciprocal.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reciprocal.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export reciprocal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export reciprocalConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reciprocal\": () => /* binding */ reciprocal,\n/* harmony export */   \"reciprocalConfig\": () => /* binding */ reciprocalConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst RECIPROCAL = `return 1.0 / x;`;\nconst reciprocal = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: RECIPROCAL });\nconst reciprocalConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Reciprocal,\n    backendName: 'webgl',\n    kernelFunc: reciprocal,\n};\n//# sourceMappingURL=Reciprocal.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reciprocal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export relu [provided] [no usage info] [missing usage info prevents renaming] */
/*! export reluConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"relu\": () => /* binding */ relu,\n/* harmony export */   \"reluConfig\": () => /* binding */ reluConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../unaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst RELU = _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : x;\n`;\nconst RELU_PACKED = `\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n`;\nconst relu = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFunc)({ opSnippet: RELU, packedOpSnippet: RELU_PACKED });\nconst reluConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Relu,\n    backendName: 'webgl',\n    kernelFunc: relu\n};\n//# sourceMappingURL=Relu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu6.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu6.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export relu6 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export relu6Config [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"relu6\": () => /* binding */ relu6,\n/* harmony export */   \"relu6Config\": () => /* binding */ relu6Config\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../unaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst RELU6 = _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n`;\nconst RELU6_PACKED = `\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n`;\nconst relu6 = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_2__.unaryKernelFunc)({ opSnippet: RELU6, packedOpSnippet: RELU6_PACKED });\nconst relu6Config = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Relu6,\n    backendName: 'webgl',\n    kernelFunc: relu6\n};\n//# sourceMappingURL=Relu6.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu6.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export reshape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export reshapeConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reshape\": () => /* binding */ reshape,\n/* harmony export */   \"reshapeConfig\": () => /* binding */ reshapeConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reshape.js\");\n/* harmony import */ var _webgl_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../webgl_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction reshape(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { shape } = attrs;\n    const webglBackend = backend;\n    const xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape);\n    const $shape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.inferFromImplicitShape(shape, xSize);\n    const $xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape($shape);\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(xSize === $xSize, () => `The new shape (${$shape}) has ${$xSize} elements and the old ` +\n        `shape (${x.shape}) has ${xSize} elements. The new shape and old ` +\n        `shape must have the same number of elements.`);\n    const xTexData = webglBackend.texData.get(x.dataId);\n    if (xTexData.isPacked && !(0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.isReshapeFree)(x.shape, $shape) &&\n        !(xTexData.texture !== null && (0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.isReshapeFree)(xTexData.shape, $shape))) {\n        return (0,_kernel_utils_reshape__WEBPACK_IMPORTED_MODULE_2__.packedReshape)(x, $shape, webglBackend);\n    }\n    webglBackend.incRef(x.dataId);\n    return { dataId: x.dataId, shape: $shape, dtype: x.dtype };\n}\nconst reshapeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Reshape,\n    backendName: 'webgl',\n    kernelFunc: reshape\n};\n//# sourceMappingURL=Reshape.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeBilinear.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeBilinear.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export resizeBilinear [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resizeBilinearConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resizeBilinear\": () => /* binding */ resizeBilinear,\n/* harmony export */   \"resizeBilinearConfig\": () => /* binding */ resizeBilinearConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _resize_bilinear_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../resize_bilinear_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_gpu.js\");\n/* harmony import */ var _resize_bilinear_packed_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../resize_bilinear_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_packed_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction resizeBilinear(args) {\n    const { inputs, backend, attrs } = args;\n    const { images } = inputs;\n    const { alignCorners, halfPixelCenters, size } = attrs;\n    const [newHeight, newWidth] = size;\n    const program = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_IMAGE_OPERATIONS') ?\n        new _resize_bilinear_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.ResizeBilinearPackedProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters) :\n        new _resize_bilinear_gpu__WEBPACK_IMPORTED_MODULE_2__.ResizeBilinearProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters);\n    return backend.runWebGLProgram(program, [images], 'float32');\n}\nconst resizeBilinearConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ResizeBilinear,\n    backendName: 'webgl',\n    kernelFunc: resizeBilinear\n};\n//# sourceMappingURL=ResizeBilinear.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeBilinear.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeBilinearGrad.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeBilinearGrad.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! export resizeBilinearGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resizeBilinearGradConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resizeBilinearGrad\": () => /* binding */ resizeBilinearGrad,\n/* harmony export */   \"resizeBilinearGradConfig\": () => /* binding */ resizeBilinearGradConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _resize_bilinear_backprop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../resize_bilinear_backprop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_backprop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction resizeBilinearGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { images, dy } = inputs;\n    const { alignCorners } = attrs;\n    const program = new _resize_bilinear_backprop_gpu__WEBPACK_IMPORTED_MODULE_1__.ResizeBilinearBackpropProgram(dy.shape, images.shape, alignCorners);\n    return backend.runWebGLProgram(program, [dy], dy.dtype);\n}\nconst resizeBilinearGradConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ResizeBilinearGrad,\n    backendName: 'webgl',\n    kernelFunc: resizeBilinearGrad\n};\n//# sourceMappingURL=ResizeBilinearGrad.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeBilinearGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeNearestNeighbor.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeNearestNeighbor.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export resizeNearestNeighbor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resizeNearestNeighborConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resizeNearestNeighbor\": () => /* binding */ resizeNearestNeighbor,\n/* harmony export */   \"resizeNearestNeighborConfig\": () => /* binding */ resizeNearestNeighborConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _resize_nearest_neighbor_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../resize_nearest_neighbor_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_nearest_neighbor_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction resizeNearestNeighbor(args) {\n    const { inputs, backend, attrs } = args;\n    const { images } = inputs;\n    const { alignCorners, halfPixelCenters, size } = attrs;\n    const [newHeight, newWidth] = size;\n    const program = new _resize_nearest_neighbor_gpu__WEBPACK_IMPORTED_MODULE_1__.ResizeNearestNeighborProgram(images.shape, newHeight, newWidth, alignCorners, halfPixelCenters);\n    return backend.runWebGLProgram(program, [images], images.dtype);\n}\nconst resizeNearestNeighborConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ResizeNearestNeighbor,\n    backendName: 'webgl',\n    kernelFunc: resizeNearestNeighbor\n};\n//# sourceMappingURL=ResizeNearestNeighbor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeNearestNeighbor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeNearestNeighborGrad.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeNearestNeighborGrad.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export resizeNearestNeighborGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resizeNearestNeighborGradConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resizeNearestNeighborGrad\": () => /* binding */ resizeNearestNeighborGrad,\n/* harmony export */   \"resizeNearestNeighborGradConfig\": () => /* binding */ resizeNearestNeighborGradConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _resize_nearest_neighbor_backprop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../resize_nearest_neighbor_backprop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_nearest_neighbor_backprop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction resizeNearestNeighborGrad(args) {\n    const { inputs, backend, attrs } = args;\n    const { images, dy } = inputs;\n    const { alignCorners } = attrs;\n    const program = new _resize_nearest_neighbor_backprop_gpu__WEBPACK_IMPORTED_MODULE_1__.ResizeNearestNeigborBackpropProgram(dy.shape, images.shape, alignCorners);\n    return backend.runWebGLProgram(program, [dy], dy.dtype);\n}\nconst resizeNearestNeighborGradConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ResizeNearestNeighborGrad,\n    backendName: 'webgl',\n    kernelFunc: resizeNearestNeighborGrad\n};\n//# sourceMappingURL=ResizeNearestNeighborGrad.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeNearestNeighborGrad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reverse.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reverse.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export reverse [provided] [no usage info] [missing usage info prevents renaming] */
/*! export reverseConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reverse\": () => /* binding */ reverse,\n/* harmony export */   \"reverseConfig\": () => /* binding */ reverseConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _reverse_gpu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../reverse_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/reverse_gpu.js\");\n/* harmony import */ var _reverse_packed_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../reverse_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/reverse_packed_gpu.js\");\n/* harmony import */ var _Identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Identity */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction reverse(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { dims } = attrs;\n    const xRank = x.shape.length;\n    const $dims = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(dims, x.shape);\n    if (xRank === 0) {\n        return (0,_Identity__WEBPACK_IMPORTED_MODULE_1__.identity)({ inputs: { x }, backend });\n    }\n    const program = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n        new _reverse_packed_gpu__WEBPACK_IMPORTED_MODULE_2__.ReversePackedProgram(x.shape, $dims) :\n        new _reverse_gpu__WEBPACK_IMPORTED_MODULE_3__.ReverseProgram(x.shape, $dims);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nconst reverseConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Reverse,\n    backendName: 'webgl',\n    kernelFunc: reverse\n};\n//# sourceMappingURL=Reverse.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reverse.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RotateWithOffset.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RotateWithOffset.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export rotateWithOffsetConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rotateWithOffsetConfig\": () => /* binding */ rotateWithOffsetConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _rotate_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rotate_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/rotate_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst rotateWithOffsetConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.RotateWithOffset,\n    backendName: 'webgl',\n    kernelFunc: ({ inputs, attrs, backend }) => {\n        const { image } = inputs;\n        const { radians, fillValue, center } = attrs;\n        const webglBackend = backend;\n        const program = new _rotate_gpu__WEBPACK_IMPORTED_MODULE_1__.RotateProgram(image.shape, radians, fillValue, center);\n        const output = webglBackend.runWebGLProgram(program, [image], image.dtype);\n        return output;\n    }\n};\n//# sourceMappingURL=RotateWithOffset.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RotateWithOffset.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Round.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Round.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export round [provided] [no usage info] [missing usage info prevents renaming] */
/*! export roundConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"round\": () => /* binding */ round,\n/* harmony export */   \"roundConfig\": () => /* binding */ roundConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst ROUND = `\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n`;\nconst round = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: ROUND });\nconst roundConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Round,\n    backendName: 'webgl',\n    kernelFunc: round,\n};\n//# sourceMappingURL=Round.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Round.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Rsqrt.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Rsqrt.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export rsqrt [provided] [no usage info] [missing usage info prevents renaming] */
/*! export rsqrtConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rsqrt\": () => /* binding */ rsqrt,\n/* harmony export */   \"rsqrtConfig\": () => /* binding */ rsqrtConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst RSQRT = `return inversesqrt(x);`;\nconst rsqrt = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: RSQRT, cpuKernelImpl: _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__.rsqrtImplCPU });\nconst rsqrtConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Rsqrt,\n    backendName: 'webgl',\n    kernelFunc: rsqrt\n};\n//# sourceMappingURL=Rsqrt.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Rsqrt.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ScatterNd.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ScatterNd.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export scatterNd [provided] [no usage info] [missing usage info prevents renaming] */
/*! export scatterNdConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"scatterNd\": () => /* binding */ scatterNd,\n/* harmony export */   \"scatterNdConfig\": () => /* binding */ scatterNdConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _scatter_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scatter_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/scatter_gpu.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction scatterNd(args) {\n    const { inputs, backend, attrs } = args;\n    const { indices, updates } = inputs;\n    const { shape } = attrs;\n    const { sliceRank, numUpdates, sliceSize, strides, outputSize } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.calculateShapes(updates, indices, shape);\n    const flattenShape = [outputSize / sliceSize, sliceSize];\n    if (outputSize === 0) {\n        return backend.makeTensorInfo(shape, indices.dtype);\n    }\n    const flattenIndices = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: indices }, backend, attrs: { shape: [numUpdates, sliceRank] } });\n    const flattenX = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: updates }, backend, attrs: { shape: [numUpdates, sliceSize] } });\n    const defaultValue = backend.makeTensorInfo([], 'float32', new Float32Array([0])); // scalar(0)\n    const program = new _scatter_gpu__WEBPACK_IMPORTED_MODULE_2__.ScatterProgram(numUpdates, sliceRank, flattenIndices.shape.length, flattenX.shape.length, strides, flattenShape);\n    const res = backend.runWebGLProgram(program, [flattenX, flattenIndices, defaultValue], flattenX.dtype);\n    const reshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: res }, backend, attrs: { shape } });\n    backend.disposeIntermediateTensorInfo(flattenIndices);\n    backend.disposeIntermediateTensorInfo(flattenX);\n    backend.disposeIntermediateTensorInfo(res);\n    backend.disposeIntermediateTensorInfo(defaultValue);\n    return reshaped;\n}\nconst scatterNdConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ScatterNd,\n    backendName: 'webgl',\n    kernelFunc: scatterNd\n};\n//# sourceMappingURL=ScatterNd.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ScatterNd.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Select.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Select.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export select [provided] [no usage info] [missing usage info prevents renaming] */
/*! export selectConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"select\": () => /* binding */ select,\n/* harmony export */   \"selectConfig\": () => /* binding */ selectConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _select_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../select_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/select_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction select(args) {\n    const { inputs, backend } = args;\n    const { condition, t, e } = inputs;\n    const program = new _select_gpu__WEBPACK_IMPORTED_MODULE_1__.SelectProgram(condition.shape.length, t.shape, t.shape.length);\n    return backend.runWebGLProgram(program, [condition, t, e], (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.upcastType)(t.dtype, e.dtype));\n}\nconst selectConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Select,\n    backendName: 'webgl',\n    kernelFunc: select\n};\n//# sourceMappingURL=Select.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Select.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Selu.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Selu.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export selu [provided] [no usage info] [missing usage info prevents renaming] */
/*! export seluConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"selu\": () => /* binding */ selu,\n/* harmony export */   \"seluConfig\": () => /* binding */ seluConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst SELU = `\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.SELU_SCALEALPHA};\n  float scale = ${_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`;\nconst selu = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: SELU });\nconst seluConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Selu,\n    backendName: 'webgl',\n    kernelFunc: selu,\n};\n//# sourceMappingURL=Selu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Selu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sigmoid.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sigmoid.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export sigmoid [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sigmoidConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sigmoid\": () => /* binding */ sigmoid,\n/* harmony export */   \"sigmoidConfig\": () => /* binding */ sigmoidConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst SIGMOID = `return 1.0 / (1.0 + exp(-1.0 * x));`;\nconst sigmoid = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: SIGMOID });\nconst sigmoidConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sigmoid,\n    backendName: 'webgl',\n    kernelFunc: sigmoid,\n};\n//# sourceMappingURL=Sigmoid.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sigmoid.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sign.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sign.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export sign [provided] [no usage info] [missing usage info prevents renaming] */
/*! export signConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sign\": () => /* binding */ sign,\n/* harmony export */   \"signConfig\": () => /* binding */ signConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n// Sign does not propagate NANs.\nconst SIGN = `\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n`;\nconst sign = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: SIGN });\nconst signConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sign,\n    backendName: 'webgl',\n    kernelFunc: sign,\n};\n//# sourceMappingURL=Sign.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sign.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sin.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sin.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export sin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sinConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sin\": () => /* binding */ sin,\n/* harmony export */   \"sinConfig\": () => /* binding */ sinConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst SIN = _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET_UNARY + `\n  return sin(x);\n`;\nconst sin = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: SIN });\nconst sinConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sin,\n    backendName: 'webgl',\n    kernelFunc: sin,\n};\n//# sourceMappingURL=Sin.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sin.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sinh.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sinh.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export sinh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sinhConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sinh\": () => /* binding */ sinh,\n/* harmony export */   \"sinhConfig\": () => /* binding */ sinhConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst SINH = `\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n`;\nconst sinh = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: SINH });\nconst sinhConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sinh,\n    backendName: 'webgl',\n    kernelFunc: sinh,\n};\n//# sourceMappingURL=Sinh.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sinh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Slice.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Slice.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export slice [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sliceConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"slice\": () => /* binding */ slice,\n/* harmony export */   \"sliceConfig\": () => /* binding */ sliceConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/* harmony import */ var _slice_gpu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../slice_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/slice_gpu.js\");\n/* harmony import */ var _slice_packed_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../slice_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/slice_packed_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction shallowSlice(x, begin, size, backend) {\n    const xTexData = backend.texData.get(x.dataId);\n    const t = backend.makeTensorInfo(size, x.dtype);\n    const newTexData = backend.texData.get(t.dataId);\n    // Copy texture data from the original tensor.\n    Object.assign(newTexData, xTexData);\n    newTexData.refCount = 1;\n    newTexData.shape = size;\n    newTexData.dtype = x.dtype;\n    let flatOffset = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice_util.computeFlatOffset(begin, _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(x.shape));\n    if (xTexData.slice) {\n        // We are slicing an already sliced tensor, so we have to accumulate\n        // the offset.\n        flatOffset += xTexData.slice.flatOffset;\n    }\n    newTexData.slice = {\n        flatOffset,\n        // Point to the original dataId, which is used to do ref counting.\n        origDataId: xTexData.slice && xTexData.slice.origDataId || x.dataId\n    };\n    // Increase the ref count for that data bucket.\n    const refCount = backend.dataRefCount.get(newTexData.slice.origDataId) || 1;\n    backend.dataRefCount.set(newTexData.slice.origDataId, refCount + 1);\n    return t;\n}\nfunction slice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, size } = attrs;\n    const [$begin, $size] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice_util.parseSliceParams(x, begin, size);\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice_util.assertParamsValid(x, $begin, $size);\n    if (_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape($size) === 0) {\n        return backend.makeTensorInfo($size, x.dtype, []);\n    }\n    // Run on cpu if dtype is string. For string, the backend represents it\n    // as Uint8Array[], where each Uint8Array is a character. Given that the\n    // computation is only on the outer array, uploading the whole data onto\n    // gpu is wasteful. Also, currently webgl doesn't have a design to\n    // upload and retrieve Uint8Array[] between cpu and gpu. Therefore, we\n    // just run the kernel on cpu if dtype is string.\n    if (backend.shouldExecuteOnCPU([x]) || x.dtype === 'string') {\n        const xTexData = backend.texData.get(x.dataId);\n        const outValues = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__.sliceImplCPU)(xTexData.values, $begin, $size, x.shape, x.dtype);\n        return backend.makeTensorInfo($size, x.dtype, outValues);\n    }\n    const { isPacked } = backend.texData.get(x.dataId);\n    const isContinous = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice_util.isSliceContinous(x.shape, $begin, $size);\n    if (isPacked || !isContinous) {\n        const program = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n            new _slice_packed_gpu__WEBPACK_IMPORTED_MODULE_2__.SlicePackedProgram($size) :\n            new _slice_gpu__WEBPACK_IMPORTED_MODULE_3__.SliceProgram($size);\n        const customSetup = program.getCustomSetupFunc($begin);\n        return backend.runWebGLProgram(program, [x], x.dtype, customSetup);\n    }\n    backend.uploadToGPU(x.dataId);\n    return shallowSlice(x, $begin, $size, backend);\n}\nconst sliceConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Slice,\n    backendName: 'webgl',\n    kernelFunc: slice\n};\n//# sourceMappingURL=Slice.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Slice.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softmax.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softmax.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export softmax [provided] [no usage info] [missing usage info prevents renaming] */
/*! export softmaxConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"softmax\": () => /* binding */ softmax,\n/* harmony export */   \"softmaxConfig\": () => /* binding */ softmaxConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Exp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Exp */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Exp.js\");\n/* harmony import */ var _Max__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Max */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Max.js\");\n/* harmony import */ var _RealDiv__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./RealDiv */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RealDiv.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/* harmony import */ var _Sub__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Sub */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sub.js\");\n/* harmony import */ var _Sum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Sum */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\nfunction softmax(args) {\n    const { inputs, backend, attrs } = args;\n    const { logits } = inputs;\n    const { dim } = attrs;\n    const axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam([dim], logits.shape);\n    const maxLogit = (0,_Max__WEBPACK_IMPORTED_MODULE_1__.max)({\n        inputs: { x: logits },\n        backend,\n        attrs: { reductionIndices: axes, keepDims: false }\n    });\n    const expandedShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(maxLogit.shape, axes);\n    const maxLogitsReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: maxLogit }, backend, attrs: { shape: expandedShape } });\n    const a = (0,_Sub__WEBPACK_IMPORTED_MODULE_3__.sub)({ inputs: { a: logits, b: maxLogitsReshaped }, backend });\n    const b = (0,_Exp__WEBPACK_IMPORTED_MODULE_4__.exp)({ inputs: { x: a }, backend });\n    const sumExp = (0,_Sum__WEBPACK_IMPORTED_MODULE_5__.sum)({ inputs: { x: b }, backend, attrs: { axis: axes, keepDims: false } });\n    const sumExpReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: sumExp }, backend, attrs: { shape: expandedShape } });\n    const res = (0,_RealDiv__WEBPACK_IMPORTED_MODULE_6__.realDiv)({ inputs: { a: b, b: sumExpReshaped }, backend });\n    backend.disposeIntermediateTensorInfo(maxLogit);\n    backend.disposeIntermediateTensorInfo(maxLogitsReshaped);\n    backend.disposeIntermediateTensorInfo(a);\n    backend.disposeIntermediateTensorInfo(b);\n    backend.disposeIntermediateTensorInfo(sumExp);\n    backend.disposeIntermediateTensorInfo(sumExpReshaped);\n    return res;\n}\nconst softmaxConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Softmax,\n    backendName: 'webgl',\n    kernelFunc: softmax\n};\n//# sourceMappingURL=Softmax.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softmax.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softplus.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softplus.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export softplus [provided] [no usage info] [missing usage info prevents renaming] */
/*! export softplusConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"softplus\": () => /* binding */ softplus,\n/* harmony export */   \"softplusConfig\": () => /* binding */ softplusConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst SOFTPLUS = `\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n`;\nconst softplus = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: SOFTPLUS });\nconst softplusConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Softplus,\n    backendName: 'webgl',\n    kernelFunc: softplus,\n};\n//# sourceMappingURL=Softplus.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softplus.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SpaceToBatchND.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SpaceToBatchND.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export spaceToBatchND [provided] [no usage info] [missing usage info prevents renaming] */
/*! export spaceToBatchNDConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"spaceToBatchND\": () => /* binding */ spaceToBatchND,\n/* harmony export */   \"spaceToBatchNDConfig\": () => /* binding */ spaceToBatchNDConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _PadV2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PadV2 */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/PadV2.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nconst spaceToBatchND = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockShape, paddings } = attrs;\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(x.shape.length <= 4, () => 'spaceToBatchND for rank > 4 with a WebGL backend not ' +\n        'implemented yet');\n    const prod = blockShape.reduce((a, b) => a * b);\n    const completePaddings = [[0, 0]];\n    completePaddings.push(...paddings);\n    for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n        completePaddings.push([0, 0]);\n    }\n    const toDispose = [];\n    const paddedX = (0,_PadV2__WEBPACK_IMPORTED_MODULE_1__.padV2)({\n        inputs: { x },\n        backend,\n        attrs: { paddings: completePaddings, constantValue: 0 }\n    });\n    const reshapedPaddedShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n    const permutedReshapedPaddedPermutation = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n    const flattenShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n    const reshapedPaddedX = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: paddedX }, backend, attrs: { shape: reshapedPaddedShape } });\n    const paddedXT = (0,_Transpose__WEBPACK_IMPORTED_MODULE_3__.transpose)({\n        inputs: { x: reshapedPaddedX },\n        backend,\n        attrs: { perm: permutedReshapedPaddedPermutation }\n    });\n    const result = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: paddedXT }, backend, attrs: { shape: flattenShape } });\n    toDispose.push(paddedX);\n    toDispose.push(reshapedPaddedX);\n    toDispose.push(paddedXT);\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n};\nconst spaceToBatchNDConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SpaceToBatchND,\n    backendName: 'webgl',\n    kernelFunc: spaceToBatchND\n};\n//# sourceMappingURL=SpaceToBatchND.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SpaceToBatchND.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SparseToDense.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SparseToDense.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export sparseToDense [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sparseToDenseConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseToDense\": () => /* binding */ sparseToDense,\n/* harmony export */   \"sparseToDenseConfig\": () => /* binding */ sparseToDenseConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _scatter_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scatter_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/scatter_gpu.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction sparseToDense(args) {\n    const { inputs, backend, attrs } = args;\n    const { sparseIndices, sparseValues, defaultValue } = inputs;\n    const { outputShape } = attrs;\n    const { sliceRank, numUpdates, strides, outputSize } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.calculateShapes(sparseValues, sparseIndices, outputShape);\n    const sumDupeIndices = false;\n    const program = new _scatter_gpu__WEBPACK_IMPORTED_MODULE_1__.ScatterProgram(numUpdates, sliceRank, sparseIndices.shape.length, sparseValues.shape.length, strides, [outputSize, 1], sumDupeIndices);\n    const res = backend.runWebGLProgram(program, [sparseValues, sparseIndices, defaultValue], sparseValues.dtype);\n    const reshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: res }, backend, attrs: { shape: outputShape } });\n    backend.disposeIntermediateTensorInfo(res);\n    return reshaped;\n}\nconst sparseToDenseConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SparseToDense,\n    backendName: 'webgl',\n    kernelFunc: sparseToDense\n};\n//# sourceMappingURL=SparseToDense.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SparseToDense.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SplitV.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SplitV.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export splitV [provided] [no usage info] [missing usage info prevents renaming] */
/*! export splitVConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"splitV\": () => /* binding */ splitV,\n/* harmony export */   \"splitVConfig\": () => /* binding */ splitVConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Slice */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Slice.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction splitV(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { numOrSizeSplits, axis } = attrs;\n    const $axis = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(axis, x.shape)[0];\n    const splitSizes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n    const xRank = x.shape.length;\n    const begin = new Array(xRank).fill(0);\n    const size = x.shape.slice();\n    return splitSizes.map(s => {\n        const sliceSize = [...size];\n        sliceSize[$axis] = s;\n        const sliceT = (0,_Slice__WEBPACK_IMPORTED_MODULE_1__.slice)({ inputs: { x }, backend, attrs: { begin, size: sliceSize } });\n        begin[$axis] += s;\n        return sliceT;\n    });\n}\nconst splitVConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SplitV,\n    backendName: 'webgl',\n    kernelFunc: splitV\n};\n//# sourceMappingURL=SplitV.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SplitV.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sqrt.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sqrt.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export sqrt [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sqrtConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sqrt\": () => /* binding */ sqrt,\n/* harmony export */   \"sqrtConfig\": () => /* binding */ sqrtConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst SQRT = `return sqrt(x);`;\nconst sqrt = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: SQRT });\nconst sqrtConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sqrt,\n    backendName: 'webgl',\n    kernelFunc: sqrt\n};\n//# sourceMappingURL=Sqrt.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sqrt.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Square.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Square.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export square [provided] [no usage info] [missing usage info prevents renaming] */
/*! export squareConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"square\": () => /* binding */ square,\n/* harmony export */   \"squareConfig\": () => /* binding */ squareConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst SQUARE = `return x * x;`;\nconst square = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: SQUARE });\nconst squareConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Square,\n    backendName: 'webgl',\n    kernelFunc: square,\n};\n//# sourceMappingURL=Square.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Square.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SquaredDifference.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SquaredDifference.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export squaredDifference [provided] [no usage info] [missing usage info prevents renaming] */
/*! export squaredDifferenceConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"squaredDifference\": () => /* binding */ squaredDifference,\n/* harmony export */   \"squaredDifferenceConfig\": () => /* binding */ squaredDifferenceConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst SQUARED_DIFFERENCE = 'return (a - b) * (a - b);';\nconst squaredDifference = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.binaryKernelFunc)({ opSnippet: SQUARED_DIFFERENCE, packedOpSnippet: SQUARED_DIFFERENCE });\nconst squaredDifferenceConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.SquaredDifference,\n    backendName: 'webgl',\n    kernelFunc: squaredDifference,\n};\n//# sourceMappingURL=SquaredDifference.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SquaredDifference.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Step.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Step.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export step [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stepConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"step\": () => /* binding */ step,\n/* harmony export */   \"stepConfig\": () => /* binding */ stepConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../unaryop_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction step({ inputs, attrs, backend }) {\n    const { x } = inputs;\n    const opSnippet = _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__.CHECK_NAN_SNIPPET + `\n    return x > 0.0 ? 1.0 : float(${attrs.alpha});\n  `;\n    const program = new _unaryop_gpu__WEBPACK_IMPORTED_MODULE_1__.UnaryOpProgram(x.shape, opSnippet);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nconst stepConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Step,\n    backendName: 'webgl',\n    kernelFunc: step,\n};\n//# sourceMappingURL=Step.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Step.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/StridedSlice.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/StridedSlice.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export stridedSlice [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stridedSliceConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stridedSlice\": () => /* binding */ stridedSlice,\n/* harmony export */   \"stridedSliceConfig\": () => /* binding */ stridedSliceConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/* harmony import */ var _strided_slice_gpu__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../strided_slice_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/strided_slice_gpu.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/* harmony import */ var _Slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Slice */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Slice.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\nfunction stridedSlice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask } = attrs;\n    const { nonStrided, $begin, $strides, size, newShape, outShape } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice_util.sliceInfo(x.shape, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask);\n    const $x = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x }, backend, attrs: { shape: newShape } });\n    let result;\n    if (nonStrided) {\n        const sliced = (0,_Slice__WEBPACK_IMPORTED_MODULE_2__.slice)({ inputs: { x: $x }, backend, attrs: { begin: $begin, size } });\n        result = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: sliced }, backend, attrs: { shape: outShape } });\n        backend.disposeIntermediateTensorInfo(sliced);\n    }\n    else if (outShape.some(axis => axis === 0)) {\n        result = backend.makeTensorInfo(outShape, x.dtype, []);\n    }\n    else {\n        const shouldExecuteOnCPU = backend.shouldExecuteOnCPU([$x]);\n        if (shouldExecuteOnCPU) {\n            const xTexData = backend.texData.get($x.dataId);\n            const values = xTexData.values;\n            const xBuf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)($x.shape, $x.dtype, values);\n            const resultValues = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_3__.stridedSliceImplCPU)(outShape, xBuf, $strides, $begin);\n            result = backend.makeTensorInfo(outShape, $x.dtype, resultValues.values);\n        }\n        else {\n            const program = new _strided_slice_gpu__WEBPACK_IMPORTED_MODULE_4__.StridedSliceProgram($begin, $strides, outShape);\n            result = backend.runWebGLProgram(program, [$x], $x.dtype);\n        }\n    }\n    const resultReshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)({ inputs: { x: result }, backend, attrs: { shape: outShape } });\n    backend.disposeIntermediateTensorInfo($x);\n    backend.disposeIntermediateTensorInfo(result);\n    return resultReshaped;\n}\nconst stridedSliceConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.StridedSlice,\n    backendName: 'webgl',\n    kernelFunc: stridedSlice\n};\n//# sourceMappingURL=StridedSlice.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/StridedSlice.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sub.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sub.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export sub [provided] [no usage info] [missing usage info prevents renaming] */
/*! export subConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sub\": () => /* binding */ sub,\n/* harmony export */   \"subConfig\": () => /* binding */ subConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst SUB = 'return a - b;';\nconst sub = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.binaryKernelFunc)({\n    opSnippet: SUB,\n    packedOpSnippet: SUB,\n    supportsComplex: true,\n    cpuKernelImpl: _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__.subImplCPU\n});\nconst subConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sub,\n    backendName: 'webgl',\n    kernelFunc: sub\n};\n//# sourceMappingURL=Sub.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sub.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export sum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sumConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sum\": () => /* binding */ sum,\n/* harmony export */   \"sumConfig\": () => /* binding */ sumConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Sum_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Sum_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction sum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    return (0,_Sum_impl__WEBPACK_IMPORTED_MODULE_1__.sumImpl)(x, axis, keepDims, backend);\n}\nconst sumConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Sum,\n    backendName: 'webgl',\n    kernelFunc: sum\n};\n//# sourceMappingURL=Sum.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum_impl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum_impl.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export sumImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sumImpl\": () => /* binding */ sumImpl\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_reduce__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_utils/reduce */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/reduce.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/* harmony import */ var _Transpose_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transpose_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction sumImpl(x, axis, keepDims, backend) {\n    const reductionIndices = axis;\n    const xRank = x.shape.length;\n    const origAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.parseAxisParam(reductionIndices, x.shape);\n    let axes = origAxes;\n    const permutedAxes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation(axes, xRank);\n    const sumInputIsTransposed = permutedAxes != null;\n    let sumInput = x;\n    if (sumInputIsTransposed) {\n        sumInput = (0,_Transpose_impl__WEBPACK_IMPORTED_MODULE_1__.transposeImpl)(x, permutedAxes, backend);\n        axes = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(axes.length, xRank);\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.assertAxesAreInnerMostDims('sum', axes, xRank);\n    const [sumOutShape, reduceShape] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.computeOutAndReduceShapes(sumInput.shape, axes);\n    let outShape = sumOutShape;\n    if (keepDims) {\n        // rather than reshape at the end, set the target shape here.\n        outShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.expandShapeToKeepDim(sumOutShape, origAxes);\n    }\n    const inSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(reduceShape);\n    const xSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shape);\n    const batchSize = xSize / inSize;\n    const reshapedInput = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: sumInput }, attrs: { shape: [batchSize, inSize] }, backend });\n    const outType = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sumOutType)(x.dtype);\n    const reduced = (0,_kernel_utils_reduce__WEBPACK_IMPORTED_MODULE_3__.reduce)(reshapedInput, outType, 'sum', backend);\n    const out = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: reduced }, attrs: { shape: outShape }, backend });\n    backend.disposeIntermediateTensorInfo(reshapedInput);\n    backend.disposeIntermediateTensorInfo(reduced);\n    if (sumInputIsTransposed) {\n        backend.disposeIntermediateTensorInfo(sumInput);\n    }\n    return out;\n}\n//# sourceMappingURL=Sum_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tan.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tan.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export tan [provided] [no usage info] [missing usage info prevents renaming] */
/*! export tanConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tan\": () => /* binding */ tan,\n/* harmony export */   \"tanConfig\": () => /* binding */ tanConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst TAN = `return tan(x);`;\nconst tan = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: TAN });\nconst tanConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tan,\n    backendName: 'webgl',\n    kernelFunc: tan,\n};\n//# sourceMappingURL=Tan.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tan.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tanh.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tanh.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export tanh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export tanhConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tanh\": () => /* binding */ tanh,\n/* harmony export */   \"tanhConfig\": () => /* binding */ tanhConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/kernel_funcs_utils */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/kernel_funcs_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst TANH = `\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n`;\nconst tanh = (0,_kernel_utils_kernel_funcs_utils__WEBPACK_IMPORTED_MODULE_1__.unaryKernelFunc)({ opSnippet: TANH });\nconst tanhConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tanh,\n    backendName: 'webgl',\n    kernelFunc: tanh,\n};\n//# sourceMappingURL=Tanh.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tanh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tile.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tile.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export tile [provided] [no usage info] [missing usage info prevents renaming] */
/*! export tileConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tile\": () => /* binding */ tile,\n/* harmony export */   \"tileConfig\": () => /* binding */ tileConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/* harmony import */ var _tile_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tile_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/tile_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction tile(params) {\n    const { inputs, backend, attrs } = params;\n    const { x } = inputs;\n    const { reps } = attrs;\n    if (x.dtype === 'string') {\n        // Even thought string tensor is always on CPU, just to be consistent on how\n        // to access tensor data.\n        const data = backend.readSync(x.dataId);\n        const decodedData = data.map(d => _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.decodeString(d));\n        const buf = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.buffer)(x.shape, x.dtype, decodedData);\n        const outBuf = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__.tileImplCPU)(buf, reps);\n        return backend.makeTensorInfo(outBuf.shape, outBuf.dtype, outBuf.values);\n    }\n    const program = new _tile_gpu__WEBPACK_IMPORTED_MODULE_2__.TileProgram(x.shape, reps);\n    const output = backend.runWebGLProgram(program, [x], x.dtype);\n    return output;\n}\nconst tileConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tile,\n    backendName: 'webgl',\n    kernelFunc: tile,\n};\n//# sourceMappingURL=Tile.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tile.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/TopK.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/TopK.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export topK [provided] [no usage info] [missing usage info prevents renaming] */
/*! export topKConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"topK\": () => /* binding */ topK,\n/* harmony export */   \"topKConfig\": () => /* binding */ topKConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction topK(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { k, sorted } = attrs;\n    const xVals = backend.readSync(x.dataId);\n    const [allTopKVals, allTopKIndices] = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_1__.topKImplCPU)(xVals, x.shape, x.dtype, k, sorted);\n    return [\n        backend.makeTensorInfo(allTopKVals.shape, allTopKVals.dtype, allTopKVals.values),\n        backend.makeTensorInfo(allTopKIndices.shape, allTopKIndices.dtype, allTopKIndices.values)\n    ];\n}\nconst topKConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.TopK,\n    backendName: 'webgl',\n    kernelFunc: topK\n};\n//# sourceMappingURL=TopK.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/TopK.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export transpose [provided] [no usage info] [missing usage info prevents renaming] */
/*! export transposeConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transpose\": () => /* binding */ transpose,\n/* harmony export */   \"transposeConfig\": () => /* binding */ transposeConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Transpose_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transpose_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose_impl.js\");\n/* harmony import */ var _Transpose_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transpose_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction transpose(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { perm } = attrs;\n    const webglBackend = backend;\n    const xRank = x.shape.length;\n    const newShape = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n        newShape[i] = x.shape[perm[i]];\n    }\n    let out;\n    if (webglBackend.shouldExecuteOnCPU([x])) {\n        const xTexData = webglBackend.texData.get(x.dataId);\n        const values = xTexData.values;\n        const outValues = (0,_Transpose_impl__WEBPACK_IMPORTED_MODULE_1__.transposeImplCPU)(values, x.shape, x.dtype, perm, newShape);\n        out = webglBackend.makeTensorInfo(newShape, x.dtype);\n        const outData = webglBackend.texData.get(out.dataId);\n        outData.values = outValues;\n    }\n    else {\n        out = (0,_Transpose_impl__WEBPACK_IMPORTED_MODULE_2__.transposeImpl)(x, perm, webglBackend);\n    }\n    return out;\n}\nconst transposeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Transpose,\n    backendName: 'webgl',\n    kernelFunc: transpose\n};\n//# sourceMappingURL=Transpose.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose_impl.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose_impl.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export transposeImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! export transposeImplCPU [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js .transposeImplCPU */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transposeImpl\": () => /* binding */ transposeImpl,\n/* harmony export */   \"transposeImplCPU\": () => /* reexport safe */ _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_3__.transposeImplCPU\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/* harmony import */ var _transpose_gpu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transpose_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/transpose_gpu.js\");\n/* harmony import */ var _transpose_packed_gpu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transpose_packed_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/transpose_packed_gpu.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction transposeImpl(x, perm, backend) {\n    const program = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n        new _transpose_packed_gpu__WEBPACK_IMPORTED_MODULE_1__.TransposePackedProgram(x.shape, perm) :\n        new _transpose_gpu__WEBPACK_IMPORTED_MODULE_2__.TransposeProgram(x.shape, perm);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\n\n//# sourceMappingURL=Transpose_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unique.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unique.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export unique [provided] [no usage info] [missing usage info prevents renaming] */
/*! export uniqueConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unique\": () => /* binding */ unique,\n/* harmony export */   \"uniqueConfig\": () => /* binding */ uniqueConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_utils/shared */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js\");\n/* harmony import */ var _webgl_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../webgl_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction unique(args) {\n    const { inputs, attrs, backend } = args;\n    const { axis } = attrs;\n    const { x } = inputs;\n    (0,_webgl_util__WEBPACK_IMPORTED_MODULE_1__.assertNotComplex)(x, 'unique');\n    // For now, always forward calculation to the CPU backend.\n    console.warn('WARNING: ', 'UI might be locked temporarily as data is being downloaded');\n    const values = backend.readSync(x.dataId);\n    const { outputValues, outputShape, indices } = (0,_kernel_utils_shared__WEBPACK_IMPORTED_MODULE_2__.uniqueImplCPU)(values, axis, x.shape, x.dtype);\n    return [\n        backend.makeTensorInfo(outputShape, x.dtype, outputValues),\n        backend.makeTensorInfo([indices.length], 'int32', indices),\n    ];\n}\nconst uniqueConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Unique,\n    backendName: 'webgl',\n    kernelFunc: unique,\n};\n//# sourceMappingURL=Unique.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unique.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unpack.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unpack.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export unpack [provided] [no usage info] [missing usage info prevents renaming] */
/*! export unpackConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unpack\": () => /* binding */ unpack,\n/* harmony export */   \"unpackConfig\": () => /* binding */ unpackConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/* harmony import */ var _Slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Slice */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Slice.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction unpack(args) {\n    const { inputs, backend, attrs } = args;\n    const { value } = inputs;\n    let { axis } = attrs;\n    if (axis < 0) {\n        axis += value.shape.length;\n    }\n    const x = value;\n    const xRank = x.shape.length;\n    const num = value.shape[axis];\n    const outShape = new Array(xRank - 1);\n    let outIndex = 0;\n    for (let i = 0; i < xRank; i++) {\n        if (i !== axis) {\n            outShape[outIndex++] = x.shape[i];\n        }\n    }\n    const toDispose = [];\n    const begin = new Array(xRank).fill(0);\n    const size = x.shape.slice();\n    size[axis] = 1;\n    const res = new Array(num);\n    for (let i = 0; i < res.length; i++) {\n        begin[axis] = i;\n        const sliced = (0,_Slice__WEBPACK_IMPORTED_MODULE_1__.slice)({ inputs: { x }, backend, attrs: { begin, size } });\n        const reshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: sliced }, backend, attrs: { shape: outShape } });\n        res[i] = reshaped;\n        toDispose.push(sliced);\n    }\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return res;\n}\nconst unpackConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Unpack,\n    backendName: 'webgl',\n    kernelFunc: unpack\n};\n//# sourceMappingURL=Unpack.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unpack.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/UnsortedSegmentSum.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/UnsortedSegmentSum.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! export unsortedSegmentSum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export unsortedSegmentSumConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unsortedSegmentSum\": () => /* binding */ unsortedSegmentSum,\n/* harmony export */   \"unsortedSegmentSumConfig\": () => /* binding */ unsortedSegmentSumConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _segment_gpu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../segment_gpu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/segment_gpu.js\");\n/* harmony import */ var _Range__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Range */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Range.js\");\n/* harmony import */ var _Reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/* harmony import */ var _Tile__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Tile */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tile.js\");\n/* harmony import */ var _Transpose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Transpose */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\nfunction unsortedSegmentSum(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, segmentIds } = inputs;\n    const { numSegments } = attrs;\n    const xRank = x.shape.length;\n    const toDispose = [];\n    let axis = 0;\n    const permutation = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getAxesPermutation([axis], xRank);\n    let permutedX = x;\n    if (permutation != null) {\n        permutedX = (0,_Transpose__WEBPACK_IMPORTED_MODULE_1__.transpose)({ inputs: { x }, backend, attrs: { perm: permutation } });\n        toDispose.push(permutedX);\n        axis = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getInnerMostAxes(1, xRank)[0];\n    }\n    const outShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.segment_util.computeOutShape(permutedX.shape, axis, numSegments);\n    const inSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape([permutedX.shape[axis]]);\n    const a2D = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n    toDispose.push(a2D);\n    const outputDType = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.sumOutType)(x.dtype);\n    const segOpCompute = (x, segOpType, segmentIds, dtype, numSegments) => {\n        const batchSize = x.shape[0];\n        const inSize = x.shape[1];\n        const windowSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.segment_util.segOpComputeOptimalWindowSize(inSize, numSegments);\n        const segOpInfo = { windowSize, inSize, batchSize, numSegments };\n        const program = new _segment_gpu__WEBPACK_IMPORTED_MODULE_3__.SegmentOpProgram(segOpInfo, segOpType);\n        const output = backend.compileAndRun(program, [x, segmentIds], dtype);\n        toDispose.push(output);\n        // No need to run another GPGPU program.\n        if (output.shape[1] === numSegments) {\n            return output;\n        }\n        const rangeInfo = (0,_Range__WEBPACK_IMPORTED_MODULE_4__.range)({\n            backend,\n            attrs: { start: 0, stop: numSegments, step: 1, dtype: 'float32' }\n        });\n        const tileInfo = (0,_Tile__WEBPACK_IMPORTED_MODULE_5__.tile)({\n            inputs: { x: rangeInfo },\n            backend,\n            attrs: { reps: [inSize / windowSize] }\n        });\n        toDispose.push(rangeInfo);\n        toDispose.push(tileInfo);\n        const result = segOpCompute(output, segOpType, tileInfo, dtype, numSegments);\n        return result;\n    };\n    const segOpResult = segOpCompute(a2D, 'unsortedSegmentSum', segmentIds, outputDType, numSegments);\n    const reshaped = (0,_Reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)({ inputs: { x: segOpResult }, backend, attrs: { shape: outShape } });\n    let result = reshaped;\n    if (permutation != null) {\n        toDispose.push(reshaped);\n        const perm = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getUndoAxesPermutation(permutation);\n        result = (0,_Transpose__WEBPACK_IMPORTED_MODULE_1__.transpose)({ inputs: { x: result }, backend, attrs: { perm } });\n    }\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n}\nconst unsortedSegmentSumConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.UnsortedSegmentSum,\n    backendName: 'webgl',\n    kernelFunc: unsortedSegmentSum\n};\n//# sourceMappingURL=UnsortedSegmentSum.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/UnsortedSegmentSum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ZerosLike.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ZerosLike.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export zerosLike [provided] [no usage info] [missing usage info prevents renaming] */
/*! export zerosLikeConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"zerosLike\": () => /* binding */ zerosLike,\n/* harmony export */   \"zerosLikeConfig\": () => /* binding */ zerosLikeConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _Complex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Complex */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Complex.js\");\n/* harmony import */ var _Fill__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Fill */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Fill.js\");\n/* harmony import */ var _Imag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Imag */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Imag.js\");\n/* harmony import */ var _Real__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Real */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Real.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\nfunction zerosLike(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    if (x.dtype === 'complex64') {\n        const realPart = (0,_Real__WEBPACK_IMPORTED_MODULE_1__.real)({ inputs: { input: x }, backend });\n        const r = zerosLike({ inputs: { x: realPart }, backend });\n        const imagPart = (0,_Imag__WEBPACK_IMPORTED_MODULE_2__.imag)({ inputs: { input: x }, backend });\n        const i = zerosLike({ inputs: { x: imagPart }, backend });\n        const result = (0,_Complex__WEBPACK_IMPORTED_MODULE_3__.complex)({ inputs: { real: r, imag: i }, backend });\n        backend.disposeIntermediateTensorInfo(realPart);\n        backend.disposeIntermediateTensorInfo(r);\n        backend.disposeIntermediateTensorInfo(imagPart);\n        backend.disposeIntermediateTensorInfo(i);\n        return result;\n    }\n    else {\n        return (0,_Fill__WEBPACK_IMPORTED_MODULE_4__.fill)({\n            attrs: {\n                shape: x.shape,\n                dtype: x.dtype,\n                value: x.dtype === 'string' ? '' : 0\n            },\n            backend\n        });\n    }\n}\nconst zerosLikeConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.ZerosLike,\n    backendName: 'webgl',\n    kernelFunc: zerosLike\n};\n//# sourceMappingURL=ZerosLike.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ZerosLike.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/_FusedMatMul.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/_FusedMatMul.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export _fusedMatMul [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _fusedMatMulConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_fusedMatMul\": () => /* binding */ _fusedMatMul,\n/* harmony export */   \"_fusedMatMulConfig\": () => /* binding */ _fusedMatMulConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _BatchMatMul_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BatchMatMul_impl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchMatMul_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction _fusedMatMul(args) {\n    const { inputs, backend, attrs } = args;\n    const { a, b, bias, preluActivationWeights } = inputs;\n    const { transposeA, transposeB, activation, leakyreluAlpha } = attrs;\n    return (0,_BatchMatMul_impl__WEBPACK_IMPORTED_MODULE_1__.batchMatMulImpl)({\n        a,\n        b,\n        transposeA,\n        transposeB,\n        backend,\n        bias,\n        preluActivationWeights,\n        leakyreluAlpha,\n        activation\n    });\n}\nconst _fusedMatMulConfig = {\n    kernelName: _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__._FusedMatMul,\n    backendName: 'webgl',\n    kernelFunc: _fusedMatMul,\n};\n//# sourceMappingURL=_FusedMatMul.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/_FusedMatMul.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_gpu.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_gpu.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export LRNProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LRNProgram\": () => /* binding */ LRNProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass LRNProgram {\n    constructor(xShape, radius, bias, alpha, beta) {\n        this.variableNames = ['x'];\n        this.outputShape = [];\n        const rad = radius;\n        const maxD = xShape[3] - 1;\n        this.outputShape = xShape;\n        // optimize pow(bias + alpha * sum, -beta)\n        // src: https://github.com/tensorflow/tensorflow/..\n        // blob/26033a1644a9c4a5fbe3170ab2e864b6a4ccd4ca/..\n        // tensorflow/core/kernels/mkl_lrn_op.cc#L320\n        let powOperator;\n        const basis = `float(${bias}) + float(${alpha}) * sum`;\n        if (beta === 0.5) {\n            powOperator = `inversesqrt(${basis})`;\n        }\n        else if (beta === 1.0) {\n            powOperator = `1.0/(${basis})`;\n        }\n        else {\n            powOperator = `exp(log(${basis}) * float(-${beta}));`;\n        }\n        this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${rad}; j <= ${rad}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${maxD}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${powOperator};\n        setOutput(val);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=lrn_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_grad_gpu.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_grad_gpu.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export LRNGradProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LRNGradProgram\": () => /* binding */ LRNGradProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass LRNGradProgram {\n    constructor(inputShape, depthRadius, bias, alpha, beta) {\n        this.variableNames = ['inputImage', 'outputImage', 'dy'];\n        this.outputShape = [];\n        this.outputShape = inputShape;\n        this.depth = inputShape[3];\n        this.depthRadius = depthRadius;\n        this.bias = bias;\n        this.alpha = alpha;\n        this.beta = beta;\n        this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${depthRadius})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${depthRadius} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${alpha}) * norm + float(${bias});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${alpha})\n                * float(${beta})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${beta});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=lrn_grad_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_grad_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_packed_gpu.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_packed_gpu.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export LRNPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LRNPackedProgram\": () => /* binding */ LRNPackedProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass LRNPackedProgram {\n    constructor(xShape, radius, bias, alpha, beta) {\n        this.variableNames = ['x'];\n        this.outputShape = [];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        const rad = radius;\n        const maxD = xShape[3] - 1;\n        this.outputShape = xShape;\n        // optimize pow(bias + alpha * sum, -beta)\n        // src: https://github.com/tensorflow/tensorflow/..\n        // blob/26033a1644a9c4a5fbe3170ab2e864b6a4ccd4ca/..\n        // tensorflow/core/kernels/mkl_lrn_op.cc#L320\n        let powOperator;\n        const basis = `float(${bias}) + float(${alpha}) * sum`;\n        if (beta === 0.5) {\n            powOperator = `inversesqrt(${basis})`;\n        }\n        else if (beta === 1.0) {\n            powOperator = `1.0/(${basis})`;\n        }\n        else {\n            powOperator = `exp(log(${basis}) * float(-${beta}));`;\n        }\n        this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${rad};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${rad}; j <= ${rad}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${maxD}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${powOperator};\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=lrn_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/lrn_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/max_pool_backprop_gpu.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/max_pool_backprop_gpu.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export MaxPool2DBackpropProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MaxPool3DBackpropProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MaxPool2DBackpropProgram\": () => /* binding */ MaxPool2DBackpropProgram,\n/* harmony export */   \"MaxPool3DBackpropProgram\": () => /* binding */ MaxPool3DBackpropProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass MaxPool2DBackpropProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'maxPos'];\n        this.outputShape = convInfo.inShape;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationHeight = convInfo.dilationHeight;\n        const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        const lastIndex = effectiveFilterHeight * effectiveFilterWidth - 1;\n        this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${effectiveFilterHeight};\n          wR += ${dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${effectiveFilterWidth}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${lastIndex} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${effectiveFilterWidth} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\nclass MaxPool3DBackpropProgram {\n    constructor(convInfo) {\n        this.variableNames = ['dy', 'maxPos'];\n        this.outputShape = convInfo.inShape;\n        const strideDepth = convInfo.strideDepth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationDepth = convInfo.dilationDepth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n        const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        const padFront = effectiveFilterDepth - 1 - convInfo.padInfo.front;\n        const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n        const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n        const lastIndex = effectiveFilterDepth * effectiveFilterHeight * effectiveFilterWidth - 1;\n        this.userCode = `\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${effectiveFilterDepth};\n           wD += ${dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${convInfo.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n              wR += ${dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${effectiveFilterWidth};\n                wC += ${dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${lastIndex} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${effectiveFilterHeight} * ${effectiveFilterWidth} +\n                  wR * ${effectiveFilterWidth} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=max_pool_backprop_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/max_pool_backprop_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/mean_gpu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/mean_gpu.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export MeanProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MeanProgram\": () => /* binding */ MeanProgram\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass MeanProgram {\n    constructor(reduceInfo, divisor) {\n        this.variableNames = ['x'];\n        const { windowSize, batchSize, inSize, outSize } = reduceInfo;\n        this.outputShape = [batchSize, outSize];\n        const windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n        const windowSizeVec4Remainder = windowSize % 4;\n        let updateSnippet = `sumValue += dot(values, ones);`;\n        if (divisor != null) {\n            const denominator = 1 / divisor;\n            updateSnippet = `sumValue += dot(values * ${_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.isInt(denominator) ? denominator.toPrecision(2) :\n                denominator}, ones);`;\n        }\n        let checkOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkOutOfBounds = `\n        if (inIdx < 0 || inIdx >= ${inSize}) {\n          return 0.0;\n        }\n      `;\n        }\n        this.userCode = `\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${checkOutOfBounds}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${windowSize};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${windowSizeNearestVec4}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${updateSnippet}\n        }\n\n        int inIdx = inOffset + ${windowSizeNearestVec4};\n        if (${windowSizeVec4Remainder === 1}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 2}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 3}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${updateSnippet}\n        }\n        setOutput(sumValue);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=mean_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/mean_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/mirror_pad_gpu.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/mirror_pad_gpu.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export MirrorPadProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MirrorPadProgram\": () => /* binding */ MirrorPadProgram\n/* harmony export */ });\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass MirrorPadProgram {\n    constructor(xShape, paddings, mode) {\n        this.variableNames = ['x'];\n        this.outputShape = paddings.map((p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n        const rank = xShape.length;\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(rank);\n        const start = paddings.map(p => p[0]).join(',');\n        const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n        const unpackedCoords = ['coords[0]', 'coords[1]', 'coords[2]', 'coords[3]'].slice(0, rank);\n        const offset = mode === 'reflect' ? 0 : 1;\n        if (rank === 1) {\n            this.userCode = `\n        int start = ${start};\n        int end = ${end};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${offset};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${offset};\n          }\n          setOutput(getX(outC - start));\n        }\n      `;\n            return;\n        }\n        this.userCode = `\n      ${dtype} start = ${dtype}(${start});\n      ${dtype} end = ${dtype}(${end});\n\n      void main() {\n        ${dtype} outC = getOutputCoords();\n        for (int i = 0; i < ${rank}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${offset};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${offset};\n          }\n        }\n        ${dtype} coords = outC - start;\n        setOutput(getX(${unpackedCoords}));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=mirror_pad_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/mirror_pad_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/mirror_pad_packed_gpu.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/mirror_pad_packed_gpu.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export MirrorPadPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MirrorPadPackedProgram\": () => /* binding */ MirrorPadPackedProgram\n/* harmony export */ });\n/* harmony import */ var _packing_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packing_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js\");\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * Example shader code for\n * `mirrorPad(tf.tensor1d([1, 2, 3], 'int32'), [[2, 2]], 'reflect')`\n * ```\n *    const int start = int(2);\n *    const int end = int(5);\n *\n *    void main() {\n *       int outputLoc = getOutputCoords();\n *       vec4 result = vec4(0.);\n *\n *       int rc = outputLoc;\n *\n *       int source = rc;\n *       if (source < start) {\n *         source = start * 2 - source - 0;\n *       } else if (source >= end) {\n *         source = (end - 1) * 2 - source + 0;\n *       }\n *       source -= start;\n *\n *       result[0] = getChannel(getX(source), source);\n *       rc += 1;\n *       if(rc < 6) {\n *          int source = rc;\n *          if (source < start) {\n *            source = start * 2 - source - 0;\n *          } else if (source >= end) {\n *            source = (end - 1) * 2 - source + 0;\n *          }\n *          source -= start;\n *\n *         result[1] = getChannel(getX(source), source);\n *       }\n *\n *       setOutput(result);\n *     }\n * ```\n */\nclass MirrorPadPackedProgram {\n    constructor(xShape, paddings, mode) {\n        this.variableNames = ['x'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = paddings.map((p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n        const rank = xShape.length;\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(rank);\n        const start = paddings.map(p => p[0]).join(',');\n        const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n        const coords = (0,_packing_util__WEBPACK_IMPORTED_MODULE_1__.getChannels)('rc', rank);\n        const source = (0,_packing_util__WEBPACK_IMPORTED_MODULE_1__.getChannels)('source', rank);\n        const cLimit = `${coords[rank - 1]} < ${this.outputShape[rank - 1]}`;\n        const innerDims = rank === 1 ? 'source' : `vec2(${source.slice(-2).join()})`;\n        const offset = mode === 'reflect' ? 0 : 1;\n        let mainLoop = '';\n        if (rank === 1) {\n            const padSetup = `\n        ${dtype} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${offset};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${offset};\n        }\n        source -= start;\n      `;\n            mainLoop = `\n        ${dtype} rc = outputLoc;\n        ${padSetup}\n        result[0] = getChannel(getX(${source.join()}), ${innerDims});\n        ${coords[rank - 1]} += 1;\n        if(${cLimit}) {\n          ${padSetup}\n          result[1] = getChannel(getX(${source.join()}), ${innerDims});\n        }\n      `;\n        }\n        else {\n            const padSetup = `\n        ${dtype} source = rc;\n        ${dtype} lt = ${dtype}(lessThan(source, start));\n        ${dtype} gte = ${dtype}(greaterThanEqual(source, end));\n        ${dtype} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${offset}) +\n                gte * ((end - 1) * 2 - source + ${offset});\n        source -= start;\n      `;\n            mainLoop = `\n        ${dtype} rc = outputLoc;\n        ${padSetup}\n        result[0] = getChannel(getX(${source.join()}), ${innerDims});\n        ${coords[rank - 1]} += 1;\n        if(${cLimit}) {\n          ${padSetup}\n          result[1] = getChannel(getX(${source.join()}), ${innerDims});\n        }\n        rc = outputLoc;\n        ${coords[rank - 2]} += 1;\n        if(${coords[rank - 2]} < ${this.outputShape[rank - 2]}) {\n          ${padSetup}\n          result[2] = getChannel(getX(${source.join()}), ${innerDims});\n          ${coords[rank - 1]} += 1;\n          if(${cLimit}) {\n            ${padSetup}\n            result[3] = getChannel(getX(${source.join()}), ${innerDims});\n          }\n        }\n      `;\n        }\n        this.userCode = `\n      const ${dtype} start = ${dtype}(${start});\n      const ${dtype} end = ${dtype}(${end});\n\n      void main() {\n        ${dtype} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${mainLoop}\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=mirror_pad_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/mirror_pad_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/mulmat_packed_gpu.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/mulmat_packed_gpu.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export MatMulPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MatMulPackedProgram\": () => /* binding */ MatMulPackedProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass MatMulPackedProgram {\n    constructor(aShape, bShape, outputShape, transposeA = false, transposeB = false, addBias = false, activation = null, hasPreluActivation = false, hasLeakyreluActivation = false) {\n        this.variableNames = ['matrixA', 'matrixB'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = outputShape;\n        const sharedDim = transposeA ? aShape[1] : aShape[2];\n        const sharedDimensionPacked = Math.ceil(sharedDim / 2);\n        const aSample = transposeA ? 'i * 2, rc.y' : 'rc.y, i * 2';\n        const bSample = transposeB ? 'rc.z, i * 2' : 'i * 2, rc.z';\n        const aSwizzle = transposeA ? ['a.xxyy', 'a.zzww'] : ['a.xxzz', 'a.yyww'];\n        const bSwizzle = transposeB ? ['b.xzxz', 'b.ywyw'] : ['b.xyxy', 'b.zwzw'];\n        let activationSnippet = '', applyActivationSnippet = '';\n        if (activation) {\n            if (hasPreluActivation) {\n                activationSnippet = `vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else if (hasLeakyreluActivation) {\n                activationSnippet = `vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${activation}\n        }`;\n            }\n            else {\n                activationSnippet = `vec4 activation(vec4 x) {\n          ${activation}\n        }`;\n            }\n            applyActivationSnippet = `result = activation(result);`;\n        }\n        const addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n        if (addBias) {\n            this.variableNames.push('bias');\n        }\n        if (hasPreluActivation) {\n            this.variableNames.push('preluActivationWeights');\n        }\n        if (hasLeakyreluActivation) {\n            this.variableNames.push('leakyreluAlpha');\n        }\n        let batchASnippet = 'rc.x';\n        let batchBSnippet = 'rc.x';\n        if (aShape[0] < bShape[0]) {\n            batchASnippet = `int(min(float(rc.x), ${aShape[0] - 1}.))`;\n        }\n        else if (bShape[0] < aShape[0]) {\n            batchBSnippet = `int(min(float(rc.x), ${bShape[0] - 1}.))`;\n        }\n        this.userCode = `\n      ${activationSnippet}\n\n      const float sharedDimension = ${sharedDimensionPacked}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${sharedDimensionPacked}; i++) {\n          int batchA = ${batchASnippet};\n          int batchB = ${batchBSnippet};\n          vec4 a = getMatrixA(batchA, ${aSample});\n          vec4 b = getMatrixB(batchB, ${bSample});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${aSwizzle[0]} * ${bSwizzle[0]});\n          result += (${aSwizzle[1]} * ${bSwizzle[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${addBiasSnippet}\n\n        ${applyActivationSnippet}\n\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=mulmat_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/mulmat_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/multinomial_gpu.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/multinomial_gpu.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export MultinomialProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MultinomialProgram\": () => /* binding */ MultinomialProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass MultinomialProgram {\n    constructor(batchSize, numOutcomes, numSamples) {\n        this.variableNames = ['probs'];\n        this.outputShape = [batchSize, numSamples];\n        this.userCode = `\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${numOutcomes - 1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${numOutcomes - 1}));\n      }\n    `;\n    }\n    getCustomSetupFunc(seed) {\n        return (gpgpu, webGLProgram) => {\n            if (this.seedLoc == null) {\n                this.seedLoc = gpgpu.getUniformLocation(webGLProgram, 'seed');\n            }\n            gpgpu.gl.uniform1f(this.seedLoc, seed);\n        };\n    }\n}\n//# sourceMappingURL=multinomial_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/multinomial_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/onehot_gpu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/onehot_gpu.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export OneHotProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OneHotProgram\": () => /* binding */ OneHotProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass OneHotProgram {\n    constructor(numIndices, depth, onValue, offValue) {\n        this.variableNames = ['indices'];\n        this.outputShape = [numIndices, depth];\n        this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${offValue}), float(${onValue}),\n                      float(index == coords.y)));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=onehot_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/onehot_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/pack_gpu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/pack_gpu.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export PackProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PackProgram\": () => /* binding */ PackProgram\n/* harmony export */ });\n/* harmony import */ var _packing_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packing_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js\");\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nclass PackProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = false;\n        this.packedOutput = true;\n        // Only input / output 3D tensors.\n        this.outputShape = outputShape;\n        const rank = outputShape.length;\n        if (rank === 0) {\n            this.userCode = `\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      `;\n        }\n        else {\n            const channels = (0,_packing_util__WEBPACK_IMPORTED_MODULE_0__.getChannels)('rc', rank);\n            const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_1__.getCoordsDataType)(rank);\n            const outOfBoundsCondition = getOutOfBoundsCondition(rank, outputShape, channels);\n            const setup = getSetup(rank, outputShape[outputShape.length - 1], outputShape[outputShape.length - 2], channels);\n            const output = getOutput(outputShape, channels);\n            this.userCode = `\n        void main() {\n          ${dtype} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            setOutput(vec4(0));\n          } else {\n            ${setup}\n\n            setOutput(vec4(${output}));\n          }\n        }\n      `;\n        }\n    }\n}\nfunction getSourceCoordsArr(rank, dims) {\n    const coords = [];\n    for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n            let coord = `${row === 0 ? 'r' : 'rp1'}, ${col === 0 ? 'c' : 'cp1'}`;\n            for (let d = 2; d < rank; d++) {\n                coord = `${dims[dims.length - 1 - d]},` + coord;\n            }\n            coords.push(coord);\n        }\n    }\n    return coords;\n}\nfunction getOutOfBoundsCondition(rank, shape, dims) {\n    if (rank === 1) {\n        return `rc > ${shape[0]}`;\n    }\n    let cond = '';\n    for (let i = rank - 2; i < rank; i++) {\n        cond += `${dims[i]} >= ${shape[i]}`;\n        if (i < rank - 1) {\n            cond += '||';\n        }\n    }\n    return cond;\n}\nfunction getSetup(rank, cols, rows, dims) {\n    if (rank === 1) {\n        return '';\n    }\n    const innerDims = dims.slice(-2);\n    return `\n    int r = ${innerDims[0]};\n    int c = ${innerDims[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${cols};\n    bool rEdge = rp1 >= ${rows};\n  `;\n}\nfunction getOutput(shape, dims) {\n    const rank = shape.length;\n    const sourceCoords = getSourceCoordsArr(rank, dims);\n    if (rank === 1) {\n        return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n    }\n    return `getA(${sourceCoords[0]}),\n          cEdge ? 0. : getA(${sourceCoords[1]}),\n          rEdge ? 0. : getA(${sourceCoords[2]}),\n          rEdge || cEdge ? 0. : getA(${sourceCoords[3]})`;\n}\n//# sourceMappingURL=pack_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/pack_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export getChannels [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getSourceCoords [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getVecChannels [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getVecChannels\": () => /* binding */ getVecChannels,\n/* harmony export */   \"getChannels\": () => /* binding */ getChannels,\n/* harmony export */   \"getSourceCoords\": () => /* binding */ getSourceCoords\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nfunction getVecChannels(name, rank) {\n    return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank).map(d => `${name}.${d}`);\n}\nfunction getChannels(name, rank) {\n    if (rank === 1) {\n        return [name];\n    }\n    return getVecChannels(name, rank);\n}\nfunction getSourceCoords(rank, dims) {\n    if (rank === 1) {\n        return 'rc';\n    }\n    let coords = '';\n    for (let i = 0; i < rank; i++) {\n        coords += dims[i];\n        if (i < rank - 1) {\n            coords += ',';\n        }\n    }\n    return coords;\n}\n//# sourceMappingURL=packing_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/pad_gpu.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/pad_gpu.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export PadProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PadProgram\": () => /* binding */ PadProgram\n/* harmony export */ });\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass PadProgram {\n    constructor(xShape, paddings, constantValue) {\n        this.variableNames = ['x'];\n        this.outputShape = paddings.map((p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n        const rank = xShape.length;\n        const type = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(rank);\n        const start = paddings.map(p => p[0]).join(',');\n        const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n        const unpackedCoords = ['coords[0]', 'coords[1]', 'coords[2]', 'coords[3]'].slice(0, rank);\n        if (rank === 1) {\n            this.userCode = `\n        int start = ${start};\n        int end = ${end};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${constantValue}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `;\n            return;\n        }\n        this.userCode = `\n      ${type} start = ${type}(${start});\n      ${type} end = ${type}(${end});\n\n      void main() {\n        ${type} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${constantValue}));\n        } else {\n          ${type} coords = outC - start;\n          setOutput(getX(${unpackedCoords}));\n        }\n      }\n    `;\n    }\n}\n//# sourceMappingURL=pad_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/pad_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/pad_packed_gpu.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/pad_packed_gpu.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export PadPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PadPackedProgram\": () => /* binding */ PadPackedProgram\n/* harmony export */ });\n/* harmony import */ var _packing_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packing_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js\");\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nclass PadPackedProgram {\n    constructor(xShape, paddings, constantValue) {\n        this.variableNames = ['x'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = paddings.map((p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n        const rank = xShape.length;\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(rank);\n        const start = paddings.map(p => p[0]).join(',');\n        const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n        const coords = (0,_packing_util__WEBPACK_IMPORTED_MODULE_1__.getChannels)('rc', rank);\n        const source = (0,_packing_util__WEBPACK_IMPORTED_MODULE_1__.getChannels)('source', rank);\n        const cLimit = `${coords[rank - 1]} < ${this.outputShape[rank - 1]}`;\n        const innerDims = rank === 1 ? 'source' : `vec2(${source.slice(-2).join()})`;\n        const componentSetup = [\n            `${dtype} rc = outputLoc;`, `${coords[rank - 1]} += 1;\n       if(${cLimit}) {\n      `,\n            rank === 1 ? '' : `}\n       rc = outputLoc;\n       ${coords[rank - 2]} += 1;\n       if(${coords[rank - 2]} < ${this.outputShape[rank - 2]}) {`,\n            rank === 1 ? '' : `  ${coords[rank - 1]} += 1;\n         if(${cLimit}) {`\n        ];\n        const paddingArea = rank === 1 ?\n            'rc < start || rc >= end' :\n            'any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))';\n        let mainLoop = '';\n        for (let i = 0, j = rank === 1 ? 2 : 4; i < j; i++) {\n            mainLoop += `\n        ${componentSetup[i]}\n        if (${paddingArea}) {\n          result[${i}] = float(${constantValue});\n        } else {\n          ${dtype} source = rc - start;\n          result[${i}] = getChannel(getX(${source.join()}), ${innerDims});\n        }\n      `;\n        }\n        mainLoop += (rank === 1 ? `} ` : `}}`);\n        this.userCode = `\n      const ${dtype} start = ${dtype}(${start});\n      const ${dtype} end = ${dtype}(${end});\n\n      void main() {\n        ${dtype} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${mainLoop}\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=pad_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/pad_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/pool_gpu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/pool_gpu.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export Pool2DProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Pool3DProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Pool2DProgram\": () => /* binding */ Pool2DProgram,\n/* harmony export */   \"Pool3DProgram\": () => /* binding */ Pool3DProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass Pool2DProgram {\n    constructor(convInfo, poolType, computePositions, flattenPositions = false, includeBatchInIndex = false) {\n        this.variableNames = ['x'];\n        if (poolType === 'avg' && computePositions) {\n            throw new Error('Cannot compute positions for average pool.');\n        }\n        const filterWidth = convInfo.filterWidth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        this.outputShape = convInfo.outShape;\n        const isAvgPool = poolType === 'avg';\n        const batchFlattenPositionStr = `((batch  * ${convInfo.inHeight} + xR) * ${convInfo.inWidth} + xC) * ${convInfo.inChannels} + d`;\n        const flattenPositionStr = `(xR * ${convInfo.inWidth} + xC) * ${convInfo.inChannels} + d`;\n        let initializationValue = '0.0';\n        if (!isAvgPool) {\n            // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n            initializationValue = '-1.0 / 1e-20';\n        }\n        if (computePositions) {\n            const compareOp = '>=';\n            this.userCode = `\n        const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n        const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n              wR += ${dilationHeight}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${effectiveFilterWidth};\n                wC += ${dilationWidth}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${compareOp} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${flattenPositions ? (includeBatchInIndex ? batchFlattenPositionStr :\n                flattenPositionStr) :\n                `wR * ${effectiveFilterWidth} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `;\n            return;\n        }\n        const compareOp = 'max';\n        let returnValue = `${poolType}(${poolType}(${poolType}(` +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (poolType === 'avg') {\n            returnValue = `avgValue / count`;\n        }\n        const filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n        const filterWidthVec4Remainder = filterWidth % 4;\n        const updateSnippet = `\n      if (${isAvgPool}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n        this.userCode = `\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${convInfo.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${initializationValue});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${convInfo.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${filterWidthNearestVec4}; wC += 4) {\n            int xC = xCCorner + wC * ${dilationWidth};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              getValue(batch, xR, xC + 2 * ${dilationWidth}, d),\n              getValue(batch, xR, xC + 3 * ${dilationWidth}, d)\n            );\n\n            ${updateSnippet}\n          }\n\n          int xC = xCCorner + ${filterWidthNearestVec4};\n          if (${filterWidthVec4Remainder === 1}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${updateSnippet}\n          } else if (${filterWidthVec4Remainder === 2}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${updateSnippet}\n          } else if (${filterWidthVec4Remainder === 3}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              getValue(batch, xR, xC + 2 * ${dilationWidth}, d),\n              initializationValue\n            );\n\n            ${updateSnippet}\n          }\n        }\n        setOutput(${returnValue});\n      }\n    `;\n    }\n}\nclass Pool3DProgram {\n    constructor(convInfo, poolType, computePositions, flattenPositions = false, includeBatchInIndex = false) {\n        this.variableNames = ['x'];\n        if (poolType === 'avg' && computePositions) {\n            throw new Error('Cannot compute positions for average pool.');\n        }\n        const filterWidth = convInfo.filterWidth;\n        const strideDepth = convInfo.strideDepth;\n        const strideHeight = convInfo.strideHeight;\n        const strideWidth = convInfo.strideWidth;\n        const dilationDepth = convInfo.dilationDepth;\n        const dilationHeight = convInfo.dilationHeight;\n        const dilationWidth = convInfo.dilationWidth;\n        const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n        const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n        const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n        const padFront = convInfo.padInfo.front;\n        const padTop = convInfo.padInfo.top;\n        const padLeft = convInfo.padInfo.left;\n        this.outputShape = convInfo.outShape;\n        const isAvgPool = poolType === 'avg';\n        let initializationValue = '0.0';\n        if (!isAvgPool) {\n            // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n            initializationValue = '-1.0 / 1e-20';\n        }\n        if (computePositions) {\n            const compareOp = '>=';\n            this.userCode = `\n        const ivec3 strides =\n            ivec3(${strideDepth}, ${strideHeight}, ${strideWidth});\n        const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${effectiveFilterDepth};\n              wD += ${dilationDepth}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${convInfo.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${effectiveFilterHeight};\n                wR += ${dilationHeight}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${convInfo.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${effectiveFilterWidth};\n                  wC += ${dilationWidth}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${compareOp} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${flattenPositions ?\n                (includeBatchInIndex ?\n                    `(((batch * ${convInfo.inDepth} + xD) * ${convInfo.inHeight} + xR) * ${convInfo.inWidth} + xC) * ${convInfo.inChannels} + ch` :\n                    `((xD * ${convInfo.inHeight} + xR) * ${convInfo.inWidth} + xC) * ${convInfo.inChannels} + ch`) :\n                `wD * ${effectiveFilterHeight} * ${effectiveFilterWidth} +\n                      wR * ${effectiveFilterWidth} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `;\n            return;\n        }\n        const compareOp = 'max';\n        let returnValue = `${poolType}(${poolType}(${poolType}(` +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (poolType === 'avg') {\n            returnValue = `avgValue / count`;\n        }\n        const filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n        const filterWidthVec4Remainder = filterWidth % 4;\n        const updateSnippet = `\n      if (${isAvgPool}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n        this.userCode = `\n      const ivec3 strides =\n        ivec3(${strideDepth}, ${strideHeight}, ${strideWidth});\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${convInfo.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${initializationValue});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${effectiveFilterDepth};\n            wD += ${dilationDepth}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${convInfo.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${filterWidthNearestVec4}; wC += 4) {\n              int xC = xCCorner + wC * ${dilationWidth};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${dilationWidth}, ch)\n              );\n\n              ${updateSnippet}\n            }\n\n            int xC = xCCorner + ${filterWidthNearestVec4};\n            if (${filterWidthVec4Remainder === 1}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${updateSnippet}\n            } else if (${filterWidthVec4Remainder === 2}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${updateSnippet}\n            } else if (${filterWidthVec4Remainder === 3}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${dilationWidth}, ch),\n                initializationValue\n              );\n\n              ${updateSnippet}\n            }\n          }\n          setOutput(${returnValue});\n        }\n      }\n    `;\n    }\n}\n//# sourceMappingURL=pool_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/pool_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/reduce_gpu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/reduce_gpu.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export ReduceProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ReduceProgram\": () => /* binding */ ReduceProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass ReduceProgram {\n    constructor(reduceInfo, reduceType) {\n        this.variableNames = ['x'];\n        const { windowSize, batchSize, inSize, outSize } = reduceInfo;\n        this.outputShape = [batchSize, outSize];\n        let initializationValue = '0.0';\n        let compareOp = ``;\n        if (reduceType === 'prod') {\n            initializationValue = '1.0';\n        }\n        else if (reduceType === 'min') {\n            // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n            initializationValue = '1.0 / 1e-20';\n            compareOp = `min`;\n        }\n        else if (reduceType === 'max') {\n            // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n            initializationValue = '-1.0 / 1e-20';\n            compareOp = `max`;\n        }\n        let returnValue = `${reduceType}(${reduceType}(${reduceType}(` +\n            'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n        if (reduceType === 'sum') {\n            returnValue = `sumValue`;\n        }\n        else if (reduceType === 'prod') {\n            returnValue = `prodValue`;\n        }\n        else if (reduceType === 'all') {\n            returnValue = `allValue`;\n        }\n        else if (reduceType === 'any') {\n            returnValue = `anyValue`;\n        }\n        const windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n        const windowSizeVec4Remainder = windowSize % 4;\n        let updateSnippet = `\n      if (${reduceType === 'sum'}) {\n        sumValue += dot(values, ones);\n      } else if (${reduceType === 'prod'}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n        let vecType = `vec4`;\n        if (reduceType === 'all') {\n            initializationValue = '1.0';\n            updateSnippet = `\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      `;\n            vecType = `bvec4`;\n        }\n        else if (reduceType === 'any') {\n            initializationValue = '0.0';\n            updateSnippet = `\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      `;\n            vecType = `bvec4`;\n        }\n        let checkOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkOutOfBounds = `\n        if (inIdx < 0 || inIdx >= ${inSize}) {\n          return initializationValue;\n        }\n      `;\n        }\n        this.userCode = `\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${checkOutOfBounds}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${windowSize};\n\n        vec4 minMaxValue = vec4(${initializationValue});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${windowSizeNearestVec4}; i += 4) {\n          int inIdx = inOffset + i;\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${updateSnippet}\n        }\n\n        int inIdx = inOffset + ${windowSizeNearestVec4};\n        if (${windowSizeVec4Remainder === 1}) {\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 2}) {\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 3}) {\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${updateSnippet}\n        }\n        setOutput(${returnValue});\n      }\n    `;\n    }\n}\n//# sourceMappingURL=reduce_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/reduce_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/register_all_kernels.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/register_all_kernels.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _kernels_FusedMatMul__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kernels/_FusedMatMul */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/_FusedMatMul.js\");\n/* harmony import */ var _kernels_Abs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kernels/Abs */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Abs.js\");\n/* harmony import */ var _kernels_Acos__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./kernels/Acos */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Acos.js\");\n/* harmony import */ var _kernels_Acosh__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./kernels/Acosh */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Acosh.js\");\n/* harmony import */ var _kernels_Add__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./kernels/Add */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Add.js\");\n/* harmony import */ var _kernels_AddN__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./kernels/AddN */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AddN.js\");\n/* harmony import */ var _kernels_All__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./kernels/All */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/All.js\");\n/* harmony import */ var _kernels_Any__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./kernels/Any */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Any.js\");\n/* harmony import */ var _kernels_ArgMax__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./kernels/ArgMax */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ArgMax.js\");\n/* harmony import */ var _kernels_ArgMin__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./kernels/ArgMin */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ArgMin.js\");\n/* harmony import */ var _kernels_Asin__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./kernels/Asin */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Asin.js\");\n/* harmony import */ var _kernels_Asinh__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./kernels/Asinh */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Asinh.js\");\n/* harmony import */ var _kernels_Atan__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./kernels/Atan */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atan.js\");\n/* harmony import */ var _kernels_Atan2__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./kernels/Atan2 */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atan2.js\");\n/* harmony import */ var _kernels_Atanh__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./kernels/Atanh */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Atanh.js\");\n/* harmony import */ var _kernels_AvgPool__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./kernels/AvgPool */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool.js\");\n/* harmony import */ var _kernels_AvgPool3D__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./kernels/AvgPool3D */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool3D.js\");\n/* harmony import */ var _kernels_AvgPool3DGrad__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./kernels/AvgPool3DGrad */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPool3DGrad.js\");\n/* harmony import */ var _kernels_AvgPoolGrad__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./kernels/AvgPoolGrad */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/AvgPoolGrad.js\");\n/* harmony import */ var _kernels_BatchMatMul__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./kernels/BatchMatMul */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchMatMul.js\");\n/* harmony import */ var _kernels_BatchNorm__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./kernels/BatchNorm */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchNorm.js\");\n/* harmony import */ var _kernels_BatchToSpaceND__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./kernels/BatchToSpaceND */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchToSpaceND.js\");\n/* harmony import */ var _kernels_Bincount__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./kernels/Bincount */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Bincount.js\");\n/* harmony import */ var _kernels_Cast__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./kernels/Cast */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cast.js\");\n/* harmony import */ var _kernels_Ceil__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./kernels/Ceil */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Ceil.js\");\n/* harmony import */ var _kernels_ClipByValue__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./kernels/ClipByValue */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ClipByValue.js\");\n/* harmony import */ var _kernels_Complex__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./kernels/Complex */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Complex.js\");\n/* harmony import */ var _kernels_ComplexAbs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./kernels/ComplexAbs */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ComplexAbs.js\");\n/* harmony import */ var _kernels_Concat__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./kernels/Concat */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Concat.js\");\n/* harmony import */ var _kernels_Conv2D__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./kernels/Conv2D */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2D.js\");\n/* harmony import */ var _kernels_Conv2DBackpropFilter__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./kernels/Conv2DBackpropFilter */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2DBackpropFilter.js\");\n/* harmony import */ var _kernels_Conv2DBackpropInput__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./kernels/Conv2DBackpropInput */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv2DBackpropInput.js\");\n/* harmony import */ var _kernels_Conv3D__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./kernels/Conv3D */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3D.js\");\n/* harmony import */ var _kernels_Conv3DBackpropFilterV2__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./kernels/Conv3DBackpropFilterV2 */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3DBackpropFilterV2.js\");\n/* harmony import */ var _kernels_Conv3DBackpropInputV2__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./kernels/Conv3DBackpropInputV2 */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Conv3DBackpropInputV2.js\");\n/* harmony import */ var _kernels_Cos__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./kernels/Cos */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cos.js\");\n/* harmony import */ var _kernels_Cosh__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./kernels/Cosh */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cosh.js\");\n/* harmony import */ var _kernels_CropAndResize__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./kernels/CropAndResize */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/CropAndResize.js\");\n/* harmony import */ var _kernels_Cumsum__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./kernels/Cumsum */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Cumsum.js\");\n/* harmony import */ var _kernels_DenseBincount__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./kernels/DenseBincount */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DenseBincount.js\");\n/* harmony import */ var _kernels_DepthToSpace__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./kernels/DepthToSpace */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthToSpace.js\");\n/* harmony import */ var _kernels_DepthwiseConv2dNative__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./kernels/DepthwiseConv2dNative */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNative.js\");\n/* harmony import */ var _kernels_DepthwiseConv2dNativeBackpropFilter__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./kernels/DepthwiseConv2dNativeBackpropFilter */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNativeBackpropFilter.js\");\n/* harmony import */ var _kernels_DepthwiseConv2dNativeBackpropInput__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./kernels/DepthwiseConv2dNativeBackpropInput */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNativeBackpropInput.js\");\n/* harmony import */ var _kernels_Diag__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./kernels/Diag */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Diag.js\");\n/* harmony import */ var _kernels_Dilation2D__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./kernels/Dilation2D */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Dilation2D.js\");\n/* harmony import */ var _kernels_Elu__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./kernels/Elu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Elu.js\");\n/* harmony import */ var _kernels_EluGrad__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./kernels/EluGrad */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/EluGrad.js\");\n/* harmony import */ var _kernels_Equal__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./kernels/Equal */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Equal.js\");\n/* harmony import */ var _kernels_Erf__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./kernels/Erf */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Erf.js\");\n/* harmony import */ var _kernels_Exp__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./kernels/Exp */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Exp.js\");\n/* harmony import */ var _kernels_ExpandDims__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./kernels/ExpandDims */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ExpandDims.js\");\n/* harmony import */ var _kernels_Expm1__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./kernels/Expm1 */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Expm1.js\");\n/* harmony import */ var _kernels_FFT__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./kernels/FFT */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FFT.js\");\n/* harmony import */ var _kernels_Fill__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./kernels/Fill */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Fill.js\");\n/* harmony import */ var _kernels_FlipLeftRight__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./kernels/FlipLeftRight */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FlipLeftRight.js\");\n/* harmony import */ var _kernels_Floor__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./kernels/Floor */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Floor.js\");\n/* harmony import */ var _kernels_FloorDiv__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./kernels/FloorDiv */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FloorDiv.js\");\n/* harmony import */ var _kernels_FromPixels__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./kernels/FromPixels */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FromPixels.js\");\n/* harmony import */ var _kernels_FusedConv2D__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./kernels/FusedConv2D */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FusedConv2D.js\");\n/* harmony import */ var _kernels_FusedDepthwiseConv2D__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./kernels/FusedDepthwiseConv2D */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/FusedDepthwiseConv2D.js\");\n/* harmony import */ var _kernels_GatherNd__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./kernels/GatherNd */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GatherNd.js\");\n/* harmony import */ var _kernels_GatherV2__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./kernels/GatherV2 */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GatherV2.js\");\n/* harmony import */ var _kernels_Greater__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./kernels/Greater */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Greater.js\");\n/* harmony import */ var _kernels_GreaterEqual__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./kernels/GreaterEqual */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GreaterEqual.js\");\n/* harmony import */ var _kernels_Identity__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./kernels/Identity */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Identity.js\");\n/* harmony import */ var _kernels_IFFT__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./kernels/IFFT */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IFFT.js\");\n/* harmony import */ var _kernels_Imag__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./kernels/Imag */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Imag.js\");\n/* harmony import */ var _kernels_IsFinite__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./kernels/IsFinite */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsFinite.js\");\n/* harmony import */ var _kernels_IsInf__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./kernels/IsInf */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsInf.js\");\n/* harmony import */ var _kernels_IsNaN__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./kernels/IsNaN */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/IsNaN.js\");\n/* harmony import */ var _kernels_LeakyRelu__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./kernels/LeakyRelu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LeakyRelu.js\");\n/* harmony import */ var _kernels_Less__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./kernels/Less */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Less.js\");\n/* harmony import */ var _kernels_LessEqual__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./kernels/LessEqual */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LessEqual.js\");\n/* harmony import */ var _kernels_LinSpace__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./kernels/LinSpace */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LinSpace.js\");\n/* harmony import */ var _kernels_Log__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./kernels/Log */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log.js\");\n/* harmony import */ var _kernels_Log1p__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./kernels/Log1p */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Log1p.js\");\n/* harmony import */ var _kernels_LogicalAnd__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./kernels/LogicalAnd */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalAnd.js\");\n/* harmony import */ var _kernels_LogicalNot__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./kernels/LogicalNot */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalNot.js\");\n/* harmony import */ var _kernels_LogicalOr__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./kernels/LogicalOr */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LogicalOr.js\");\n/* harmony import */ var _kernels_LRN__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kernels/LRN */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LRN.js\");\n/* harmony import */ var _kernels_LRNGrad__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kernels/LRNGrad */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/LRNGrad.js\");\n/* harmony import */ var _kernels_Max__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./kernels/Max */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Max.js\");\n/* harmony import */ var _kernels_Maximum__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./kernels/Maximum */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Maximum.js\");\n/* harmony import */ var _kernels_MaxPool__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./kernels/MaxPool */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool.js\");\n/* harmony import */ var _kernels_MaxPool3D__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./kernels/MaxPool3D */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool3D.js\");\n/* harmony import */ var _kernels_MaxPool3DGrad__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./kernels/MaxPool3DGrad */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPool3DGrad.js\");\n/* harmony import */ var _kernels_MaxPoolGrad__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./kernels/MaxPoolGrad */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolGrad.js\");\n/* harmony import */ var _kernels_MaxPoolWithArgmax__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./kernels/MaxPoolWithArgmax */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MaxPoolWithArgmax.js\");\n/* harmony import */ var _kernels_Mean__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./kernels/Mean */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mean.js\");\n/* harmony import */ var _kernels_Min__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./kernels/Min */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Min.js\");\n/* harmony import */ var _kernels_Minimum__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./kernels/Minimum */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Minimum.js\");\n/* harmony import */ var _kernels_MirrorPad__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./kernels/MirrorPad */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MirrorPad.js\");\n/* harmony import */ var _kernels_Mod__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./kernels/Mod */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Mod.js\");\n/* harmony import */ var _kernels_Multinomial__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./kernels/Multinomial */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Multinomial.js\");\n/* harmony import */ var _kernels_Multiply__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./kernels/Multiply */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Multiply.js\");\n/* harmony import */ var _kernels_Neg__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./kernels/Neg */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Neg.js\");\n/* harmony import */ var _kernels_NonMaxSuppressionV3__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./kernels/NonMaxSuppressionV3 */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV3.js\");\n/* harmony import */ var _kernels_NonMaxSuppressionV4__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./kernels/NonMaxSuppressionV4 */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV4.js\");\n/* harmony import */ var _kernels_NonMaxSuppressionV5__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./kernels/NonMaxSuppressionV5 */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV5.js\");\n/* harmony import */ var _kernels_NotEqual__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./kernels/NotEqual */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NotEqual.js\");\n/* harmony import */ var _kernels_OneHot__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./kernels/OneHot */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/OneHot.js\");\n/* harmony import */ var _kernels_OnesLike__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./kernels/OnesLike */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/OnesLike.js\");\n/* harmony import */ var _kernels_Pack__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./kernels/Pack */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Pack.js\");\n/* harmony import */ var _kernels_PadV2__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./kernels/PadV2 */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/PadV2.js\");\n/* harmony import */ var _kernels_Pow__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./kernels/Pow */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Pow.js\");\n/* harmony import */ var _kernels_Prelu__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./kernels/Prelu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prelu.js\");\n/* harmony import */ var _kernels_Prod__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./kernels/Prod */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Prod.js\");\n/* harmony import */ var _kernels_Range__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./kernels/Range */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Range.js\");\n/* harmony import */ var _kernels_Real__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./kernels/Real */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Real.js\");\n/* harmony import */ var _kernels_RealDiv__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./kernels/RealDiv */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RealDiv.js\");\n/* harmony import */ var _kernels_Reciprocal__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./kernels/Reciprocal */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reciprocal.js\");\n/* harmony import */ var _kernels_Relu__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./kernels/Relu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu.js\");\n/* harmony import */ var _kernels_Relu6__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./kernels/Relu6 */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Relu6.js\");\n/* harmony import */ var _kernels_Reshape__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./kernels/Reshape */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reshape.js\");\n/* harmony import */ var _kernels_ResizeBilinear__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./kernels/ResizeBilinear */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeBilinear.js\");\n/* harmony import */ var _kernels_ResizeBilinearGrad__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./kernels/ResizeBilinearGrad */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeBilinearGrad.js\");\n/* harmony import */ var _kernels_ResizeNearestNeighbor__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./kernels/ResizeNearestNeighbor */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeNearestNeighbor.js\");\n/* harmony import */ var _kernels_ResizeNearestNeighborGrad__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./kernels/ResizeNearestNeighborGrad */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ResizeNearestNeighborGrad.js\");\n/* harmony import */ var _kernels_Reverse__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./kernels/Reverse */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Reverse.js\");\n/* harmony import */ var _kernels_RotateWithOffset__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./kernels/RotateWithOffset */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/RotateWithOffset.js\");\n/* harmony import */ var _kernels_Round__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./kernels/Round */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Round.js\");\n/* harmony import */ var _kernels_Rsqrt__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./kernels/Rsqrt */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Rsqrt.js\");\n/* harmony import */ var _kernels_ScatterNd__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./kernels/ScatterNd */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ScatterNd.js\");\n/* harmony import */ var _kernels_Select__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./kernels/Select */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Select.js\");\n/* harmony import */ var _kernels_Selu__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./kernels/Selu */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Selu.js\");\n/* harmony import */ var _kernels_Sigmoid__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./kernels/Sigmoid */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sigmoid.js\");\n/* harmony import */ var _kernels_Sign__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./kernels/Sign */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sign.js\");\n/* harmony import */ var _kernels_Sin__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./kernels/Sin */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sin.js\");\n/* harmony import */ var _kernels_Sinh__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./kernels/Sinh */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sinh.js\");\n/* harmony import */ var _kernels_Slice__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./kernels/Slice */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Slice.js\");\n/* harmony import */ var _kernels_Softmax__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./kernels/Softmax */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softmax.js\");\n/* harmony import */ var _kernels_Softplus__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./kernels/Softplus */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softplus.js\");\n/* harmony import */ var _kernels_SpaceToBatchND__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./kernels/SpaceToBatchND */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SpaceToBatchND.js\");\n/* harmony import */ var _kernels_SparseToDense__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./kernels/SparseToDense */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SparseToDense.js\");\n/* harmony import */ var _kernels_SplitV__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./kernels/SplitV */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SplitV.js\");\n/* harmony import */ var _kernels_Sqrt__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./kernels/Sqrt */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sqrt.js\");\n/* harmony import */ var _kernels_Square__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./kernels/Square */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Square.js\");\n/* harmony import */ var _kernels_SquaredDifference__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./kernels/SquaredDifference */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SquaredDifference.js\");\n/* harmony import */ var _kernels_Step__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./kernels/Step */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Step.js\");\n/* harmony import */ var _kernels_StridedSlice__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./kernels/StridedSlice */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/StridedSlice.js\");\n/* harmony import */ var _kernels_Sub__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./kernels/Sub */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sub.js\");\n/* harmony import */ var _kernels_Sum__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./kernels/Sum */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Sum.js\");\n/* harmony import */ var _kernels_Tan__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ./kernels/Tan */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tan.js\");\n/* harmony import */ var _kernels_Tanh__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ./kernels/Tanh */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tanh.js\");\n/* harmony import */ var _kernels_Tile__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ./kernels/Tile */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Tile.js\");\n/* harmony import */ var _kernels_TopK__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ./kernels/TopK */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/TopK.js\");\n/* harmony import */ var _kernels_Transpose__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ./kernels/Transpose */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Transpose.js\");\n/* harmony import */ var _kernels_Unique__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ./kernels/Unique */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unique.js\");\n/* harmony import */ var _kernels_Unpack__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ./kernels/Unpack */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unpack.js\");\n/* harmony import */ var _kernels_UnsortedSegmentSum__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ./kernels/UnsortedSegmentSum */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/UnsortedSegmentSum.js\");\n/* harmony import */ var _kernels_ZerosLike__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ./kernels/ZerosLike */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/ZerosLike.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// List all kernel configs here\nconst kernelConfigs = [\n    _kernels_LRN__WEBPACK_IMPORTED_MODULE_1__.LRNConfig,\n    _kernels_LRNGrad__WEBPACK_IMPORTED_MODULE_2__.LRNGradConfig,\n    _kernels_FusedMatMul__WEBPACK_IMPORTED_MODULE_3__._fusedMatMulConfig,\n    _kernels_Abs__WEBPACK_IMPORTED_MODULE_4__.absConfig,\n    _kernels_Acos__WEBPACK_IMPORTED_MODULE_5__.acosConfig,\n    _kernels_Acosh__WEBPACK_IMPORTED_MODULE_6__.acoshConfig,\n    _kernels_Add__WEBPACK_IMPORTED_MODULE_7__.addConfig,\n    _kernels_AddN__WEBPACK_IMPORTED_MODULE_8__.addNConfig,\n    _kernels_All__WEBPACK_IMPORTED_MODULE_9__.allConfig,\n    _kernels_Any__WEBPACK_IMPORTED_MODULE_10__.anyConfig,\n    _kernels_ArgMax__WEBPACK_IMPORTED_MODULE_11__.argMaxConfig,\n    _kernels_ArgMin__WEBPACK_IMPORTED_MODULE_12__.argMinConfig,\n    _kernels_Asin__WEBPACK_IMPORTED_MODULE_13__.asinConfig,\n    _kernels_Asinh__WEBPACK_IMPORTED_MODULE_14__.asinhConfig,\n    _kernels_Atan2__WEBPACK_IMPORTED_MODULE_15__.atan2Config,\n    _kernels_Atan__WEBPACK_IMPORTED_MODULE_16__.atanConfig,\n    _kernels_Atanh__WEBPACK_IMPORTED_MODULE_17__.atanhConfig,\n    _kernels_AvgPool3D__WEBPACK_IMPORTED_MODULE_18__.avgPool3DConfig,\n    _kernels_AvgPool__WEBPACK_IMPORTED_MODULE_19__.avgPoolConfig,\n    _kernels_AvgPool3DGrad__WEBPACK_IMPORTED_MODULE_20__.avgPoolGrad3DConfig,\n    _kernels_AvgPoolGrad__WEBPACK_IMPORTED_MODULE_21__.avgPoolGradConfig,\n    _kernels_BatchMatMul__WEBPACK_IMPORTED_MODULE_22__.batchMatMulConfig,\n    _kernels_BatchNorm__WEBPACK_IMPORTED_MODULE_23__.batchNormConfig,\n    _kernels_BatchToSpaceND__WEBPACK_IMPORTED_MODULE_24__.batchToSpaceNDConfig,\n    _kernels_Bincount__WEBPACK_IMPORTED_MODULE_25__.bincountConfig,\n    _kernels_Cast__WEBPACK_IMPORTED_MODULE_26__.castConfig,\n    _kernels_Ceil__WEBPACK_IMPORTED_MODULE_27__.ceilConfig,\n    _kernels_ClipByValue__WEBPACK_IMPORTED_MODULE_28__.clipByValueConfig,\n    _kernels_ComplexAbs__WEBPACK_IMPORTED_MODULE_29__.complexAbsConfig,\n    _kernels_Complex__WEBPACK_IMPORTED_MODULE_30__.complexConfig,\n    _kernels_Concat__WEBPACK_IMPORTED_MODULE_31__.concatConfig,\n    _kernels_Conv2DBackpropFilter__WEBPACK_IMPORTED_MODULE_32__.conv2DBackpropFilterConfig,\n    _kernels_Conv2DBackpropInput__WEBPACK_IMPORTED_MODULE_33__.conv2DBackpropInputConfig,\n    _kernels_Conv2D__WEBPACK_IMPORTED_MODULE_34__.conv2DConfig,\n    _kernels_Conv3DBackpropFilterV2__WEBPACK_IMPORTED_MODULE_35__.conv3DBackpropFilterV2Config,\n    _kernels_Conv3DBackpropInputV2__WEBPACK_IMPORTED_MODULE_36__.conv3DBackpropInputConfig,\n    _kernels_Conv3D__WEBPACK_IMPORTED_MODULE_37__.conv3DConfig,\n    _kernels_Cos__WEBPACK_IMPORTED_MODULE_38__.cosConfig,\n    _kernels_Cosh__WEBPACK_IMPORTED_MODULE_39__.coshConfig,\n    _kernels_CropAndResize__WEBPACK_IMPORTED_MODULE_40__.cropAndResizeConfig,\n    _kernels_Cumsum__WEBPACK_IMPORTED_MODULE_41__.cumsumConfig,\n    _kernels_DenseBincount__WEBPACK_IMPORTED_MODULE_42__.denseBincountConfig,\n    _kernels_DepthToSpace__WEBPACK_IMPORTED_MODULE_43__.depthToSpaceConfig,\n    _kernels_DepthwiseConv2dNativeBackpropFilter__WEBPACK_IMPORTED_MODULE_44__.depthwiseConv2dNativeBackpropFilterConfig,\n    _kernels_DepthwiseConv2dNativeBackpropInput__WEBPACK_IMPORTED_MODULE_45__.depthwiseConv2dNativeBackpropInputConfig,\n    _kernels_DepthwiseConv2dNative__WEBPACK_IMPORTED_MODULE_46__.depthwiseConv2dNativeConfig,\n    _kernels_Diag__WEBPACK_IMPORTED_MODULE_47__.diagConfig,\n    _kernels_Dilation2D__WEBPACK_IMPORTED_MODULE_48__.dilation2DConfig,\n    _kernels_Elu__WEBPACK_IMPORTED_MODULE_49__.eluConfig,\n    _kernels_EluGrad__WEBPACK_IMPORTED_MODULE_50__.eluGradConfig,\n    _kernels_Equal__WEBPACK_IMPORTED_MODULE_51__.equalConfig,\n    _kernels_Erf__WEBPACK_IMPORTED_MODULE_52__.erfConfig,\n    _kernels_Exp__WEBPACK_IMPORTED_MODULE_53__.expConfig,\n    _kernels_ExpandDims__WEBPACK_IMPORTED_MODULE_54__.expandDimsConfig,\n    _kernels_Expm1__WEBPACK_IMPORTED_MODULE_55__.expm1Config,\n    _kernels_FFT__WEBPACK_IMPORTED_MODULE_56__.fftConfig,\n    _kernels_Fill__WEBPACK_IMPORTED_MODULE_57__.fillConfig,\n    _kernels_FlipLeftRight__WEBPACK_IMPORTED_MODULE_58__.flipLeftRightConfig,\n    _kernels_Floor__WEBPACK_IMPORTED_MODULE_59__.floorConfig,\n    _kernels_FloorDiv__WEBPACK_IMPORTED_MODULE_60__.floorDivConfig,\n    _kernels_FromPixels__WEBPACK_IMPORTED_MODULE_61__.fromPixelsConfig,\n    _kernels_FusedConv2D__WEBPACK_IMPORTED_MODULE_62__.fusedConv2DConfig,\n    _kernels_FusedDepthwiseConv2D__WEBPACK_IMPORTED_MODULE_63__.fusedDepthwiseConv2DConfig,\n    _kernels_GatherNd__WEBPACK_IMPORTED_MODULE_64__.gatherNdConfig,\n    _kernels_GatherV2__WEBPACK_IMPORTED_MODULE_65__.gatherV2Config,\n    _kernels_Greater__WEBPACK_IMPORTED_MODULE_66__.greaterConfig,\n    _kernels_GreaterEqual__WEBPACK_IMPORTED_MODULE_67__.greaterEqualConfig,\n    _kernels_Identity__WEBPACK_IMPORTED_MODULE_68__.identityConfig,\n    _kernels_IFFT__WEBPACK_IMPORTED_MODULE_69__.ifftConfig,\n    _kernels_Imag__WEBPACK_IMPORTED_MODULE_70__.imagConfig,\n    _kernels_IsFinite__WEBPACK_IMPORTED_MODULE_71__.isFiniteConfig,\n    _kernels_IsInf__WEBPACK_IMPORTED_MODULE_72__.isInfConfig,\n    _kernels_IsNaN__WEBPACK_IMPORTED_MODULE_73__.isNaNConfig,\n    _kernels_LeakyRelu__WEBPACK_IMPORTED_MODULE_74__.leakyReluConfig,\n    _kernels_Less__WEBPACK_IMPORTED_MODULE_75__.lessConfig,\n    _kernels_LessEqual__WEBPACK_IMPORTED_MODULE_76__.lessEqualConfig,\n    _kernels_LinSpace__WEBPACK_IMPORTED_MODULE_77__.linSpaceConfig,\n    _kernels_Log1p__WEBPACK_IMPORTED_MODULE_78__.log1pConfig,\n    _kernels_Log__WEBPACK_IMPORTED_MODULE_79__.logConfig,\n    _kernels_LogicalAnd__WEBPACK_IMPORTED_MODULE_80__.logicalAndConfig,\n    _kernels_LogicalNot__WEBPACK_IMPORTED_MODULE_81__.logicalNotConfig,\n    _kernels_LogicalOr__WEBPACK_IMPORTED_MODULE_82__.logicalOrConfig,\n    _kernels_Max__WEBPACK_IMPORTED_MODULE_83__.maxConfig,\n    _kernels_MaxPool3D__WEBPACK_IMPORTED_MODULE_84__.maxPool3DConfig,\n    _kernels_MaxPool__WEBPACK_IMPORTED_MODULE_85__.maxPoolConfig,\n    _kernels_MaxPool3DGrad__WEBPACK_IMPORTED_MODULE_86__.maxPoolGrad3DConfig,\n    _kernels_MaxPoolGrad__WEBPACK_IMPORTED_MODULE_87__.maxPoolGradConfig,\n    _kernels_MaxPoolWithArgmax__WEBPACK_IMPORTED_MODULE_88__.maxPoolWithArgmaxConfig,\n    _kernels_Maximum__WEBPACK_IMPORTED_MODULE_89__.maximumConfig,\n    _kernels_Mean__WEBPACK_IMPORTED_MODULE_90__.meanConfig,\n    _kernels_Min__WEBPACK_IMPORTED_MODULE_91__.minConfig,\n    _kernels_Minimum__WEBPACK_IMPORTED_MODULE_92__.minimumConfig,\n    _kernels_MirrorPad__WEBPACK_IMPORTED_MODULE_93__.mirrorPadConfig,\n    _kernels_Mod__WEBPACK_IMPORTED_MODULE_94__.modConfig,\n    _kernels_Multinomial__WEBPACK_IMPORTED_MODULE_95__.multinomialConfig,\n    _kernels_Multiply__WEBPACK_IMPORTED_MODULE_96__.multiplyConfig,\n    _kernels_Neg__WEBPACK_IMPORTED_MODULE_97__.negConfig,\n    _kernels_NonMaxSuppressionV3__WEBPACK_IMPORTED_MODULE_98__.nonMaxSuppressionV3Config,\n    _kernels_NonMaxSuppressionV4__WEBPACK_IMPORTED_MODULE_99__.nonMaxSuppressionV4Config,\n    _kernels_NonMaxSuppressionV5__WEBPACK_IMPORTED_MODULE_100__.nonMaxSuppressionV5Config,\n    _kernels_NotEqual__WEBPACK_IMPORTED_MODULE_101__.notEqualConfig,\n    _kernels_OneHot__WEBPACK_IMPORTED_MODULE_102__.oneHotConfig,\n    _kernels_OnesLike__WEBPACK_IMPORTED_MODULE_103__.onesLikeConfig,\n    _kernels_Pack__WEBPACK_IMPORTED_MODULE_104__.packConfig,\n    _kernels_PadV2__WEBPACK_IMPORTED_MODULE_105__.padV2Config,\n    _kernels_Pow__WEBPACK_IMPORTED_MODULE_106__.powConfig,\n    _kernels_Prelu__WEBPACK_IMPORTED_MODULE_107__.preluConfig,\n    _kernels_Prod__WEBPACK_IMPORTED_MODULE_108__.prodConfig,\n    _kernels_Range__WEBPACK_IMPORTED_MODULE_109__.rangeConfig,\n    _kernels_Real__WEBPACK_IMPORTED_MODULE_110__.realConfig,\n    _kernels_RealDiv__WEBPACK_IMPORTED_MODULE_111__.realDivConfig,\n    _kernels_Reciprocal__WEBPACK_IMPORTED_MODULE_112__.reciprocalConfig,\n    _kernels_Relu6__WEBPACK_IMPORTED_MODULE_113__.relu6Config,\n    _kernels_Relu__WEBPACK_IMPORTED_MODULE_114__.reluConfig,\n    _kernels_Reshape__WEBPACK_IMPORTED_MODULE_115__.reshapeConfig,\n    _kernels_ResizeBilinear__WEBPACK_IMPORTED_MODULE_116__.resizeBilinearConfig,\n    _kernels_ResizeBilinearGrad__WEBPACK_IMPORTED_MODULE_117__.resizeBilinearGradConfig,\n    _kernels_ResizeNearestNeighbor__WEBPACK_IMPORTED_MODULE_118__.resizeNearestNeighborConfig,\n    _kernels_ResizeNearestNeighborGrad__WEBPACK_IMPORTED_MODULE_119__.resizeNearestNeighborGradConfig,\n    _kernels_Reverse__WEBPACK_IMPORTED_MODULE_120__.reverseConfig,\n    _kernels_RotateWithOffset__WEBPACK_IMPORTED_MODULE_121__.rotateWithOffsetConfig,\n    _kernels_Round__WEBPACK_IMPORTED_MODULE_122__.roundConfig,\n    _kernels_Rsqrt__WEBPACK_IMPORTED_MODULE_123__.rsqrtConfig,\n    _kernels_ScatterNd__WEBPACK_IMPORTED_MODULE_124__.scatterNdConfig,\n    _kernels_Select__WEBPACK_IMPORTED_MODULE_125__.selectConfig,\n    _kernels_Selu__WEBPACK_IMPORTED_MODULE_126__.seluConfig,\n    _kernels_Sigmoid__WEBPACK_IMPORTED_MODULE_127__.sigmoidConfig,\n    _kernels_Sign__WEBPACK_IMPORTED_MODULE_128__.signConfig,\n    _kernels_Sin__WEBPACK_IMPORTED_MODULE_129__.sinConfig,\n    _kernels_Sinh__WEBPACK_IMPORTED_MODULE_130__.sinhConfig,\n    _kernels_Slice__WEBPACK_IMPORTED_MODULE_131__.sliceConfig,\n    _kernels_Softmax__WEBPACK_IMPORTED_MODULE_132__.softmaxConfig,\n    _kernels_Softplus__WEBPACK_IMPORTED_MODULE_133__.softplusConfig,\n    _kernels_SpaceToBatchND__WEBPACK_IMPORTED_MODULE_134__.spaceToBatchNDConfig,\n    _kernels_SparseToDense__WEBPACK_IMPORTED_MODULE_135__.sparseToDenseConfig,\n    _kernels_SplitV__WEBPACK_IMPORTED_MODULE_136__.splitVConfig,\n    _kernels_Sqrt__WEBPACK_IMPORTED_MODULE_137__.sqrtConfig,\n    _kernels_Square__WEBPACK_IMPORTED_MODULE_138__.squareConfig,\n    _kernels_SquaredDifference__WEBPACK_IMPORTED_MODULE_139__.squaredDifferenceConfig,\n    _kernels_Step__WEBPACK_IMPORTED_MODULE_140__.stepConfig,\n    _kernels_StridedSlice__WEBPACK_IMPORTED_MODULE_141__.stridedSliceConfig,\n    _kernels_Sub__WEBPACK_IMPORTED_MODULE_142__.subConfig,\n    _kernels_Sum__WEBPACK_IMPORTED_MODULE_143__.sumConfig,\n    _kernels_Tan__WEBPACK_IMPORTED_MODULE_144__.tanConfig,\n    _kernels_Tanh__WEBPACK_IMPORTED_MODULE_145__.tanhConfig,\n    _kernels_Tile__WEBPACK_IMPORTED_MODULE_146__.tileConfig,\n    _kernels_TopK__WEBPACK_IMPORTED_MODULE_147__.topKConfig,\n    _kernels_Transpose__WEBPACK_IMPORTED_MODULE_148__.transposeConfig,\n    _kernels_Unique__WEBPACK_IMPORTED_MODULE_149__.uniqueConfig,\n    _kernels_Unpack__WEBPACK_IMPORTED_MODULE_150__.unpackConfig,\n    _kernels_UnsortedSegmentSum__WEBPACK_IMPORTED_MODULE_151__.unsortedSegmentSumConfig,\n    _kernels_ZerosLike__WEBPACK_IMPORTED_MODULE_152__.zerosLikeConfig\n];\nfor (const kernelConfig of kernelConfigs) {\n    (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.registerKernel)(kernelConfig);\n}\n//# sourceMappingURL=register_all_kernels.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/register_all_kernels.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/reshape_packed_gpu.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/reshape_packed_gpu.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export ReshapePackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ReshapePackedProgram\": () => /* binding */ ReshapePackedProgram\n/* harmony export */ });\n/* harmony import */ var _shader_compiler_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass ReshapePackedProgram {\n    constructor(outputShape, inputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = outputShape;\n        let mainLoop = ``;\n        for (let i = 0; i < 4; i++) {\n            let thisRC = `thisRC = rc;`;\n            if (i % 2 === 1) {\n                thisRC += `thisRC.z += 1;`;\n            }\n            if (i > 1) {\n                thisRC += `thisRC.y += 1;`;\n            }\n            mainLoop += `\n        ${thisRC}\n        ${i > 0 ? `if(thisRC.y < rows && thisRC.z < cols){` : ''}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${i > 0 ? '}' : ''}\n      `;\n        }\n        this.userCode = `\n      ${getReshapedInputCoords(inputShape)}\n      ${_shader_compiler_util__WEBPACK_IMPORTED_MODULE_0__.getFlatIndexFrom3D(outputShape)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${outputShape[1]};\n        int cols = ${outputShape[2]};\n\n        ${mainLoop}\n\n        setOutput(result);\n      }\n    `;\n    }\n}\nfunction getReshapedInputCoords(shape) {\n    const coordsFromIndexSnippet = _shader_compiler_util__WEBPACK_IMPORTED_MODULE_0__.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], shape);\n    return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(r, c, d);\n    }\n  `;\n}\n//# sourceMappingURL=reshape_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/reshape_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_backprop_gpu.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_backprop_gpu.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export ResizeBilinearBackpropProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResizeBilinearBackpropProgram\": () => /* binding */ ResizeBilinearBackpropProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass ResizeBilinearBackpropProgram {\n    constructor(dyShape, inputShape, alignCorners) {\n        this.variableNames = ['dy'];\n        this.outputShape = [];\n        this.outputShape = inputShape;\n        const [, xHeight, xWidth,] = inputShape;\n        const [, yHeight, yWidth] = dyShape;\n        // In the backwards pass, we want to find the pixels that were generated for\n        // each pixel in the input image the forward pass and add the corresponding\n        // coefficient from dy to the gradient (with some interpolation).\n        const effectiveXSize = [\n            (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n            (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n        ];\n        const effectiveYSize = [\n            (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n            (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n        ];\n        const heightScale = effectiveXSize[0] / effectiveYSize[0];\n        const widthScale = effectiveXSize[1] / effectiveYSize[1];\n        const invHeightScale = 1 / heightScale;\n        const invWidthScale = 1 / widthScale;\n        // This defines the size of the window of values around a particular\n        // index in dy that we want to search for contributions to dx.\n        const winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n        const winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n        this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${heightScale});\n        const float widthScale = float(${widthScale});\n\n        const float invHeightScale = float(${invHeightScale});\n        const float invWidthScale = float(${invWidthScale});\n\n        const int winHeight = int(${winHeight});\n        const int winWidth = int(${winWidth});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${yHeight}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${yWidth}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${xHeight - 1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${xWidth - 1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=resize_bilinear_backprop_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_backprop_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_gpu.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_gpu.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export ResizeBilinearProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResizeBilinearProgram\": () => /* binding */ ResizeBilinearProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass ResizeBilinearProgram {\n    constructor(inputShape, newHeight, newWidth, alignCorners, halfPixelCenters) {\n        this.variableNames = ['A'];\n        this.outputShape = [];\n        const [batch, oldHeight, oldWidth, depth] = inputShape;\n        this.outputShape = [batch, newHeight, newWidth, depth];\n        const effectiveInSize = [\n            (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n            (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n        ];\n        const effectiveOutSize = [\n            (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n            (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n        ];\n        let sourceFracIndexRC;\n        if (halfPixelCenters) {\n            sourceFracIndexRC =\n                `(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC` +\n                    ` - vec2(0.5)`;\n        }\n        else {\n            sourceFracIndexRC = `vec2(yRC) * effectiveInputOverOutputRatioRC`;\n        }\n        this.userCode = `\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${effectiveInSize[0] / effectiveOutSize[0]},\n          ${effectiveInSize[1] / effectiveOutSize[1]});\n      const vec2 inputShapeRC = vec2(${oldHeight}.0, ${oldWidth}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${sourceFracIndexRC};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=resize_bilinear_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_packed_gpu.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_packed_gpu.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! export ResizeBilinearPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResizeBilinearPackedProgram\": () => /* binding */ ResizeBilinearPackedProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass ResizeBilinearPackedProgram {\n    constructor(inputShape, newHeight, newWidth, alignCorners, halfPixelCenters) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = [];\n        const [batch, oldHeight, oldWidth, depth] = inputShape;\n        this.outputShape = [batch, newHeight, newWidth, depth];\n        const effectiveInSize = [\n            (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n            (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n        ];\n        const effectiveOutSize = [\n            (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n            (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n        ];\n        let sourceFracIndexRC;\n        if (halfPixelCenters) {\n            sourceFracIndexRC = `(vec3(yRC) + vec3(0.5)) * ` +\n                `effectiveInputOverOutputRatioRC - vec3(0.5)`;\n        }\n        else {\n            sourceFracIndexRC = `vec3(yRC) * effectiveInputOverOutputRatioRC`;\n        }\n        this.userCode = `\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${effectiveInSize[0] / effectiveOutSize[0]},\n          ${effectiveInSize[1] / effectiveOutSize[1]},\n          ${effectiveInSize[1] / effectiveOutSize[1]});\n      const vec3 inputShapeRC = vec3(${oldHeight}.0, ${oldWidth}.0,\n                                     ${oldWidth}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${sourceFracIndexRC};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${depth - 1};\n        bool hasNextRow = coords.z < ${newWidth - 1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=resize_bilinear_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_bilinear_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_nearest_neighbor_backprop_gpu.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_nearest_neighbor_backprop_gpu.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! export ResizeNearestNeigborBackpropProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResizeNearestNeigborBackpropProgram\": () => /* binding */ ResizeNearestNeigborBackpropProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass ResizeNearestNeigborBackpropProgram {\n    constructor(dyShape, inputShape, alignCorners) {\n        this.variableNames = ['dy'];\n        this.outputShape = [];\n        this.outputShape = inputShape;\n        const [, xHeight, xWidth,] = inputShape;\n        const [, yHeight, yWidth] = dyShape;\n        // In the backwards pass, we want to find the pixels that were generated for\n        // each pixel in the input image the forward pass and add the corresponding\n        // coefficient from dy to the gradient (with some interpolation).\n        const effectiveXSize = [\n            (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n            (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n        ];\n        const effectiveYSize = [\n            (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n            (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n        ];\n        const heightScale = effectiveXSize[0] / effectiveYSize[0];\n        const widthScale = effectiveXSize[1] / effectiveYSize[1];\n        const invHeightScale = 1 / heightScale;\n        const invWidthScale = 1 / widthScale;\n        // This defines the size of the window of values around a particular\n        // index in dy that we want to search for contributions to dx.\n        const winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n        const winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n        this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${heightScale});\n        const float widthScale = float(${widthScale});\n\n        const float invHeightScale = float(${invHeightScale});\n        const float invWidthScale = float(${invWidthScale});\n\n        const int winHeight = int(${winHeight});\n        const int winWidth = int(${winWidth});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${yHeight}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${yWidth}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${effectiveXSize[0]}) *\n                (float(dyR) / float(${effectiveYSize[0]}));\n\n            float sourceFracCol =\n                float(${effectiveXSize[1]}) *\n                  (float(dyC) / float(${effectiveYSize[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${xHeight}) - 1),\n                ${alignCorners} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${xWidth}) - 1),\n                ${alignCorners} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=resize_nearest_neighbor_backprop_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_nearest_neighbor_backprop_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_nearest_neighbor_gpu.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_nearest_neighbor_gpu.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! export ResizeNearestNeighborProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResizeNearestNeighborProgram\": () => /* binding */ ResizeNearestNeighborProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass ResizeNearestNeighborProgram {\n    constructor(inputShape, newHeight, newWidth, alignCorners, halfPixelCenters) {\n        this.variableNames = ['A'];\n        this.outputShape = [];\n        const [batch, oldHeight, oldWidth, depth] = inputShape;\n        this.outputShape = [batch, newHeight, newWidth, depth];\n        const effectiveInSize = [\n            (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n            (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n        ];\n        const effectiveOutSize = [\n            (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n            (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n        ];\n        // When align corners is false, we rounds the value with floor.\n        const roundBase = alignCorners ? '0.5' : '0.0';\n        let sourceFracIndexRC;\n        if (halfPixelCenters) {\n            sourceFracIndexRC =\n                `max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC` +\n                    `, vec2(0.0))`;\n        }\n        else {\n            sourceFracIndexRC = `vec2(yRC) * effectiveInputOverOutputRatioRC`;\n        }\n        this.userCode = `\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${effectiveInSize[0] / effectiveOutSize[0]},\n          ${effectiveInSize[1] / effectiveOutSize[1]});\n      const vec2 inputShapeRC = vec2(${oldHeight}.0, ${oldWidth}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${sourceFracIndexRC};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${roundBase})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=resize_nearest_neighbor_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/resize_nearest_neighbor_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/reverse_gpu.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/reverse_gpu.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export ReverseProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ReverseProgram\": () => /* binding */ ReverseProgram\n/* harmony export */ });\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass ReverseProgram {\n    constructor(xShape, axis) {\n        this.variableNames = ['x'];\n        const rank = xShape.length;\n        if (rank > 4) {\n            throw new Error(`WebGL backend: Reverse of rank-${rank} tensor is not yet supported`);\n        }\n        this.outputShape = xShape;\n        if (rank === 1) {\n            this.userCode = `\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${xShape[0]} - coord - 1));\n        }\n      `;\n            return;\n        }\n        const getInCoord = (i) => {\n            if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n                return `${xShape[i]} - coords[${i}] - 1`;\n            }\n            return `coords[${i}]`;\n        };\n        const inCoords = xShape.map((_, i) => getInCoord(i)).join(',');\n        const type = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(rank);\n        this.userCode = `\n      void main() {\n        ${type} coords = getOutputCoords();\n        setOutput(getX(${inCoords}));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=reverse_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/reverse_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/reverse_packed_gpu.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/reverse_packed_gpu.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export ReversePackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ReversePackedProgram\": () => /* binding */ ReversePackedProgram\n/* harmony export */ });\n/* harmony import */ var _packing_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packing_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js\");\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nclass ReversePackedProgram {\n    constructor(xShape, axis) {\n        this.variableNames = ['x'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        const rank = xShape.length;\n        if (rank > 4) {\n            throw new Error(`WebGL backend: Reverse of rank-${rank} tensor is not yet supported`);\n        }\n        this.outputShape = xShape;\n        const channels = (0,_packing_util__WEBPACK_IMPORTED_MODULE_0__.getChannels)('rc', rank);\n        const nextColumn = `${channels[rank - 1]} + 1 < ${this.outputShape[rank - 1]}`;\n        const nextRow = `${channels[rank - 2]} + 1 < ${this.outputShape[rank - 2]}`;\n        const type = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_1__.getCoordsDataType)(rank);\n        if (rank === 1) {\n            this.userCode = `\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${xShape[0]} - rc - 1),\n            ${xShape[0]} - rc - 1);\n          if(${nextColumn}){\n              result.g = getChannel(getX(${xShape[0]} - (rc  + 1) - 1),\n                ${xShape[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `;\n        }\n        else {\n            this.userCode = `\n        void main() {\n          ${type} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${getR(channels.slice())};\n          if(${nextColumn}){\n            result.g = ${getG(channels.slice())};\n          }\n          if(${nextRow}) {\n            result.b = ${getB(channels.slice())};\n            if(${nextColumn}) {\n              result.a = ${getA(channels.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `;\n        }\n        function getR(channels) {\n            return getChannel(channels);\n        }\n        function getG(channels) {\n            channels[rank - 1] = '(' + channels[rank - 1] + ` + 1)`;\n            return getChannel(channels);\n        }\n        function getB(channels) {\n            channels[rank - 2] = '(' + channels[rank - 2] + ` + 1)`;\n            return getChannel(channels);\n        }\n        function getA(channels) {\n            channels[rank - 1] = '(' + channels[rank - 1] + ` + 1)`;\n            channels[rank - 2] = '(' + channels[rank - 2] + ` + 1)`;\n            return getChannel(channels);\n        }\n        function getChannel(channels) {\n            const inCoordsArray = xShape.map((_, i) => getInCoord(i, channels));\n            const inCoords = inCoordsArray.join(',');\n            const innerDims = inCoordsArray.slice(-2).join(',');\n            return `getChannel(getX(${inCoords}), vec2(${innerDims}))`;\n        }\n        function getInCoord(i, channels1) {\n            if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n                return `${xShape[i]} - ${channels1[i]} - 1`;\n            }\n            else {\n                return `${channels1[i]}`;\n            }\n        }\n    }\n}\n//# sourceMappingURL=reverse_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/reverse_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/rotate_gpu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/rotate_gpu.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export RotateProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RotateProgram\": () => /* binding */ RotateProgram\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass RotateProgram {\n    constructor(imageShape, radians, fillValue, center) {\n        this.variableNames = ['Image'];\n        this.outputShape = [];\n        const imageHeight = imageShape[1];\n        const imageWidth = imageShape[2];\n        const sinFactor = Math.sin(radians).toFixed(3);\n        const cosFactor = Math.cos(radians).toFixed(3);\n        this.outputShape = imageShape;\n        const [centerX, centerY] = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util.getImageCenter(center, imageHeight, imageWidth);\n        const centerXString = centerX.toFixed(3);\n        const centerYString = centerY.toFixed(3);\n        let fillSnippet = '';\n        if (typeof fillValue === 'number') {\n            fillSnippet = `float outputValue = ${fillValue.toFixed(2)};`;\n        }\n        else {\n            fillSnippet = `\n        vec3 fill = vec3(${fillValue.join(',')});\n        float outputValue = fill[coords[3]];`;\n        }\n        this.userCode = `\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${centerXString}) * ${cosFactor} - (float(y) - ${centerYString}) * ${sinFactor};\n          float coordYFloat = (float(x) - ${centerXString}) * ${sinFactor} + (float(y) - ${centerYString}) * ${cosFactor};\n          int coordX = int(round(coordXFloat + ${centerXString}));\n          int coordY = int(round(coordYFloat + ${centerYString}));\n          ${fillSnippet}\n          if(coordX >= 0 && coordX < ${imageWidth} && coordY >= 0 && coordY < ${imageHeight}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `;\n    }\n}\n//# sourceMappingURL=rotate_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/rotate_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/scatter_gpu.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/scatter_gpu.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export ScatterProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ScatterProgram\": () => /* binding */ ScatterProgram\n/* harmony export */ });\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass ScatterProgram {\n    constructor(updateSize, sliceDim, indicesRank, updatesRank, strides, shape, summingDupeIndex = true) {\n        this.variableNames = ['updates', 'indices', 'defaultValue'];\n        this.outputShape = shape;\n        const stridesType = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(strides.length);\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(shape.length);\n        let indicesString = '';\n        if (indicesRank === 1) {\n            indicesString = 'i';\n        }\n        else if (indicesRank === 2) {\n            indicesString = 'i, j';\n        }\n        const indicesSnippet = `getIndices(${indicesString})`;\n        let updatesString = '';\n        if (updatesRank === 1) {\n            updatesString = 'i';\n        }\n        else if (updatesRank === 2) {\n            updatesString = 'i, coords[1]';\n        }\n        const updatesSnippet = `getUpdates(${updatesString})`;\n        const strideString = sliceDim > 1 ? 'strides[j]' : 'strides';\n        this.userCode = `\n        ${stridesType} strides = ${stridesType}(${strides});\n\n        void main() {\n          ${dtype} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${updateSize}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${sliceDim}; j++) {\n              int index = round(${indicesSnippet});\n              flattenedIndex += index * ${strideString};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${updatesSnippet};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `;\n    }\n}\n//# sourceMappingURL=scatter_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/scatter_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/segment_gpu.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/segment_gpu.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export SegmentOpProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SegmentOpProgram\": () => /* binding */ SegmentOpProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass SegmentOpProgram {\n    constructor(segOpInfo, segOpType) {\n        this.variableNames = ['x', 'segmentIds'];\n        const windowSize = segOpInfo.windowSize;\n        const batchSize = segOpInfo.batchSize;\n        const inSize = segOpInfo.inSize;\n        const numSegments = segOpInfo.numSegments;\n        const outSize = numSegments * Math.ceil(inSize / windowSize);\n        this.outputShape = [batchSize, outSize];\n        const initializationValue = '0.0';\n        const returnValue = `sumValue`;\n        const windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n        const windowSizeVec4Remainder = windowSize % 4;\n        const updateSnippet = `\n        sumValue += dot(values, segFilter);\n    `;\n        let checkValueOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkValueOutOfBounds = `\n        if (inIdx < 0 || inIdx >= ${inSize}) {\n          return initializationValue;\n        }\n      `;\n        }\n        let checkSegmentIdOutOfBounds = '';\n        if (inSize % windowSize > 0) {\n            checkSegmentIdOutOfBounds = `\n        if (inIdx < 0 || inIdx >= ${inSize}) {\n          return -1.0;\n        }\n      `;\n        }\n        this.userCode = `\n      const float initializationValue = ${initializationValue};\n\n      float getValue(int batch, int inIdx) {\n        ${checkValueOutOfBounds}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${checkSegmentIdOutOfBounds}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${numSegments})) * float(${windowSize}));\n        int currentSeg = int(mod(float(outIdx), float(${numSegments})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${windowSizeNearestVec4}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${updateSnippet}\n        }\n\n        int inIdx = inOffset + ${windowSizeNearestVec4};\n        if (${windowSizeVec4Remainder === 1}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 2}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 3}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${updateSnippet}\n        }\n        setOutput(${returnValue});\n      }\n    `;\n    }\n}\n//# sourceMappingURL=segment_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/segment_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/select_gpu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/select_gpu.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export SelectProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SelectProgram\": () => /* binding */ SelectProgram\n/* harmony export */ });\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass SelectProgram {\n    constructor(cRank, shape, rank) {\n        this.variableNames = ['c', 'a', 'b'];\n        this.outputShape = shape;\n        let cCoords;\n        let abCoords;\n        if (rank > 4) {\n            throw Error(`Where for rank ${rank} is not yet supported`);\n        }\n        if (rank === 1) {\n            abCoords = `resRC`;\n            cCoords = `resRC`;\n        }\n        else {\n            const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n            const cCoordVars = [];\n            const abCoordVars = [];\n            for (let i = 0; i < shape.length; i++) {\n                abCoordVars.push(`${currentCoords[i]}`);\n                if (i < cRank) {\n                    cCoordVars.push(`${currentCoords[i]}`);\n                }\n            }\n            cCoords = cCoordVars.join();\n            abCoords = abCoordVars.join();\n        }\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(rank);\n        this.userCode = `\n      void main() {\n        ${dtype} resRC = getOutputCoords();\n        float cVal = getC(${cCoords});\n        if (cVal >= 1.0) {\n          setOutput(getA(${abCoords}));\n        } else {\n          setOutput(getB(${abCoords}));\n        }\n      }\n    `;\n    }\n}\n//# sourceMappingURL=select_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/select_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export getCoordsDataType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export makeShader [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeShader\": () => /* binding */ makeShader,\n/* harmony export */   \"getCoordsDataType\": () => /* binding */ getCoordsDataType\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _glsl_version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./glsl_version */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/glsl_version.js\");\n/* harmony import */ var _shader_compiler_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shader_compiler_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler_util.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nconst { getBroadcastDims } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.backend_util;\n\n\nfunction makeShader(inputsInfo, outputShape, userCode, usesPackedTextures) {\n    const prefixSnippets = [];\n    inputsInfo.forEach(x => {\n        const size = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(x.shapeInfo.logicalShape);\n        // Snippet when we decided to upload the values as uniform.\n        if (x.shapeInfo.isUniform) {\n            prefixSnippets.push(`uniform float ${x.name}${size > 1 ? `[${size}]` : ''};`);\n        }\n        else {\n            prefixSnippets.push(`uniform sampler2D ${x.name};`);\n            prefixSnippets.push(`uniform int offset${x.name};`);\n        }\n    });\n    const inputPrefixSnippet = prefixSnippets.join('\\n');\n    const inputSamplingSnippet = inputsInfo\n        .map(x => getInputSamplingSnippet(x, outputShape, usesPackedTextures))\n        .join('\\n');\n    const outTexShape = outputShape.texShape;\n    const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_1__.getGlslDifferences)();\n    const floatTextureSampleSnippet = getFloatTextureSampleSnippet(glsl);\n    let outputSamplingSnippet;\n    let floatTextureSetOutputSnippet;\n    let shaderPrefix = getShaderPrefix(glsl);\n    if (outputShape.isPacked) {\n        outputSamplingSnippet =\n            getPackedOutputSamplingSnippet(outputShape.logicalShape, outTexShape);\n        floatTextureSetOutputSnippet = getFloatTextureSetRGBASnippet(glsl);\n    }\n    else {\n        outputSamplingSnippet =\n            getOutputSamplingSnippet(outputShape.logicalShape, outTexShape);\n        floatTextureSetOutputSnippet = getFloatTextureSetRSnippet(glsl);\n    }\n    if (usesPackedTextures) {\n        shaderPrefix += SHADER_PACKED_PREFIX;\n    }\n    const source = [\n        shaderPrefix, floatTextureSampleSnippet, floatTextureSetOutputSnippet,\n        inputPrefixSnippet, outputSamplingSnippet, inputSamplingSnippet, userCode\n    ].join('\\n');\n    return source;\n}\nfunction getSamplerFromInInfo(inInfo) {\n    const shape = inInfo.shapeInfo.logicalShape;\n    switch (shape.length) {\n        case 0:\n            return getSamplerScalar(inInfo);\n        case 1:\n            return getSampler1D(inInfo);\n        case 2:\n            return getSampler2D(inInfo);\n        case 3:\n            return getSampler3D(inInfo);\n        case 4:\n            return getSampler4D(inInfo);\n        case 5:\n            return getSampler5D(inInfo);\n        case 6:\n            return getSampler6D(inInfo);\n        default:\n            throw new Error(`${shape.length}-D input sampling` +\n                ` is not yet supported`);\n    }\n}\nfunction getPackedSamplerFromInInfo(inInfo) {\n    const shape = inInfo.shapeInfo.logicalShape;\n    switch (shape.length) {\n        case 0:\n            return getPackedSamplerScalar(inInfo);\n        case 1:\n            return getPackedSampler1D(inInfo);\n        case 2:\n            return getPackedSampler2D(inInfo);\n        case 3:\n            return getPackedSampler3D(inInfo);\n        default:\n            return getPackedSamplerND(inInfo);\n    }\n}\nfunction getInputSamplingSnippet(inInfo, outShapeInfo, usesPackedTextures = false) {\n    let res = '';\n    if (usesPackedTextures) {\n        res += getPackedSamplerFromInInfo(inInfo);\n    }\n    else {\n        res += getSamplerFromInInfo(inInfo);\n    }\n    const inShape = inInfo.shapeInfo.logicalShape;\n    const outShape = outShapeInfo.logicalShape;\n    if (inShape.length <= outShape.length) {\n        if (usesPackedTextures) {\n            res += getPackedSamplerAtOutputCoords(inInfo, outShapeInfo);\n        }\n        else {\n            res += getSamplerAtOutputCoords(inInfo, outShapeInfo);\n        }\n    }\n    return res;\n}\nfunction getPackedOutputSamplingSnippet(outShape, outTexShape) {\n    switch (outShape.length) {\n        case 0:\n            return getOutputScalarCoords();\n        case 1:\n            return getOutputPacked1DCoords(outShape, outTexShape);\n        case 2:\n            return getOutputPacked2DCoords(outShape, outTexShape);\n        case 3:\n            return getOutputPacked3DCoords(outShape, outTexShape);\n        default:\n            return getOutputPackedNDCoords(outShape, outTexShape);\n    }\n}\nfunction getOutputSamplingSnippet(outShape, outTexShape) {\n    switch (outShape.length) {\n        case 0:\n            return getOutputScalarCoords();\n        case 1:\n            return getOutput1DCoords(outShape, outTexShape);\n        case 2:\n            return getOutput2DCoords(outShape, outTexShape);\n        case 3:\n            return getOutput3DCoords(outShape, outTexShape);\n        case 4:\n            return getOutput4DCoords(outShape, outTexShape);\n        case 5:\n            return getOutput5DCoords(outShape, outTexShape);\n        case 6:\n            return getOutput6DCoords(outShape, outTexShape);\n        default:\n            throw new Error(`${outShape.length}-D output sampling is not yet supported`);\n    }\n}\nfunction getFloatTextureSampleSnippet(glsl) {\n    return `\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${glsl.texture2D}(textureSampler, uv).r;\n    }\n  `;\n}\nfunction getFloatTextureSetRSnippet(glsl) {\n    return `\n    void setOutput(float val) {\n      ${glsl.output} = vec4(val, 0, 0, 0);\n    }\n  `;\n}\nfunction getFloatTextureSetRGBASnippet(glsl) {\n    return `\n    void setOutput(vec4 val) {\n      ${glsl.output} = val;\n    }\n  `;\n}\nfunction getShaderPrefix(glsl) {\n    const SHADER_PREFIX = `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFs} vec2 resultUV;\n    ${glsl.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${glsl.defineSpecialNaN}\n    ${glsl.defineSpecialInf}\n    ${glsl.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${SAMPLE_1D_SNIPPET}\n    ${SAMPLE_2D_SNIPPET}\n    ${SAMPLE_3D_SNIPPET}\n  `;\n    return SHADER_PREFIX;\n}\nconst SAMPLE_1D_SNIPPET = `\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n`;\nconst SAMPLE_2D_SNIPPET = `\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n`;\nconst SAMPLE_3D_SNIPPET = `\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n`;\nconst SHADER_PACKED_PREFIX = `\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n`;\nfunction getOutputScalarCoords() {\n    return `\n    int getOutputCoords() {\n      return 0;\n    }\n  `;\n}\nfunction getOutputPacked1DCoords(shape, texShape) {\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    if (packedTexShape[0] === 1) {\n        return `\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${packedTexShape[1]}.0);\n      }\n    `;\n    }\n    if (packedTexShape[1] === 1) {\n        return `\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${packedTexShape[0]}.0);\n      }\n    `;\n    }\n    return `\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n      return 2 * (resTexRC.x * ${packedTexShape[1]} + resTexRC.y);\n    }\n  `;\n}\nfunction getOutput1DCoords(shape, texShape) {\n    if (texShape[0] === 1) {\n        return `\n      int getOutputCoords() {\n        return int(resultUV.x * ${texShape[1]}.0);\n      }\n    `;\n    }\n    if (texShape[1] === 1) {\n        return `\n      int getOutputCoords() {\n        return int(resultUV.y * ${texShape[0]}.0);\n      }\n    `;\n    }\n    return `\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${texShape[0]}, ${texShape[1]}));\n      return resTexRC.x * ${texShape[1]} + resTexRC.y;\n    }\n  `;\n}\nfunction getOutputPacked3DCoords(shape, texShape) {\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    return `\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n      int index = resTexRC.x * ${packedTexShape[1]} + resTexRC.y;\n\n      int b = index / ${texelsInBatch};\n      index -= b * ${texelsInBatch};\n\n      int r = 2 * (index / ${texelsInLogicalRow});\n      int c = imod(index, ${texelsInLogicalRow}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `;\n}\nfunction getOutput3DCoords(shape, texShape) {\n    const coordsFromIndexSnippet = _shader_compiler_util__WEBPACK_IMPORTED_MODULE_2__.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], shape);\n    return `\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${texShape[0]}, ${texShape[1]}));\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n      ${coordsFromIndexSnippet}\n      return ivec3(r, c, d);\n    }\n  `;\n}\nfunction getOutputPackedNDCoords(shape, texShape) {\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = ``;\n    let coords = 'b, r, c';\n    for (let b = 2; b < shape.length - 1; b++) {\n        texelsInBatchN *= shape[shape.length - b - 1];\n        batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n        coords = `b${b}, ` + coords;\n    }\n    return `\n    ivec${shape.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n      int index = resTexRC.x * ${packedTexShape[1]} + resTexRC.y;\n\n      ${batches}\n\n      int b = index / ${texelsInBatch};\n      index -= b * ${texelsInBatch};\n\n      int r = 2 * (index / ${texelsInLogicalRow});\n      int c = imod(index, ${texelsInLogicalRow}) * 2;\n\n      return ivec${shape.length}(${coords});\n    }\n  `;\n}\nfunction getOutput4DCoords(shape, texShape) {\n    const coordsFromIndexSnippet = _shader_compiler_util__WEBPACK_IMPORTED_MODULE_2__.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd', 'd2'], shape);\n    return `\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${texShape[0]}, ${texShape[1]}));\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n      ${coordsFromIndexSnippet}\n      return ivec4(r, c, d, d2);\n    }\n  `;\n}\nfunction getOutput5DCoords(shape, texShape) {\n    const coordsFromIndexSnippet = _shader_compiler_util__WEBPACK_IMPORTED_MODULE_2__.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd', 'd2', 'd3'], shape);\n    return `\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${texShape[0]},\n                             ${texShape[1]}));\n\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n\n      ${coordsFromIndexSnippet}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `;\n}\nfunction getOutput6DCoords(shape, texShape) {\n    const coordsFromIndexSnippet = _shader_compiler_util__WEBPACK_IMPORTED_MODULE_2__.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd', 'd2', 'd3', 'd4'], shape);\n    return `\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${texShape[0]}, ${texShape[1]}));\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n\n      ${coordsFromIndexSnippet}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `;\n}\nfunction getOutputPacked2DCoords(shape, texShape) {\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    if (_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(shape, texShape)) {\n        return `\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n      }\n    `;\n    }\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    return `\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n      int index = resTexRC.x * ${packedTexShape[1]} + resTexRC.y;\n      int r = 2 * (index / ${texelsInLogicalRow});\n      int c = imod(index, ${texelsInLogicalRow}) * 2;\n\n      return ivec2(r, c);\n    }\n  `;\n}\nfunction getOutput2DCoords(shape, texShape) {\n    if (_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(shape, texShape)) {\n        return `\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${texShape[0]}, ${texShape[1]}));\n      }\n    `;\n    }\n    if (shape[1] === 1) {\n        return `\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n        int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;\n    }\n    if (shape[0] === 1) {\n        return `\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n        int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;\n    }\n    return `\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${texShape[0]}, ${texShape[1]}));\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n      int r = index / ${shape[1]};\n      int c = index - r * ${shape[1]};\n      return ivec2(r, c);\n    }\n  `;\n}\nfunction getFlatOffsetUniformName(texName) {\n    return `offset${texName}`;\n}\nfunction getPackedSamplerScalar(inputInfo) {\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_1__.getGlslDifferences)();\n    return `\n    vec4 ${funcName}() {\n      return ${glsl.texture2D}(${texName}, halfCR);\n    }\n  `;\n}\nfunction getSamplerScalar(inputInfo) {\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    if (inputInfo.shapeInfo.isUniform) {\n        return `float ${funcName}() {return ${texName};}`;\n    }\n    const [texNumR, texNumC] = inputInfo.shapeInfo.texShape;\n    if (texNumR === 1 && texNumC === 1) {\n        return `\n      float ${funcName}() {\n        return sampleTexture(${texName}, halfCR);\n      }\n    `;\n    }\n    const [tNumR, tNumC] = inputInfo.shapeInfo.texShape;\n    const offset = getFlatOffsetUniformName(texName);\n    return `\n    float ${funcName}() {\n      vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, ${offset});\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\nfunction getPackedSampler1D(inputInfo) {\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const texShape = inputInfo.shapeInfo.texShape;\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_1__.getGlslDifferences)();\n    return `\n    vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${texName}, uv);\n    }\n  `;\n}\nfunction getSampler1D(inputInfo) {\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return `\n      float ${funcName}(int index) {\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n    }\n    const texShape = inputInfo.shapeInfo.texShape;\n    const tNumR = texShape[0];\n    const tNumC = texShape[1];\n    if (tNumC === 1 && tNumR === 1) {\n        return `\n      float ${funcName}(int index) {\n        return sampleTexture(${texName}, halfCR);\n      }\n    `;\n    }\n    const offset = getFlatOffsetUniformName(texName);\n    if (tNumC === 1) {\n        return `\n      float ${funcName}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${offset}) + 0.5) / ${tNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    if (tNumR === 1) {\n        return `\n      float ${funcName}(int index) {\n        vec2 uv = vec2((float(index + ${offset}) + 0.5) / ${tNumC}.0, 0.5);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    return `\n    float ${funcName}(int index) {\n      vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index + ${offset});\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\nfunction getPackedSampler2D(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const texShape = inputInfo.shapeInfo.texShape;\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n    const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_1__.getGlslDifferences)();\n    if (texShape != null && _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(shape, texShape)) {\n        return `\n      vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n\n        return ${glsl.texture2D}(${texName}, uv);\n      }\n    `;\n    }\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    return `\n    vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${valuesPerRow}, ${packedTexShape[0]}, ${packedTexShape[1]}, row, col);\n      return ${glsl.texture2D}(${texName}, uv);\n    }\n  `;\n}\nfunction getSampler2D(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const texShape = inputInfo.shapeInfo.texShape;\n    if (texShape != null && _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(shape, texShape)) {\n        const texNumR = texShape[0];\n        const texNumC = texShape[1];\n        return `\n    float ${funcName}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n    }\n    const { newShape, keptDims } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.squeezeShape(shape);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n        const newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        const params = ['row', 'col'];\n        return `\n      ${getSamplerFromInInfo(newInputInfo)}\n      float ${funcName}(int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      }\n    `;\n    }\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${shape[1]}, 1)));\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n    }\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n    const offset = getFlatOffsetUniformName(texName);\n    if (texNumC === 1) {\n        // index is used directly as physical (no risk of float16 overflow).\n        return `\n    float ${funcName}(int row, int col) {\n      float index = dot(vec3(row, col, ${offset}), vec3(${shape[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n    }\n    if (texNumR === 1) {\n        // index is used directly as physical (no risk of float16 overflow).\n        return `\n    float ${funcName}(int row, int col) {\n      float index = dot(vec3(row, col, ${offset}), vec3(${shape[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n    }\n    return `\n  float ${funcName}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${shape[1]} + col + ${offset};\n    vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n    return sampleTexture(${texName}, uv);\n  }\n`;\n}\nfunction getPackedSampler3D(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const texShape = inputInfo.shapeInfo.texShape;\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    if (shape[0] === 1) {\n        const squeezedShape = shape.slice(1);\n        const keptDims = [1, 2];\n        const newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        const params = ['b', 'row', 'col'];\n        return `\n        ${getPackedSamplerFromInInfo(newInputInfo)}\n        vec4 ${funcName}(int b, int row, int col) {\n          return ${funcName}(${getSqueezedParams(params, keptDims)});\n        }\n      `;\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n    const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_1__.getGlslDifferences)();\n    return `\n    vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumR}, ${texNumC}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${texName}, uv);\n    }\n  `;\n}\nfunction getSampler3D(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n    const { newShape, keptDims } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.squeezeShape(shape);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n        const newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n        const params = ['row', 'col', 'depth'];\n        return `\n        ${getSamplerFromInInfo(newInputInfo)}\n        float ${funcName}(int row, int col, int depth) {\n          return ${funcName}(${getSqueezedParams(params, keptDims)});\n        }\n      `;\n    }\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${stride0}, ${stride1}, 1)));\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n    }\n    const texShape = inputInfo.shapeInfo.texShape;\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n    const flatOffset = inputInfo.shapeInfo.flatOffset;\n    if (texNumC === stride0 && flatOffset == null) {\n        // texC is used directly as physical (no risk of float16 overflow).\n        return `\n        float ${funcName}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${stride1}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${texNumC}.0, ${texNumR}.0);\n          return sampleTexture(${texName}, uv);\n        }\n      `;\n    }\n    if (texNumC === stride1 && flatOffset == null) {\n        // texR is used directly as physical (no risk of float16 overflow).\n        return `\n    float ${funcName}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${shape[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n    }\n    const offset = getFlatOffsetUniformName(texName);\n    return `\n      float ${funcName}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${stride0} + col * ${stride1} + depth + ${offset};\n        vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n        return sampleTexture(${texName}, uv);\n      }\n  `;\n}\nfunction getPackedSamplerND(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const rank = shape.length;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const texShape = inputInfo.shapeInfo.texShape;\n    const packedTexShape = [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = `int b, int row, int col`;\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n        params = `int b${b}, ` + params;\n        texelsInBatch *= shape[rank - b - 1];\n        index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const glsl = (0,_glsl_version__WEBPACK_IMPORTED_MODULE_1__.getGlslDifferences)();\n    return `\n    vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${texName}, uv);\n    }\n  `;\n}\nfunction getSampler4D(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n    const { newShape, keptDims } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.squeezeShape(shape);\n    if (newShape.length < shape.length) {\n        const newInputInfo = squeezeInputInfo(inputInfo, newShape);\n        const params = ['row', 'col', 'depth', 'depth2'];\n        return `\n      ${getSamplerFromInInfo(newInputInfo)}\n      float ${funcName}(int row, int col, int depth, int depth2) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      }\n    `;\n    }\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${stride0}, ${stride1}, ${stride2}, 1)));\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n    }\n    const flatOffset = inputInfo.shapeInfo.flatOffset;\n    const texShape = inputInfo.shapeInfo.texShape;\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n    if (texNumC === stride0 && flatOffset == null) {\n        // texC is used directly as physical (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${stride1}, ${stride2}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    if (texNumC === stride2 && flatOffset == null) {\n        // texR is used directly as physical (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${shape[1] * shape[2]}, ${shape[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    const offset = getFlatOffsetUniformName(texName);\n    return `\n    float ${funcName}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${stride0} + col * ${stride1} +\n          depth * ${stride2} + depth2;\n      vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index + ${offset});\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\nfunction getSampler5D(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n    const { newShape, keptDims } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.squeezeShape(shape);\n    if (newShape.length < shape.length) {\n        const newInputInfo = squeezeInputInfo(inputInfo, newShape);\n        const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n        return `\n      ${getSamplerFromInInfo(newInputInfo)}\n      float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      }\n    `;\n    }\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${stride0}, ${stride1}, ${stride2}, ${stride3})) +\n          depth3;\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n    }\n    const flatOffset = inputInfo.shapeInfo.flatOffset;\n    const texShape = inputInfo.shapeInfo.texShape;\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n    if (texNumC === stride0 && flatOffset == null) {\n        // texC is used directly as physical (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${stride1}, ${stride2}, ${stride3}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    if (texNumC === stride3 && flatOffset == null) {\n        // texR is used directly as physical (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${shape[1] * shape[2] * shape[3]},\n               ${shape[2] * shape[3]}, ${shape[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    const offset = getFlatOffsetUniformName(texName);\n    return `\n    float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth2 * ${stride3} + depth3 + ${offset};\n      vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\nfunction getSampler6D(inputInfo) {\n    const shape = inputInfo.shapeInfo.logicalShape;\n    const texName = inputInfo.name;\n    const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n    const { newShape, keptDims } = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.squeezeShape(shape);\n    if (newShape.length < shape.length) {\n        const newInputInfo = squeezeInputInfo(inputInfo, newShape);\n        const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n        return `\n      ${getSamplerFromInInfo(newInputInfo)}\n      float ${funcName}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      }\n    `;\n    }\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n    if (inputInfo.shapeInfo.isUniform) {\n        // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${stride0}, ${stride1}, ${stride2}, ${stride3})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${stride4}, 1)));\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n    }\n    const flatOffset = inputInfo.shapeInfo.flatOffset;\n    const texShape = inputInfo.shapeInfo.texShape;\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n    if (texNumC === stride0 && flatOffset == null) {\n        // texC is used directly as physical (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${stride1}, ${stride2}, ${stride3}, ${stride4})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    if (texNumC === stride4 && flatOffset == null) {\n        // texR is used directly as physical (no risk of float16 overflow).\n        return `\n      float ${funcName}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${shape[1] * shape[2] * shape[3] * shape[4]},\n               ${shape[2] * shape[3] * shape[4]},\n               ${shape[3] * shape[4]},\n               ${shape[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n    }\n    const offset = getFlatOffsetUniformName(texName);\n    return `\n    float ${funcName}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth2 * ${stride3} + depth3 * ${stride4} + depth4 + ${offset};\n      vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\nfunction getUniformSampler(inputInfo) {\n    const texName = inputInfo.name;\n    const inSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(inputInfo.shapeInfo.logicalShape);\n    if (inSize < 2) {\n        return `return ${texName};`;\n    }\n    return `\n    for (int i = 0; i < ${inSize}; i++) {\n      if (i == index) {\n        return ${texName}[i];\n      }\n    }\n  `;\n}\nfunction getPackedSamplerAtOutputCoords(inputInfo, outShapeInfo) {\n    const texName = inputInfo.name;\n    const texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n    const funcName = 'get' + texFuncSnippet + 'AtOutCoords';\n    const inRank = inputInfo.shapeInfo.logicalShape.length;\n    const outRank = outShapeInfo.logicalShape.length;\n    const broadcastDims = getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet;\n    const fields = ['x', 'y', 'z', 'w', 'u', 'v'];\n    if (inRank === 0) {\n        coordsSnippet = '';\n    }\n    else if (outRank < 2 && broadcastDims.length >= 1) {\n        coordsSnippet = 'coords = 0;';\n    }\n    else {\n        coordsSnippet =\n            broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`)\n                .join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n        unpackedCoordsSnippet = 'coords';\n    }\n    else {\n        unpackedCoordsSnippet = inputInfo.shapeInfo.logicalShape\n            .map((s, i) => `coords.${fields[i + rankDiff]}`)\n            .join(', ');\n    }\n    let output = `return outputValue;`;\n    const inSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(inputInfo.shapeInfo.logicalShape);\n    const isInputScalar = inSize === 1;\n    const outSize = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(outShapeInfo.logicalShape);\n    const isOutputScalar = outSize === 1;\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n        output = `\n      return vec4(outputValue.xy, outputValue.xy);\n    `;\n    }\n    else if (isInputScalar && !isOutputScalar) {\n        if (outRank === 1) {\n            output = `\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      `;\n        }\n        else {\n            output = `\n        return vec4(outputValue.x);\n      `;\n        }\n    }\n    else if (broadcastDims.length) {\n        const rows = inRank - 2;\n        const cols = inRank - 1;\n        if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n            output = `return vec4(outputValue.x);`;\n        }\n        else if (broadcastDims.indexOf(rows) > -1) {\n            output = `return vec4(outputValue.x, outputValue.y, ` +\n                `outputValue.x, outputValue.y);`;\n        }\n        else if (broadcastDims.indexOf(cols) > -1) {\n            output = `return vec4(outputValue.xx, outputValue.zz);`;\n        }\n    }\n    return `\n    vec4 ${funcName}() {\n      ${type} coords = getOutputCoords();\n      ${coordsSnippet}\n      vec4 outputValue = get${texFuncSnippet}(${unpackedCoordsSnippet});\n      ${output}\n    }\n  `;\n}\nfunction getSamplerAtOutputCoords(inputInfo, outShapeInfo) {\n    const texName = inputInfo.name;\n    const texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n    const funcName = 'get' + texFuncSnippet + 'AtOutCoords';\n    const outTexShape = outShapeInfo.texShape;\n    const inTexShape = inputInfo.shapeInfo.texShape;\n    const inRank = inputInfo.shapeInfo.logicalShape.length;\n    const outRank = outShapeInfo.logicalShape.length;\n    if (!inputInfo.shapeInfo.isUniform && inRank === outRank &&\n        inputInfo.shapeInfo.flatOffset == null &&\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(inTexShape, outTexShape)) {\n        return `\n      float ${funcName}() {\n        return sampleTexture(${texName}, resultUV);\n      }\n    `;\n    }\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = getBroadcastDims(inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet;\n    const fields = ['x', 'y', 'z', 'w', 'u', 'v'];\n    if (inRank === 0) {\n        coordsSnippet = '';\n    }\n    else if (outRank < 2 && broadcastDims.length >= 1) {\n        coordsSnippet = 'coords = 0;';\n    }\n    else {\n        coordsSnippet =\n            broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`)\n                .join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n        unpackedCoordsSnippet = 'coords';\n    }\n    else {\n        unpackedCoordsSnippet = inputInfo.shapeInfo.logicalShape\n            .map((s, i) => `coords.${fields[i + rankDiff]}`)\n            .join(', ');\n    }\n    return `\n    float ${funcName}() {\n      ${type} coords = getOutputCoords();\n      ${coordsSnippet}\n      return get${texFuncSnippet}(${unpackedCoordsSnippet});\n    }\n  `;\n}\nfunction getCoordsDataType(rank) {\n    if (rank <= 1) {\n        return 'int';\n    }\n    else if (rank === 2) {\n        return 'ivec2';\n    }\n    else if (rank === 3) {\n        return 'ivec3';\n    }\n    else if (rank === 4) {\n        return 'ivec4';\n    }\n    else if (rank === 5) {\n        return 'ivec5';\n    }\n    else if (rank === 6) {\n        return 'ivec6';\n    }\n    else {\n        throw Error(`GPU for rank ${rank} is not yet supported`);\n    }\n}\n/** Returns a new input info (a copy) that has a squeezed logical shape. */\nfunction squeezeInputInfo(inInfo, squeezedShape) {\n    // Deep copy.\n    const newInputInfo = JSON.parse(JSON.stringify(inInfo));\n    newInputInfo.shapeInfo.logicalShape = squeezedShape;\n    return newInputInfo;\n}\nfunction getSqueezedParams(params, keptDims) {\n    return keptDims.map(d => params[d]).join(', ');\n}\n//# sourceMappingURL=shader_compiler.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler_util.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler_util.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export ENCODE_FLOAT_SNIPPET [provided] [no usage info] [missing usage info prevents renaming] */
/*! export dotify [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getFlatIndexFrom3D [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getLogicalCoordinatesFromFlatIndex [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getLogicalCoordinatesFromFlatIndex\": () => /* binding */ getLogicalCoordinatesFromFlatIndex,\n/* harmony export */   \"dotify\": () => /* binding */ dotify,\n/* harmony export */   \"getFlatIndexFrom3D\": () => /* binding */ getFlatIndexFrom3D,\n/* harmony export */   \"ENCODE_FLOAT_SNIPPET\": () => /* binding */ ENCODE_FLOAT_SNIPPET\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n/**\n * Produces GLSL code that derives logical coordinates from a flat\n * index. The code performs integer division with each stride and decrements\n * the index until the index equals the final dimension coordinate.\n */\nfunction getLogicalCoordinatesFromFlatIndex(coords, shape, index = 'index') {\n    const strides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(shape);\n    return strides\n        .map((stride, i) => {\n        const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n        const line2 = i === strides.length - 1 ?\n            `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n            `index -= ${coords[i]} * ${stride}`;\n        return `${line1}; ${line2};`;\n    })\n        .join('');\n}\nfunction buildVec(x) {\n    if (x.length === 1) {\n        return `${x[0]}`;\n    }\n    return `vec${x.length}(${x.join(',')})`;\n}\n/**\n * Produces GLSL code that computes the dot product of the input x and y\n * vectors. Handles splitting inputs into increments of vec4s when necessary.\n */\nfunction dotify(x, y) {\n    if (x.length !== y.length) {\n        throw new Error(`Vectors to be dotted must be of the same length -` +\n            `got ${x.length} and ${y.length}`);\n    }\n    const slices = [];\n    const nearestVec4 = Math.floor(x.length / 4);\n    const nearestVec4Remainder = x.length % 4;\n    for (let i = 0; i < nearestVec4; i++) {\n        const xSlice = x.slice(i * 4, i * 4 + 4);\n        const ySlice = y.slice(i * 4, i * 4 + 4);\n        slices.push(`${buildVec(xSlice)}, ${buildVec(ySlice)}`);\n    }\n    if (nearestVec4Remainder !== 0) {\n        let xSlice = x.slice(nearestVec4 * 4);\n        let ySlice = y.slice(nearestVec4 * 4);\n        if (xSlice.length === 1) {\n            xSlice = xSlice.map(d => `float(${d})`);\n            ySlice = ySlice.map(d => `float(${d})`);\n        }\n        slices.push(`${buildVec(xSlice)}, ${buildVec(ySlice)}`);\n    }\n    return slices.map((d, i) => `dot(${d})`).join('+');\n}\n/**\n * Produces GLSL that computes the flat index from 3D coordinates.\n */\nfunction getFlatIndexFrom3D(shape) {\n    const strides = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.computeStrides(shape).map(d => d.toString());\n    return `\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${strides[0]} + coords.y * ${strides[1]} + coords.z;\n  }\n`;\n}\nconst ENCODE_FLOAT_SNIPPET = `\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n`;\n//# sourceMappingURL=shader_compiler_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/slice_gpu.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/slice_gpu.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export SliceProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SliceProgram\": () => /* binding */ SliceProgram\n/* harmony export */ });\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass SliceProgram {\n    constructor(destSize) {\n        this.variableNames = ['source'];\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(this.rank);\n        const uniformPart = `uniform int start[${this.rank}];`;\n        const sourceCoords = getCoords(this.rank);\n        let body;\n        const coordSum = destSize.map((_, i) => {\n            return `sourceLoc.${coords[i]} = start[${i}] + coords.${coords[i]};`;\n        });\n        body = `\n        ${dtype} sourceLoc;\n        ${dtype} coords = getOutputCoords();\n        ${coordSum.join('\\n')}\n      `;\n        this.userCode = `\n      ${uniformPart}\n      void main() {\n        ${body}\n        setOutput(getSource(${sourceCoords}));\n      }\n    `;\n    }\n    getCustomSetupFunc(start) {\n        if (start.length !== this.rank) {\n            throw Error(`The rank (${this.rank}) of the program must match the ` +\n                `length of start (${start.length})`);\n        }\n        return (gpgpu, webGLProgram) => {\n            if (this.startLoc == null) {\n                this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n                if (this.startLoc == null) {\n                    // This means the compiler has optimized and realized it doesn't need\n                    // the uniform.\n                    return;\n                }\n            }\n            gpgpu.gl.uniform1iv(this.startLoc, start);\n        };\n    }\n}\nconst coords = ['x', 'y', 'z', 'w', 'u', 'v'];\nfunction getCoords(rank) {\n    if (rank === 1) {\n        return 'sourceLoc';\n    }\n    else if (rank <= 6) {\n        return coords.slice(0, rank).map(x => 'sourceLoc.' + x).join(',');\n    }\n    else {\n        throw Error(`Slicing for rank ${rank} is not yet supported`);\n    }\n}\n//# sourceMappingURL=slice_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/slice_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/slice_packed_gpu.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/slice_packed_gpu.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export SlicePackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SlicePackedProgram\": () => /* binding */ SlicePackedProgram\n/* harmony export */ });\n/* harmony import */ var _packing_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packing_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js\");\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nclass SlicePackedProgram {\n    constructor(destSize) {\n        this.variableNames = ['source'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(this.rank);\n        const coords = (0,_packing_util__WEBPACK_IMPORTED_MODULE_1__.getChannels)('coords', this.rank);\n        const sourceLoc = (0,_packing_util__WEBPACK_IMPORTED_MODULE_1__.getChannels)('sourceLoc', this.rank);\n        const innerDims = this.rank === 1 ? 'sourceLoc' : `vec2(${sourceLoc.slice(-2).join()})`;\n        const getChannel = `getChannel(getSource(${sourceLoc.join()}), ${innerDims})`;\n        const upperRow = `\n      result.x = ${getChannel};\n      if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n        ++${sourceLoc[this.rank - 1]};\n        result.y = ${getChannel};\n        --${sourceLoc[this.rank - 1]};\n      }\n    `;\n        const lowerRow = this.rank === 1 ? '' : `\n      --${coords[this.rank - 1]};\n      if (++${coords[this.rank - 2]} < ${destSize[this.rank - 2]}) {\n        ++${sourceLoc[this.rank - 2]};\n        result.z = ${getChannel};\n        if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n          ++${sourceLoc[this.rank - 1]};\n          result.w = ${getChannel};\n        }\n      }\n    `;\n        const sourceLocSetup = this.rank <= 4 ?\n            `sourceLoc = coords +\n            ${dtype}(${destSize.map((_, i) => `start[${i}]`).join()});` :\n            destSize.map((_, i) => `${sourceLoc[i]} = ${coords[i]} + start[${i}];`)\n                .join('\\n');\n        this.userCode = `\n      uniform int start[${this.rank}];\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        ${dtype} sourceLoc;\n        ${sourceLocSetup}\n        vec4 result = vec4(0.);\n        ${upperRow}\n        ${lowerRow}\n        setOutput(result);\n      }\n    `;\n    }\n    getCustomSetupFunc(start) {\n        if (start.length !== this.rank) {\n            throw Error(`The rank (${this.rank}) of the program must match the ` +\n                `length of start (${start.length})`);\n        }\n        return (gpgpu, webGLProgram) => {\n            if (this.startLoc == null) {\n                this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n                if (this.startLoc == null) {\n                    // This means the compiler has optimized and realized it doesn't need\n                    // the uniform.\n                    return;\n                }\n            }\n            gpgpu.gl.uniform1iv(this.startLoc, start);\n        };\n    }\n}\n//# sourceMappingURL=slice_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/slice_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/strided_slice_gpu.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/strided_slice_gpu.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export StridedSliceProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StridedSliceProgram\": () => /* binding */ StridedSliceProgram\n/* harmony export */ });\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass StridedSliceProgram {\n    constructor(begin, strides, size) {\n        this.variableNames = ['x'];\n        this.outputShape = size;\n        const rank = size.length;\n        const inputDtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(size.length);\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(size.length);\n        let newCoords = '';\n        if (rank === 1) {\n            newCoords = 'coords * strides + begin';\n        }\n        else {\n            let outputAxis = 0;\n            newCoords =\n                size.map((_, i) => {\n                    outputAxis++;\n                    return size.length === 1 ?\n                        `coords * strides[${i}] + begin[${i}]` :\n                        `coords[${outputAxis - 1}] * strides[${i}] + begin[${i}]`;\n                })\n                    .join(',');\n        }\n        this.userCode = `\n      ${inputDtype} begin = ${inputDtype}(${begin});\n      ${inputDtype} strides = ${inputDtype}(${strides});\n\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        setOutput(getX(${newCoords}));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=strided_slice_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/strided_slice_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export PackingScheme [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PhysicalTextureType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export TextureUsage [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeMatrixFromUnpackedColorRGBAArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getColorMatrixTextureShapeWidthHeight [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getDenseTexShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getMatrixSizeFromUnpackedArraySize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getPackedMatrixTextureShapeWidthHeight [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getPackedRGBAArraySizeFromMatrixShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTextureConfig [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getUnpackedArraySizeFromMatrixSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getUnpackedMatrixTextureShapeWidthHeight [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PackingScheme\": () => /* binding */ PackingScheme,\n/* harmony export */   \"TextureUsage\": () => /* binding */ TextureUsage,\n/* harmony export */   \"PhysicalTextureType\": () => /* binding */ PhysicalTextureType,\n/* harmony export */   \"getUnpackedMatrixTextureShapeWidthHeight\": () => /* binding */ getUnpackedMatrixTextureShapeWidthHeight,\n/* harmony export */   \"getUnpackedArraySizeFromMatrixSize\": () => /* binding */ getUnpackedArraySizeFromMatrixSize,\n/* harmony export */   \"getColorMatrixTextureShapeWidthHeight\": () => /* binding */ getColorMatrixTextureShapeWidthHeight,\n/* harmony export */   \"getDenseTexShape\": () => /* binding */ getDenseTexShape,\n/* harmony export */   \"getMatrixSizeFromUnpackedArraySize\": () => /* binding */ getMatrixSizeFromUnpackedArraySize,\n/* harmony export */   \"decodeMatrixFromUnpackedColorRGBAArray\": () => /* binding */ decodeMatrixFromUnpackedColorRGBAArray,\n/* harmony export */   \"getPackedMatrixTextureShapeWidthHeight\": () => /* binding */ getPackedMatrixTextureShapeWidthHeight,\n/* harmony export */   \"getPackedRGBAArraySizeFromMatrixShape\": () => /* binding */ getPackedRGBAArraySizeFromMatrixShape,\n/* harmony export */   \"getTextureConfig\": () => /* binding */ getTextureConfig\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nvar PackingScheme;\n(function (PackingScheme) {\n    /**\n     * All values in a single texel are densely packed without any constraints.\n     *\n     * This is how the shader encodes a tensor with shape = [2, 3, 4]\n     * (indices are [batch, row, col]).\n     *\n     * 000|001   010|011   020|021\n     * -------   -------   -------\n     * 002|003   012|013   022|023\n     *\n     * 100|101   110|111   120|121\n     * -------   -------   -------\n     * 102|103   112|113   122|123\n     *\n     */\n    PackingScheme[PackingScheme[\"DENSE\"] = 0] = \"DENSE\";\n    /**\n     * Single texels contain only values from the same batch, and from adjacent\n     * rows and columns.\n     *\n     * This is how the shader encodes a tensor with shape = [2, 3, 5]\n     * (indices are [batch, row, col]).\n     *\n     * 000|001   002|003   004|xxx   020|021   022|023   024|xxx\n     * -------   -------   -------   -------   -------   -------\n     * 010|011   012|013   014|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n     *\n     * 100|101   102|103   104|xxx   120|121   122|123   124|xxx\n     * -------   -------   -------   -------   -------   -------\n     * 110|111   112|113   114|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n     *\n     */\n    PackingScheme[PackingScheme[\"SHARED_BATCH\"] = 1] = \"SHARED_BATCH\";\n})(PackingScheme || (PackingScheme = {}));\nvar TextureUsage;\n(function (TextureUsage) {\n    TextureUsage[TextureUsage[\"RENDER\"] = 0] = \"RENDER\";\n    TextureUsage[TextureUsage[\"UPLOAD\"] = 1] = \"UPLOAD\";\n    TextureUsage[TextureUsage[\"PIXELS\"] = 2] = \"PIXELS\";\n    TextureUsage[TextureUsage[\"DOWNLOAD\"] = 3] = \"DOWNLOAD\";\n})(TextureUsage || (TextureUsage = {}));\nvar PhysicalTextureType;\n(function (PhysicalTextureType) {\n    PhysicalTextureType[PhysicalTextureType[\"UNPACKED_FLOAT16\"] = 0] = \"UNPACKED_FLOAT16\";\n    PhysicalTextureType[PhysicalTextureType[\"UNPACKED_FLOAT32\"] = 1] = \"UNPACKED_FLOAT32\";\n    PhysicalTextureType[PhysicalTextureType[\"PACKED_4X1_UNSIGNED_BYTE\"] = 2] = \"PACKED_4X1_UNSIGNED_BYTE\";\n    PhysicalTextureType[PhysicalTextureType[\"PACKED_2X2_FLOAT32\"] = 3] = \"PACKED_2X2_FLOAT32\";\n    PhysicalTextureType[PhysicalTextureType[\"PACKED_2X2_FLOAT16\"] = 4] = \"PACKED_2X2_FLOAT16\";\n})(PhysicalTextureType || (PhysicalTextureType = {}));\nfunction getUnpackedMatrixTextureShapeWidthHeight(rows, columns) {\n    return [columns, rows];\n}\nfunction getUnpackedArraySizeFromMatrixSize(matrixSize, channelsPerTexture) {\n    return matrixSize * channelsPerTexture;\n}\nfunction getColorMatrixTextureShapeWidthHeight(rows, columns) {\n    return [columns * 4, rows];\n}\n/**\n * Get shape for densely packed RGBA texture.\n */\nfunction getDenseTexShape(shape) {\n    const size = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(shape);\n    const texelsNeeded = Math.ceil(size / 4);\n    return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeToSquarishShape(texelsNeeded);\n}\nfunction getMatrixSizeFromUnpackedArraySize(unpackedSize, channelsPerTexture) {\n    if (unpackedSize % channelsPerTexture !== 0) {\n        throw new Error(`unpackedSize (${unpackedSize}) must be a multiple of ` +\n            `${channelsPerTexture}`);\n    }\n    return unpackedSize / channelsPerTexture;\n}\nfunction decodeMatrixFromUnpackedColorRGBAArray(unpackedArray, matrix, channels) {\n    const requiredSize = unpackedArray.length * channels / 4;\n    if (matrix.length < requiredSize) {\n        throw new Error(`matrix length (${matrix.length}) must be >= ${requiredSize}`);\n    }\n    let dst = 0;\n    for (let src = 0; src < unpackedArray.length; src += 4) {\n        for (let c = 0; c < channels; c++) {\n            matrix[dst++] = unpackedArray[src + c];\n        }\n    }\n}\nfunction getPackedMatrixTextureShapeWidthHeight(rows, columns) {\n    return [\n        Math.max(1, Math.ceil(columns / 2)), Math.max(1, Math.ceil(rows / 2))\n    ];\n}\nfunction getPackedRGBAArraySizeFromMatrixShape(rows, columns) {\n    const [w, h] = getPackedMatrixTextureShapeWidthHeight(rows, columns);\n    return w * h * 4;\n}\nfunction getTextureConfig(\n// tslint:disable-next-line:no-any\ngl, textureHalfFloatExtension) {\n    // tslint:disable-next-line:no-any\n    const glany = gl;\n    let internalFormatFloat;\n    let internalFormatHalfFloat;\n    let internalFormatPackedHalfFloat;\n    let internalFormatPackedFloat;\n    let textureFormatFloat;\n    let downloadTextureFormat;\n    let downloadUnpackNumChannels;\n    let defaultNumChannels;\n    let textureTypeHalfFloat;\n    let textureTypeFloat;\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_VERSION') === 2) {\n        internalFormatFloat = glany.R32F;\n        internalFormatHalfFloat = glany.R16F;\n        internalFormatPackedHalfFloat = glany.RGBA16F;\n        internalFormatPackedFloat = glany.RGBA32F;\n        textureFormatFloat = glany.RED;\n        downloadUnpackNumChannels = 4;\n        defaultNumChannels = 1;\n        textureTypeHalfFloat = glany.HALF_FLOAT;\n        textureTypeFloat = glany.FLOAT;\n    }\n    else {\n        internalFormatFloat = gl.RGBA;\n        internalFormatHalfFloat = gl.RGBA;\n        internalFormatPackedHalfFloat = gl.RGBA;\n        internalFormatPackedFloat = glany.RGBA;\n        textureFormatFloat = gl.RGBA;\n        downloadUnpackNumChannels = 4;\n        defaultNumChannels = 4;\n        textureTypeHalfFloat = textureHalfFloatExtension != null ?\n            textureHalfFloatExtension.HALF_FLOAT_OES :\n            null;\n        textureTypeFloat = gl.FLOAT;\n    }\n    downloadTextureFormat = gl.RGBA;\n    return {\n        internalFormatFloat,\n        internalFormatHalfFloat,\n        internalFormatPackedHalfFloat,\n        internalFormatPackedFloat,\n        textureFormatFloat,\n        downloadTextureFormat,\n        downloadUnpackNumChannels,\n        defaultNumChannels,\n        textureTypeHalfFloat,\n        textureTypeFloat\n    };\n}\n//# sourceMappingURL=tex_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/texture_manager.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/texture_manager.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export TextureManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computeBytes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TextureManager\": () => /* binding */ TextureManager,\n/* harmony export */   \"computeBytes\": () => /* binding */ computeBytes\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _gpgpu_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gpgpu_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_util.js\");\n/* harmony import */ var _tex_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tex_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nclass TextureManager {\n    constructor(gpgpu) {\n        this.gpgpu = gpgpu;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n        this._numBytesAllocated = 0;\n        this._numBytesFree = 0; // How many bytes that have been allocated\n        // are available for reuse.\n        this.freeTextures = {};\n        this.logEnabled = false;\n        this.usedTextures = {};\n    }\n    acquireTexture(shapeRC, usage, isPacked) {\n        const physicalTexType = getPhysicalFromLogicalTextureType(usage, isPacked);\n        const shapeKey = getKeyFromTextureShape(shapeRC, physicalTexType, isPacked);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        if (!(shapeKey in this.usedTextures)) {\n            this.usedTextures[shapeKey] = [];\n        }\n        const texBytes = computeBytes(shapeRC, physicalTexType, this.gpgpu.gl, this.gpgpu.textureConfig, isPacked);\n        if (this.freeTextures[shapeKey].length > 0) {\n            this.numFreeTextures--;\n            this.numUsedTextures++;\n            this._numBytesFree -= texBytes;\n            this.log();\n            const newTexture = this.freeTextures[shapeKey].shift();\n            this.usedTextures[shapeKey].push(newTexture);\n            return newTexture;\n        }\n        let newTexture;\n        if (physicalTexType === _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.PACKED_2X2_FLOAT32) {\n            newTexture = this.gpgpu.createPackedMatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        else if (physicalTexType === _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.PACKED_2X2_FLOAT16) {\n            newTexture =\n                this.gpgpu.createFloat16PackedMatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        else if (physicalTexType === _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.UNPACKED_FLOAT32) {\n            newTexture =\n                this.gpgpu.createFloat32MatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        else if (physicalTexType === _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.UNPACKED_FLOAT16) {\n            newTexture =\n                this.gpgpu.createFloat16MatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        else if (physicalTexType === _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE) {\n            newTexture =\n                this.gpgpu.createUnsignedBytesMatrixTexture(shapeRC[0], shapeRC[1]);\n        }\n        this.usedTextures[shapeKey].push(newTexture);\n        this.numUsedTextures++;\n        this._numBytesAllocated += texBytes;\n        this.log();\n        return newTexture;\n    }\n    releaseTexture(texture, shape, logicalTexType, isPacked) {\n        if (this.freeTextures == null) {\n            // Already disposed.\n            return;\n        }\n        const physicalTexType = getPhysicalFromLogicalTextureType(logicalTexType, isPacked);\n        const shapeKey = getKeyFromTextureShape(shape, physicalTexType, isPacked);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        const texBytes = computeBytes(shape, physicalTexType, this.gpgpu.gl, this.gpgpu.textureConfig, isPacked);\n        const deleteTexThreshold = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().get('WEBGL_DELETE_TEXTURE_THRESHOLD');\n        if (deleteTexThreshold !== -1 &&\n            this._numBytesAllocated > deleteTexThreshold) {\n            this.gpgpu.deleteMatrixTexture(texture);\n            this._numBytesAllocated -= texBytes;\n        }\n        else {\n            this.freeTextures[shapeKey].push(texture);\n            this.numFreeTextures++;\n            this._numBytesFree += texBytes;\n        }\n        this.numUsedTextures--;\n        const texList = this.usedTextures[shapeKey];\n        const texIndex = texList.indexOf(texture);\n        if (texIndex < 0) {\n            throw new Error('Cannot release a texture that was never provided by this ' +\n                'texture manager');\n        }\n        texList.splice(texIndex, 1);\n        this.log();\n    }\n    log() {\n        if (!this.logEnabled) {\n            return;\n        }\n        const total = this.numFreeTextures + this.numUsedTextures;\n        console.log('Free/Used', `${this.numFreeTextures} / ${this.numUsedTextures}`, `(${total})`);\n        const freeRatio = this._numBytesFree / this._numBytesAllocated;\n        console.log(`Bytes allocated: ${this._numBytesAllocated}`);\n        console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100 * freeRatio)}%)`);\n    }\n    get numBytesAllocated() {\n        return this._numBytesAllocated;\n    }\n    get numBytesFree() {\n        return this._numBytesFree;\n    }\n    getNumUsedTextures() {\n        return this.numUsedTextures;\n    }\n    getNumFreeTextures() {\n        return this.numFreeTextures;\n    }\n    dispose() {\n        if (this.freeTextures == null) {\n            // Already disposed.\n            return;\n        }\n        for (const texShape in this.freeTextures) {\n            this.freeTextures[texShape].forEach(tex => {\n                this.gpgpu.deleteMatrixTexture(tex);\n            });\n        }\n        for (const texShape in this.usedTextures) {\n            this.usedTextures[texShape].forEach(tex => {\n                this.gpgpu.deleteMatrixTexture(tex);\n            });\n        }\n        this.freeTextures = null;\n        this.usedTextures = null;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n        this._numBytesAllocated = 0;\n        this._numBytesFree = 0;\n    }\n}\nfunction numBytesForInternalFormat(gl, internalFormat) {\n    // tslint:disable-next-line:no-any\n    const glany = gl;\n    if (internalFormat === glany.R32F) {\n        return 4;\n    }\n    else if (internalFormat === glany.R16F) {\n        return 2;\n    }\n    else if (internalFormat === glany.RGBA32F) {\n        return 16;\n    }\n    else if (internalFormat === gl.RGBA) {\n        return 16;\n    }\n    else if (internalFormat === glany.RGBA16F) {\n        return 8;\n    }\n    throw new Error(`Unknown internal format ${internalFormat}`);\n}\nfunction computeBytes(shape, physicalTexType, gl, textureConfig, isPacked) {\n    // It is not possible to infer packed status from the texture type because\n    // depending on the textureConfig, different  texture types may resolve to the\n    // same internal format (e.g. in WebGL1, the internal format for\n    // UNPACKED_FLOAT16 textures is gl.RGBA). Therefore we pass in `isPacked`\n    // explicitly.\n    const internalFormat = internalFormatForPhysicalTexType(physicalTexType, textureConfig);\n    let numElements;\n    if (isPacked) {\n        const [packedWidth, packedHeight] = (0,_tex_util__WEBPACK_IMPORTED_MODULE_1__.getPackedMatrixTextureShapeWidthHeight)(shape[0], shape[1]);\n        numElements = packedWidth * packedHeight;\n    }\n    else {\n        const [width, height] = (0,_tex_util__WEBPACK_IMPORTED_MODULE_1__.getUnpackedMatrixTextureShapeWidthHeight)(shape[0], shape[1]);\n        numElements = width * height;\n    }\n    const bytesPerElement = numBytesForInternalFormat(gl, internalFormat);\n    return numElements * bytesPerElement;\n}\nfunction internalFormatForPhysicalTexType(physicalTexType, textureConfig) {\n    switch (physicalTexType) {\n        case _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.PACKED_2X2_FLOAT32:\n            return (0,_gpgpu_util__WEBPACK_IMPORTED_MODULE_2__.getInternalFormatForPackedMatrixTexture)(textureConfig);\n        case _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.PACKED_2X2_FLOAT16:\n            return (0,_gpgpu_util__WEBPACK_IMPORTED_MODULE_2__.getInternalFormatForFloat16PackedMatrixTexture)(textureConfig);\n        case _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.UNPACKED_FLOAT32:\n            return (0,_gpgpu_util__WEBPACK_IMPORTED_MODULE_2__.getInternalFormatForFloat32MatrixTexture)(textureConfig);\n        case _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.UNPACKED_FLOAT16:\n            return (0,_gpgpu_util__WEBPACK_IMPORTED_MODULE_2__.getInternalFormatForFloat16MatrixTexture)(textureConfig);\n        case _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE:\n            return (0,_gpgpu_util__WEBPACK_IMPORTED_MODULE_2__.getInternalFormatForUnsignedBytesMatrixTexture)(textureConfig);\n        default:\n            throw new Error(`Unknown physical texture type ${physicalTexType}`);\n    }\n}\nfunction getPhysicalTextureForRendering(isPacked) {\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_RENDER_FLOAT32_ENABLED')) {\n        if (isPacked) {\n            return _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.PACKED_2X2_FLOAT32;\n        }\n        return _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.UNPACKED_FLOAT32;\n    }\n    if (isPacked) {\n        return _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.PACKED_2X2_FLOAT16;\n    }\n    return _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.UNPACKED_FLOAT16;\n}\nfunction getPhysicalFromLogicalTextureType(logicalTexType, isPacked) {\n    if (logicalTexType === _tex_util__WEBPACK_IMPORTED_MODULE_1__.TextureUsage.UPLOAD) {\n        return _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.PACKED_2X2_FLOAT32;\n    }\n    else if (logicalTexType === _tex_util__WEBPACK_IMPORTED_MODULE_1__.TextureUsage.RENDER || logicalTexType == null) {\n        return getPhysicalTextureForRendering(isPacked);\n    }\n    else if (logicalTexType === _tex_util__WEBPACK_IMPORTED_MODULE_1__.TextureUsage.DOWNLOAD ||\n        logicalTexType === _tex_util__WEBPACK_IMPORTED_MODULE_1__.TextureUsage.PIXELS) {\n        return _tex_util__WEBPACK_IMPORTED_MODULE_1__.PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE;\n    }\n    throw new Error(`Unknown logical texture type ${logicalTexType}`);\n}\nfunction getKeyFromTextureShape(shapeRowsCol, physicalTexType, isPacked) {\n    return `${shapeRowsCol[0]}_${shapeRowsCol[1]}_${physicalTexType}_${isPacked}`;\n}\n//# sourceMappingURL=texture_manager.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/texture_manager.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/tile_gpu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/tile_gpu.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export TileProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TileProgram\": () => /* binding */ TileProgram\n/* harmony export */ });\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass TileProgram {\n    constructor(aShape, reps) {\n        this.variableNames = ['A'];\n        const outputShape = new Array(aShape.length);\n        for (let i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[i] * reps[i];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(this.rank);\n        const sourceCoords = getSourceCoords(aShape);\n        this.userCode = `\n      void main() {\n        ${dtype} resRC = getOutputCoords();\n        setOutput(getA(${sourceCoords}));\n      }\n    `;\n    }\n}\nfunction getSourceCoords(aShape) {\n    const rank = aShape.length;\n    if (rank > 5) {\n        throw Error(`Tile for rank ${rank} is not yet supported`);\n    }\n    if (rank === 1) {\n        return `imod(resRC, ${aShape[0]})`;\n    }\n    const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u'];\n    const sourceCoords = [];\n    for (let i = 0; i < aShape.length; i++) {\n        sourceCoords.push(`imod(${currentCoords[i]}, ${aShape[i]})`);\n    }\n    return sourceCoords.join();\n}\n//# sourceMappingURL=tile_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/tile_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/transpose_gpu.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/transpose_gpu.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export TransposeProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TransposeProgram\": () => /* binding */ TransposeProgram\n/* harmony export */ });\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nclass TransposeProgram {\n    constructor(aShape, newDim) {\n        this.variableNames = ['A'];\n        const outputShape = new Array(aShape.length);\n        for (let i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(this.rank);\n        const switched = getSwitchedCoords(newDim);\n        this.userCode = `\n    void main() {\n      ${dtype} resRC = getOutputCoords();\n      setOutput(getA(${switched}));\n    }\n    `;\n    }\n}\nfunction getSwitchedCoords(newDim) {\n    const rank = newDim.length;\n    if (rank > 6) {\n        throw Error(`Transpose for rank ${rank} is not yet supported`);\n    }\n    const originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u', 'resRC.v'];\n    const switchedCoords = new Array(rank);\n    for (let i = 0; i < newDim.length; i++) {\n        switchedCoords[newDim[i]] = originalOrder[i];\n    }\n    return switchedCoords.join();\n}\n//# sourceMappingURL=transpose_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/transpose_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/transpose_packed_gpu.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/transpose_packed_gpu.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export TransposePackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TransposePackedProgram\": () => /* binding */ TransposePackedProgram\n/* harmony export */ });\n/* harmony import */ var _packing_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packing_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js\");\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nclass TransposePackedProgram {\n    constructor(aShape, newDim) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        const outputShape = new Array(aShape.length);\n        for (let i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        if (this.rank > 6) {\n            throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);\n        }\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_0__.getCoordsDataType)(this.rank);\n        const outputOrder = (0,_packing_util__WEBPACK_IMPORTED_MODULE_1__.getVecChannels)('rc', this.rank);\n        const switchedOrder = new Array(this.rank);\n        for (let i = 0; i < newDim.length; i++) {\n            switchedOrder[newDim[i]] = outputOrder[i];\n        }\n        const innerDims = `vec2(${switchedOrder.slice(-2).join()})`;\n        const nextColumn = `++${outputOrder[this.rank - 1]} < ${outputShape[this.rank - 1]}`;\n        const getc = `getChannel(getA(${switchedOrder.join()}), ${innerDims})`;\n        this.userCode = `\n    void main() {\n      ${dtype} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${getc};\n      if(${nextColumn}) {\n        result[1] = ${getc};\n      }\n      --${outputOrder[this.rank - 1]};\n      if(++${outputOrder[this.rank - 2]} < ${outputShape[this.rank - 2]}) {\n        result[2] = ${getc};\n        if(${nextColumn}) {\n          result[3] = ${getc};\n        }\n      }\n      setOutput(result);\n    }\n    `;\n    }\n}\n//# sourceMappingURL=transpose_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/transpose_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export ABS [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CHECK_NAN_SNIPPET [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CLONE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ELU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LINEAR [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RELU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RELU6 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export STEP [provided] [no usage info] [missing usage info prevents renaming] */
/*! export UnaryOpProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UnaryOpProgram\": () => /* binding */ UnaryOpProgram,\n/* harmony export */   \"CHECK_NAN_SNIPPET\": () => /* binding */ CHECK_NAN_SNIPPET,\n/* harmony export */   \"LINEAR\": () => /* binding */ LINEAR,\n/* harmony export */   \"ABS\": () => /* binding */ ABS,\n/* harmony export */   \"STEP\": () => /* binding */ STEP,\n/* harmony export */   \"ELU\": () => /* binding */ ELU,\n/* harmony export */   \"RELU\": () => /* binding */ RELU,\n/* harmony export */   \"RELU6\": () => /* binding */ RELU6,\n/* harmony export */   \"CLONE\": () => /* binding */ CLONE\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass UnaryOpProgram {\n    constructor(aShape, opSnippet) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        this.userCode = `\n      float unaryOperation(float x) {\n        ${opSnippet}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `;\n    }\n}\nconst CHECK_NAN_SNIPPET = `if (isnan(x)) return x;`;\nconst LINEAR = `return x;`;\nconst ABS = `return abs(x);`;\nfunction STEP(alpha = 0.0) {\n    return CHECK_NAN_SNIPPET + `\n    return x > 0.0 ? 1.0 : float(${alpha});\n  `;\n}\nconst ELU = `return (x >= 0.0) ? x : (exp(x) - 1.0);`;\nconst RELU = CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : x;\n`;\nconst RELU6 = CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n`;\nconst CLONE = 'return x;';\n//# sourceMappingURL=unaryop_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_packed_gpu.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_packed_gpu.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export ELU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LINEAR [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RELU [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RELU6 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export UnaryOpPackedProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LINEAR\": () => /* binding */ LINEAR,\n/* harmony export */   \"ELU\": () => /* binding */ ELU,\n/* harmony export */   \"RELU\": () => /* binding */ RELU,\n/* harmony export */   \"RELU6\": () => /* binding */ RELU6,\n/* harmony export */   \"UnaryOpPackedProgram\": () => /* binding */ UnaryOpPackedProgram\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst LINEAR = `return x;`;\nconst ELU = `\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n`;\nconst RELU = `\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n`;\nconst RELU6 = `\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n`;\nclass UnaryOpPackedProgram {\n    constructor(aShape, opSnippet) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = aShape;\n        this.userCode = `\n      vec4 unaryOperation(vec4 x) {\n        ${opSnippet}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=unaryop_packed_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/unaryop_packed_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/unpack_gpu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/unpack_gpu.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export UnpackProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UnpackProgram\": () => /* binding */ UnpackProgram\n/* harmony export */ });\n/* harmony import */ var _packing_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packing_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/packing_util.js\");\n/* harmony import */ var _shader_compiler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shader_compiler */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/shader_compiler.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nclass UnpackProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = false;\n        this.outputShape = outputShape;\n        const rank = outputShape.length;\n        const channels = (0,_packing_util__WEBPACK_IMPORTED_MODULE_0__.getChannels)('rc', rank);\n        const dtype = (0,_shader_compiler__WEBPACK_IMPORTED_MODULE_1__.getCoordsDataType)(rank);\n        const sourceCoords = (0,_packing_util__WEBPACK_IMPORTED_MODULE_0__.getSourceCoords)(rank, channels);\n        const innerDims = channels.slice(-2);\n        const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n        this.userCode = `\n      void main() {\n        ${dtype} rc = getOutputCoords();\n        vec4 packedInput = getA(${sourceCoords});\n\n        setOutput(getChannel(packedInput, ${coords}));\n      }\n    `;\n    }\n}\n//# sourceMappingURL=unpack_gpu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/unpack_gpu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/version.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/version.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export version [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => /* binding */ version\n/* harmony export */ });\n/** @license See the LICENSE file. */\n// This code is auto-generated, do not modify this file!\nconst version = '3.2.0';\n\n//# sourceMappingURL=version.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/version.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export GPGPUContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_context.js .GPGPUContext */
/*! export MathBackendWebGL [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/backend_webgl.js .MathBackendWebGL */
/*! export forceHalfFloat [provided] [no usage info] [missing usage info prevents renaming] */
/*! export gpgpu_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_util.js */
/*!   export bindVertexProgramAttributeStreams [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createBufferFromOutputTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFloat16MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFloat16PackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFloat32MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createIndexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createPackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createUnsignedBytesMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createVertexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createVertexShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export downloadByteEncodedFloatMatrixFromOutputTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export downloadFloat32MatrixFromBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export downloadMatrixFromPackedOutputTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export downloadPackedMatrixFromBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForFloat16MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForFloat16PackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForFloat32MatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForPackedMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getInternalFormatForUnsignedBytesMatrixTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export uploadDenseMatrixToTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export uploadPixelDataToTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export setWebGLContext [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/canvas_util.js .setWebGLContext */
/*! export webgl_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js */
/*!   export assertNotComplex [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindCanvasToFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindColorTextureToFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindTextureToProgramUniformSampler [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindTextureUnit [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export bindVertexBufferToProgramAttribute [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export callAndCheck [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export canBeRepresented [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFragmentShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createStaticIndexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createStaticVertexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createVertexShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getBatchDim [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getExtensionOrThrow [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getFramebufferErrorMessage [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getMaxTexturesInShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getNumChannels [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getProgramUniformLocation [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getProgramUniformLocationOrThrow [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getRowsCols [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getShapeAs3D [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getTextureShapeFromLogicalShape [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getWebGLDisjointQueryTimerVersion [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getWebGLErrorMessage [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getWebGLMaxTextureSize [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export hasExtension [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isCapableOfRenderingToFloatTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isDownloadFloatTextureEnabled [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isReshapeFree [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isWebGLFenceEnabled [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isWebGLVersionEnabled [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export linkProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export resetMaxTextureSize [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export resetMaxTexturesInShader [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export unbindColorTextureFromFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export unbindTextureUnit [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export validateFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export validateProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export validateTextureSize [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MathBackendWebGL\": () => /* reexport safe */ _backend_webgl__WEBPACK_IMPORTED_MODULE_1__.MathBackendWebGL,\n/* harmony export */   \"setWebGLContext\": () => /* reexport safe */ _canvas_util__WEBPACK_IMPORTED_MODULE_2__.setWebGLContext,\n/* harmony export */   \"GPGPUContext\": () => /* reexport safe */ _gpgpu_context__WEBPACK_IMPORTED_MODULE_3__.GPGPUContext,\n/* harmony export */   \"gpgpu_util\": () => /* reexport module object */ _gpgpu_util__WEBPACK_IMPORTED_MODULE_4__,\n/* harmony export */   \"webgl_util\": () => /* reexport module object */ _webgl_util__WEBPACK_IMPORTED_MODULE_5__,\n/* harmony export */   \"forceHalfFloat\": () => /* binding */ forceHalfFloat\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _gpgpu_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./gpgpu_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_util.js\");\n/* harmony import */ var _webgl_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./webgl_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js\");\n/* harmony import */ var _backend_webgl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./backend_webgl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/backend_webgl.js\");\n/* harmony import */ var _canvas_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./canvas_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/canvas_util.js\");\n/* harmony import */ var _gpgpu_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./gpgpu_context */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/gpgpu_context.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n// WebGL specific utils.\n\n/**\n * Enforce use of half precision textures if available on the platform.\n *\n * @doc {heading: 'Environment', namespace: 'webgl'}\n */\nfunction forceHalfFloat() {\n    (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().set('WEBGL_FORCE_F16_TEXTURES', true);\n}\n//# sourceMappingURL=webgl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export assertNotComplex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bindCanvasToFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bindColorTextureToFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bindTextureToProgramUniformSampler [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bindTextureUnit [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bindVertexBufferToProgramAttribute [provided] [no usage info] [missing usage info prevents renaming] */
/*! export callAndCheck [provided] [no usage info] [missing usage info prevents renaming] */
/*! export canBeRepresented [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createFragmentShader [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createStaticIndexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createStaticVertexBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createVertexShader [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getBatchDim [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getExtensionOrThrow [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getFramebufferErrorMessage [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getMaxTexturesInShader [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getNumChannels [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getProgramUniformLocation [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getProgramUniformLocationOrThrow [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getRowsCols [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getShapeAs3D [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTextureShapeFromLogicalShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getWebGLDisjointQueryTimerVersion [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getWebGLErrorMessage [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getWebGLMaxTextureSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hasExtension [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isCapableOfRenderingToFloatTexture [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isDownloadFloatTextureEnabled [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isReshapeFree [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isWebGLFenceEnabled [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isWebGLVersionEnabled [provided] [no usage info] [missing usage info prevents renaming] */
/*! export linkProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resetMaxTextureSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resetMaxTexturesInShader [provided] [no usage info] [missing usage info prevents renaming] */
/*! export unbindColorTextureFromFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export unbindTextureUnit [provided] [no usage info] [missing usage info prevents renaming] */
/*! export validateFramebuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export validateProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export validateTextureSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"callAndCheck\": () => /* binding */ callAndCheck,\n/* harmony export */   \"canBeRepresented\": () => /* binding */ canBeRepresented,\n/* harmony export */   \"getWebGLErrorMessage\": () => /* binding */ getWebGLErrorMessage,\n/* harmony export */   \"getExtensionOrThrow\": () => /* binding */ getExtensionOrThrow,\n/* harmony export */   \"createVertexShader\": () => /* binding */ createVertexShader,\n/* harmony export */   \"createFragmentShader\": () => /* binding */ createFragmentShader,\n/* harmony export */   \"createProgram\": () => /* binding */ createProgram,\n/* harmony export */   \"linkProgram\": () => /* binding */ linkProgram,\n/* harmony export */   \"validateProgram\": () => /* binding */ validateProgram,\n/* harmony export */   \"createStaticVertexBuffer\": () => /* binding */ createStaticVertexBuffer,\n/* harmony export */   \"createStaticIndexBuffer\": () => /* binding */ createStaticIndexBuffer,\n/* harmony export */   \"getNumChannels\": () => /* binding */ getNumChannels,\n/* harmony export */   \"createTexture\": () => /* binding */ createTexture,\n/* harmony export */   \"validateTextureSize\": () => /* binding */ validateTextureSize,\n/* harmony export */   \"createFramebuffer\": () => /* binding */ createFramebuffer,\n/* harmony export */   \"bindVertexBufferToProgramAttribute\": () => /* binding */ bindVertexBufferToProgramAttribute,\n/* harmony export */   \"bindTextureUnit\": () => /* binding */ bindTextureUnit,\n/* harmony export */   \"unbindTextureUnit\": () => /* binding */ unbindTextureUnit,\n/* harmony export */   \"getProgramUniformLocationOrThrow\": () => /* binding */ getProgramUniformLocationOrThrow,\n/* harmony export */   \"getProgramUniformLocation\": () => /* binding */ getProgramUniformLocation,\n/* harmony export */   \"bindTextureToProgramUniformSampler\": () => /* binding */ bindTextureToProgramUniformSampler,\n/* harmony export */   \"bindCanvasToFramebuffer\": () => /* binding */ bindCanvasToFramebuffer,\n/* harmony export */   \"bindColorTextureToFramebuffer\": () => /* binding */ bindColorTextureToFramebuffer,\n/* harmony export */   \"unbindColorTextureFromFramebuffer\": () => /* binding */ unbindColorTextureFromFramebuffer,\n/* harmony export */   \"validateFramebuffer\": () => /* binding */ validateFramebuffer,\n/* harmony export */   \"getFramebufferErrorMessage\": () => /* binding */ getFramebufferErrorMessage,\n/* harmony export */   \"getBatchDim\": () => /* binding */ getBatchDim,\n/* harmony export */   \"getRowsCols\": () => /* binding */ getRowsCols,\n/* harmony export */   \"getShapeAs3D\": () => /* binding */ getShapeAs3D,\n/* harmony export */   \"getTextureShapeFromLogicalShape\": () => /* binding */ getTextureShapeFromLogicalShape,\n/* harmony export */   \"isReshapeFree\": () => /* binding */ isReshapeFree,\n/* harmony export */   \"getWebGLMaxTextureSize\": () => /* binding */ getWebGLMaxTextureSize,\n/* harmony export */   \"resetMaxTextureSize\": () => /* binding */ resetMaxTextureSize,\n/* harmony export */   \"resetMaxTexturesInShader\": () => /* binding */ resetMaxTexturesInShader,\n/* harmony export */   \"getMaxTexturesInShader\": () => /* binding */ getMaxTexturesInShader,\n/* harmony export */   \"getWebGLDisjointQueryTimerVersion\": () => /* binding */ getWebGLDisjointQueryTimerVersion,\n/* harmony export */   \"hasExtension\": () => /* binding */ hasExtension,\n/* harmony export */   \"isWebGLVersionEnabled\": () => /* binding */ isWebGLVersionEnabled,\n/* harmony export */   \"isCapableOfRenderingToFloatTexture\": () => /* binding */ isCapableOfRenderingToFloatTexture,\n/* harmony export */   \"isDownloadFloatTextureEnabled\": () => /* binding */ isDownloadFloatTextureEnabled,\n/* harmony export */   \"isWebGLFenceEnabled\": () => /* binding */ isWebGLFenceEnabled,\n/* harmony export */   \"assertNotComplex\": () => /* binding */ assertNotComplex\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _canvas_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./canvas_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/canvas_util.js\");\n/* harmony import */ var _tex_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tex_util */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/tex_util.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction callAndCheck(gl, func) {\n    const returnValue = func();\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('DEBUG')) {\n        checkWebGLError(gl);\n    }\n    return returnValue;\n}\nfunction checkWebGLError(gl) {\n    const error = gl.getError();\n    if (error !== gl.NO_ERROR) {\n        throw new Error('WebGL Error: ' + getWebGLErrorMessage(gl, error));\n    }\n}\n// https://en.wikipedia.org/wiki/Half-precision_floating-point_format\nconst MIN_FLOAT16 = 5.96e-8;\nconst MAX_FLOAT16 = 65504;\nfunction canBeRepresented(num) {\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('WEBGL_RENDER_FLOAT32_ENABLED') || num === 0 ||\n        (MIN_FLOAT16 < Math.abs(num) && Math.abs(num) < MAX_FLOAT16)) {\n        return true;\n    }\n    return false;\n}\nfunction getWebGLErrorMessage(gl, status) {\n    switch (status) {\n        case gl.NO_ERROR:\n            return 'NO_ERROR';\n        case gl.INVALID_ENUM:\n            return 'INVALID_ENUM';\n        case gl.INVALID_VALUE:\n            return 'INVALID_VALUE';\n        case gl.INVALID_OPERATION:\n            return 'INVALID_OPERATION';\n        case gl.INVALID_FRAMEBUFFER_OPERATION:\n            return 'INVALID_FRAMEBUFFER_OPERATION';\n        case gl.OUT_OF_MEMORY:\n            return 'OUT_OF_MEMORY';\n        case gl.CONTEXT_LOST_WEBGL:\n            return 'CONTEXT_LOST_WEBGL';\n        default:\n            return `Unknown error code ${status}`;\n    }\n}\nfunction getExtensionOrThrow(gl, extensionName) {\n    return throwIfNull(gl, () => gl.getExtension(extensionName), 'Extension \"' + extensionName + '\" not supported on this browser.');\n}\nfunction createVertexShader(gl, vertexShaderSource) {\n    const vertexShader = throwIfNull(gl, () => gl.createShader(gl.VERTEX_SHADER), 'Unable to create vertex WebGLShader.');\n    callAndCheck(gl, () => gl.shaderSource(vertexShader, vertexShaderSource));\n    callAndCheck(gl, () => gl.compileShader(vertexShader));\n    if (gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS) === false) {\n        console.log(gl.getShaderInfoLog(vertexShader));\n        throw new Error('Failed to compile vertex shader.');\n    }\n    return vertexShader;\n}\nfunction createFragmentShader(gl, fragmentShaderSource) {\n    const fragmentShader = throwIfNull(gl, () => gl.createShader(gl.FRAGMENT_SHADER), 'Unable to create fragment WebGLShader.');\n    callAndCheck(gl, () => gl.shaderSource(fragmentShader, fragmentShaderSource));\n    callAndCheck(gl, () => gl.compileShader(fragmentShader));\n    if (gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS) === false) {\n        logShaderSourceAndInfoLog(fragmentShaderSource, gl.getShaderInfoLog(fragmentShader));\n        throw new Error('Failed to compile fragment shader.');\n    }\n    return fragmentShader;\n}\nconst lineNumberRegex = /ERROR: [0-9]+:([0-9]+):/g;\nfunction logShaderSourceAndInfoLog(shaderSource, shaderInfoLog) {\n    const lineNumberRegexResult = lineNumberRegex.exec(shaderInfoLog);\n    if (lineNumberRegexResult == null) {\n        console.log(`Couldn't parse line number in error: ${shaderInfoLog}`);\n        console.log(shaderSource);\n        return;\n    }\n    const lineNumber = +lineNumberRegexResult[1];\n    const shaderLines = shaderSource.split('\\n');\n    const pad = shaderLines.length.toString().length + 2;\n    const linesWithLineNumbers = shaderLines.map((line, lineNumber) => _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.rightPad((lineNumber + 1).toString(), pad) + line);\n    let maxLineLength = 0;\n    for (let i = 0; i < linesWithLineNumbers.length; i++) {\n        maxLineLength = Math.max(linesWithLineNumbers[i].length, maxLineLength);\n    }\n    const beforeErrorLines = linesWithLineNumbers.slice(0, lineNumber - 1);\n    const errorLine = linesWithLineNumbers.slice(lineNumber - 1, lineNumber);\n    const afterErrorLines = linesWithLineNumbers.slice(lineNumber);\n    console.log(beforeErrorLines.join('\\n'));\n    console.log(shaderInfoLog.split('\\n')[0]);\n    console.log(`%c ${_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.rightPad(errorLine[0], maxLineLength)}`, 'border:1px solid red; background-color:#e3d2d2; color:#a61717');\n    console.log(afterErrorLines.join('\\n'));\n}\nfunction createProgram(gl) {\n    return throwIfNull(gl, () => gl.createProgram(), 'Unable to create WebGLProgram.');\n}\nfunction linkProgram(gl, program) {\n    callAndCheck(gl, () => gl.linkProgram(program));\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Failed to link vertex and fragment shaders.');\n    }\n}\nfunction validateProgram(gl, program) {\n    callAndCheck(gl, () => gl.validateProgram(program));\n    if (gl.getProgramParameter(program, gl.VALIDATE_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Shader program validation failed.');\n    }\n}\nfunction createStaticVertexBuffer(gl, data) {\n    const buffer = throwIfNull(gl, () => gl.createBuffer(), 'Unable to create WebGLBuffer');\n    callAndCheck(gl, () => gl.bindBuffer(gl.ARRAY_BUFFER, buffer));\n    callAndCheck(gl, () => gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW));\n    return buffer;\n}\nfunction createStaticIndexBuffer(gl, data) {\n    const buffer = throwIfNull(gl, () => gl.createBuffer(), 'Unable to create WebGLBuffer');\n    callAndCheck(gl, () => gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer));\n    callAndCheck(gl, () => gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW));\n    return buffer;\n}\nfunction getNumChannels() {\n    if ((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_VERSION') === 2) {\n        return 1;\n    }\n    return 4;\n}\nfunction createTexture(gl) {\n    return throwIfNull(gl, () => gl.createTexture(), 'Unable to create WebGLTexture.');\n}\nfunction validateTextureSize(width, height) {\n    const maxTextureSize = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_MAX_TEXTURE_SIZE');\n    if ((width <= 0) || (height <= 0)) {\n        const requested = `[${width}x${height}]`;\n        throw new Error('Requested texture size ' + requested + ' is invalid.');\n    }\n    if ((width > maxTextureSize) || (height > maxTextureSize)) {\n        const requested = `[${width}x${height}]`;\n        const max = `[${maxTextureSize}x${maxTextureSize}]`;\n        throw new Error('Requested texture size ' + requested +\n            ' greater than WebGL maximum on this browser / GPU ' + max + '.');\n    }\n}\nfunction createFramebuffer(gl) {\n    return throwIfNull(gl, () => gl.createFramebuffer(), 'Unable to create WebGLFramebuffer.');\n}\nfunction bindVertexBufferToProgramAttribute(gl, program, attribute, buffer, arrayEntriesPerItem, itemStrideInBytes, itemOffsetInBytes) {\n    const loc = gl.getAttribLocation(program, attribute);\n    if (loc === -1) {\n        // The GPU compiler decided to strip out this attribute because it's unused,\n        // thus no need to bind.\n        return false;\n    }\n    callAndCheck(gl, () => gl.bindBuffer(gl.ARRAY_BUFFER, buffer));\n    callAndCheck(gl, () => gl.vertexAttribPointer(loc, arrayEntriesPerItem, gl.FLOAT, false, itemStrideInBytes, itemOffsetInBytes));\n    callAndCheck(gl, () => gl.enableVertexAttribArray(loc));\n    return true;\n}\nfunction bindTextureUnit(gl, texture, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, () => gl.activeTexture(gl.TEXTURE0 + textureUnit));\n    callAndCheck(gl, () => gl.bindTexture(gl.TEXTURE_2D, texture));\n}\nfunction unbindTextureUnit(gl, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, () => gl.activeTexture(gl.TEXTURE0 + textureUnit));\n    callAndCheck(gl, () => gl.bindTexture(gl.TEXTURE_2D, null));\n}\nfunction getProgramUniformLocationOrThrow(gl, program, uniformName) {\n    return throwIfNull(gl, () => gl.getUniformLocation(program, uniformName), 'uniform \"' + uniformName + '\" not present in program.');\n}\nfunction getProgramUniformLocation(gl, program, uniformName) {\n    return gl.getUniformLocation(program, uniformName);\n}\nfunction bindTextureToProgramUniformSampler(gl, texture, uniformSamplerLocation, textureUnit) {\n    callAndCheck(gl, () => bindTextureUnit(gl, texture, textureUnit));\n    callAndCheck(gl, () => gl.uniform1i(uniformSamplerLocation, textureUnit));\n}\nfunction bindCanvasToFramebuffer(gl) {\n    callAndCheck(gl, () => gl.bindFramebuffer(gl.FRAMEBUFFER, null));\n    callAndCheck(gl, () => gl.viewport(0, 0, gl.canvas.width, gl.canvas.height));\n    callAndCheck(gl, () => gl.scissor(0, 0, gl.canvas.width, gl.canvas.height));\n}\nfunction bindColorTextureToFramebuffer(gl, texture, framebuffer) {\n    callAndCheck(gl, () => gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer));\n    callAndCheck(gl, () => gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0));\n}\nfunction unbindColorTextureFromFramebuffer(gl, framebuffer) {\n    callAndCheck(gl, () => gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer));\n    callAndCheck(gl, () => gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0));\n}\nfunction validateFramebuffer(gl) {\n    const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\n        throw new Error('Error binding framebuffer: ' + getFramebufferErrorMessage(gl, status));\n    }\n}\nfunction getFramebufferErrorMessage(gl, status) {\n    switch (status) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            return 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS';\n        case gl.FRAMEBUFFER_UNSUPPORTED:\n            return 'FRAMEBUFFER_UNSUPPORTED';\n        default:\n            return `unknown error ${status}`;\n    }\n}\nfunction throwIfNull(gl, returnTOrNull, failureMessage) {\n    const tOrNull = callAndCheck(gl, () => returnTOrNull());\n    if (tOrNull == null) {\n        throw new Error(failureMessage);\n    }\n    return tOrNull;\n}\nfunction validateTextureUnit(gl, textureUnit) {\n    const maxTextureUnit = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1;\n    const glTextureUnit = textureUnit + gl.TEXTURE0;\n    if (glTextureUnit < gl.TEXTURE0 || glTextureUnit > maxTextureUnit) {\n        const textureUnitRange = `[gl.TEXTURE0, gl.TEXTURE${maxTextureUnit}]`;\n        throw new Error(`textureUnit must be in ${textureUnitRange}.`);\n    }\n}\nfunction getBatchDim(shape, dimsToSkip = 2) {\n    return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\nfunction getRowsCols(shape) {\n    if (shape.length === 0) {\n        throw Error('Cannot get rows and columns of an empty shape array.');\n    }\n    return [\n        shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]\n    ];\n}\nfunction getShapeAs3D(shape) {\n    let shapeAs3D = [1, 1, 1];\n    const isScalar = shape.length === 0 || (shape.length === 1 && shape[0] === 1);\n    if (!isScalar) {\n        shapeAs3D =\n            [getBatchDim(shape), ...getRowsCols(shape)];\n    }\n    return shapeAs3D;\n}\nfunction getTextureShapeFromLogicalShape(logShape, isPacked = false) {\n    let maxTexSize = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().getNumber('WEBGL_MAX_TEXTURE_SIZE');\n    if (isPacked) {\n        maxTexSize = maxTexSize * 2;\n        // This logic ensures we accurately count the number of packed texels needed\n        // to accommodate the tensor. We can only pack values in the same texel if\n        // they are from adjacent pairs of rows/cols within the same batch. So if a\n        // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n        // fact that the texels containing the third row are half empty.\n        logShape = logShape.map((d, i) => i >= logShape.length - 2 ?\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.nearestLargerEven(logShape[i]) :\n            logShape[i]);\n        // Packed texture height is at least 2 (the channel height of a single\n        // texel).\n        if (logShape.length === 1) {\n            logShape = [2, logShape[0]];\n        }\n    }\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n        const squeezeResult = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.squeezeShape(logShape);\n        logShape = squeezeResult.newShape;\n    }\n    let size = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTexSize) {\n        return [1, size];\n    }\n    else if (logShape.length === 2 && logShape[0] <= maxTexSize &&\n        logShape[1] <= maxTexSize) {\n        return logShape;\n    }\n    else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTexSize &&\n        logShape[2] <= maxTexSize) {\n        return [logShape[0] * logShape[1], logShape[2]];\n    }\n    else if (logShape.length === 3 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2]];\n    }\n    else if (logShape.length === 4 &&\n        logShape[0] * logShape[1] * logShape[2] <= maxTexSize &&\n        logShape[3] <= maxTexSize) {\n        return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    }\n    else if (logShape.length === 4 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    }\n    else {\n        if (isPacked) {\n            // For packed textures size equals the number of channels required to\n            // accommodate the texture data. However in order to squarify such that\n            // inner dimensions stay even, we rewrite size to equal the number of\n            // texels. Then in the return statement we rehydrate the squarified\n            // dimensions to channel units.\n            const batchDim = getBatchDim(logShape);\n            let rows = 2, cols = 2;\n            if (logShape.length) {\n                [rows, cols] = getRowsCols(logShape);\n            }\n            size = batchDim * (rows / 2) * (cols / 2);\n            return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeToSquarishShape(size).map(d => d * 2);\n        }\n        return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.sizeToSquarishShape(size);\n    }\n}\nfunction isEven(n) {\n    return n % 2 === 0;\n}\n/**\n * This determines whether reshaping a packed texture requires rearranging\n * the data within the texture, assuming 2x2 packing.\n */\nfunction isReshapeFree(shape1, shape2) {\n    shape1 = shape1.slice(-2);\n    shape2 = shape2.slice(-2);\n    if (_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(shape1, shape2)) {\n        return true;\n    }\n    if (!shape1.length || !shape2.length) { // One of the shapes is a scalar.\n        return true;\n    }\n    if (shape1[0] === 0 || shape1[1] === 0 || shape2[0] === 0 ||\n        shape2[1] === 0) {\n        return true;\n    }\n    if (shape1.length !== shape2.length) { // One of the shapes is a vector.\n        const shape1Cols = shape1.slice(-1)[0];\n        const shape2Cols = shape2.slice(-1)[0];\n        if (shape1Cols === shape2Cols) {\n            return true;\n        }\n        if (isEven(shape1Cols) && isEven(shape2Cols) &&\n            (shape1[0] === 1 || shape2[0] === 1)) {\n            return true;\n        }\n    }\n    return shape1[1] === shape2[1] && isEven(shape1[0]) && isEven(shape2[0]);\n}\n// We cache webgl params because the environment gets reset between\n// unit tests and we don't want to constantly query the WebGLContext for\n// MAX_TEXTURE_SIZE.\nlet MAX_TEXTURE_SIZE;\nlet MAX_TEXTURES_IN_SHADER;\nfunction getWebGLMaxTextureSize(webGLVersion) {\n    if (MAX_TEXTURE_SIZE == null) {\n        const gl = (0,_canvas_util__WEBPACK_IMPORTED_MODULE_1__.getWebGLContext)(webGLVersion);\n        MAX_TEXTURE_SIZE = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    }\n    return MAX_TEXTURE_SIZE;\n}\nfunction resetMaxTextureSize() {\n    MAX_TEXTURE_SIZE = null;\n}\nfunction resetMaxTexturesInShader() {\n    MAX_TEXTURES_IN_SHADER = null;\n}\nfunction getMaxTexturesInShader(webGLVersion) {\n    if (MAX_TEXTURES_IN_SHADER == null) {\n        const gl = (0,_canvas_util__WEBPACK_IMPORTED_MODULE_1__.getWebGLContext)(webGLVersion);\n        MAX_TEXTURES_IN_SHADER = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    }\n    // We cap at 16 to avoid spurious runtime \"memory exhausted\" error.\n    return Math.min(16, MAX_TEXTURES_IN_SHADER);\n}\nfunction getWebGLDisjointQueryTimerVersion(webGLVersion) {\n    if (webGLVersion === 0) {\n        return 0;\n    }\n    let queryTimerVersion;\n    const gl = (0,_canvas_util__WEBPACK_IMPORTED_MODULE_1__.getWebGLContext)(webGLVersion);\n    if (hasExtension(gl, 'EXT_disjoint_timer_query_webgl2') &&\n        webGLVersion === 2) {\n        queryTimerVersion = 2;\n    }\n    else if (hasExtension(gl, 'EXT_disjoint_timer_query')) {\n        queryTimerVersion = 1;\n    }\n    else {\n        queryTimerVersion = 0;\n    }\n    return queryTimerVersion;\n}\nfunction hasExtension(gl, extensionName) {\n    const ext = gl.getExtension(extensionName);\n    return ext != null;\n}\nfunction isWebGLVersionEnabled(webGLVersion) {\n    try {\n        const gl = (0,_canvas_util__WEBPACK_IMPORTED_MODULE_1__.getWebGLContext)(webGLVersion);\n        if (gl != null) {\n            return true;\n        }\n    }\n    catch (e) {\n        console.log('Error when getting WebGL context: ', e);\n        return false;\n    }\n    return false;\n}\nfunction isCapableOfRenderingToFloatTexture(webGLVersion) {\n    if (webGLVersion === 0) {\n        return false;\n    }\n    const gl = (0,_canvas_util__WEBPACK_IMPORTED_MODULE_1__.getWebGLContext)(webGLVersion);\n    if (webGLVersion === 1) {\n        if (!hasExtension(gl, 'OES_texture_float')) {\n            return false;\n        }\n    }\n    else {\n        if (!hasExtension(gl, 'EXT_color_buffer_float')) {\n            return false;\n        }\n    }\n    const isFrameBufferComplete = createFloatTextureAndBindToFramebuffer(gl);\n    return isFrameBufferComplete;\n}\n/**\n * Check if we can download values from a float/half-float texture.\n *\n * Note that for performance reasons we use binding a texture to a framebuffer\n * as a proxy for ability to download float values later using readPixels. The\n * texture params of this texture will not match those in readPixels exactly\n * but if we are unable to bind some kind of float texture to the frameBuffer\n * then we definitely will not be able to read float values from it.\n */\nfunction isDownloadFloatTextureEnabled(webGLVersion) {\n    if (webGLVersion === 0) {\n        return false;\n    }\n    const gl = (0,_canvas_util__WEBPACK_IMPORTED_MODULE_1__.getWebGLContext)(webGLVersion);\n    if (webGLVersion === 1) {\n        if (!hasExtension(gl, 'OES_texture_float')) {\n            return false;\n        }\n        if (!hasExtension(gl, 'WEBGL_color_buffer_float')) {\n            return false;\n        }\n    }\n    else {\n        if (hasExtension(gl, 'EXT_color_buffer_float')) {\n            return createFloatTextureAndBindToFramebuffer(gl);\n        }\n        const COLOR_BUFFER_HALF_FLOAT = 'EXT_color_buffer_half_float';\n        if (hasExtension(gl, COLOR_BUFFER_HALF_FLOAT)) {\n            const textureHalfFloatExtension = gl.getExtension(COLOR_BUFFER_HALF_FLOAT);\n            return createHalfFloatTextureAndBindToFramebuffer(gl, textureHalfFloatExtension);\n        }\n        return false;\n    }\n    const isFrameBufferComplete = createFloatTextureAndBindToFramebuffer(gl);\n    return isFrameBufferComplete;\n}\nfunction createFloatTextureAndBindToFramebuffer(gl) {\n    const texConfig = (0,_tex_util__WEBPACK_IMPORTED_MODULE_2__.getTextureConfig)(gl);\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const width = 1;\n    const height = 1;\n    gl.texImage2D(gl.TEXTURE_2D, 0, texConfig.internalFormatFloat, width, height, 0, texConfig.textureFormatFloat, texConfig.textureTypeFloat, null);\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    const isFrameBufferComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isFrameBufferComplete;\n}\nfunction createHalfFloatTextureAndBindToFramebuffer(\n// tslint:disable-next-line:no-any\ngl, textureHalfFloatExtension) {\n    const texConfig = (0,_tex_util__WEBPACK_IMPORTED_MODULE_2__.getTextureConfig)(gl, textureHalfFloatExtension);\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const width = 1;\n    const height = 1;\n    gl.texImage2D(gl.TEXTURE_2D, 0, texConfig.internalFormatHalfFloat, width, height, 0, texConfig.textureFormatFloat, texConfig.textureTypeHalfFloat, null);\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    const isFrameBufferComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isFrameBufferComplete;\n}\nfunction isWebGLFenceEnabled(webGLVersion) {\n    if (webGLVersion !== 2) {\n        return false;\n    }\n    const gl = (0,_canvas_util__WEBPACK_IMPORTED_MODULE_1__.getWebGLContext)(webGLVersion);\n    // tslint:disable-next-line:no-any\n    const isEnabled = gl.fenceSync != null;\n    return isEnabled;\n}\nfunction assertNotComplex(tensor, opName) {\n    if (!Array.isArray(tensor)) {\n        tensor = [tensor];\n    }\n    tensor.forEach(t => {\n        if (t != null) {\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(t.dtype !== 'complex64', () => `${opName} does not support complex64 tensors ` +\n                'in the WebGL backend.');\n        }\n    });\n}\n//# sourceMappingURL=webgl_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-backend-webgl/dist/webgl_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/data/compiled_api.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/data/compiled_api.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export DataType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SaverDef [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DataType\": () => /* binding */ DataType,\n/* harmony export */   \"SaverDef\": () => /* binding */ SaverDef\n/* harmony export */ });\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n/** DataType enum. */\nvar DataType;\n(function (DataType) {\n    DataType[DataType[\"DT_INVALID\"] = 0] = \"DT_INVALID\";\n    DataType[DataType[\"DT_FLOAT\"] = 1] = \"DT_FLOAT\";\n    DataType[DataType[\"DT_DOUBLE\"] = 2] = \"DT_DOUBLE\";\n    DataType[DataType[\"DT_INT32\"] = 3] = \"DT_INT32\";\n    DataType[DataType[\"DT_UINT8\"] = 4] = \"DT_UINT8\";\n    DataType[DataType[\"DT_INT16\"] = 5] = \"DT_INT16\";\n    DataType[DataType[\"DT_INT8\"] = 6] = \"DT_INT8\";\n    DataType[DataType[\"DT_STRING\"] = 7] = \"DT_STRING\";\n    DataType[DataType[\"DT_COMPLEX64\"] = 8] = \"DT_COMPLEX64\";\n    DataType[DataType[\"DT_INT64\"] = 9] = \"DT_INT64\";\n    DataType[DataType[\"DT_BOOL\"] = 10] = \"DT_BOOL\";\n    DataType[DataType[\"DT_QINT8\"] = 11] = \"DT_QINT8\";\n    DataType[DataType[\"DT_QUINT8\"] = 12] = \"DT_QUINT8\";\n    DataType[DataType[\"DT_QINT32\"] = 13] = \"DT_QINT32\";\n    DataType[DataType[\"DT_BFLOAT16\"] = 14] = \"DT_BFLOAT16\";\n    DataType[DataType[\"DT_FLOAT_REF\"] = 101] = \"DT_FLOAT_REF\";\n    DataType[DataType[\"DT_DOUBLE_REF\"] = 102] = \"DT_DOUBLE_REF\";\n    DataType[DataType[\"DT_INT32_REF\"] = 103] = \"DT_INT32_REF\";\n    DataType[DataType[\"DT_UINT8_REF\"] = 104] = \"DT_UINT8_REF\";\n    DataType[DataType[\"DT_INT16_REF\"] = 105] = \"DT_INT16_REF\";\n    DataType[DataType[\"DT_INT8_REF\"] = 106] = \"DT_INT8_REF\";\n    DataType[DataType[\"DT_STRING_REF\"] = 107] = \"DT_STRING_REF\";\n    DataType[DataType[\"DT_COMPLEX64_REF\"] = 108] = \"DT_COMPLEX64_REF\";\n    DataType[DataType[\"DT_INT64_REF\"] = 109] = \"DT_INT64_REF\";\n    DataType[DataType[\"DT_BOOL_REF\"] = 110] = \"DT_BOOL_REF\";\n    DataType[DataType[\"DT_QINT8_REF\"] = 111] = \"DT_QINT8_REF\";\n    DataType[DataType[\"DT_QUINT8_REF\"] = 112] = \"DT_QUINT8_REF\";\n    DataType[DataType[\"DT_QINT32_REF\"] = 113] = \"DT_QINT32_REF\";\n    DataType[DataType[\"DT_BFLOAT16_REF\"] = 114] = \"DT_BFLOAT16_REF\";\n})(DataType || (DataType = {}));\nvar SaverDef;\n(function (SaverDef) {\n    /** CheckpointFormatVersion enum. */\n    let CheckpointFormatVersion;\n    (function (CheckpointFormatVersion) {\n        CheckpointFormatVersion[CheckpointFormatVersion[\"LEGACY\"] = 0] = \"LEGACY\";\n        CheckpointFormatVersion[CheckpointFormatVersion[\"V1\"] = 1] = \"V1\";\n        CheckpointFormatVersion[CheckpointFormatVersion[\"V2\"] = 2] = \"V2\";\n    })(CheckpointFormatVersion = SaverDef.CheckpointFormatVersion || (SaverDef.CheckpointFormatVersion = {}));\n})(SaverDef || (SaverDef = {}));\n//# sourceMappingURL=compiled_api.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/data/compiled_api.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/executor/execution_context.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/executor/execution_context.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export ExecutionContext [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ExecutionContext\": () => /* binding */ ExecutionContext\n/* harmony export */ });\n/**\n * ExecutionContext captures the runtime environment of the node. It keeps\n * track of the current frame and iteration for the control flow ops.\n *\n * For example, typical Dynamic RNN model may contain loops, for which\n * TensorFlow will generate graphs with Enter/Exit nodes to control the\n * current execution frame, and NextIteration Nodes for iteration id increment.\n * For model with branch logic, TensorFLow will generate Switch/Merge ops.\n */\nclass ExecutionContext {\n    constructor(weightMap = {}, tensorArrayMap = {}, tensorListMap = {}, functionMap = {}) {\n        this.weightMap = weightMap;\n        this.tensorArrayMap = tensorArrayMap;\n        this.tensorListMap = tensorListMap;\n        this.functionMap = functionMap;\n        this.rootContext = { id: 0, frameName: '', iterationId: 0 };\n        this.contexts = [this.rootContext];\n        this.lastId = 0;\n        this.generateCurrentContextIds();\n    }\n    newFrame(id, frameName) {\n        return { id, frameName, iterationId: 0 };\n    }\n    /**\n     * Set the current context\n     * @param contexts: ExecutionContextInfo[] the current path of execution\n     * frames\n     */\n    set currentContext(contexts) {\n        if (this.contexts !== contexts) {\n            this.contexts = contexts;\n            this.generateCurrentContextIds();\n        }\n    }\n    get currentContext() {\n        return this.contexts;\n    }\n    /**\n     * Returns the current context in string format.\n     */\n    get currentContextId() {\n        return this._currentContextIds[0];\n    }\n    /**\n     * Returns the current context and all parent contexts in string format.\n     * This allow access to the nodes in the current and parent frames.\n     */\n    get currentContextIds() {\n        return this._currentContextIds;\n    }\n    generateCurrentContextIds() {\n        const names = [];\n        for (let i = 0; i < this.contexts.length - 1; i++) {\n            const contexts = this.contexts.slice(0, this.contexts.length - i);\n            names.push(this.contextIdforContexts(contexts));\n        }\n        names.push('');\n        this._currentContextIds = names;\n    }\n    contextIdforContexts(contexts) {\n        return contexts ?\n            contexts\n                .map(context => (context.id === 0 && context.iterationId === 0) ?\n                '' :\n                `${context.frameName}-${context.iterationId}`)\n                .join('/') :\n            '';\n    }\n    /**\n     * Enter a new frame, a new context is pushed on the current context list.\n     * @param frameId new frame id\n     */\n    enterFrame(frameId) {\n        if (this.contexts) {\n            this.lastId++;\n            this.contexts = this.contexts.slice();\n            this.contexts.push(this.newFrame(this.lastId, frameId));\n            this._currentContextIds.unshift(this.contextIdforContexts(this.contexts));\n        }\n    }\n    /**\n     * Exit the current frame, the last context is removed from the current\n     * context list.\n     */\n    exitFrame() {\n        if (this.contexts && this.contexts.length > 1) {\n            this.contexts = this.contexts.slice();\n            this.contexts.splice(-1);\n            this.currentContextIds.shift();\n        }\n        else {\n            throw new Error('Cannot exit frame, the context is empty');\n        }\n    }\n    /**\n     * Enter the next iteration of a loop, the iteration id of last context is\n     * increased.\n     */\n    nextIteration() {\n        if (this.contexts && this.contexts.length > 0) {\n            this.contexts = this.contexts.slice();\n            this.lastId++;\n            const context = Object.assign({}, this.contexts[this.contexts.length - 1]);\n            context.iterationId += 1;\n            context.id = this.lastId;\n            this.contexts.splice(-1, 1, context);\n            this._currentContextIds.splice(0, 1, this.contextIdforContexts(this.contexts));\n        }\n        else {\n            throw new Error('Cannot increase frame iteration, the context is empty');\n        }\n    }\n    getWeight(name) {\n        return this.weightMap[name];\n    }\n    addTensorArray(tensorArray) {\n        this.tensorArrayMap[tensorArray.id] = tensorArray;\n    }\n    getTensorArray(id) {\n        return this.tensorArrayMap[id];\n    }\n    addTensorList(tensorList) {\n        this.tensorListMap[tensorList.id] = tensorList;\n    }\n    getTensorList(id) {\n        return this.tensorListMap[id];\n    }\n    dispose(keepIds) {\n        for (const key in this.tensorArrayMap) {\n            this.tensorArrayMap[key].clearAndClose(keepIds);\n        }\n        for (const key in this.tensorListMap) {\n            this.tensorListMap[key].clearAndClose(keepIds);\n        }\n    }\n}\n//# sourceMappingURL=execution_context.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/executor/execution_context.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export GraphExecutor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GraphExecutor\": () => /* binding */ GraphExecutor\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operations/executors/utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/* harmony import */ var _operations_operation_executor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operations/operation_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/operation_executor.js\");\n/* harmony import */ var _execution_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./execution_context */ \"./node_modules/@tensorflow/tfjs-converter/dist/executor/execution_context.js\");\n/* harmony import */ var _model_analysis__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./model_analysis */ \"./node_modules/@tensorflow/tfjs-converter/dist/executor/model_analysis.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\nclass GraphExecutor {\n    /**\n     *\n     * @param graph Graph the model or function graph to be executed.\n     * @param parent When building function exector you need to set the parent\n     * executor. Since the weights and function executor maps are set at parant\n     * level, that function executor can access the function maps and weight maps\n     * through the parent.\n     */\n    constructor(graph, parent) {\n        this.graph = graph;\n        this.parent = parent;\n        this.compiledMap = new Map();\n        this._weightMap = {};\n        this.SEPERATOR = ',';\n        this._functions = {};\n        this._functionExecutorMap = {};\n        this._outputs = graph.outputs;\n        this._inputs = graph.inputs;\n        this._initNodes = graph.initNodes;\n        this._signature = graph.signature;\n        this._functions = graph.functions;\n        // create sub-graph executors\n        if (graph.functions != null) {\n            Object.keys(graph.functions).forEach(name => {\n                this._functionExecutorMap[name] =\n                    new GraphExecutor(graph.functions[name], this);\n            });\n        }\n    }\n    get weightIds() {\n        return this.parent ? this.parent.weightIds : this._weightIds;\n    }\n    get functionExecutorMap() {\n        return this.parent ? this.parent.functionExecutorMap :\n            this._functionExecutorMap;\n    }\n    get weightMap() {\n        return this.parent ? this.parent.weightMap : this._weightMap;\n    }\n    set weightMap(weightMap) {\n        const weightIds = Object.keys(weightMap).map(key => weightMap[key].map(tensor => tensor.id));\n        this._weightIds = [].concat(...weightIds);\n        this._weightMap = weightMap;\n    }\n    /**\n     * Set `ResourceManager` shared by executors of a model.\n     * @param resourceManager: `ResourceManager` of the `GraphModel`.\n     */\n    set resourceManager(resourceManager) {\n        this._resourceManager = resourceManager;\n    }\n    get inputs() {\n        return this._inputs.map(node => {\n            return {\n                name: node.name,\n                shape: node.attrParams['shape'] ?\n                    node.attrParams['shape'].value :\n                    undefined,\n                dtype: node.attrParams['dtype'] ?\n                    node.attrParams['dtype'].value :\n                    undefined\n            };\n        });\n    }\n    get outputs() {\n        return this._outputs.map(node => {\n            return {\n                name: node.name,\n                shape: node.attrParams['shape'] ?\n                    node.attrParams['shape'].value :\n                    undefined,\n                dtype: node.attrParams['dtype'] ?\n                    node.attrParams['dtype'].value :\n                    undefined\n            };\n        });\n    }\n    get inputNodes() {\n        return this._inputs.map(node => node.signatureKey || node.name);\n    }\n    get outputNodes() {\n        return this._outputs.map((node) => {\n            const name = node.signatureKey || node.name;\n            return node.defaultOutput ? (`${name}:${node.defaultOutput}`) : name;\n        });\n    }\n    get functions() {\n        return Object.keys(this._functions).reduce((map, key) => {\n            map[key] = this._functions[key].signature;\n            return map;\n        }, {});\n    }\n    getCompilationKey(inputs, outputs) {\n        const sortedInputs = inputs.map(node => node.name).sort();\n        const sortedOutputs = outputs.map(node => node.name).sort();\n        return sortedInputs.join(this.SEPERATOR) + '--' +\n            sortedOutputs.join(this.SEPERATOR);\n    }\n    /**\n     * Compiles the inference graph and returns the minimal set of nodes that are\n     * required for execution, in the correct execution order.\n     */\n    compile(inputs, outputs) {\n        const executionInfo = (0,_model_analysis__WEBPACK_IMPORTED_MODULE_4__.getExecutionSubgraph)(inputs, outputs, this.weightMap, this._initNodes);\n        const { missingInputs, dynamicNode, syncInputs } = executionInfo;\n        if (dynamicNode != null) {\n            throw new Error(`This execution contains the node '${dynamicNode.name}', which has ` +\n                `the dynamic op '${dynamicNode.op}'. Please use ` +\n                `model.executeAsync() instead. Alternatively, to avoid the ` +\n                `dynamic ops, specify the inputs [${syncInputs}]`);\n        }\n        if (missingInputs.length > 0) {\n            const outNames = outputs.map(n => n.name);\n            const inNames = Object.keys(inputs);\n            throw new Error(`Cannot compute the outputs [${outNames}] from the provided inputs ` +\n                `[${inNames}]. Missing the following inputs: [${missingInputs}]`);\n        }\n        return (0,_model_analysis__WEBPACK_IMPORTED_MODULE_4__.getNodesInTopologicalOrder)(this.graph, this.weightMap, executionInfo);\n    }\n    /**\n     * Executes the inference for given input tensors.\n     * @param inputs Tensor map for the model inputs, keyed by the input node\n     * names.\n     * @param outputs Optional. output node name from the Tensorflow model, if\n     * no outputs are specified, the default outputs of the model would be used.\n     * You can inspect intermediate nodes of the model by adding them to the\n     * outputs array.\n     */\n    execute(inputs, outputs) {\n        inputs = this.mapInputs(inputs);\n        const names = Object.keys(inputs).sort();\n        this.checkInputs(inputs);\n        this.checkInputShapeAndType(inputs);\n        outputs = this.mapOutputs(outputs);\n        this.checkOutputs(outputs);\n        const inputNodes = names.map(name => this.graph.nodes[(0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.parseNodeName)(name)[0]]);\n        const outputNodeNames = outputs.map(name => (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.parseNodeName)(name)[0]);\n        let outputNodes = outputNodeNames.map(name => this.graph.nodes[name]);\n        // If no outputs are specified, then use the default outputs of the model.\n        if (outputNodes.length === 0) {\n            outputNodes = this._outputs;\n        }\n        const compilationKey = this.getCompilationKey(inputNodes, outputNodes);\n        // Do nothing if the compiled graph cache contains the input.\n        let orderedNodes = this.compiledMap.get(compilationKey);\n        if (orderedNodes == null) {\n            orderedNodes = this.compile(inputs, outputNodes);\n            this.compiledMap.set(compilationKey, orderedNodes);\n        }\n        const tensorArrayMap = {};\n        const tensorListMap = {};\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(() => {\n            const context = new _execution_context__WEBPACK_IMPORTED_MODULE_3__.ExecutionContext(this.weightMap, tensorArrayMap, tensorListMap, this.functionExecutorMap);\n            const tensorsMap = Object.assign({}, this.weightMap);\n            Object.keys(inputs).forEach(name => {\n                const [nodeName, index] = (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.parseNodeName)(name);\n                const tensors = [];\n                tensors[index] = inputs[name];\n                tensorsMap[nodeName] = tensors;\n            });\n            const tensorsToKeep = this.getFrozenTensorIds(tensorsMap);\n            const intermediateTensorConsumerCount = {};\n            for (let i = 0; i < orderedNodes.length; i++) {\n                const node = orderedNodes[i];\n                if (!tensorsMap[node.name]) {\n                    const tensors = (0,_operations_operation_executor__WEBPACK_IMPORTED_MODULE_2__.executeOp)(node, tensorsMap, context, this._resourceManager);\n                    if (_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.isPromise(tensors)) {\n                        throw new Error(`The execution of the op '${node.op}' returned a promise. ` +\n                            `Please use model.executeAsync() instead.`);\n                    }\n                    tensorsMap[node.name] = tensors;\n                    this.checkTensorForDisposal(node.name, node, tensorsMap, context, tensorsToKeep, outputNodeNames, intermediateTensorConsumerCount);\n                }\n            }\n            // dispose the context for the root executor\n            if (this.parent == null) {\n                context.dispose(tensorsToKeep);\n            }\n            return outputs.map(name => (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.getTensor)(name, tensorsMap, context));\n        });\n    }\n    getFrozenTensorIds(tensorMap) {\n        const ids = [].concat.apply([], Object.keys(tensorMap)\n            .map(key => tensorMap[key])\n            .map(tensors => tensors.map(tensor => tensor.id)));\n        return new Set(ids);\n    }\n    checkTensorForDisposal(nodeName, node, tensorMap, context, tensorsToKeep, outputNames, intermediateTensorConsumerCount) {\n        // Skip output nodes and any control flow nodes, since its dependency is\n        // tricky to track correctly.\n        if (node.category === 'control' || outputNames.indexOf(nodeName) !== -1) {\n            return;\n        }\n        tensorMap[nodeName].forEach(tensor => {\n            if (tensor != null) {\n                intermediateTensorConsumerCount[tensor.id] =\n                    (intermediateTensorConsumerCount[tensor.id] || 0) +\n                        node.children.length;\n            }\n        });\n        node.inputs.forEach(input => {\n            // Skip any control flow nodes, since its dependency is tricky to track\n            // correctly.\n            if (input.category !== 'control') {\n                const tensors = (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.getTensorsForCurrentContenxt)(input.name, tensorMap, context);\n                if (tensors != null) {\n                    tensors.forEach(tensor => {\n                        if (tensor && !tensorsToKeep.has(tensor.id)) {\n                            const count = intermediateTensorConsumerCount[tensor.id];\n                            if (count === 1) {\n                                tensor.dispose();\n                                delete intermediateTensorConsumerCount[tensor.id];\n                            }\n                            else if (count != null) {\n                                // only intermediate nodes has count set, inputs and weights are\n                                // not.\n                                intermediateTensorConsumerCount[tensor.id]--;\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n    /**\n     * Executes the inference for given input tensors in Async fashion.\n     * @param inputs Tensor map for the model inputs, keyed by the input node\n     * names.\n     * @param outputs output node name from the Tensorflow model, if no outputs\n     * are specified, the default outputs of the model would be used. You can\n     * inspect intermediate nodes of the model by adding them to the outputs\n     * array.\n     */\n    async executeAsync(inputs, outputs) {\n        return this._executeAsync(inputs, outputs);\n    }\n    /**\n     * Executes the inference for given input tensors in Async fashion.\n     * @param inputs Tensor map for the model inputs, keyed by the input node\n     * names.\n     * @param outputs Optional. output node name from the Tensorflow model,\n     * if no outputs are specified, the default outputs of the model would be\n     * used. You can inspect intermediate nodes of the model by adding them to the\n     * outputs array.\n     * @param isFunctionExecution Optional. Flag for executing a function.\n     * @param tensorArrayMap Optional, global TensorArray map by id. Used for\n     * function execution.\n     * @param tensorArrayMap Optinal global TensorList map by id. Used for\n     * function execution.\n     */\n    async _executeAsync(inputs, outputs, isFunctionExecution = false, tensorArrayMap = {}, tensorListMap = {}) {\n        if (!isFunctionExecution) {\n            inputs = this.mapInputs(inputs);\n            this.checkInputs(inputs);\n            this.checkInputShapeAndType(inputs);\n            outputs = this.mapOutputs(outputs);\n            this.checkOutputs(outputs);\n        }\n        const context = new _execution_context__WEBPACK_IMPORTED_MODULE_3__.ExecutionContext(this.weightMap, tensorArrayMap, tensorListMap, this.functionExecutorMap);\n        // Graph with control flow op requires runtime evaluation of the execution\n        // order, while without control flow the execution order is pre-determined\n        // in the compile method.\n        const tensorMap = await this.executeWithControlFlow(inputs, context, outputs, isFunctionExecution);\n        const results = outputs.map(name => (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.getTensor)(name, tensorMap, context));\n        // dispose all the intermediate tensors\n        const outputIds = results.map(t => t.id);\n        const inputIds = Object.keys(inputs).map(name => inputs[name].id);\n        const keepIds = new Set([...outputIds, ...inputIds, ...this.weightIds]);\n        Object.keys(tensorMap).forEach(key => {\n            const tensorArray = tensorMap[key];\n            tensorArray.forEach(tensor => {\n                if (tensor && !tensor.isDisposed && !keepIds.has(tensor.id)) {\n                    tensor.dispose();\n                }\n            });\n        });\n        // dispose the context for the root executor\n        if (this.parent == null) {\n            context.dispose(keepIds);\n        }\n        return results;\n    }\n    async executeFunctionAsync(inputs, tensorArrayMap, tensorListMap) {\n        const mappedInputs = inputs.reduce((map, tensor, index) => {\n            map[this.inputs[index].name] = tensor;\n            return map;\n        }, {});\n        return this._executeAsync(mappedInputs, this.outputNodes, true, tensorArrayMap, tensorListMap);\n    }\n    /**\n     * When there are control flow nodes in the graph, the graph execution use\n     * ExecutionContext to keep track of the frames and loop iterators.\n     * @param inputs placeholder tensors for the graph.\n     * @param context the execution context object for current execution.\n     * @param outputNames Optional. output node name from the Tensorflow model,\n     * if no outputs are specified, the default outputs of the model would be\n     * used. You can inspect intermediate nodes of the model by adding them to the\n     * outputs array.\n     * @param isFunctionExecution Flag for executing a function.\n     */\n    async executeWithControlFlow(inputs, context, outputNames, isFunctionExecution) {\n        const names = Object.keys(inputs);\n        const inputNodes = names.map(name => this.graph.nodes[(0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.parseNodeName)(name)[0]]);\n        const outputNodeNames = outputNames.map(name => (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.parseNodeName)(name)[0]);\n        let outputNodes = outputNodeNames.map(name => this.graph.nodes[name]);\n        // If no outputs are specified, then use the default outputs of the model.\n        if (outputNodes.length === 0) {\n            outputNodes = this._outputs;\n        }\n        const { usedNodes, missingInputs, dynamicNode, syncInputs } = (0,_model_analysis__WEBPACK_IMPORTED_MODULE_4__.getExecutionSubgraph)(inputs, outputNodes, this.weightMap, this._initNodes);\n        // First nodes to execute include inputNodes, weights, and initNodes.\n        const stack = [\n            ...inputNodes, ...this.graph.weights, ...(this._initNodes || [])\n        ].map(node => {\n            return { node, contexts: context.currentContext };\n        });\n        const tensorsMap = Object.assign({}, this.weightMap);\n        Object.keys(inputs).forEach(name => {\n            const [nodeName, index] = (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.parseNodeName)(name);\n            const tensors = [];\n            tensors[index] = inputs[name];\n            tensorsMap[nodeName] = tensors;\n        });\n        const intermediateTensorConsumerCount = {};\n        const tensorsToKeep = this.getFrozenTensorIds(tensorsMap);\n        const added = {};\n        while (stack.length > 0) {\n            const promises = this.processStack(inputNodes, stack, context, tensorsMap, added, tensorsToKeep, outputNodeNames, intermediateTensorConsumerCount, usedNodes);\n            await Promise.all(promises);\n        }\n        if (dynamicNode == null && !isFunctionExecution) {\n            console.warn(`This model execution did not contain any nodes with control flow ` +\n                `or dynamic output shapes. You can use model.execute() instead.`);\n        }\n        const missingOutputs = outputNodes\n            .filter(node => !(0,_model_analysis__WEBPACK_IMPORTED_MODULE_4__.isControlFlow)(node) &&\n            !(0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.getTensor)(node.name, tensorsMap, context))\n            .map(node => node.name);\n        if (missingOutputs.length > 0) {\n            let alternativeMsg = '';\n            if (dynamicNode != null) {\n                alternativeMsg =\n                    `Alternatively, to avoid the dynamic ops, use model.execute() ` +\n                        `and specify the inputs [${syncInputs}]`;\n            }\n            throw new Error(`Cannot compute the outputs [${missingOutputs}] from the provided ` +\n                `inputs [${names}]. Consider providing the following inputs: ` +\n                `[${missingInputs}]. ${alternativeMsg}`);\n        }\n        return tensorsMap;\n    }\n    processStack(inputNodes, stack, context, tensorMap, added, tensorsToKeep, outputNames, intermediateTensorConsumerCount, usedNodes) {\n        const promises = [];\n        while (stack.length > 0) {\n            const item = stack.pop();\n            context.currentContext = item.contexts;\n            let nodeName = '';\n            // The tensor of the Enter op with isConstant set should be set\n            // in the parent scope, so it will be available as constant for the\n            // whole loop.\n            if (item.node.op === 'Enter' &&\n                (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('isConstant', item.node, tensorMap, context)) {\n                [nodeName] = (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.getNodeNameAndIndex)(item.node.name, context);\n            }\n            // only process nodes that are not in the tensorMap yet, this include\n            // inputNodes and internal initNodes.\n            if (tensorMap[item.node.name] == null) {\n                const tensors = (0,_operations_operation_executor__WEBPACK_IMPORTED_MODULE_2__.executeOp)(item.node, tensorMap, context, this._resourceManager);\n                if (!nodeName) {\n                    [nodeName] = (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.getNodeNameAndIndex)(item.node.name, context);\n                }\n                const currentContext = context.currentContext;\n                if (_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.isPromise(tensors)) {\n                    promises.push(tensors.then(t => {\n                        tensorMap[nodeName] = t;\n                        context.currentContext = currentContext;\n                        this.checkTensorForDisposal(nodeName, item.node, tensorMap, context, tensorsToKeep, outputNames, intermediateTensorConsumerCount);\n                        this.processChildNodes(item.node, stack, context, tensorMap, added, usedNodes);\n                        return t;\n                    }));\n                }\n                else {\n                    tensorMap[nodeName] = tensors;\n                    this.checkTensorForDisposal(nodeName, item.node, tensorMap, context, tensorsToKeep, outputNames, intermediateTensorConsumerCount);\n                    this.processChildNodes(item.node, stack, context, tensorMap, added, usedNodes);\n                }\n            }\n            else {\n                this.processChildNodes(item.node, stack, context, tensorMap, added, usedNodes);\n            }\n        }\n        return promises;\n    }\n    processChildNodes(node, stack, context, tensorMap, added, usedNodes) {\n        node.children.forEach((childNode) => {\n            const [nodeName,] = (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.getNodeNameAndIndex)(childNode.name, context);\n            if (added[nodeName] || !usedNodes.has(childNode.name)) {\n                return;\n            }\n            // Merge op can be pushed if any of its inputs has value.\n            if (childNode.op === 'Merge') {\n                if (childNode.inputNames.some(name => {\n                    return !!(0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.getTensor)(name, tensorMap, context);\n                })) {\n                    added[nodeName] = true;\n                    stack.push({ contexts: context.currentContext, node: childNode });\n                }\n            }\n            else // Otherwise all inputs must to have value.\n             if (childNode.inputNames.every(name => {\n                return !!(0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.getTensor)(name, tensorMap, context);\n            })) {\n                added[nodeName] = true;\n                stack.push({ contexts: context.currentContext, node: childNode });\n            }\n        });\n    }\n    /**\n     * Releases the memory used by the weight tensors.\n     */\n    dispose() {\n        Object.keys(this.weightMap)\n            .forEach(key => this.weightMap[key].forEach(tensor => tensor.dispose()));\n    }\n    checkInputShapeAndType(inputs) {\n        Object.keys(inputs).forEach(name => {\n            const input = inputs[name];\n            const [nodeName,] = (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.parseNodeName)(name);\n            const node = this.graph.nodes[nodeName];\n            if (node.attrParams['shape'] && node.attrParams['shape'].value) {\n                const shape = node.attrParams['shape'].value;\n                const match = shape.length === input.shape.length &&\n                    input.shape.every((dim, index) => shape[index] === -1 || shape[index] === dim);\n                _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(match, () => `The shape of dict['${node.name}'] provided in ` +\n                    `model.execute(dict) must be [${shape}], but was ` +\n                    `[${input.shape}]`);\n            }\n            if (node.attrParams['dtype'] && node.attrParams['dtype'].value) {\n                _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(input.dtype === node.attrParams['dtype'].value, () => `The dtype of dict['${node.name}'] provided in ` +\n                    `model.execute(dict) must be ` +\n                    `${node.attrParams['dtype'].value}, but was ${input.dtype}`);\n            }\n        });\n    }\n    mapInputs(inputs) {\n        const result = {};\n        for (const inputName in inputs) {\n            if (this._signature != null && this._signature.inputs != null &&\n                this._signature.inputs[inputName] != null) {\n                const tensor = this._signature.inputs[inputName];\n                result[tensor.name] = inputs[inputName];\n            }\n            else {\n                result[inputName] = inputs[inputName];\n            }\n        }\n        return result;\n    }\n    checkInputs(inputs) {\n        const notInGraph = Object.keys(inputs).filter(name => {\n            const [nodeName] = (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.parseNodeName)(name);\n            return this.graph.nodes[nodeName] == null;\n        });\n        if (notInGraph.length > 0) {\n            throw new Error(`The dict provided in model.execute(dict) has ` +\n                `keys: [${notInGraph}] that are not part of graph`);\n        }\n    }\n    mapOutputs(outputs) {\n        return outputs.map(name => {\n            if (this._signature != null && this._signature.outputs != null &&\n                this._signature.outputs[name] != null) {\n                const tensor = this._signature.outputs[name];\n                return tensor.name;\n            }\n            return name;\n        }, {});\n    }\n    checkOutputs(outputs) {\n        outputs.forEach(name => {\n            const [normalizedName] = (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_1__.parseNodeName)(name);\n            if (!this.graph.nodes[normalizedName]) {\n                throw new Error(`The output '${name}' is not found in the graph`);\n            }\n        });\n    }\n}\n//# sourceMappingURL=graph_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/executor/graph_model.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/executor/graph_model.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export DEFAULT_MODEL_NAME [provided] [no usage info] [missing usage info prevents renaming] */
/*! export GraphModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export TFHUB_SEARCH_PARAM [provided] [no usage info] [missing usage info prevents renaming] */
/*! export loadGraphModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TFHUB_SEARCH_PARAM\": () => /* binding */ TFHUB_SEARCH_PARAM,\n/* harmony export */   \"DEFAULT_MODEL_NAME\": () => /* binding */ DEFAULT_MODEL_NAME,\n/* harmony export */   \"GraphModel\": () => /* binding */ GraphModel,\n/* harmony export */   \"loadGraphModel\": () => /* binding */ loadGraphModel\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _operations_operation_mapper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operations/operation_mapper */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js\");\n/* harmony import */ var _graph_executor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./graph_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/executor/graph_executor.js\");\n/* harmony import */ var _resource_manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./resource_manager */ \"./node_modules/@tensorflow/tfjs-converter/dist/executor/resource_manager.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nconst TFHUB_SEARCH_PARAM = '?tfjs-format=file';\nconst DEFAULT_MODEL_NAME = 'model.json';\n/**\n * A `tf.GraphModel` is a directed, acyclic graph built from a\n * SavedModel GraphDef and allows inference execution.\n *\n * A `tf.GraphModel` can only be created by loading from a model converted from\n * a [TensorFlow SavedModel](https://www.tensorflow.org/guide/saved_model) using\n * the command line converter tool and loaded via `tf.loadGraphModel`.\n *\n * @doc {heading: 'Models', subheading: 'Classes'}\n */\nclass GraphModel {\n    /**\n     * @param modelUrl url for the model, or an `io.IOHandler`.\n     * @param weightManifestUrl url for the weight file generated by\n     * scripts/convert.py script.\n     * @param requestOption options for Request, which allows to send credentials\n     * and custom headers.\n     * @param onProgress Optional, progress callback function, fired periodically\n     * before the load is completed.\n     */\n    constructor(modelUrl, loadOptions = {}) {\n        this.modelUrl = modelUrl;\n        this.loadOptions = loadOptions;\n        this.version = 'n/a';\n        if (loadOptions == null) {\n            this.loadOptions = {};\n        }\n        this.resourceManager = new _resource_manager__WEBPACK_IMPORTED_MODULE_3__.ResourceManager();\n    }\n    // Returns the version information for the tensorflow model GraphDef.\n    get modelVersion() {\n        return this.version;\n    }\n    get inputNodes() {\n        return this.executor.inputNodes;\n    }\n    get outputNodes() {\n        return this.executor.outputNodes;\n    }\n    get inputs() {\n        return this.executor.inputs;\n    }\n    get outputs() {\n        return this.executor.outputs;\n    }\n    get weights() {\n        return this.executor.weightMap;\n    }\n    get metadata() {\n        return this.artifacts.userDefinedMetadata;\n    }\n    get modelSignature() {\n        return this.signature;\n    }\n    findIOHandler() {\n        const path = this.modelUrl;\n        if (path.load != null) {\n            // Path is an IO Handler.\n            this.handler = path;\n        }\n        else if (this.loadOptions.requestInit != null) {\n            this.handler = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.io.browserHTTPRequest(path, this.loadOptions);\n        }\n        else {\n            const handlers = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.io.getLoadHandlers(path, this.loadOptions);\n            if (handlers.length === 0) {\n                // For backward compatibility: if no load handler can be found,\n                // assume it is a relative http path.\n                handlers.push(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.io.browserHTTPRequest(path, this.loadOptions));\n            }\n            else if (handlers.length > 1) {\n                throw new Error(`Found more than one (${handlers.length}) load handlers for ` +\n                    `URL '${[path]}'`);\n            }\n            this.handler = handlers[0];\n        }\n    }\n    /**\n     * Loads the model and weight files, construct the in memory weight map and\n     * compile the inference graph.\n     */\n    async load() {\n        this.findIOHandler();\n        if (this.handler.load == null) {\n            throw new Error('Cannot proceed with model loading because the IOHandler provided ' +\n                'does not have the `load` method implemented.');\n        }\n        const artifacts = await this.handler.load();\n        return this.loadSync(artifacts);\n    }\n    /**\n     * Synchronously construct the in memory weight map and\n     * compile the inference graph. Also initialize hashtable if any.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}\n     */\n    loadSync(artifacts) {\n        this.artifacts = artifacts;\n        const graph = this.artifacts.modelTopology;\n        let signature;\n        if (this.artifacts.userDefinedMetadata != null &&\n            this.artifacts.userDefinedMetadata.signature != null) {\n            signature = // tslint:disable-next-line:no-any\n                this.artifacts.userDefinedMetadata.signature;\n        }\n        else {\n            signature = this.artifacts.signature;\n        }\n        this.signature = signature;\n        this.version = `${graph.versions.producer}.${graph.versions.minConsumer}`;\n        const weightMap = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.io.decodeWeights(this.artifacts.weightData, this.artifacts.weightSpecs);\n        this.executor = new _graph_executor__WEBPACK_IMPORTED_MODULE_2__.GraphExecutor(_operations_operation_mapper__WEBPACK_IMPORTED_MODULE_1__.OperationMapper.Instance.transformGraph(graph, this.signature));\n        this.executor.weightMap = this.convertTensorMapToTensorsMap(weightMap);\n        // Attach a model-level resourceManager to each executor to share resources,\n        // such as `HashTable`.\n        this.executor.resourceManager = this.resourceManager;\n        if (artifacts.modelInitializer != null &&\n            artifacts.modelInitializer.node != null) {\n            const initializer = _operations_operation_mapper__WEBPACK_IMPORTED_MODULE_1__.OperationMapper.Instance.transformGraph(artifacts.modelInitializer);\n            this.initializer = new _graph_executor__WEBPACK_IMPORTED_MODULE_2__.GraphExecutor(initializer);\n            this.initializer.weightMap = this.executor.weightMap;\n            // Attach a model-level resourceManager to the initializer, the\n            // hashTables created from when executing the initializer will be stored\n            // in the resourceManager.\n            this.initializer.resourceManager = this.resourceManager;\n            this.initializer.executeAsync({}, []);\n        }\n        return true;\n    }\n    /**\n     * Save the configuration and/or weights of the GraphModel.\n     *\n     * An `IOHandler` is an object that has a `save` method of the proper\n     * signature defined. The `save` method manages the storing or\n     * transmission of serialized data (\"artifacts\") that represent the\n     * model's topology and weights onto or via a specific medium, such as\n     * file downloads, local storage, IndexedDB in the web browser and HTTP\n     * requests to a server. TensorFlow.js provides `IOHandler`\n     * implementations for a number of frequently used saving mediums, such as\n     * `tf.io.browserDownloads` and `tf.io.browserLocalStorage`. See `tf.io`\n     * for more details.\n     *\n     * This method also allows you to refer to certain types of `IOHandler`s\n     * as URL-like string shortcuts, such as 'localstorage://' and\n     * 'indexeddb://'.\n     *\n     * Example 1: Save `model`'s topology and weights to browser [local\n     * storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage);\n     * then load it back.\n     *\n     * ```js\n     * const modelUrl =\n     *    'https://storage.googleapis.com/tfjs-models/savedmodel/mobilenet_v2_1.0_224/model.json';\n     * const model = await tf.loadGraphModel(modelUrl);\n     * const zeros = tf.zeros([1, 224, 224, 3]);\n     * model.predict(zeros).print();\n     *\n     * const saveResults = await model.save('localstorage://my-model-1');\n     *\n     * const loadedModel = await tf.loadGraphModel('localstorage://my-model-1');\n     * console.log('Prediction from loaded model:');\n     * model.predict(zeros).print();\n     * ```\n     *\n     * @param handlerOrURL An instance of `IOHandler` or a URL-like,\n     * scheme-based string shortcut for `IOHandler`.\n     * @param config Options for saving the model.\n     * @returns A `Promise` of `SaveResult`, which summarizes the result of\n     * the saving, such as byte sizes of the saved artifacts for the model's\n     *   topology and weight values.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}\n     */\n    async save(handlerOrURL, config) {\n        if (typeof handlerOrURL === 'string') {\n            const handlers = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.io.getSaveHandlers(handlerOrURL);\n            if (handlers.length === 0) {\n                throw new Error(`Cannot find any save handlers for URL '${handlerOrURL}'`);\n            }\n            else if (handlers.length > 1) {\n                throw new Error(`Found more than one (${handlers.length}) save handlers for ` +\n                    `URL '${handlerOrURL}'`);\n            }\n            handlerOrURL = handlers[0];\n        }\n        if (handlerOrURL.save == null) {\n            throw new Error('GraphModel.save() cannot proceed because the IOHandler ' +\n                'provided does not have the `save` attribute defined.');\n        }\n        return handlerOrURL.save(this.artifacts);\n    }\n    /**\n     * Execute the inference for the input tensors.\n     *\n     * @param input The input tensors, when there is single input for the model,\n     * inputs param should be a `tf.Tensor`. For models with mutliple inputs,\n     * inputs params should be in either `tf.Tensor`[] if the input order is\n     * fixed, or otherwise NamedTensorMap format.\n     *\n     * For model with multiple inputs, we recommend you use NamedTensorMap as the\n     * input type, if you use `tf.Tensor`[], the order of the array needs to\n     * follow the\n     * order of inputNodes array. @see {@link GraphModel.inputNodes}\n     *\n     * You can also feed any intermediate nodes using the NamedTensorMap as the\n     * input type. For example, given the graph\n     *    InputNode => Intermediate => OutputNode,\n     * you can execute the subgraph Intermediate => OutputNode by calling\n     *    model.execute('IntermediateNode' : tf.tensor(...));\n     *\n     * This is useful for models that uses tf.dynamic_rnn, where the intermediate\n     * state needs to be fed manually.\n     *\n     * For batch inference execution, the tensors for each input need to be\n     * concatenated together. For example with mobilenet, the required input shape\n     * is [1, 244, 244, 3], which represents the [batch, height, width, channel].\n     * If we are provide a batched data of 100 images, the input tensor should be\n     * in the shape of [100, 244, 244, 3].\n     *\n     * @param config Prediction configuration for specifying the batch size and\n     * output node names. Currently the batch size option is ignored for graph\n     * model.\n     *\n     * @returns Inference result tensors. The output would be single `tf.Tensor`\n     * if model has single output node, otherwise Tensor[] or NamedTensorMap[]\n     * will be returned for model with multiple outputs.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    predict(inputs, config) {\n        return this.execute(inputs, this.outputNodes);\n    }\n    normalizeInputs(inputs) {\n        if (!(inputs instanceof _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.Tensor) && !Array.isArray(inputs)) {\n            // The input is already a NamedTensorMap.\n            return inputs;\n        }\n        inputs = Array.isArray(inputs) ? inputs : [inputs];\n        if (inputs.length !== this.inputNodes.length) {\n            throw new Error('Input tensor count mismatch,' +\n                `the graph model has ${this.inputNodes.length} placeholders, ` +\n                `while there are ${inputs.length} input tensors.`);\n        }\n        return this.inputNodes.reduce((map, inputName, i) => {\n            map[inputName] = inputs[i];\n            return map;\n        }, {});\n    }\n    normalizeOutputs(outputs) {\n        outputs = outputs || this.outputNodes;\n        return !Array.isArray(outputs) ? [outputs] : outputs;\n    }\n    /**\n     * Executes inference for the model for given input tensors.\n     * @param inputs tensor, tensor array or tensor map of the inputs for the\n     * model, keyed by the input node names.\n     * @param outputs output node name from the Tensorflow model, if no\n     * outputs are specified, the default outputs of the model would be used.\n     * You can inspect intermediate nodes of the model by adding them to the\n     * outputs array.\n     *\n     * @returns A single tensor if provided with a single output or no outputs\n     * are provided and there is only one default output, otherwise return a\n     * tensor array. The order of the tensor array is the same as the outputs\n     * if provided, otherwise the order of outputNodes attribute of the model.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    execute(inputs, outputs) {\n        inputs = this.normalizeInputs(inputs);\n        outputs = this.normalizeOutputs(outputs);\n        const result = this.executor.execute(inputs, outputs);\n        return result.length > 1 ? result : result[0];\n    }\n    /**\n     * Executes inference for the model for given input tensors in async\n     * fashion, use this method when your model contains control flow ops.\n     * @param inputs tensor, tensor array or tensor map of the inputs for the\n     * model, keyed by the input node names.\n     * @param outputs output node name from the Tensorflow model, if no outputs\n     * are specified, the default outputs of the model would be used. You can\n     * inspect intermediate nodes of the model by adding them to the outputs\n     * array.\n     *\n     * @returns A Promise of single tensor if provided with a single output or\n     * no outputs are provided and there is only one default output, otherwise\n     * return a tensor map.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    async executeAsync(inputs, outputs) {\n        inputs = this.normalizeInputs(inputs);\n        outputs = this.normalizeOutputs(outputs);\n        const result = await this.executor.executeAsync(inputs, outputs);\n        return result.length > 1 ? result : result[0];\n    }\n    convertTensorMapToTensorsMap(map) {\n        return Object.keys(map).reduce((newMap, key) => {\n            newMap[key] = [map[key]];\n            return newMap;\n        }, {});\n    }\n    /**\n     * Releases the memory used by the weight tensors and resourceManager.\n     *\n     * @doc {heading: 'Models', subheading: 'Classes'}\n     */\n    dispose() {\n        this.executor.dispose();\n        if (this.initializer) {\n            this.initializer.dispose();\n        }\n        this.resourceManager.dispose();\n    }\n}\n/**\n * Load a graph model given a URL to the model definition.\n *\n * Example of loading MobileNetV2 from a URL and making a prediction with a\n * zeros input:\n *\n * ```js\n * const modelUrl =\n *    'https://storage.googleapis.com/tfjs-models/savedmodel/mobilenet_v2_1.0_224/model.json';\n * const model = await tf.loadGraphModel(modelUrl);\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n *\n * Example of loading MobileNetV2 from a TF Hub URL and making a prediction with\n * a zeros input:\n *\n * ```js\n * const modelUrl =\n *    'https://tfhub.dev/google/imagenet/mobilenet_v2_140_224/classification/2';\n * const model = await tf.loadGraphModel(modelUrl, {fromTFHub: true});\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n * @param modelUrl The url or an `io.IOHandler` that loads the model.\n * @param options Options for the HTTP request, which allows to send credentials\n *    and custom headers.\n *\n * @doc {heading: 'Models', subheading: 'Loading'}\n */\nasync function loadGraphModel(modelUrl, options = {}) {\n    if (modelUrl == null) {\n        throw new Error('modelUrl in loadGraphModel() cannot be null. Please provide a url ' +\n            'or an IOHandler that loads the model');\n    }\n    if (options == null) {\n        options = {};\n    }\n    if (options.fromTFHub) {\n        if (modelUrl.load == null) {\n            if (!modelUrl.endsWith('/')) {\n                modelUrl = modelUrl + '/';\n            }\n            modelUrl = `${modelUrl}${DEFAULT_MODEL_NAME}${TFHUB_SEARCH_PARAM}`;\n        }\n    }\n    const model = new GraphModel(modelUrl, options);\n    await model.load();\n    return model;\n}\n//# sourceMappingURL=graph_model.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/executor/graph_model.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/executor/hash_table.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/executor/hash_table.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export HashTable [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HashTable\": () => /* binding */ HashTable\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n/**\n * Hashtable contains a set of tensors, which can be accessed by key.\n */\nclass HashTable {\n    /**\n     * Constructor of HashTable. Creates a hash table.\n     *\n     * @param keyDType `dtype` of the table keys.\n     * @param valueDType `dtype` of the table values.\n     */\n    constructor(keyDType, valueDType) {\n        this.keyDType = keyDType;\n        this.valueDType = valueDType;\n        this.handle = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(0);\n        // tslint:disable-next-line: no-any\n        this.tensorMap = new Map();\n        (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.keep)(this.handle);\n    }\n    get id() {\n        return this.handle.id;\n    }\n    /**\n     * Dispose the tensors and handle and clear the hashtable.\n     */\n    clearAndClose() {\n        this.tensorMap.forEach(value => value.dispose());\n        this.tensorMap.clear();\n        this.handle.dispose();\n    }\n    /**\n     * The number of items in the hash table.\n     */\n    size() {\n        return this.tensorMap.size;\n    }\n    /**\n     * Replaces the contents of the table with the specified keys and values.\n     * @param keys Keys to store in the hashtable.\n     * @param values Values to store in the hashtable.\n     */\n    async import(keys, values) {\n        this.checkKeyAndValueTensor(keys, values);\n        // We only store the primitive values of the keys, this allows lookup\n        // to be O(1).\n        const $keys = await keys.data();\n        // Clear the hashTable before inserting new values.\n        this.tensorMap.forEach(value => value.dispose());\n        this.tensorMap.clear();\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(() => {\n            const $values = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.unstack)(values);\n            const keysLength = $keys.length;\n            const valuesLength = $values.length;\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(keysLength === valuesLength, () => `The number of elements doesn't match, keys has ` +\n                `${keysLength} elements, the values has ${valuesLength} ` +\n                `elements.`);\n            for (let i = 0; i < keysLength; i++) {\n                const key = $keys[i];\n                const value = $values[i];\n                (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.keep)(value);\n                this.tensorMap.set(key, value);\n            }\n            return this.handle;\n        });\n    }\n    /**\n     * Looks up keys in a hash table, outputs the corresponding values.\n     *\n     * Performs batch lookups, for every element in the key tensor, `find`\n     * stacks the corresponding value into the return tensor.\n     *\n     * If an element is not present in the table, the given `defaultValue` is\n     * used.\n     *\n     * @param keys Keys to look up. Must have the same type as the keys of the\n     *     table.\n     * @param defaultValue The scalar `defaultValue` is the value output for keys\n     *     not present in the table. It must also be of the same type as the\n     *     table values.\n     */\n    async find(keys, defaultValue) {\n        this.checkKeyAndValueTensor(keys, defaultValue);\n        const $keys = await keys.data();\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(() => {\n            const result = [];\n            for (let i = 0; i < $keys.length; i++) {\n                const key = $keys[i];\n                const value = this.findWithDefault(key, defaultValue);\n                result.push(value);\n            }\n            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.stack)(result);\n        });\n    }\n    // tslint:disable-next-line: no-any\n    findWithDefault(key, defaultValue) {\n        const result = this.tensorMap.get(key);\n        return result != null ? result : defaultValue;\n    }\n    checkKeyAndValueTensor(key, value) {\n        if (key.dtype !== this.keyDType) {\n            throw new Error(`Expect key dtype ${this.keyDType}, but got ` +\n                `${key.dtype}`);\n        }\n        if (value.dtype !== this.valueDType) {\n            throw new Error(`Expect value dtype ${this.valueDType}, but got ` +\n                `${value.dtype}`);\n        }\n    }\n}\n//# sourceMappingURL=hash_table.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/executor/hash_table.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/executor/model_analysis.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/executor/model_analysis.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export getExecutionSubgraph [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getNodesInTopologicalOrder [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isControlFlow [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isDynamicShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isHashTable [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getExecutionSubgraph\": () => /* binding */ getExecutionSubgraph,\n/* harmony export */   \"getNodesInTopologicalOrder\": () => /* binding */ getNodesInTopologicalOrder,\n/* harmony export */   \"isControlFlow\": () => /* binding */ isControlFlow,\n/* harmony export */   \"isDynamicShape\": () => /* binding */ isDynamicShape,\n/* harmony export */   \"isHashTable\": () => /* binding */ isHashTable\n/* harmony export */ });\n/* harmony import */ var _operations_executors_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operations/executors/utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n/**\n * Given graph inputs and desired outputs, find the minimal set of nodes\n * to execute in order to compute the outputs. In addition return other useful\n * info such:\n * - Missing inputs needed to compute the output.\n * - Whether the subgraph contains dynamic ops (control flow, dynamic shape).\n * - Alternative inputs in order to avoid async (dynamic op) execution.\n */\nfunction getExecutionSubgraph(inputs, outputs, weightMap, initNodes) {\n    const usedNodes = new Set();\n    const missingInputs = [];\n    let dynamicNode = null;\n    let syncInputs = null;\n    // Start with the outputs, going backwards and find all the nodes that are\n    // needed to compute those outputs.\n    const seen = new Set();\n    const inputNodeNames = Object.keys(inputs).map(name => (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_0__.parseNodeName)(name)[0]);\n    let initNodeNames = [];\n    if (initNodes != null) {\n        initNodeNames = initNodes.map(node => (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_0__.parseNodeName)(node.name)[0]);\n    }\n    const frontier = [...outputs];\n    while (frontier.length > 0) {\n        const node = frontier.pop();\n        if (isControlFlow(node) || isDynamicShape(node) || isHashTable(node)) {\n            if (dynamicNode == null) {\n                dynamicNode = node;\n                syncInputs = dynamicNode.children.map(child => child.name)\n                    .filter(name => usedNodes.has(name));\n            }\n        }\n        usedNodes.add(node.name);\n        // Weights are dead end since we already have their values.\n        if (weightMap[node.name] != null) {\n            continue;\n        }\n        // This node is a dead end since it's one of the user-provided inputs.\n        if (inputNodeNames.indexOf(node.name) !== -1) {\n            continue;\n        }\n        // This node is a dead end since it doesn't have any inputs.\n        if (initNodeNames.indexOf(node.name) !== -1) {\n            continue;\n        }\n        if (node.inputs.length === 0) {\n            missingInputs.push(node.name);\n            continue;\n        }\n        node.inputs.forEach(input => {\n            // Don't add to the frontier if it is already there.\n            if (seen.has(input.name)) {\n                return;\n            }\n            seen.add(input.name);\n            frontier.push(input);\n        });\n    }\n    return { inputs, outputs, usedNodes, missingInputs, dynamicNode, syncInputs };\n}\n/**\n * Given the execution info, return a list of nodes in topological order that\n * need to be executed to compute the output.\n */\nfunction getNodesInTopologicalOrder(graph, weightMap, executionInfo) {\n    const { usedNodes, inputs } = executionInfo;\n    const frontier = [];\n    const inputNodes = Object.keys(inputs)\n        .map(name => (0,_operations_executors_utils__WEBPACK_IMPORTED_MODULE_0__.parseNodeName)(name)[0])\n        .map(name => graph.nodes[name]);\n    const initNodes = graph.initNodes;\n    inputNodes.forEach(input => {\n        if (usedNodes.has(input.name)) {\n            frontier.push(input);\n        }\n    });\n    graph.weights.forEach(weight => {\n        if (usedNodes.has(weight.name)) {\n            frontier.push(weight);\n        }\n    });\n    if (initNodes != null) {\n        initNodes.forEach(node => {\n            if (usedNodes.has(node.name)) {\n                frontier.push(node);\n            }\n        });\n    }\n    const seen = new Set();\n    const orderedNodes = [];\n    while (frontier.length > 0) {\n        const node = frontier.pop();\n        seen.add(node.name);\n        if (!weightMap[node.name]) {\n            orderedNodes.push(node);\n        }\n        node.children.forEach(child => {\n            if (!seen.has(child.name) && usedNodes.has(child.name) &&\n                child.inputs.every(input => seen.has(input.name))) {\n                frontier.push(child);\n            }\n        });\n    }\n    return orderedNodes;\n}\nconst CONTROL_FLOW_OPS = [\n    'Switch', 'Merge', 'Enter', 'Exit', 'NextIteration', 'StatelessIf',\n    'StatelessWhile', 'if', 'While'\n];\nconst DYNAMIC_SHAPE_OPS = [\n    'NonMaxSuppressionV2', 'NonMaxSuppressionV3', 'NonMaxSuppressionV5', 'Where'\n];\nconst HASH_TABLE_OPS = [\n    'HashTable', 'HashTableV2', 'LookupTableImport', 'LookupTableImportV2',\n    'LookupTableFind', 'LookupTableFindV2'\n];\nfunction isControlFlow(node) {\n    return CONTROL_FLOW_OPS.indexOf(node.op) >= 0;\n}\nfunction isDynamicShape(node) {\n    return DYNAMIC_SHAPE_OPS.indexOf(node.op) >= 0;\n}\nfunction isHashTable(node) {\n    return HASH_TABLE_OPS.indexOf(node.op) >= 0;\n}\n//# sourceMappingURL=model_analysis.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/executor/model_analysis.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/executor/resource_manager.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/executor/resource_manager.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export ResourceManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResourceManager\": () => /* binding */ ResourceManager\n/* harmony export */ });\n/**\n * Contains global resources of a model.\n */\nclass ResourceManager {\n    constructor(hashTableNameToHandle = {}, hashTableMap = {}) {\n        this.hashTableNameToHandle = hashTableNameToHandle;\n        this.hashTableMap = hashTableMap;\n    }\n    /**\n     * Register a `HashTable` in the resource manager.\n     *\n     * The `HashTable` can be retrieved by `resourceManager.getHashTableById`,\n     * where id is the table handle tensor's id.\n     *\n     * @param name Op node name that creates the `HashTable`.\n     * @param hashTable The `HashTable` to be added to resource manager.\n     */\n    addHashTable(name, hashTable) {\n        this.hashTableNameToHandle[name] = hashTable.handle;\n        this.hashTableMap[hashTable.id] = hashTable;\n    }\n    /**\n     * Get the table handle by node name.\n     * @param name Op node name that creates the `HashTable`. This name is also\n     *     used in the inputs list of lookup and import `HashTable` ops.\n     */\n    getHashTableHandleByName(name) {\n        return this.hashTableNameToHandle[name];\n    }\n    /**\n     * Get the actual `HashTable` by its handle tensor's id.\n     * @param id The id of the handle tensor.\n     */\n    getHashTableById(id) {\n        return this.hashTableMap[id];\n    }\n    /**\n     * Dispose `ResourceManager`, including its hashTables and tensors in them.\n     */\n    dispose() {\n        for (const key in this.hashTableMap) {\n            this.hashTableMap[key].clearAndClose();\n            delete this.hashTableMap[key];\n        }\n        for (const name in this.hashTableNameToHandle) {\n            this.hashTableNameToHandle[name].dispose();\n            delete this.hashTableNameToHandle[name];\n        }\n    }\n}\n//# sourceMappingURL=resource_manager.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/executor/resource_manager.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_array.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_array.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export TensorArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TensorArray\": () => /* binding */ TensorArray\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _tensor_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tensor_utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * The TensorArray object keeps an array of Tensors.  It\n * allows reading from the array and writing to the array.\n */\nclass TensorArray {\n    constructor(name, dtype, maxSize, elementShape, identicalElementShapes, dynamicSize, clearAfterRead) {\n        this.name = name;\n        this.dtype = dtype;\n        this.maxSize = maxSize;\n        this.elementShape = elementShape;\n        this.identicalElementShapes = identicalElementShapes;\n        this.dynamicSize = dynamicSize;\n        this.clearAfterRead = clearAfterRead;\n        this.tensors = [];\n        this.closed_ = false;\n        this.idTensor = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(0);\n        (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.keep)(this.idTensor);\n    }\n    get id() {\n        return this.idTensor.id;\n    }\n    get closed() {\n        return this.closed_;\n    }\n    /**\n     * Dispose the tensors and idTensor and mark the TensoryArray as closed.\n     */\n    clearAndClose(keepIds) {\n        this.tensors.forEach(tensor => {\n            if (keepIds == null || !keepIds.has(tensor.tensor.id)) {\n                tensor.tensor.dispose();\n            }\n        });\n        this.tensors = [];\n        this.closed_ = true;\n        this.idTensor.dispose();\n    }\n    size() {\n        return this.tensors.length;\n    }\n    /**\n     * Read the value at location index in the TensorArray.\n     * @param index Number the index to read from.\n     */\n    read(index) {\n        if (this.closed_) {\n            throw new Error(`TensorArray ${this.name} has already been closed.`);\n        }\n        if (index < 0 || index >= this.size()) {\n            throw new Error(`Tried to read from index ${index}, but array size is: ${this.size()}`);\n        }\n        const tensorWithState = this.tensors[index];\n        if (tensorWithState.cleared) {\n            throw new Error(`TensorArray ${this.name}: Could not read index ${index} twice because it was cleared after a previous read ` +\n                `(perhaps try setting clear_after_read = false?).`);\n        }\n        if (this.clearAfterRead) {\n            tensorWithState.cleared = true;\n        }\n        tensorWithState.read = true;\n        return tensorWithState.tensor;\n    }\n    /**\n     * Helper method to read multiple tensors from the specified indices.\n     */\n    readMany(indices) {\n        return indices.map(index => this.read(index));\n    }\n    /**\n     * Write value into the index of the TensorArray.\n     * @param index number the index to write to.\n     * @param tensor\n     */\n    write(index, tensor) {\n        if (this.closed_) {\n            throw new Error(`TensorArray ${this.name} has already been closed.`);\n        }\n        if (index < 0 || !this.dynamicSize && index >= this.maxSize) {\n            throw new Error(`Tried to write to index ${index}, but array is not resizeable and size is: ${this.maxSize}`);\n        }\n        const t = this.tensors[index] || {};\n        if (tensor.dtype !== this.dtype) {\n            throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${index},\n          because the value dtype is ${tensor.dtype}, but TensorArray dtype is ${this.dtype}.`);\n        }\n        // Set the shape for the first time write to unknow shape tensor array\n        if (this.size() === 0 &&\n            (this.elementShape == null || this.elementShape.length === 0)) {\n            this.elementShape = tensor.shape;\n        }\n        (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatchAllowUndefinedSize)(this.elementShape, tensor.shape, `TensorArray ${this.name}: Could not write to TensorArray index ${index}.`);\n        if (t.read) {\n            throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${index}, because it has already been read.`);\n        }\n        if (t.written) {\n            throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${index}, because it has already been written.`);\n        }\n        t.tensor = tensor;\n        (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.keep)(tensor);\n        t.written = true;\n        this.tensors[index] = t;\n    }\n    /**\n     * Helper method to write multiple tensors to the specified indices.\n     */\n    writeMany(indices, tensors) {\n        if (indices.length !== tensors.length) {\n            throw new Error(`TensorArray ${this.name}: could not write multiple tensors,` +\n                `because the index size: ${indices.length} is not the same as tensors size: ${tensors.length}.`);\n        }\n        indices.forEach((i, index) => this.write(i, tensors[index]));\n    }\n    /**\n     * Return selected values in the TensorArray as a packed Tensor. All of\n     * selected values must have been written and their shapes must all match.\n     * @param [indices] number[] Optional. Taking values in [0, max_value). If the\n     *    TensorArray is not dynamic, max_value=size(). If not specified returns\n     *    all tensors in the original order.\n     * @param [dtype]\n     */\n    gather(indices, dtype) {\n        if (!!dtype && dtype !== this.dtype) {\n            throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${dtype}`);\n        }\n        if (!indices) {\n            indices = [];\n            for (let i = 0; i < this.size(); i++) {\n                indices.push(i);\n            }\n        }\n        else {\n            indices = indices.slice(0, this.size());\n        }\n        if (indices.length === 0) {\n            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor)([], [0].concat(this.elementShape));\n        }\n        // Read all the PersistentTensors into a vector to keep track of\n        // their memory.\n        const tensors = this.readMany(indices);\n        (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatchAllowUndefinedSize)(this.elementShape, tensors[0].shape, 'TensorArray shape mismatch: ');\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.stack)(tensors, 0);\n    }\n    /**\n     * Return the values in the TensorArray as a concatenated Tensor.\n     */\n    concat(dtype) {\n        if (!!dtype && dtype !== this.dtype) {\n            throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${dtype}`);\n        }\n        if (this.size() === 0) {\n            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor)([], [0].concat(this.elementShape));\n        }\n        const indices = [];\n        for (let i = 0; i < this.size(); i++) {\n            indices.push(i);\n        }\n        // Collect all the tensors from the tensors array.\n        const tensors = this.readMany(indices);\n        (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatchAllowUndefinedSize)(this.elementShape, tensors[0].shape, `TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${tensors[0].shape})`);\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.concat)(tensors, 0);\n    }\n    /**\n     * Scatter the values of a Tensor in specific indices of a TensorArray.\n     * @param indices nummber[] values in [0, max_value). If the\n     *    TensorArray is not dynamic, max_value=size().\n     * @param tensor Tensor input tensor.\n     */\n    scatter(indices, tensor) {\n        if (tensor.dtype !== this.dtype) {\n            throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${tensor.dtype}`);\n        }\n        if (indices.length !== tensor.shape[0]) {\n            throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${indices.length} vs. ${tensor.shape[0]}`);\n        }\n        const maxIndex = Math.max(...indices);\n        if (!this.dynamicSize && maxIndex >= this.maxSize) {\n            throw new Error(`Max index must be < array size (${maxIndex}  vs. ${this.maxSize})`);\n        }\n        this.writeMany(indices, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.unstack)(tensor, 0));\n    }\n    /**\n     * Split the values of a Tensor into the TensorArray.\n     * @param length number[] with the lengths to use when splitting value along\n     *    its first dimension.\n     * @param tensor Tensor, the tensor to split.\n     */\n    split(length, tensor) {\n        if (tensor.dtype !== this.dtype) {\n            throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${tensor.dtype}`);\n        }\n        let totalLength = 0;\n        const cumulativeLengths = length.map(len => {\n            totalLength += len;\n            return totalLength;\n        });\n        if (totalLength !== tensor.shape[0]) {\n            throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${totalLength}, and tensor's shape is: ${tensor.shape}`);\n        }\n        if (!this.dynamicSize && length.length !== this.maxSize) {\n            throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${length.length}), ` +\n                'and the TensorArray is not marked as dynamically resizeable');\n        }\n        const elementPerRow = totalLength === 0 ? 0 : tensor.size / totalLength;\n        const tensors = [];\n        (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(() => {\n            tensor = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(tensor, [1, totalLength, elementPerRow]);\n            for (let i = 0; i < length.length; ++i) {\n                const previousLength = (i === 0) ? 0 : cumulativeLengths[i - 1];\n                const indices = [0, previousLength, 0];\n                const sizes = [1, length[i], elementPerRow];\n                tensors[i] = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(tensor, indices, sizes), this.elementShape);\n            }\n            return tensors;\n        });\n        const indices = [];\n        for (let i = 0; i < length.length; i++) {\n            indices[i] = i;\n        }\n        this.writeMany(indices, tensors);\n    }\n}\n//# sourceMappingURL=tensor_array.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_array.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_list.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_list.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export TensorList [provided] [no usage info] [missing usage info prevents renaming] */
/*! export fromTensor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export reserve [provided] [no usage info] [missing usage info prevents renaming] */
/*! export scatter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export split [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TensorList\": () => /* binding */ TensorList,\n/* harmony export */   \"fromTensor\": () => /* binding */ fromTensor,\n/* harmony export */   \"reserve\": () => /* binding */ reserve,\n/* harmony export */   \"scatter\": () => /* binding */ scatter,\n/* harmony export */   \"split\": () => /* binding */ split\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _tensor_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tensor_utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * TensorList stores a container of `tf.Tensor` objects, which are accessible\n * via tensors field.\n *\n * In order to get a copy of the underlying list, use the copy method:\n * ```\n *    TensorList b = a.copy();\n *    b.tensors().pushBack(t);  // This does not modify a.tensors().\n * ```\n *\n * Note that this is not a deep copy: the memory locations of the underlying\n * tensors will still point to the same locations of the corresponding tensors\n * in the original.\n */\nclass TensorList {\n    /**\n     *\n     * @param tensors list of tensors\n     * @param elementShape shape of each tensor, this can be a single number (any\n     * shape is allowed) or partial shape (dim = -1).\n     * @param elementDtype data type of each tensor\n     * @param maxNumElements The maximum allowed size of `tensors`. Defaults to -1\n     *   meaning that the size of `tensors` is unbounded.\n     */\n    constructor(tensors, elementShape, elementDtype, maxNumElements = -1) {\n        this.tensors = tensors;\n        this.elementShape = elementShape;\n        this.elementDtype = elementDtype;\n        if (tensors != null) {\n            tensors.forEach(tensor => {\n                if (elementDtype !== tensor.dtype) {\n                    throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${tensor.dtype}`);\n                }\n                (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatchAllowUndefinedSize)(elementShape, tensor.shape, 'TensorList shape mismatch: ');\n                (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.keep)(tensor);\n            });\n        }\n        this.idTensor = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(0);\n        this.maxNumElements = maxNumElements;\n        (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.keep)(this.idTensor);\n    }\n    get id() {\n        return this.idTensor.id;\n    }\n    /**\n     * Get a new TensorList containing a copy of the underlying tensor container.\n     */\n    copy() {\n        return new TensorList([...this.tensors], this.elementShape, this.elementDtype);\n    }\n    /**\n     * Dispose the tensors and idTensor and clear the tensor list.\n     */\n    clearAndClose(keepIds) {\n        this.tensors.forEach(tensor => {\n            if (keepIds == null || !keepIds.has(tensor.id)) {\n                tensor.dispose();\n            }\n        });\n        this.tensors.length = 0;\n        this.idTensor.dispose();\n    }\n    /**\n     * The size of the tensors in the tensor list.\n     */\n    size() {\n        return this.tensors.length;\n    }\n    /**\n     * Return a tensor that stacks a list of rank-R tf.Tensors into one rank-(R+1)\n     * tf.Tensor.\n     * @param elementShape shape of each tensor\n     * @param elementDtype data type of each tensor\n     * @param numElements the number of elements to stack\n     */\n    stack(elementShape, elementDtype, numElements = -1) {\n        if (elementDtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${this.elementDtype}`);\n        }\n        if (numElements !== -1 && this.tensors.length !== numElements) {\n            throw new Error(`Operation expected a list with ${numElements} elements but got a list with ${this.tensors.length} elements.`);\n        }\n        (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatchAllowUndefinedSize)(elementShape, this.elementShape, 'TensorList shape mismatch: ');\n        const outputElementShape = (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.inferElementShape)(this.elementShape, this.tensors, elementShape);\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(() => {\n            const reshapedTensors = this.tensors.map(tensor => (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(tensor, outputElementShape));\n            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.stack)(reshapedTensors, 0);\n        });\n    }\n    /**\n     * Pop a tensor from the end of the list.\n     * @param elementShape shape of the tensor\n     * @param elementDtype data type of the tensor\n     */\n    popBack(elementShape, elementDtype) {\n        if (elementDtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${this.elementDtype}`);\n        }\n        if (this.size() === 0) {\n            throw new Error('Trying to pop from an empty list.');\n        }\n        const outputElementShape = (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.inferElementShape)(this.elementShape, this.tensors, elementShape);\n        const tensor = this.tensors.pop();\n        (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatchAllowUndefinedSize)(tensor.shape, elementShape, 'TensorList shape mismatch: ');\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(tensor, outputElementShape);\n    }\n    /**\n     * Push a tensor to the end of the list.\n     * @param tensor Tensor to be pushed.\n     */\n    pushBack(tensor) {\n        if (tensor.dtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${tensor.dtype}, but list elements ${this.elementDtype}`);\n        }\n        (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatchAllowUndefinedSize)(tensor.shape, this.elementShape, 'TensorList shape mismatch: ');\n        if (this.maxNumElements === this.size()) {\n            throw new Error(`Trying to push element into a full list.`);\n        }\n        (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.keep)(tensor);\n        this.tensors.push(tensor);\n    }\n    /**\n     * Update the size of the list.\n     * @param size the new size of the list.\n     */\n    resize(size) {\n        if (size < 0) {\n            throw new Error(`TensorListResize expects size to be non-negative. Got: ${size}`);\n        }\n        if (this.maxNumElements !== -1 && size > this.maxNumElements) {\n            throw new Error(`TensorListResize input size ${size} is greater maxNumElement ${this.maxNumElements}.`);\n        }\n        this.tensors.length = size;\n    }\n    /**\n     * Retrieve the element at the provided index\n     * @param elementShape shape of the tensor\n     * @param elementDtype dtype of the tensor\n     * @param elementIndex index of the tensor\n     */\n    getItem(elementIndex, elementShape, elementDtype) {\n        if (elementDtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${this.elementDtype}`);\n        }\n        if (elementIndex < 0 || elementIndex > this.tensors.length) {\n            throw new Error(`Trying to access element ${elementIndex} in a list with ${this.tensors.length} elements.`);\n        }\n        if (this.tensors[elementIndex] == null) {\n            throw new Error(`element at index ${elementIndex} is null.`);\n        }\n        (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatchAllowUndefinedSize)(this.tensors[elementIndex].shape, elementShape, 'TensorList shape mismatch: ');\n        const outputElementShape = (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.inferElementShape)(this.elementShape, this.tensors, elementShape);\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(this.tensors[elementIndex], outputElementShape);\n    }\n    /**\n     * Set the tensor at the index\n     * @param elementIndex index of the tensor\n     * @param tensor the tensor to be inserted into the list\n     */\n    setItem(elementIndex, tensor) {\n        if (tensor.dtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${tensor.dtype}, but list elements ${this.elementDtype}`);\n        }\n        if (elementIndex < 0 ||\n            this.maxNumElements !== -1 && elementIndex >= this.maxNumElements) {\n            throw new Error(`Trying to set element ${elementIndex} in a list with max ${this.maxNumElements} elements.`);\n        }\n        (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatchAllowUndefinedSize)(this.elementShape, tensor.shape, 'TensorList shape mismatch: ');\n        (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.keep)(tensor);\n        this.tensors[elementIndex] = tensor;\n    }\n    /**\n     * Return selected values in the TensorList as a stacked Tensor. All of\n     * selected values must have been written and their shapes must all match.\n     * @param indices indices of tensors to gather\n     * @param elementDtype output tensor dtype\n     * @param elementShape output tensor element shape\n     */\n    gather(indices, elementDtype, elementShape) {\n        if (elementDtype !== this.elementDtype) {\n            throw new Error(`Invalid data types; op elements ${elementDtype}, but list elements ${this.elementDtype}`);\n        }\n        (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatchAllowUndefinedSize)(this.elementShape, elementShape, 'TensorList shape mismatch: ');\n        // When indices is greater than the size of the list, indices beyond the\n        // size of the list are ignored.\n        indices = indices.slice(0, this.size());\n        const outputElementShape = (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.inferElementShape)(this.elementShape, this.tensors, elementShape);\n        if (indices.length === 0) {\n            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor)([], [0].concat(outputElementShape));\n        }\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(() => {\n            const tensors = indices.map(i => (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(this.tensors[i], outputElementShape));\n            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.stack)(tensors, 0);\n        });\n    }\n    /**\n     * Return the values in the TensorList as a concatenated Tensor.\n     * @param elementDtype output tensor dtype\n     * @param elementShape output tensor element shape\n     */\n    concat(elementDtype, elementShape) {\n        if (!!elementDtype && elementDtype !== this.elementDtype) {\n            throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${elementDtype}`);\n        }\n        (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatchAllowUndefinedSize)(this.elementShape, elementShape, 'TensorList shape mismatch: ');\n        const outputElementShape = (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.inferElementShape)(this.elementShape, this.tensors, elementShape);\n        if (this.size() === 0) {\n            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tensor)([], [0].concat(outputElementShape));\n        }\n        return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(() => {\n            const tensors = this.tensors.map(t => (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(t, outputElementShape));\n            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.concat)(tensors, 0);\n        });\n    }\n}\n/**\n * Creates a TensorList which, when stacked, has the value of tensor.\n * @param tensor from tensor\n * @param elementShape output tensor element shape\n */\nfunction fromTensor(tensor, elementShape, elementDtype) {\n    const dtype = tensor.dtype;\n    if (tensor.shape.length < 1) {\n        throw new Error(`Tensor must be at least a vector, but saw shape: ${tensor.shape}`);\n    }\n    if (tensor.dtype !== elementDtype) {\n        throw new Error(`Invalid data types; op elements ${tensor.dtype}, but list elements ${elementDtype}`);\n    }\n    const tensorElementShape = tensor.shape.slice(1);\n    (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatchAllowUndefinedSize)(tensorElementShape, elementShape, 'TensorList shape mismatch: ');\n    const tensorList = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.unstack)(tensor);\n    return new TensorList(tensorList, elementShape, dtype);\n}\n/**\n * Return a TensorList of the given size with empty elements.\n * @param elementShape the shape of the future elements of the list\n * @param elementDtype the desired type of elements in the list\n * @param numElements the number of elements to reserve\n */\nfunction reserve(elementShape, elementDtype, numElements) {\n    return new TensorList([], elementShape, elementDtype, numElements);\n}\n/**\n * Put tensors at specific indices of a stacked tensor into a TensorList.\n * @param indices list of indices on how to scatter the tensor.\n * @param tensor input tensor.\n * @param elementShape the shape of the future elements of the list\n * @param numElements the number of elements to scatter\n */\nfunction scatter(tensor, indices, elementShape, numElements) {\n    if (indices.length !== tensor.shape[0]) {\n        throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${indices.length} vs. ${tensor.shape[0]}`);\n    }\n    const maxIndex = Math.max(...indices);\n    if (numElements != null && numElements !== -1 && maxIndex >= numElements) {\n        throw new Error(`Max index must be < array size (${maxIndex}  vs. ${numElements})`);\n    }\n    const list = new TensorList([], elementShape, tensor.dtype, numElements);\n    const tensors = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.unstack)(tensor, 0);\n    indices.forEach((value, index) => {\n        list.setItem(value, tensors[index]);\n    });\n    return list;\n}\n/**\n * Split the values of a Tensor into a TensorList.\n * @param length the lengths to use when splitting value along\n *    its first dimension.\n * @param tensor the tensor to split.\n * @param elementShape the shape of the future elements of the list\n */\nfunction split(tensor, length, elementShape) {\n    let totalLength = 0;\n    const cumulativeLengths = length.map(len => {\n        totalLength += len;\n        return totalLength;\n    });\n    if (totalLength !== tensor.shape[0]) {\n        throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${totalLength}, and tensor's shape is: ${tensor.shape}`);\n    }\n    const shapeWithoutFirstDim = tensor.shape.slice(1);\n    const outputElementShape = (0,_tensor_utils__WEBPACK_IMPORTED_MODULE_1__.mergeElementShape)(shapeWithoutFirstDim, elementShape);\n    const elementPerRow = totalLength === 0 ? 0 : tensor.size / totalLength;\n    const tensors = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(() => {\n        const tensors = [];\n        tensor = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)(tensor, [1, totalLength, elementPerRow]);\n        for (let i = 0; i < length.length; ++i) {\n            const previousLength = (i === 0) ? 0 : cumulativeLengths[i - 1];\n            const indices = [0, previousLength, 0];\n            const sizes = [1, length[i], elementPerRow];\n            tensors[i] = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.reshape)((0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.slice)(tensor, indices, sizes), outputElementShape);\n        }\n        tensor.dispose();\n        return tensors;\n    });\n    const list = new TensorList([], elementShape, tensor.dtype, length.length);\n    for (let i = 0; i < tensors.length; i++) {\n        list.setItem(i, tensors[i]);\n    }\n    return list;\n}\n//# sourceMappingURL=tensor_list.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_list.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_utils.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_utils.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export assertShapesMatchAllowUndefinedSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export fullDefinedShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export inferElementShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export mergeElementShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"assertShapesMatchAllowUndefinedSize\": () => /* binding */ assertShapesMatchAllowUndefinedSize,\n/* harmony export */   \"fullDefinedShape\": () => /* binding */ fullDefinedShape,\n/* harmony export */   \"inferElementShape\": () => /* binding */ inferElementShape,\n/* harmony export */   \"mergeElementShape\": () => /* binding */ mergeElementShape\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * This differs from util.assertShapesMatch in that it allows values of\n * negative one, an undefined size of a dimensinon, in a shape to match\n * anything.\n */\n;\n/**\n * Used by TensorList and TensorArray to verify if elementShape matches, support\n * negative value as the dim shape.\n * @param shapeA\n * @param shapeB\n * @param errorMessagePrefix\n */\nfunction assertShapesMatchAllowUndefinedSize(shapeA, shapeB, errorMessagePrefix = '') {\n    // constant shape means unknown rank\n    if (typeof shapeA === 'number' || typeof shapeB === 'number') {\n        return;\n    }\n    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(shapeA.length === shapeB.length, () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n    for (let i = 0; i < shapeA.length; i++) {\n        const dim0 = shapeA[i];\n        const dim1 = shapeB[i];\n        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.assert(dim0 < 0 || dim1 < 0 || dim0 === dim1, () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n    }\n}\nfunction fullDefinedShape(elementShape) {\n    if (typeof elementShape === 'number' || elementShape.some(dim => dim < 0)) {\n        return false;\n    }\n    return true;\n}\n/**\n * Generate the output element shape from the list elementShape, list tensors\n * and input param.\n * @param listElementShape\n * @param tensors\n * @param elementShape\n */\nfunction inferElementShape(listElementShape, tensors, elementShape) {\n    let partialShape = mergeElementShape(listElementShape, elementShape);\n    const notfullDefinedShape = !fullDefinedShape(partialShape);\n    if (notfullDefinedShape && tensors.length === 0) {\n        throw new Error(`Tried to calculate elements of an empty list` +\n            ` with non-fully-defined elementShape: ${partialShape}`);\n    }\n    if (notfullDefinedShape) {\n        tensors.forEach(tensor => {\n            partialShape = mergeElementShape(tensor.shape, partialShape);\n        });\n    }\n    if (!fullDefinedShape(partialShape)) {\n        throw new Error(`Non-fully-defined elementShape: ${partialShape}`);\n    }\n    return partialShape;\n}\nfunction mergeElementShape(elementShapeA, elementShapeB) {\n    if (typeof elementShapeA === 'number') {\n        return elementShapeB;\n    }\n    if (typeof elementShapeB === 'number') {\n        return elementShapeA;\n    }\n    if (elementShapeA.length !== elementShapeB.length) {\n        throw new Error(`Incompatible ranks during merge: ${elementShapeA} vs. ${elementShapeB}`);\n    }\n    const result = [];\n    for (let i = 0; i < elementShapeA.length; ++i) {\n        const dim0 = elementShapeA[i];\n        const dim1 = elementShapeB[i];\n        if (dim0 >= 0 && dim1 >= 0 && dim0 !== dim1) {\n            throw new Error(`Incompatible shape during merge: ${elementShapeA} vs. ${elementShapeB}`);\n        }\n        result[i] = dim0 >= 0 ? dim0 : dim1;\n    }\n    return result;\n}\n//# sourceMappingURL=tensor_utils.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_utils.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/index.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export GraphModel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-converter/dist/executor/graph_model.js .GraphModel */
/*! export deregisterOp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/register.js .deregisterOp */
/*! export loadGraphModel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-converter/dist/executor/graph_model.js .loadGraphModel */
/*! export registerOp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/register.js .registerOp */
/*! export version_converter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-converter/dist/version.js .version */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GraphModel\": () => /* reexport safe */ _executor_graph_model__WEBPACK_IMPORTED_MODULE_0__.GraphModel,\n/* harmony export */   \"loadGraphModel\": () => /* reexport safe */ _executor_graph_model__WEBPACK_IMPORTED_MODULE_0__.loadGraphModel,\n/* harmony export */   \"deregisterOp\": () => /* reexport safe */ _operations_custom_op_register__WEBPACK_IMPORTED_MODULE_1__.deregisterOp,\n/* harmony export */   \"registerOp\": () => /* reexport safe */ _operations_custom_op_register__WEBPACK_IMPORTED_MODULE_1__.registerOp,\n/* harmony export */   \"version_converter\": () => /* reexport safe */ _version__WEBPACK_IMPORTED_MODULE_2__.version\n/* harmony export */ });\n/* harmony import */ var _executor_graph_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./executor/graph_model */ \"./node_modules/@tensorflow/tfjs-converter/dist/executor/graph_model.js\");\n/* harmony import */ var _operations_custom_op_register__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operations/custom_op/register */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/register.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./version */ \"./node_modules/@tensorflow/tfjs-converter/dist/version.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/index.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/node_value_impl.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/node_value_impl.js ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export NodeValueImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"NodeValueImpl\": () => /* binding */ NodeValueImpl\n/* harmony export */ });\n/* harmony import */ var _executors_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../executors/utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/* harmony import */ var _operation_mapper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation_mapper */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * Helper class for lookup inputs and params for nodes in the model graph.\n */\nclass NodeValueImpl {\n    constructor(node, tensorMap, context) {\n        this.node = node;\n        this.tensorMap = tensorMap;\n        this.context = context;\n        this.inputs = [];\n        this.attrs = {};\n        this.inputs = node.inputNames.map(name => this.getInput(name));\n        if (node.rawAttrs != null) {\n            this.attrs = Object.keys(node.rawAttrs)\n                .reduce((attrs, key) => {\n                attrs[key] = this.getAttr(key);\n                return attrs;\n            }, {});\n        }\n    }\n    /**\n     * Return the value of the attribute or input param.\n     * @param name String: name of attribute or input param.\n     */\n    getInput(name) {\n        return (0,_executors_utils__WEBPACK_IMPORTED_MODULE_0__.getTensor)(name, this.tensorMap, this.context);\n    }\n    /**\n     * Return the value of the attribute or input param.\n     * @param name String: name of attribute or input param.\n     */\n    getAttr(name, defaultValue) {\n        const value = this.node.rawAttrs[name];\n        if (value.tensor != null) {\n            return (0,_executors_utils__WEBPACK_IMPORTED_MODULE_0__.getTensor)(name, this.tensorMap, this.context);\n        }\n        if (value.i != null || value.f != null) {\n            return (0,_operation_mapper__WEBPACK_IMPORTED_MODULE_1__.getNumberParam)(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.s != null) {\n            return (0,_operation_mapper__WEBPACK_IMPORTED_MODULE_1__.getStringParam)(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.b != null) {\n            return (0,_operation_mapper__WEBPACK_IMPORTED_MODULE_1__.getBoolParam)(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.shape != null) {\n            return (0,_operation_mapper__WEBPACK_IMPORTED_MODULE_1__.getTensorShapeParam)(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.type != null) {\n            return (0,_operation_mapper__WEBPACK_IMPORTED_MODULE_1__.getDtypeParam)(this.node.rawAttrs, name, defaultValue);\n        }\n        if (value.list != null) {\n            if (value.list.i != null || value.list.f != null) {\n                return (0,_operation_mapper__WEBPACK_IMPORTED_MODULE_1__.getNumericArrayParam)(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.s != null) {\n                return (0,_operation_mapper__WEBPACK_IMPORTED_MODULE_1__.getStringArrayParam)(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.shape != null) {\n                return (0,_operation_mapper__WEBPACK_IMPORTED_MODULE_1__.getTensorShapeArrayParam)(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.b != null) {\n                return (0,_operation_mapper__WEBPACK_IMPORTED_MODULE_1__.getBoolArrayParam)(this.node.rawAttrs, name, defaultValue);\n            }\n            if (value.list.type != null) {\n                return (0,_operation_mapper__WEBPACK_IMPORTED_MODULE_1__.getDtypeArrayParam)(this.node.rawAttrs, name, defaultValue);\n            }\n        }\n        return defaultValue;\n    }\n}\n//# sourceMappingURL=node_value_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/node_value_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/register.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/register.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export deregisterOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getRegisteredOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export registerOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"registerOp\": () => /* binding */ registerOp,\n/* harmony export */   \"getRegisteredOp\": () => /* binding */ getRegisteredOp,\n/* harmony export */   \"deregisterOp\": () => /* binding */ deregisterOp\n/* harmony export */ });\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst CUSTOM_OPS = {};\n/**\n * Register an Op for graph model executor. This allow you to register\n * TensorFlow custom op or override existing op.\n *\n * Here is an example of registering a new MatMul Op.\n * ```js\n * const customMatmul = (node) =>\n *    tf.matMul(\n *        node.inputs[0], node.inputs[1],\n *        node.attrs['transpose_a'], node.attrs['transpose_b']);\n *\n * tf.registerOp('MatMul', customMatmul);\n * ```\n * The inputs and attrs of the node object is based on the TensorFlow op\n * registry.\n *\n * @param name The Tensorflow Op name.\n * @param opFunc An op function which is called with the current graph node\n * during execution and needs to return a tensor or a list of tensors. The node\n * has the following attributes:\n *    - attr: A map from attribute name to its value\n *    - inputs: A list of input tensors\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nfunction registerOp(name, opFunc) {\n    const opMapper = {\n        tfOpName: name,\n        category: 'custom',\n        inputs: [],\n        attrs: [],\n        customExecutor: opFunc\n    };\n    CUSTOM_OPS[name] = opMapper;\n}\n/**\n * Retrieve the OpMapper object for the registered op.\n *\n * @param name The Tensorflow Op name.\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nfunction getRegisteredOp(name) {\n    return CUSTOM_OPS[name];\n}\n/**\n * Deregister the Op for graph model executor.\n *\n * @param name The Tensorflow Op name.\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nfunction deregisterOp(name) {\n    delete CUSTOM_OPS[name];\n}\n//# sourceMappingURL=register.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/register.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/arithmetic_executor.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/arithmetic_executor.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mod.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div_no_nan.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\n;\n\nconst executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'BiasAdd':\n        case 'AddV2':\n        case 'Add': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.add((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'AddN': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.addN((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('tensors', node, tensorMap, context))];\n        }\n        case 'FloorMod':\n        case 'Mod':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__.mod((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        case 'Mul':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__.mul((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        case 'RealDiv':\n        case 'Div': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__.div((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'DivNoNan': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__.divNoNan((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'FloorDiv': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__.floorDiv((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'Sub': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__.sub((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'Minimum': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__.minimum((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'Maximum': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__.maximum((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'Pow': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_11__.pow((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'SquaredDifference': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_12__.squaredDifference((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'arithmetic';\n//# sourceMappingURL=arithmetic_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/arithmetic_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/acos.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/acosh.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/asin.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/asinh.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/atan.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/atanh.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ceil.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cos.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cosh.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/erf.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/expm1.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reciprocal.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/real.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/round.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/selu.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sin.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sign.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sinh.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tan.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rsqrt.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/prod.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\n;\n\nconst executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'Abs':\n        case 'ComplexAbs':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.abs((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Acos':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.acos((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Acosh':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__.acosh((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Asin':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__.asin((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Asinh':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__.asinh((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Atan':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__.atan((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Atan2':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__.atan2((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('y', node, tensorMap, context))];\n        case 'Atanh':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__.atanh((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Ceil':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__.ceil((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Complex':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__.complex((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('real', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('imag', node, tensorMap, context))];\n        case 'Cos':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_11__.cos((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Cosh':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_12__.cosh((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Elu':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_13__.elu((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Erf':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_14__.erf((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Exp':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_15__.exp((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Expm1': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_16__.expm1((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'Floor':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_17__.floor((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Log':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_18__.log((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Log1p': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_19__.log1p((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'Imag':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_20__.imag((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Neg':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_21__.neg((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Reciprocal': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_22__.reciprocal((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'Real':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_23__.real((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Relu':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_24__.relu((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Round': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_25__.round((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'Selu':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_26__.selu((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Sigmoid':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_27__.sigmoid((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Sin':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_28__.sin((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Sign': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_29__.sign((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'Sinh': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_30__.sinh((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'Softplus': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_31__.softplus((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'Sqrt': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_32__.sqrt((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'Square': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_33__.square((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'Tanh': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_34__.tanh((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'Tan':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_35__.tan((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'ClipByValue':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_36__.clipByValue((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('clipValueMin', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('clipValueMax', node, tensorMap, context))];\n        case 'Relu6':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_37__.relu6((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        case 'Rsqrt':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_38__.rsqrt((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getTensor)(node.inputNames[0], tensorMap, context))];\n        case 'Prod':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_39__.prod((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('axes', node, tensorMap, context))];\n        case 'LeakyRelu':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_40__.leakyRelu((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('alpha', node, tensorMap, context))];\n        case 'Prelu':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_41__.prelu((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('alpha', node, tensorMap, context))];\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'basic_math';\n//# sourceMappingURL=basic_math_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/control_executor.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/control_executor.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _executor_tensor_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../executor/tensor_array */ \"./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_array.js\");\n/* harmony import */ var _executor_tensor_list__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../executor/tensor_list */ \"./node_modules/@tensorflow/tfjs-converter/dist/executor/tensor_list.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nconst executeOp = async (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'If':\n        case 'StatelessIf': {\n            const thenFunc = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('thenBranch', node, tensorMap, context);\n            const elseFunc = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elseBranch', node, tensorMap, context);\n            const cond = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('cond', node, tensorMap, context);\n            const args = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('args', node, tensorMap, context);\n            const condValue = await cond.data();\n            if (condValue[0]) {\n                return context.functionMap[thenFunc].executeFunctionAsync(args, context.tensorArrayMap, context.tensorListMap);\n            }\n            else {\n                return context.functionMap[elseFunc].executeFunctionAsync(args, context.tensorArrayMap, context.tensorListMap);\n            }\n        }\n        case 'While':\n        case 'StatelessWhile': {\n            const bodyFunc = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('body', node, tensorMap, context);\n            const condFunc = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('cond', node, tensorMap, context);\n            const args = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('args', node, tensorMap, context);\n            // Calculate the condition of the loop\n            const condResult = (await context.functionMap[condFunc].executeFunctionAsync(args, context.tensorArrayMap, context.tensorListMap));\n            const argIds = args.map(tensor => tensor.id);\n            let condValue = await condResult[0].data();\n            // Dispose the intermediate tensors for condition function\n            condResult.forEach(tensor => {\n                if (!tensor.kept && argIds.indexOf(tensor.id) === -1) {\n                    tensor.dispose();\n                }\n            });\n            let result = args;\n            while (condValue[0]) {\n                // Record the previous result for intermediate tensor tracking\n                const origResult = result;\n                // Execution the body of the loop\n                result = await context.functionMap[bodyFunc].executeFunctionAsync(result, context.tensorArrayMap, context.tensorListMap);\n                const resultIds = result.map(tensor => tensor.id);\n                // Dispose the intermediate tensor for body function that is not global\n                // kept, not input/output of the body function\n                origResult.forEach(tensor => {\n                    if (!tensor.kept && argIds.indexOf(tensor.id) === -1 &&\n                        resultIds.indexOf(tensor.id) === -1) {\n                        tensor.dispose();\n                    }\n                });\n                // Recalcuate the condition of the loop using the latest results.\n                const condResult = (await context.functionMap[condFunc].executeFunctionAsync(result, context.tensorArrayMap, context.tensorListMap));\n                condValue = await condResult[0].data();\n                // Dispose the intermediate tensors for condition function\n                condResult.forEach(tensor => {\n                    if (!tensor.kept && argIds.indexOf(tensor.id) === -1 &&\n                        resultIds.indexOf(tensor.id) === -1) {\n                        tensor.dispose();\n                    }\n                });\n            }\n            return result;\n        }\n        case 'LoopCond': {\n            const pred = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('pred', node, tensorMap, context);\n            return [(0,_utils__WEBPACK_IMPORTED_MODULE_3__.cloneTensor)(pred)];\n        }\n        case 'Switch': {\n            const pred = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('pred', node, tensorMap, context);\n            let data = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('data', node, tensorMap, context);\n            if (!data.kept) {\n                data = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.cloneTensor)(data);\n            }\n            // Outputs nodes :0 => false, :1 => true\n            return (await pred.data())[0] ? [undefined, data] : [data, undefined];\n        }\n        case 'Merge': {\n            const inputName = node.inputNames.find(name => (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getTensor)(name, tensorMap, context) !== undefined);\n            if (inputName) {\n                const data = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getTensor)(inputName, tensorMap, context);\n                return [(0,_utils__WEBPACK_IMPORTED_MODULE_3__.cloneTensor)(data)];\n            }\n            return undefined;\n        }\n        case 'Enter': {\n            const frameId = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('frameName', node, tensorMap, context);\n            const data = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensor', node, tensorMap, context);\n            context.enterFrame(frameId);\n            return [(0,_utils__WEBPACK_IMPORTED_MODULE_3__.cloneTensor)(data)];\n        }\n        case 'Exit': {\n            const data = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensor', node, tensorMap, context);\n            context.exitFrame();\n            return [(0,_utils__WEBPACK_IMPORTED_MODULE_3__.cloneTensor)(data)];\n        }\n        case 'NextIteration': {\n            const data = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensor', node, tensorMap, context);\n            context.nextIteration();\n            return [(0,_utils__WEBPACK_IMPORTED_MODULE_3__.cloneTensor)(data)];\n        }\n        case 'TensorArrayV3': {\n            const size = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('size', node, tensorMap, context);\n            const dtype = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('dtype', node, tensorMap, context);\n            const elementShape = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementShape', node, tensorMap, context);\n            const dynamicSize = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('dynamicSize', node, tensorMap, context);\n            const clearAfterRead = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('clearAfterRead', node, tensorMap, context);\n            const identicalElementShapes = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('identicalElementShapes', node, tensorMap, context);\n            const name = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('name', node, tensorMap, context);\n            const tensorArray = new _executor_tensor_array__WEBPACK_IMPORTED_MODULE_1__.TensorArray(name, dtype, size, elementShape, identicalElementShapes, dynamicSize, clearAfterRead);\n            context.addTensorArray(tensorArray);\n            return [tensorArray.idTensor, (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(1.0)];\n        }\n        case 'TensorArrayWriteV3': {\n            const id = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorArrayId', node, tensorMap, context);\n            const index = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('index', node, tensorMap, context);\n            const writeTensor = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensor', node, tensorMap, context);\n            const writeTensorArray = context.getTensorArray(id.id);\n            writeTensorArray.write(index, writeTensor);\n            return [writeTensorArray.idTensor];\n        }\n        case 'TensorArrayReadV3': {\n            const readId = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorArrayId', node, tensorMap, context);\n            const readIndex = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('index', node, tensorMap, context);\n            const readTensorArray = context.getTensorArray(readId.id);\n            return [readTensorArray.read(readIndex)];\n        }\n        case 'TensorArrayGatherV3': {\n            const gatherId = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorArrayId', node, tensorMap, context);\n            const gatherIndices = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('indices', node, tensorMap, context);\n            const gatherDtype = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('dtype', node, tensorMap, context);\n            const gatherTensorArray = context.getTensorArray(gatherId.id);\n            return [gatherTensorArray.gather(gatherIndices, gatherDtype)];\n        }\n        case 'TensorArrayScatterV3': {\n            const scatterId = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorArrayId', node, tensorMap, context);\n            const scatterIndices = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('indices', node, tensorMap, context);\n            const scatterTensor = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensor', node, tensorMap, context);\n            const scatterTensorArray = context.getTensorArray(scatterId.id);\n            scatterTensorArray.scatter(scatterIndices, scatterTensor);\n            return [scatterTensorArray.idTensor];\n        }\n        case 'TensorArrayConcatV3': {\n            const concatId = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorArrayId', node, tensorMap, context);\n            const concatTensorArray = context.getTensorArray(concatId.id);\n            const concatDtype = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('dtype', node, tensorMap, context);\n            return [concatTensorArray.concat(concatDtype)];\n        }\n        case 'TensorArraySplitV3': {\n            const splitId = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorArrayId', node, tensorMap, context);\n            const splitTensor = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensor', node, tensorMap, context);\n            const lengths = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('lengths', node, tensorMap, context);\n            const splitTensorArray = context.getTensorArray(splitId.id);\n            splitTensorArray.split(lengths, splitTensor);\n            return [splitTensorArray.idTensor];\n        }\n        case 'TensorArraySizeV3': {\n            const sizeId = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorArrayId', node, tensorMap, context);\n            const sizeTensorArray = context.getTensorArray(sizeId.id);\n            return [(0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.scalar)(sizeTensorArray.size(), 'int32')];\n        }\n        case 'TensorArrayCloseV3': {\n            const closeId = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorArrayId', node, tensorMap, context);\n            const closeTensorArray = context.getTensorArray(closeId.id);\n            closeTensorArray.clearAndClose();\n            return [closeTensorArray.idTensor];\n        }\n        case 'TensorListSetItem': {\n            const idTensor = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorListId', node, tensorMap, context);\n            const index = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('index', node, tensorMap, context);\n            const writeTensor = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensor', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            tensorList.setItem(index, writeTensor);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListGetItem': {\n            const idTensor = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorListId', node, tensorMap, context);\n            const readIndex = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('index', node, tensorMap, context);\n            const elementShape = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementShape', node, tensorMap, context);\n            const elementDType = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementDType', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            return [tensorList.getItem(readIndex, elementShape, elementDType)];\n        }\n        case 'TensorListScatterV2':\n        case 'TensorListScatter': {\n            const scatterIndices = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('indices', node, tensorMap, context);\n            const scatterTensor = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensor', node, tensorMap, context);\n            const elementShape = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementShape', node, tensorMap, context);\n            const numElements = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('numElements', node, tensorMap, context);\n            const tensorList = (0,_executor_tensor_list__WEBPACK_IMPORTED_MODULE_2__.scatter)(scatterTensor, scatterIndices, elementShape, numElements);\n            context.addTensorList(tensorList);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListReserve':\n        case 'EmptyTensorList': {\n            const elementShape = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementShape', node, tensorMap, context);\n            const elementDtype = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementDType', node, tensorMap, context);\n            let numElementsParam;\n            if (node.op === 'TensorListReserve') {\n                numElementsParam = 'numElements';\n            }\n            else {\n                numElementsParam = 'maxNumElements';\n            }\n            const numElements = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)(numElementsParam, node, tensorMap, context);\n            const tensorList = (0,_executor_tensor_list__WEBPACK_IMPORTED_MODULE_2__.reserve)(elementShape, elementDtype, numElements);\n            context.addTensorList(tensorList);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListGather': {\n            const gatherId = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorListId', node, tensorMap, context);\n            const gatherIndices = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('indices', node, tensorMap, context);\n            const elementShape = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementShape', node, tensorMap, context);\n            const elementDtype = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementDType', node, tensorMap, context);\n            const tensorList = context.getTensorList(gatherId.id);\n            return [tensorList.gather(gatherIndices, elementDtype, elementShape)];\n        }\n        case 'TensorListStack': {\n            const idTensor = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorListId', node, tensorMap, context);\n            const elementShape = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementShape', node, tensorMap, context);\n            const elementDtype = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementDType', node, tensorMap, context);\n            const numElements = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('numElements', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            return [tensorList.stack(elementShape, elementDtype, numElements)];\n        }\n        case 'TensorListFromTensor': {\n            const tensor = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensor', node, tensorMap, context);\n            const elementShape = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementShape', node, tensorMap, context);\n            const elementDtype = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementDType', node, tensorMap, context);\n            const tensorList = (0,_executor_tensor_list__WEBPACK_IMPORTED_MODULE_2__.fromTensor)(tensor, elementShape, elementDtype);\n            context.addTensorList(tensorList);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListConcat': {\n            const concatId = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorListId', node, tensorMap, context);\n            const tensorList = context.getTensorList(concatId.id);\n            const concatDtype = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('dtype', node, tensorMap, context);\n            const elementShape = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementShape', node, tensorMap, context);\n            return [tensorList.concat(concatDtype, elementShape)];\n        }\n        case 'TensorListPushBack': {\n            const idTensor = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorListId', node, tensorMap, context);\n            const writeTensor = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensor', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            tensorList.pushBack(writeTensor);\n            return [tensorList.idTensor];\n        }\n        case 'TensorListPopBack': {\n            const idTensor = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensorListId', node, tensorMap, context);\n            const elementShape = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementShape', node, tensorMap, context);\n            const elementDType = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementDType', node, tensorMap, context);\n            const tensorList = context.getTensorList(idTensor.id);\n            return [tensorList.popBack(elementShape, elementDType)];\n        }\n        case 'TensorListSplit': {\n            const splitTensor = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('tensor', node, tensorMap, context);\n            const elementShape = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('elementShape', node, tensorMap, context);\n            const lengths = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getParamValue)('lengths', node, tensorMap, context);\n            const tensorList = (0,_executor_tensor_list__WEBPACK_IMPORTED_MODULE_2__.split)(splitTensor, lengths, elementShape);\n            context.addTensorList(tensorList);\n            return [tensorList.idTensor];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'control';\n//# sourceMappingURL=control_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/control_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/convolution_executor.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/convolution_executor.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv1d.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused_ops.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_with_argmax.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/dilation2d.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\n;\n\nfunction fusedConvAndDepthWiseParams(node, tensorMap, context) {\n    const [extraOp, activationFunc] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('fusedOps', node, tensorMap, context);\n    const isBiasAdd = extraOp === 'biasadd';\n    const isPrelu = activationFunc === 'prelu';\n    const isBatchNorm = extraOp === 'fusedbatchnorm';\n    const numArgs = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('numArgs', node, tensorMap, context);\n    if (isBiasAdd) {\n        if (isPrelu && numArgs !== 2) {\n            throw new Error('FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu ' +\n                'must have two extra arguments: bias and alpha.');\n        }\n        if (!isPrelu && numArgs !== 1) {\n            throw new Error('FusedConv2d and DepthwiseConv2d with BiasAdd must have ' +\n                'one extra argument: bias.');\n        }\n    }\n    if (isBatchNorm) {\n        throw new Error('FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.');\n    }\n    const stride = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('strides', node, tensorMap, context);\n    const pad = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getPadding)(node, tensorMap, context);\n    const dataFormat = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dataFormat', node, tensorMap, context)\n        .toUpperCase();\n    const dilations = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dilations', node, tensorMap, context);\n    const [biasArg, preluArg] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('args', node, tensorMap, context);\n    const leakyreluAlpha = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('leakyreluAlpha', node, tensorMap, context);\n    return {\n        stride,\n        pad,\n        dataFormat,\n        dilations,\n        biasArg,\n        preluArg,\n        activationFunc,\n        leakyreluAlpha\n    };\n}\nconst executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'Conv1D': {\n            const stride = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('stride', node, tensorMap, context);\n            const pad = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('pad', node, tensorMap, context);\n            const dataFormat = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dataFormat', node, tensorMap, context)\n                .toUpperCase();\n            const dilation = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dilation', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.conv1d((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('filter', node, tensorMap, context), stride, pad, dataFormat, dilation)];\n        }\n        case 'Conv2D': {\n            const stride = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('strides', node, tensorMap, context);\n            const pad = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getPadding)(node, tensorMap, context);\n            const dataFormat = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dataFormat', node, tensorMap, context)\n                .toUpperCase();\n            const dilations = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dilations', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.conv2d((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('filter', node, tensorMap, context), [stride[1], stride[2]], pad, dataFormat, [dilations[1], dilations[2]])];\n        }\n        case '_FusedConv2D': {\n            const { stride, pad, dataFormat, dilations, biasArg, preluArg, activationFunc, leakyreluAlpha } = fusedConvAndDepthWiseParams(node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__.conv2d({\n                    x: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context),\n                    filter: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('filter', node, tensorMap, context),\n                    strides: [stride[1], stride[2]],\n                    pad: pad,\n                    dataFormat: dataFormat,\n                    dilations: [dilations[1], dilations[2]],\n                    bias: biasArg,\n                    activation: activationFunc,\n                    preluActivationWeights: preluArg,\n                    leakyreluAlpha\n                })];\n        }\n        case 'FusedDepthwiseConv2dNative': {\n            const { stride, pad, dataFormat, dilations, biasArg, preluArg, activationFunc, leakyreluAlpha, } = fusedConvAndDepthWiseParams(node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__.depthwiseConv2d({\n                    x: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context),\n                    filter: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('filter', node, tensorMap, context),\n                    strides: [stride[1], stride[2]],\n                    pad: pad,\n                    dataFormat: dataFormat,\n                    dilations: [dilations[1], dilations[2]],\n                    bias: biasArg,\n                    activation: activationFunc,\n                    preluActivationWeights: preluArg,\n                    leakyreluAlpha\n                })];\n        }\n        case 'Conv2DBackpropInput':\n        case 'Conv2dTranspose': {\n            const shape = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('outputShape', node, tensorMap, context);\n            const stride = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('strides', node, tensorMap, context);\n            const pad = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getPadding)(node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__.conv2dTranspose((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('filter', node, tensorMap, context), shape, [stride[1], stride[2]], pad)];\n        }\n        case 'DepthwiseConv2dNative':\n        case 'DepthwiseConv2d': {\n            const stride = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('strides', node, tensorMap, context);\n            const pad = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getPadding)(node, tensorMap, context);\n            const dilations = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dilations', node, tensorMap, context);\n            const dataFormat = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dataFormat', node, tensorMap, context)\n                .toUpperCase();\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__.depthwiseConv2d((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('input', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('filter', node, tensorMap, context), [stride[1], stride[2]], pad, dataFormat, [dilations[1], dilations[2]])];\n        }\n        case 'Conv3D': {\n            const stride = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('strides', node, tensorMap, context);\n            const pad = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('pad', node, tensorMap, context);\n            const dataFormat = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dataFormat', node, tensorMap, context)\n                .toUpperCase();\n            const dilations = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dilations', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__.conv3d((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('filter', node, tensorMap, context), [stride[1], stride[2], stride[3]], pad, dataFormat, [dilations[1], dilations[2], dilations[3]])];\n        }\n        case 'AvgPool': {\n            const stride = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('strides', node, tensorMap, context);\n            const pad = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('pad', node, tensorMap, context);\n            const kernelSize = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('kernelSize', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__.avgPool((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), [kernelSize[1], kernelSize[2]], [stride[1], stride[2]], pad)];\n        }\n        case 'MaxPool': {\n            const stride = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('strides', node, tensorMap, context);\n            const pad = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('pad', node, tensorMap, context);\n            const kernelSize = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('kernelSize', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__.maxPool((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), [kernelSize[1], kernelSize[2]], [stride[1], stride[2]], pad)];\n        }\n        case 'MaxPoolWithArgmax': {\n            const stride = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('strides', node, tensorMap, context);\n            const pad = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('pad', node, tensorMap, context);\n            const kernelSize = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('kernelSize', node, tensorMap, context);\n            const includeBatchInIndex = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('includeBatchInIndex', node, tensorMap, context);\n            const { result, indexes } = _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__.maxPoolWithArgmax((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), [kernelSize[1], kernelSize[2]], [stride[1], stride[2]], pad, includeBatchInIndex);\n            return [result, indexes];\n        }\n        case 'AvgPool3D': {\n            const stride = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('strides', node, tensorMap, context);\n            const pad = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('pad', node, tensorMap, context);\n            const kernelSize = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('kernelSize', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__.avgPool3d((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), [kernelSize[1], kernelSize[2], kernelSize[3]], [stride[1], stride[2], stride[3]], pad)];\n        }\n        case 'MaxPool3D': {\n            const stride = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('strides', node, tensorMap, context);\n            const pad = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('pad', node, tensorMap, context);\n            const kernelSize = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('kernelSize', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_11__.maxPool3d((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), [kernelSize[1], kernelSize[2], kernelSize[3]], [stride[1], stride[2], stride[3]], pad)];\n        }\n        case 'Dilation2D': {\n            const strides = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('strides', node, tensorMap, context);\n            const pad = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('pad', node, tensorMap, context);\n            const dilations = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dilations', node, tensorMap, context);\n            // strides: [1, stride_height, stride_width, 1].\n            const strideHeight = strides[1];\n            const strideWidth = strides[2];\n            // dilations: [1, dilation_height, dilation_width, 1].\n            const dilationHeight = dilations[1];\n            const dilationWidth = dilations[2];\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_12__.dilation2d((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('filter', node, tensorMap, context), [strideHeight, strideWidth], pad, [dilationHeight, dilationWidth], 'NHWC' /* dataFormat */)];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'convolution';\n//# sourceMappingURL=convolution_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/convolution_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/creation_executor.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/creation_executor.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/linspace.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/multinomial.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ones_like.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/range.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/truncated_normal.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\n;\n\nconst executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'Fill': {\n            const shape = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('shape', node, tensorMap, context);\n            const dtype = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dtype', node, tensorMap, context);\n            const value = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('value', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.fill(shape, value, dtype)];\n        }\n        case 'LinSpace': {\n            const start = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('start', node, tensorMap, context);\n            const stop = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('stop', node, tensorMap, context);\n            const num = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('num', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.linspace(start, stop, num)];\n        }\n        case 'Multinomial': {\n            const logits = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('logits', node, tensorMap, context);\n            const numSamples = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('numSamples', node, tensorMap, context);\n            const seed = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('seed', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__.multinomial(logits, numSamples, seed)];\n        }\n        case 'OneHot': {\n            const indices = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('indices', node, tensorMap, context);\n            const depth = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('depth', node, tensorMap, context);\n            const onValue = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('onValue', node, tensorMap, context);\n            const offValue = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('offValue', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__.oneHot(indices, depth, onValue, offValue)];\n        }\n        case 'Ones': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__.ones((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('shape', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dtype', node, tensorMap, context))];\n        }\n        case 'OnesLike': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__.onesLike((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'RandomUniform': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__.randomUniform(\n                // tslint:disable-next-line:no-any\n                (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('shape', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('minval', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('maxval', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dtype', node, tensorMap, context))];\n        }\n        case 'Range': {\n            const start = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('start', node, tensorMap, context);\n            const stop = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('stop', node, tensorMap, context);\n            const step = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('step', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__.range(start, stop, step, (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dtype', node, tensorMap, context))];\n        }\n        case 'TruncatedNormal': {\n            const shape = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('shape', node, tensorMap, context);\n            const mean = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('mean', node, tensorMap, context);\n            const stdDev = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('stdDev', node, tensorMap, context);\n            const seed = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('seed', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__.truncatedNormal(shape, mean, stdDev, (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dtype', node, tensorMap, context), seed)];\n        }\n        case 'Zeros': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__.zeros((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('shape', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dtype', node, tensorMap, context))];\n        }\n        case 'ZerosLike': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_11__.zerosLike((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'creation';\n//# sourceMappingURL=creation_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/creation_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/dynamic_executor.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/dynamic_executor.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\n;\n\nfunction nmsParams(node, tensorMap, context) {\n    const boxes = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('boxes', node, tensorMap, context);\n    const scores = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('scores', node, tensorMap, context);\n    const maxOutputSize = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('maxOutputSize', node, tensorMap, context);\n    const iouThreshold = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('iouThreshold', node, tensorMap, context);\n    const scoreThreshold = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('scoreThreshold', node, tensorMap, context);\n    const softNmsSigma = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('softNmsSigma', node, tensorMap, context);\n    return {\n        boxes,\n        scores,\n        maxOutputSize,\n        iouThreshold,\n        scoreThreshold,\n        softNmsSigma\n    };\n}\nconst executeOp = async (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'NonMaxSuppressionV5': {\n            const { boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma } = nmsParams(node, tensorMap, context);\n            const result = await _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.image.nonMaxSuppressionWithScoreAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n            return [result.selectedIndices, result.selectedScores];\n        }\n        case 'NonMaxSuppressionV4': {\n            const { boxes, scores, maxOutputSize, iouThreshold, scoreThreshold } = nmsParams(node, tensorMap, context);\n            const padToMaxOutputSize = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('padToMaxOutputSize', node, tensorMap, context);\n            const result = await _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.image.nonMaxSuppressionPaddedAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize);\n            return [result.selectedIndices, result.validOutputs];\n        }\n        case 'NonMaxSuppressionV3':\n        case 'NonMaxSuppressionV2': {\n            const { boxes, scores, maxOutputSize, iouThreshold, scoreThreshold } = nmsParams(node, tensorMap, context);\n            return [await _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.image.nonMaxSuppressionAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold)];\n        }\n        case 'Where': {\n            const condition = _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.cast((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('condition', node, tensorMap, context), 'bool');\n            const result = [await _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__.whereAsync(condition)];\n            condition.dispose();\n            return result;\n        }\n        case 'ListDiff': {\n            return _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__.setdiff1dAsync((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('y', node, tensorMap, context));\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'dynamic';\n//# sourceMappingURL=dynamic_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/dynamic_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/evaluation_executor.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/evaluation_executor.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/topk.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/unique.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\n;\n\nconst executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'TopKV2': {\n            const x = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context);\n            const k = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('k', node, tensorMap, context);\n            const sorted = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('sorted', node, tensorMap, context);\n            const result = _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.topk(x, k, sorted);\n            return [result.values, result.indices];\n        }\n        case 'Unique': {\n            const x = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context);\n            const result = _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.unique(x);\n            return [result.values, result.indices];\n        }\n        case 'UniqueV2': {\n            const x = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context);\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('axis', node, tensorMap, context);\n            const result = _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.unique(x, axis);\n            return [result.values, result.indices];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'evaluation';\n//# sourceMappingURL=evaluation_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/evaluation_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/graph_executor.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/graph_executor.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\n;\n\nconst executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'Const': {\n            return tensorMap[node.name];\n        }\n        case 'PlaceholderWithDefault':\n            const def = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('default', node, tensorMap, context);\n            return [(0,_utils__WEBPACK_IMPORTED_MODULE_0__.getTensor)(node.name, tensorMap, context) || def];\n        case 'Placeholder':\n            return [(0,_utils__WEBPACK_IMPORTED_MODULE_0__.getTensor)(node.name, tensorMap, context)];\n        case 'Identity':\n        case 'StopGradient':\n        case 'FakeQuantWithMinMaxVars': { // This op is currently ignored.\n            const data = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context);\n            return [(0,_utils__WEBPACK_IMPORTED_MODULE_0__.cloneTensor)(data)];\n        }\n        case 'IdentityN':\n            return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context)\n                .map((t) => (0,_utils__WEBPACK_IMPORTED_MODULE_0__.cloneTensor)(t));\n        case 'Snapshot':\n            const snapshot = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context);\n            return [(0,_utils__WEBPACK_IMPORTED_MODULE_0__.cloneTensor)(snapshot)];\n        case 'Shape':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.tensor1d((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context).shape, 'int32')];\n        case 'ShapeN':\n            return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context)\n                .map((t) => _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.tensor1d(t.shape));\n        case 'Size':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.scalar((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context).size, 'int32')];\n        case 'Rank':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.scalar((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context).rank, 'int32')];\n        case 'NoOp':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.scalar(1)];\n        case 'Print':\n            const input = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context);\n            const data = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('data', node, tensorMap, context);\n            const message = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('message', node, tensorMap, context);\n            const summarize = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('summarize', node, tensorMap, context);\n            console.warn('The graph has a tf.print() operation,' +\n                'usually used for debugging, which slows down performance.');\n            console.log(message);\n            for (let i = 0; i < data.length; i++) {\n                console.log(Array.prototype.slice.call(data[i].dataSync())\n                    .slice(0, summarize));\n            }\n            return [input];\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'graph';\n//# sourceMappingURL=graph_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/graph_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/hash_table_executor.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/hash_table_executor.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _executor_hash_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../executor/hash_table */ \"./node_modules/@tensorflow/tfjs-converter/dist/executor/hash_table.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst executeOp = async (node, tensorMap, context, resourceManager) => {\n    switch (node.op) {\n        case 'HashTable':\n        case 'HashTableV2': {\n            const keyDType = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('keyDType', node, tensorMap, context);\n            const valueDType = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('valueDType', node, tensorMap, context);\n            const hashTable = new _executor_hash_table__WEBPACK_IMPORTED_MODULE_0__.HashTable(keyDType, valueDType);\n            resourceManager.addHashTable(node.name, hashTable);\n            return [hashTable.handle];\n        }\n        case 'LookupTableImport':\n        case 'LookupTableImportV2': {\n            const handle = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('tableHandle', node, tensorMap, context, resourceManager);\n            const keys = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('keys', node, tensorMap, context);\n            const values = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('values', node, tensorMap, context);\n            const hashTable = resourceManager.getHashTableById(handle.id);\n            return [await hashTable.import(keys, values)];\n        }\n        case 'LookupTableFind':\n        case 'LookupTableFindV2': {\n            const handle = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('tableHandle', node, tensorMap, context, resourceManager);\n            const keys = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('keys', node, tensorMap, context);\n            const defaultValue = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('defaultValue', node, tensorMap, context);\n            const hashTable = resourceManager.getHashTableById(handle.id);\n            return [await hashTable.find(keys, defaultValue)];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'hash_table';\n//# sourceMappingURL=hash_table_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/hash_table_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/image_executor.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/image_executor.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\n;\n\nconst executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'ResizeBilinear': {\n            const images = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('images', node, tensorMap, context);\n            const size = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('size', node, tensorMap, context);\n            const alignCorners = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('alignCorners', node, tensorMap, context);\n            const halfPixelCenters = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('halfPixelCenters', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.image.resizeBilinear(images, [size[0], size[1]], alignCorners, halfPixelCenters)];\n        }\n        case 'ResizeNearestNeighbor': {\n            const images = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('images', node, tensorMap, context);\n            const size = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('size', node, tensorMap, context);\n            const alignCorners = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('alignCorners', node, tensorMap, context);\n            const halfPixelCenters = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('halfPixelCenters', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.image.resizeNearestNeighbor(images, [size[0], size[1]], alignCorners, halfPixelCenters)];\n        }\n        case 'CropAndResize': {\n            const image = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('image', node, tensorMap, context);\n            const boxes = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('boxes', node, tensorMap, context);\n            const boxInd = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('boxInd', node, tensorMap, context);\n            const cropSize = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('cropSize', node, tensorMap, context);\n            const method = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('method', node, tensorMap, context);\n            const extrapolationValue = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('extrapolationValue', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.image.cropAndResize(image, boxes, boxInd, cropSize, method, extrapolationValue)];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'image';\n//# sourceMappingURL=image_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/image_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/logical_executor.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/logical_executor.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/less.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\n;\n\nconst executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'Equal': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.equal((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'NotEqual': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.notEqual((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'Greater': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__.greater((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'GreaterEqual': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__.greaterEqual((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'Less': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__.less((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'LessEqual': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__.lessEqual((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'LogicalAnd': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__.logicalAnd((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'LogicalNot': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__.logicalNot((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context))];\n        }\n        case 'LogicalOr': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__.logicalOr((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        case 'Select':\n        case 'SelectV2': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__.where((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('condition', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'logical';\n//# sourceMappingURL=logical_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/logical_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/matrices_executor.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/matrices_executor.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused_ops.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\n;\n\nconst executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'BatchMatMul':\n        case 'BatchMatMulV2':\n        case 'MatMul':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.matMul((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('transposeA', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('transposeB', node, tensorMap, context))];\n        case 'Transpose':\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.transpose((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('perm', node, tensorMap, context))];\n        case '_FusedMatMul':\n            const [extraOp, activationFunc] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('fusedOps', node, tensorMap, context);\n            const isBiasAdd = extraOp === 'biasadd';\n            const isPrelu = activationFunc === 'prelu';\n            const numArgs = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('numArgs', node, tensorMap, context);\n            const leakyreluAlpha = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('leakyreluAlpha', node, tensorMap, context);\n            if (isBiasAdd) {\n                if (isPrelu && numArgs !== 2) {\n                    throw new Error('Fused MatMul with BiasAdd and Prelu must have two ' +\n                        'extra arguments: bias and alpha.');\n                }\n                if (!isPrelu && numArgs !== 1) {\n                    throw new Error('Fused MatMul with BiasAdd must have one extra argument: bias.');\n                }\n            }\n            const [biasArg, preluArg] = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('args', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__.matMul({\n                    a: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('a', node, tensorMap, context),\n                    b: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('b', node, tensorMap, context),\n                    transposeA: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('transposeA', node, tensorMap, context),\n                    transposeB: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('transposeB', node, tensorMap, context),\n                    bias: biasArg,\n                    activation: activationFunc,\n                    preluActivationWeights: preluArg,\n                    leakyreluAlpha\n                })];\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'matrices';\n//# sourceMappingURL=matrices_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/matrices_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/normalization_executor.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/normalization_executor.js ***!
  \*****************************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log_softmax.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\n;\n\nconst executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'FusedBatchNorm':\n        case 'FusedBatchNormV2': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.batchNorm((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('mean', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('variance', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('offset', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('scale', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('epsilon', node, tensorMap, context))];\n        }\n        case 'FusedBatchNormV3': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.batchNorm((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('mean', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('variance', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('offset', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('scale', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('epsilon', node, tensorMap, context))];\n        }\n        case 'LRN': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.localResponseNormalization((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('radius', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('bias', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('alpha', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('beta', node, tensorMap, context))];\n        }\n        case 'Softmax': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__.softmax((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'LogSoftmax': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__.logSoftmax((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'SparseToDense': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__.sparseToDense((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('sparseIndices', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('outputShape', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('sparseValues', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('defaultValue', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'normalization';\n//# sourceMappingURL=normalization_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/normalization_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/reduction_executor.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/reduction_executor.js ***!
  \*************************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/min.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/all.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/any.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/arg_max.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/arg_min.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/prod.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cumsum.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/dense_bincount.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\n;\n\nconst executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'Max': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('axis', node, tensorMap, context);\n            const keepDims = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('keepDims', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.max((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Mean': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('axis', node, tensorMap, context);\n            const keepDims = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('keepDims', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.mean((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Min': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('axis', node, tensorMap, context);\n            const keepDims = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('keepDims', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__.min((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Sum': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('axis', node, tensorMap, context);\n            const keepDims = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('keepDims', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__.sum((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'All': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('axis', node, tensorMap, context);\n            const keepDims = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('keepDims', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__.all((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Any': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('axis', node, tensorMap, context);\n            const keepDims = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('keepDims', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__.any((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'ArgMax': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('axis', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__.argMax((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), axis)];\n        }\n        case 'ArgMin': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('axis', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__.argMin((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), axis)];\n        }\n        case 'Prod': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('axis', node, tensorMap, context);\n            const keepDims = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('keepDims', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__.prod((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), axis, keepDims)];\n        }\n        case 'Cumsum': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('axis', node, tensorMap, context);\n            const exclusive = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('exclusive', node, tensorMap, context);\n            const reverse = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('reverse', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__.cumsum((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), axis, exclusive, reverse)];\n        }\n        case 'Bincount':\n            const x = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context);\n            const weights = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('weights', node, tensorMap, context);\n            const size = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('size', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_11__.bincount(x, weights, size)];\n        case 'DenseBincount': {\n            const x = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context);\n            const weights = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('weights', node, tensorMap, context);\n            const size = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('size', node, tensorMap, context);\n            const binaryOutput = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('binaryOutput', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_12__.denseBincount(x, weights, size, binaryOutput)];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'reduction';\n//# sourceMappingURL=reduction_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/reduction_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/slice_join_executor.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/slice_join_executor.js ***!
  \**************************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/strided_slice.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/split.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n// tslint:disable-next-line: no-imports-from-dist\n\n\nconst executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'ConcatV2':\n        case 'Concat': {\n            const n = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('n', node, tensorMap, context);\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('axis', node, tensorMap, context);\n            let inputs = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('tensors', node, tensorMap, context);\n            inputs = inputs.slice(0, n);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.concat(inputs, axis)];\n        }\n        case 'Gather': {\n            const input = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('x', node, tensorMap, context);\n            const indices = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('indices', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__.gather(input, _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__.cast(indices, 'int32'), 0)];\n        }\n        case 'GatherV2': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('axis', node, tensorMap, context);\n            const batchDims = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('batchDims', node, tensorMap, context);\n            const input = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('x', node, tensorMap, context);\n            const indices = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('indices', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__.gather(input, _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__.cast(indices, 'int32'), axis, batchDims)];\n        }\n        case 'Reverse': {\n            const dims = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('dims', node, tensorMap, context);\n            const axis = [];\n            for (let i = 0; i < dims.length; i++) {\n                if (dims[i]) {\n                    axis.push(i);\n                }\n            }\n            const input = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('x', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__.reverse(input, axis)];\n        }\n        case 'ReverseV2': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('axis', node, tensorMap, context);\n            const input = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('x', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__.reverse(input, axis)];\n        }\n        case 'Slice': {\n            // tslint:disable-next-line:no-any\n            const begin = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('begin', node, tensorMap, context);\n            // tslint:disable-next-line:no-any\n            const size = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('size', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__.slice((0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('x', node, tensorMap, context), begin, size)];\n        }\n        case 'StridedSlice': {\n            const begin = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('begin', node, tensorMap, context);\n            const end = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('end', node, tensorMap, context);\n            const strides = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('strides', node, tensorMap, context);\n            const beginMask = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('beginMask', node, tensorMap, context);\n            const endMask = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('endMask', node, tensorMap, context);\n            const ellipsisMask = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('ellipsisMask', node, tensorMap, context);\n            const newAxisMask = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('newAxisMask', node, tensorMap, context);\n            const shrinkAxisMask = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('shrinkAxisMask', node, tensorMap, context);\n            const tensor = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('x', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__.stridedSlice(tensor, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask)];\n        }\n        case 'Pack': {\n            return (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy)(() => {\n                const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('axis', node, tensorMap, context);\n                const tensors = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('tensors', node, tensorMap, context);\n                // Reshape the tensors to the first tensor's shape if they don't\n                // match.\n                const shape = tensors[0].shape;\n                const squeezedShape = _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__.squeeze(tensors[0]).shape;\n                const mapped = tensors.map(tensor => {\n                    const sameShape = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(tensor.shape, shape);\n                    if (!sameShape &&\n                        !_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.arraysEqual(_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__.squeeze(tensor).shape, squeezedShape)) {\n                        throw new Error('the input tensors shape does not match');\n                    }\n                    return sameShape ? tensor : _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__.reshape(tensor, shape);\n                });\n                return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__.stack(mapped, axis)];\n            });\n        }\n        case 'Unpack': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('axis', node, tensorMap, context);\n            const tensor = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('tensor', node, tensorMap, context);\n            return _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_11__.unstack(tensor, axis);\n        }\n        case 'Tile': {\n            const reps = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('reps', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_12__.tile((0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('x', node, tensorMap, context), reps)];\n        }\n        case 'Split':\n        case 'SplitV': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('axis', node, tensorMap, context);\n            const numOrSizeSplits = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('numOrSizeSplits', node, tensorMap, context);\n            const tensor = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('x', node, tensorMap, context);\n            return _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_13__.split(tensor, numOrSizeSplits, axis);\n        }\n        case 'ScatterNd': {\n            const indices = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('indices', node, tensorMap, context);\n            const values = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('values', node, tensorMap, context);\n            const shape = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('shape', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_14__.scatterND(indices, values, shape)];\n        }\n        case 'GatherNd': {\n            const x = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('x', node, tensorMap, context);\n            const indices = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('indices', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_15__.gatherND(x, indices)];\n        }\n        case 'SparseToDense': {\n            const indices = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('sparseIndices', node, tensorMap, context);\n            const shape = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('outputShape', node, tensorMap, context);\n            const sparseValues = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('sparseValues', node, tensorMap, context);\n            const defaultValue = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getParamValue)('defaultValue', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_16__.sparseToDense(indices, sparseValues, shape, sparseValues.dtype === defaultValue.dtype ?\n                    defaultValue :\n                    _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__.cast(defaultValue, sparseValues.dtype))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'slice_join';\n//# sourceMappingURL=slice_join_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/slice_join_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/spectral_executor.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/spectral_executor.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/irfft.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\n;\n\nconst executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'FFT': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.fft((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'IFFT': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.ifft((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'RFFT': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__.rfft((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        case 'IRFFT': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__.irfft((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'spectral';\n//# sourceMappingURL=spectral_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/spectral_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/transformation_executor.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/transformation_executor.js ***!
  \******************************************************************************************************/
/*! namespace exports */
/*! export CATEGORY [provided] [no usage info] [missing usage info prevents renaming] */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp,\n/* harmony export */   \"CATEGORY\": () => /* binding */ CATEGORY\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/depth_to_space.js\");\n/* harmony import */ var _tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @tensorflow/tfjs-core/dist/ops/ops_for_converter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\n;\n\nconst executeOp = (node, tensorMap, context) => {\n    switch (node.op) {\n        case 'Cast': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_1__.cast((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dtype', node, tensorMap, context))];\n        }\n        case 'ExpandDims': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('axis', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_2__.expandDims((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), axis)];\n        }\n        case 'Squeeze': {\n            const axis = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('axis', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_3__.squeeze((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), axis)];\n        }\n        case 'Reshape': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_4__.reshape((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('shape', node, tensorMap, context))];\n        }\n        case 'MirrorPad': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_5__.mirrorPad((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('padding', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('mode', node, tensorMap, context))];\n        }\n        case 'PadV2':\n        case 'Pad': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_6__.pad((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('padding', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('constantValue', node, tensorMap, context))];\n        }\n        case 'SpaceToBatchND': {\n            const blockShape = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('blockShape', node, tensorMap, context);\n            const paddings = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('paddings', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_7__.spaceToBatchND((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), blockShape, paddings)];\n        }\n        case 'BatchToSpaceND': {\n            const blockShape = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('blockShape', node, tensorMap, context);\n            const crops = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('crops', node, tensorMap, context);\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_8__.batchToSpaceND((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), blockShape, crops)];\n        }\n        case 'DepthToSpace': {\n            const blockSize = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('blockSize', node, tensorMap, context);\n            const dataFormat = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('dataFormat', node, tensorMap, context).toUpperCase();\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_9__.depthToSpace((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), blockSize, dataFormat)];\n        }\n        case 'BroadcastTo': {\n            return [_tensorflow_tfjs_core_dist_ops_ops_for_converter__WEBPACK_IMPORTED_MODULE_10__.broadcastTo((0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('x', node, tensorMap, context), (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getParamValue)('shape', node, tensorMap, context))];\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nconst CATEGORY = 'transformation';\n//# sourceMappingURL=transformation_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/transformation_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export cloneTensor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getNodeNameAndIndex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getPadding [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getParamValue [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTensor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTensorsForCurrentContenxt [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseNodeName [provided] [no usage info] [missing usage info prevents renaming] */
/*! export split [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getParamValue\": () => /* binding */ getParamValue,\n/* harmony export */   \"getTensor\": () => /* binding */ getTensor,\n/* harmony export */   \"getTensorsForCurrentContenxt\": () => /* binding */ getTensorsForCurrentContenxt,\n/* harmony export */   \"getNodeNameAndIndex\": () => /* binding */ getNodeNameAndIndex,\n/* harmony export */   \"parseNodeName\": () => /* binding */ parseNodeName,\n/* harmony export */   \"split\": () => /* binding */ split,\n/* harmony export */   \"getPadding\": () => /* binding */ getPadding,\n/* harmony export */   \"cloneTensor\": () => /* binding */ cloneTensor\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction getParamValue(paramName, node, tensorMap, context, resourceManager) {\n    const inputParam = node.inputParams[paramName];\n    if (inputParam && inputParam.inputIndexStart !== undefined) {\n        const start = inputParam.inputIndexStart;\n        const end = inputParam.inputIndexEnd === 0 ?\n            undefined :\n            (inputParam.inputIndexEnd === undefined ? start + 1 :\n                inputParam.inputIndexEnd);\n        if (inputParam.type === 'tensor') {\n            return getTensor(node.inputNames[inputParam.inputIndexStart], tensorMap, context, resourceManager);\n        }\n        if (inputParam.type === 'tensors') {\n            const inputs = node.inputNames.slice(start, end);\n            return inputs.map(name => getTensor(name, tensorMap, context, resourceManager));\n        }\n        const tensor = getTensor(node.inputNames.slice(start)[0], tensorMap, context, resourceManager);\n        const data = tensor.dataSync();\n        return inputParam.type === 'number' ?\n            data[0] :\n            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.toNestedArray(tensor.shape, data);\n    }\n    const attrParam = node.attrParams[paramName];\n    return attrParam && attrParam.value;\n}\n/**\n * Retrieve the tensor from tensorsMap based on input name.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n * @param context contains tensors and information for running the current node.\n * @param resourceManager Optional. Contains global resources of the model.\n */\nfunction getTensor(name, tensorsMap, context, resourceManager) {\n    const [nodeName, index] = parseNodeName(name);\n    if (resourceManager != null) {\n        const tensor = resourceManager.getHashTableHandleByName(nodeName);\n        if (tensor != null) {\n            return tensor;\n        }\n    }\n    const contextId = context.currentContextIds.find(contextId => {\n        return !!tensorsMap[getNodeNameWithContextId(nodeName, contextId)];\n    });\n    return contextId !== undefined ?\n        tensorsMap[getNodeNameWithContextId(nodeName, contextId)][index] :\n        undefined;\n}\n/**\n * Retrieve the tensors based on input name for current context.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n */\nfunction getTensorsForCurrentContenxt(name, tensorsMap, context) {\n    return tensorsMap[getNodeNameWithContextId(name, context.currentContextId)];\n}\n/**\n * Returns the node name and index from the Node input name.\n * @param inputName The input name of the node, in format of\n * node_name:output_index, i.e. MatMul:0, if the output_index is not set, it is\n * default to 0.\n */\nfunction getNodeNameAndIndex(inputName, context) {\n    const [nodeName, index] = parseNodeName(inputName);\n    return [\n        getNodeNameWithContextId(nodeName, context && context.currentContextId),\n        index\n    ];\n}\nfunction getNodeNameWithContextId(name, contextId) {\n    return !!contextId ? `${name}-${contextId}` : name;\n}\nfunction parseNodeName(name) {\n    const parts = name.split(':');\n    if (parts.length === 1) {\n        return [name, 0];\n    }\n    const nodeName = parts[0];\n    return [nodeName, Number(parts[parts.length - 1])];\n}\nfunction split(arr, size) {\n    const res = [];\n    for (let i = 0; i < arr.length; i += size) {\n        res.push(arr.slice(i, i + size));\n    }\n    return res;\n}\nfunction getPadding(node, tensorMap, context) {\n    let pad = getParamValue('pad', node, tensorMap, context);\n    if (pad === 'explicit') {\n        // This is 1d array, we need to convert it to 2d array\n        pad = getParamValue('explicitPaddings', node, tensorMap, context);\n        const explicitPadding = [[0, 0], [0, 0], [0, 0], [0, 0]];\n        for (let i = 0; i < 4; i++) {\n            explicitPadding[i][0] = pad[i * 2];\n            explicitPadding[i][1] = pad[i * 2 + 1];\n        }\n        return explicitPadding;\n    }\n    return pad;\n}\n/**\n *  Reuse the tensor if it is marked as keep, otherwise clone the tensor to\n *  avoid disposal. This is important for TensorArray and TensorList ops, since\n *  internally they use a tensor as the id for TensorArray and TensorList, and\n * to simplify lookup, they also use Tensor.id as the key to the internal map.\n * These id tensors have been marked as kept in the backend, we need avoid clone\n * them in order to create new Tensor.id.\n * @param tensor\n */\nfunction cloneTensor(tensor) {\n    return tensor.kept ? tensor : (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.clone)(tensor);\n}\n//# sourceMappingURL=utils.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/arithmetic.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/arithmetic.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': 'Add',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'AddV2',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'AddN',\n        'category': 'arithmetic',\n        'inputs': [{ 'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors' }]\n    },\n    {\n        'tfOpName': 'BiasAdd',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Sub',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'RealDiv',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Div',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'DivNoNan',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'FloorDiv',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Mul',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Maximum',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' }\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Minimum',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' }\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Pow',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'SquaredDifference',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Mod',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'FloorMod',\n        'category': 'arithmetic',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [{\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }]\n    }\n];\n//# sourceMappingURL=arithmetic.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/arithmetic.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/basic_math.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/basic_math.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': 'Abs',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Acos',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Asin',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Atan',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Atan2',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'y', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Ceil',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'ClipByValue',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'clipValueMin', 'type': 'number' },\n            { 'start': 2, 'name': 'clipValueMax', 'type': 'number' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Complex',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'real', 'type': 'tensor' },\n            { 'start': 1, 'name': 'imag', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'ComplexAbs',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Cos',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Cosh',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Elu',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Exp',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Floor',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Log',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Imag',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }, {\n                'tfName': 'Tout',\n                'name': 'outputType',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Neg',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Real',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }, {\n                'tfName': 'Tout',\n                'name': 'outputType',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Prelu',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'alpha', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Relu',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Relu6',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Selu',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Sigmoid',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Sin',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Sinh',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Sqrt',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Rsqrt',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Square',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Tan',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Tanh',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Sign',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Round',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Expm1',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Log1p',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Reciprocal',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Softplus',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Asinh',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Acosh',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Atanh',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Erf',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Prod',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axes', 'type': 'number[]' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'keep_dims',\n                'name': 'keepDims',\n                'type': 'bool',\n                'notSupported': true\n            },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'LeakyRelu',\n        'category': 'basic_math',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'alpha',\n                'name': 'alpha',\n                'type': 'number',\n                'defaultValue': 0.2\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    }\n];\n//# sourceMappingURL=basic_math.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/basic_math.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/control.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/control.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\nconst json = [\n    {\n        'tfOpName': 'EmptyTensorList',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'elementShape', 'type': 'shape' },\n            { 'start': 1, 'name': 'maxNumElements', 'type': 'number' },\n        ],\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'LoopCond',\n        'category': 'control',\n        'inputs': [{ 'start': 0, 'name': 'pred', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'Switch',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'data', 'type': 'tensor' },\n            { 'start': 1, 'name': 'pred', 'type': 'tensor' }\n        ]\n    },\n    {\n        'tfOpName': 'Merge',\n        'category': 'control',\n        'inputs': [{ 'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors' }]\n    },\n    {\n        'tfOpName': 'Enter',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true },\n            { 'tfName': 'frame_name', 'name': 'frameName', 'type': 'string' },\n            { 'tfName': 'is_constant', 'name': 'isConstant', 'type': 'bool' }\n        ]\n    },\n    {\n        'tfOpName': 'Exit',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'NextIteration',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayV3',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'size', 'type': 'number' },\n        ],\n        'attrs': [\n            { 'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype' },\n            { 'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape' },\n            { 'tfName': 'dynamic_size', 'name': 'dynamicSize', 'type': 'bool' },\n            { 'tfName': 'clear_after_read', 'name': 'clearAfterRead', 'type': 'bool' },\n            {\n                'tfName': 'identical_element_shapes',\n                'name': 'identicalElementShapes',\n                'type': 'bool'\n            },\n            { 'tfName': 'tensor_array_name', 'name': 'name', 'type': 'string' }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayWriteV3',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' },\n            { 'start': 1, 'name': 'index', 'type': 'number' },\n            { 'start': 2, 'name': 'tensor', 'type': 'tensor' },\n            { 'start': 3, 'name': 'flowIn', 'type': 'number' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayReadV3',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' },\n            { 'start': 1, 'name': 'index', 'type': 'number' },\n            { 'start': 2, 'name': 'flowIn', 'type': 'number' },\n        ],\n        'attrs': [{\n                'tfName': 'dtype',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }]\n    },\n    {\n        'tfOpName': 'TensorArrayGatherV3',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' },\n            { 'start': 1, 'name': 'indices', 'type': 'number[]' },\n            { 'start': 2, 'name': 'flowIn', 'type': 'number' },\n        ],\n        'attrs': [\n            { 'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype' },\n            { 'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape' }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayScatterV3',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' },\n            { 'start': 1, 'name': 'indices', 'type': 'number[]' },\n            { 'start': 2, 'name': 'tensor', 'type': 'tensor' },\n            { 'start': 3, 'name': 'flowIn', 'type': 'number' },\n        ],\n        'attrs': [{ 'tfName': 'T', 'name': 'dtype', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'TensorArrayConcatV3',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' },\n            { 'start': 1, 'name': 'flowIn', 'type': 'number' },\n        ],\n        'attrs': [\n            { 'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype' }, {\n                'tfName': 'element_shape_except0',\n                'name': 'elementShapeExcept0',\n                'type': 'shape',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArraySplitV3',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' },\n            { 'start': 1, 'name': 'tensor', 'type': 'tensor' },\n            { 'start': 2, 'name': 'lengths', 'type': 'number[]' },\n            { 'start': 3, 'name': 'flowIn', 'type': 'number' },\n        ],\n        'attrs': [{ 'tfName': 'T', 'name': 'dtype', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'TensorArraySizeV3',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' },\n            { 'start': 1, 'name': 'flowIn', 'type': 'number' }\n        ]\n    },\n    {\n        'tfOpName': 'TensorArrayCloseV3',\n        'category': 'control',\n        'inputs': [{ 'start': 0, 'name': 'tensorArrayId', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'StatelessIf',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'cond', 'type': 'tensor' },\n            { 'start': 1, 'end': 0, 'name': 'args', 'type': 'tensors' }\n        ],\n        'attrs': [\n            { 'tfName': 'then_branch', 'name': 'thenBranch', 'type': 'func' },\n            { 'tfName': 'else_branch', 'name': 'elseBranch', 'type': 'func' }\n        ]\n    },\n    {\n        'tfOpName': 'If',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'cond', 'type': 'tensor' },\n            { 'start': 1, 'end': 0, 'name': 'args', 'type': 'tensors' }\n        ],\n        'attrs': [\n            { 'tfName': 'then_branch', 'name': 'thenBranch', 'type': 'func' },\n            { 'tfName': 'else_branch', 'name': 'elseBranch', 'type': 'func' }\n        ]\n    },\n    {\n        'tfOpName': 'StatelessWhile',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'end': 0, 'name': 'args', 'type': 'tensors' },\n        ],\n        'attrs': [\n            { 'tfName': 'cond', 'name': 'cond', 'type': 'func' },\n            { 'tfName': 'body', 'name': 'body', 'type': 'func' }\n        ]\n    },\n    {\n        'tfOpName': 'While',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'end': 0, 'name': 'args', 'type': 'tensors' },\n        ],\n        'attrs': [\n            { 'tfName': 'cond', 'name': 'cond', 'type': 'func' },\n            { 'tfName': 'body', 'name': 'body', 'type': 'func' }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListScatter',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\n            { 'start': 1, 'name': 'indices', 'type': 'number[]' },\n            { 'start': 2, 'name': 'elementShape', 'type': 'shape' }\n        ],\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'TensorListScatterV2',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\n            { 'start': 1, 'name': 'indices', 'type': 'number[]' },\n            { 'start': 2, 'name': 'elementShape', 'type': 'shape' },\n            { 'start': 3, 'name': 'numElements', 'type': 'number' },\n        ],\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'TensorListGather',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensorListId', 'type': 'tensor' },\n            { 'start': 1, 'name': 'indices', 'type': 'number[]' },\n            { 'start': 2, 'name': 'elementShape', 'type': 'shape' },\n        ],\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'TensorListGetItem',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensorListId', 'type': 'tensor' },\n            { 'start': 1, 'name': 'index', 'type': 'number' },\n            { 'start': 2, 'name': 'elementShape', 'type': 'shape' },\n        ],\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'TensorListSetItem',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensorListId', 'type': 'tensor' },\n            { 'start': 1, 'name': 'index', 'type': 'number' },\n            { 'start': 2, 'name': 'tensor', 'type': 'tensor' },\n        ],\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'TensorListReserve',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'elementShape', 'type': 'shape' },\n            { 'start': 1, 'name': 'numElements', 'type': 'number' },\n        ],\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'TensorListFromTensor',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\n            { 'start': 1, 'name': 'elementShape', 'type': 'shape' }\n        ],\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'TensorListStack',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensorListId', 'type': 'tensor' },\n            { 'start': 1, 'name': 'elementShape', 'type': 'shape' },\n        ],\n        'attrs': [\n            { 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' },\n            { 'tfName': 'num_elements', 'name': 'numElements', 'type': 'dtype' }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListSplit',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\n            { 'start': 1, 'name': 'elementShape', 'type': 'shape' },\n            { 'start': 2, 'name': 'lengths', 'type': 'number[]' },\n        ],\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'TensorListConcat',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensorListId', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape' },\n            { 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }\n        ]\n    },\n    {\n        'tfOpName': 'TensorListPopBack',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensorListId', 'type': 'tensor' },\n            { 'start': 1, 'name': 'elementShape', 'type': 'shape' },\n        ],\n        'attrs': [{ 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'TensorListPushBack',\n        'category': 'control',\n        'inputs': [\n            { 'start': 0, 'name': 'tensorListId', 'type': 'tensor' },\n            { 'start': 1, 'name': 'tensor', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'element_dtype', 'name': 'elementDType', 'type': 'dtype' }\n        ]\n    }\n];\n//# sourceMappingURL=control.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/control.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/convolution.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/convolution.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': 'AvgPool',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'MaxPool',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' }, {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': [],\n                'notSupported': true\n            },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'MaxPoolWithArgmax',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' },\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' }, {\n                'tfName': 'include_batch_in_index',\n                'name': 'includeBatchInIndex',\n                'type': 'bool'\n            },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'AvgPool3D',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'MaxPool3D',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            { 'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]' },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Conv1D',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'stride', 'name': 'stride', 'type': 'number' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NWC'\n            },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }, {\n                'tfName': 'dilation',\n                'name': 'dilation',\n                'type': 'number',\n                'defaultValue': 1\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Conv2D',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true },\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' },\n            { 'tfName': 'useCudnnOnGpu', 'name': 'useCudnnOnGpu', 'type': 'bool' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            { 'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': '_FusedConv2D',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n            { 'start': 2, end: 0, 'name': 'args', 'type': 'tensors' },\n        ],\n        'attrs': [\n            { 'tfName': 'num_args', 'name': 'numArgs', 'type': 'number' },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true },\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'use_cudnn_on_gpu',\n                'name': 'useCudnnOnGpu',\n                'type': 'bool',\n                'defaultValue': true\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]',\n                'defaultValue': [1, 1, 1, 1]\n            },\n            {\n                'tfName': 'fused_ops',\n                'name': 'fusedOps',\n                'type': 'string[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.0001\n            },\n            {\n                'tfName': 'leakyrelu_alpha',\n                'name': 'leakyreluAlpha',\n                'type': 'number'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Conv2DBackpropInput',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 2, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n            { 'start': 0, 'name': 'outputShape', 'type': 'number[]' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'DepthwiseConv2d',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'input', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            { 'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'DepthwiseConv2dNative',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'input', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            },\n            { 'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'FusedDepthwiseConv2dNative',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n            { 'start': 2, end: 0, 'name': 'args', 'type': 'tensors' },\n        ],\n        'attrs': [\n            { 'tfName': 'num_args', 'name': 'numArgs', 'type': 'number' },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true },\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            {\n                'tfName': 'dilations',\n                'name': 'dilations',\n                'type': 'number[]',\n                'defaultValue': [1, 1, 1, 1]\n            },\n            {\n                'tfName': 'fused_ops',\n                'name': 'fusedOps',\n                'type': 'string[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'explicit_paddings',\n                'name': 'explicitPaddings',\n                'type': 'number[]',\n                'defaultValue': []\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Conv3D',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }, {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'defaultValue': 'NHWC'\n            },\n            { 'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]' }\n        ],\n    },\n    {\n        'tfOpName': 'Dilation2D',\n        'category': 'convolution',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'filter', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'strides', 'name': 'strides', 'type': 'number[]' },\n            { 'tfName': 'rates', 'name': 'dilations', 'type': 'number[]' },\n            { 'tfName': 'padding', 'name': 'pad', 'type': 'string' }\n        ]\n    }\n];\n//# sourceMappingURL=convolution.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/convolution.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/creation.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/creation.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': 'Fill',\n        'category': 'creation',\n        'inputs': [\n            { 'start': 0, 'name': 'shape', 'type': 'number[]' },\n            { 'start': 1, 'name': 'value', 'type': 'number' },\n        ],\n        'attrs': [{ 'tfName': 'T', 'name': 'dtype', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'LinSpace',\n        'category': 'creation',\n        'inputs': [\n            { 'start': 0, 'name': 'start', 'type': 'number' },\n            { 'start': 1, 'name': 'stop', 'type': 'number' },\n            { 'start': 2, 'name': 'num', 'type': 'number' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'OneHot',\n        'category': 'creation',\n        'inputs': [\n            { 'start': 0, 'name': 'indices', 'type': 'tensor' },\n            { 'start': 1, 'name': 'depth', 'type': 'number' },\n            { 'start': 2, 'name': 'onValue', 'type': 'number', 'defaultValue': 1 },\n            { 'start': 3, 'name': 'offValue', 'type': 'number', 'defaultValue': 0 },\n        ],\n        'attrs': [\n            {\n                'tfName': 'axis',\n                'name': 'axis',\n                'type': 'number',\n                'notSupported': true\n            },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Ones',\n        'category': 'creation',\n        'inputs': [\n            { 'start': 0, 'name': 'shape', 'type': 'number[]' },\n        ],\n        'attrs': [{ 'tfName': 'T', 'name': 'dtype', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'OnesLike',\n        'category': 'creation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [{ 'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'RandomUniform',\n        'category': 'creation',\n        'inputs': [\n            { 'start': 0, 'name': 'shape', 'type': 'number[]' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'minval',\n                'name': 'minval',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'maxval',\n                'name': 'maxval',\n                'type': 'number',\n                'defaultValue': 1\n            },\n            { 'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype' },\n            { 'tfName': 'seed', 'name': 'seed', 'type': 'number', 'defaultValue': 0 }, {\n                'tfName': 'seed2',\n                'name': 'seed2',\n                'type': 'number',\n                'defaultValue': 0,\n                'notSupported': true\n            },\n            { 'tfName': 'T', 'name': 'T', 'type': 'number', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Range',\n        'category': 'creation',\n        'inputs': [\n            { 'start': 0, 'name': 'start', 'type': 'number' },\n            { 'start': 1, 'name': 'stop', 'type': 'number' },\n            { 'start': 2, 'name': 'step', 'type': 'number', 'defaultValue': 0 },\n        ],\n        'attrs': [{ 'tfName': 'Tidx', 'name': 'dtype', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'TruncatedNormal',\n        'category': 'creation',\n        'inputs': [\n            { 'start': 0, 'name': 'shape', 'type': 'number[]' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'means',\n                'name': 'mean',\n                'type': 'number',\n                'defaultValue': 0.0\n            },\n            {\n                'tfName': 'stddev',\n                'name': 'stdDev',\n                'type': 'number',\n                'defaultValue': 1.0\n            },\n            { 'tfName': 'seed', 'name': 'seed', 'type': 'number' }, {\n                'tfName': 'seed2',\n                'name': 'seed2',\n                'type': 'number',\n                'defaultValue': 0,\n                'notSupported': true\n            },\n            { 'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype' },\n            { 'tfName': 'T', 'name': 'T', 'type': 'number', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Zeros',\n        'category': 'creation',\n        'inputs': [\n            { 'start': 0, 'name': 'shape', 'type': 'number[]' },\n        ],\n        'attrs': [{ 'tfName': 'T', 'name': 'dtype', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'ZerosLike',\n        'category': 'creation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [{ 'tfName': 'T', 'name': 'dtype', 'type': 'dtype' }]\n    },\n    {\n        'tfOpName': 'Multinomial',\n        'category': 'creation',\n        'inputs': [\n            { 'start': 0, 'name': 'logits', 'type': 'tensor' },\n            { 'start': 1, 'name': 'numSamples', 'type': 'number' },\n        ],\n        'attrs': [\n            { 'tfName': 'seed', 'name': 'seed', 'type': 'number' },\n            { 'tfName': 'seed2', 'name': 'seed2', 'type': 'number' },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype' },\n            { 'tfName': 'output_dtype', 'name': 'output_dtype', 'type': 'dtype' }\n        ]\n    }\n];\n//# sourceMappingURL=creation.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/creation.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/dynamic.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/dynamic.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': 'NonMaxSuppressionV2',\n        'category': 'dynamic',\n        'inputs': [\n            { 'start': 0, 'name': 'boxes', 'type': 'tensor' },\n            { 'start': 1, 'name': 'scores', 'type': 'tensor' },\n            { 'start': 2, 'name': 'maxOutputSize', 'type': 'number' },\n            { 'start': 3, 'name': 'iouThreshold', 'type': 'number' }\n        ]\n    },\n    {\n        'tfOpName': 'NonMaxSuppressionV3',\n        'category': 'dynamic',\n        'inputs': [\n            { 'start': 0, 'name': 'boxes', 'type': 'tensor' },\n            { 'start': 1, 'name': 'scores', 'type': 'tensor' },\n            { 'start': 2, 'name': 'maxOutputSize', 'type': 'number' },\n            { 'start': 3, 'name': 'iouThreshold', 'type': 'number' },\n            { 'start': 4, 'name': 'scoreThreshold', 'type': 'number' }\n        ]\n    },\n    {\n        'tfOpName': 'NonMaxSuppressionV4',\n        'category': 'dynamic',\n        'inputs': [\n            { 'start': 0, 'name': 'boxes', 'type': 'tensor' },\n            { 'start': 1, 'name': 'scores', 'type': 'tensor' },\n            { 'start': 2, 'name': 'maxOutputSize', 'type': 'number' },\n            { 'start': 3, 'name': 'iouThreshold', 'type': 'number' },\n            { 'start': 4, 'name': 'scoreThreshold', 'type': 'number' }\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }, {\n                'tfName': 'T_threshold',\n                'name': 'threshold',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            {\n                'tfName': 'pad_to_max_output_size',\n                'name': 'padToMaxOutputSize',\n                'type': 'bool'\n            }\n        ]\n    },\n    {\n        'tfOpName': 'NonMaxSuppressionV5',\n        'category': 'dynamic',\n        'inputs': [\n            { 'start': 0, 'name': 'boxes', 'type': 'tensor' },\n            { 'start': 1, 'name': 'scores', 'type': 'tensor' },\n            { 'start': 2, 'name': 'maxOutputSize', 'type': 'number' },\n            { 'start': 3, 'name': 'iouThreshold', 'type': 'number' },\n            { 'start': 4, 'name': 'scoreThreshold', 'type': 'number' },\n            { 'start': 5, 'name': 'softNmsSigma', 'type': 'number' }\n        ]\n    },\n    {\n        'tfOpName': 'Where',\n        'category': 'dynamic',\n        'inputs': [\n            { 'start': 0, 'name': 'condition', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'ListDiff',\n        'category': 'dynamic',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'y', 'type': 'tensor' },\n        ],\n        'attrs': [{\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }]\n    }\n];\n//# sourceMappingURL=dynamic.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/dynamic.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/evaluation.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/evaluation.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': 'TopKV2',\n        'category': 'evaluation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'k', 'type': 'number' },\n        ],\n        'attrs': [{ 'tfName': 'sorted', 'name': 'sorted', 'type': 'bool' }]\n    },\n    {\n        'tfOpName': 'Unique',\n        'category': 'evaluation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n    },\n    {\n        'tfOpName': 'UniqueV2',\n        'category': 'evaluation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number' },\n        ],\n    },\n];\n//# sourceMappingURL=evaluation.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/evaluation.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/graph.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/graph.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': 'PlaceholderWithDefault',\n        'category': 'graph',\n        'inputs': [\n            { 'start': 0, 'name': 'default', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'shape', 'name': 'shape', 'type': 'shape' },\n            { 'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype' }\n        ]\n    },\n    {\n        'tfOpName': 'Placeholder',\n        'category': 'graph',\n        'attrs': [\n            { 'tfName': 'shape', 'name': 'shape', 'type': 'shape' },\n            { 'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype' }\n        ]\n    },\n    { 'tfOpName': 'Const', 'category': 'graph' }, {\n        'tfOpName': 'Identity',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'IdentityN',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'end': 0, 'name': 'x', 'type': 'tensors' }]\n    },\n    {\n        'tfOpName': 'Snapshot',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'Rank',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'Size',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'Shape',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'ShapeN',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'end': 0, 'name': 'x', 'type': 'tensors' }]\n    },\n    {\n        'tfOpName': 'Print',\n        'category': 'graph',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'data', 'type': 'tensors' },\n        ],\n        'attrs': [\n            { 'tfName': 'message', 'name': 'message', 'type': 'string' }, {\n                'tfName': 'first_n',\n                'name': 'firstN',\n                'type': 'number',\n                'notSupported': true\n            },\n            {\n                'tfName': 'summarize',\n                'name': 'summarize',\n                'type': 'number',\n                'defaultValue': 3\n            }\n        ]\n    },\n    { 'tfOpName': 'NoOp', 'category': 'graph', 'inputs': [] }, {\n        'tfOpName': 'StopGradient',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'FakeQuantWithMinMaxVars',\n        'category': 'graph',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'min', 'name': 'min', 'type': 'number' },\n            { 'tfName': 'max', 'name': 'max', 'type': 'number' }\n        ]\n    }\n];\n//# sourceMappingURL=graph.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/graph.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/hash_table.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/hash_table.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\nconst json = [\n    {\n        'tfOpName': 'HashTable',\n        'category': 'hash_table',\n        'inputs': [],\n        'attrs': [\n            { 'tfName': 'shared_name', 'name': 'sharedName', 'type': 'string' },\n            {\n                'tfName': 'use_node_name_sharing',\n                'name': 'useNodeNameSharing',\n                'type': 'bool'\n            },\n            { 'tfName': 'key_dtype', 'name': 'keyDType', 'type': 'dtype' },\n            { 'tfName': 'value_dtype', 'name': 'valueDType', 'type': 'dtype' },\n        ]\n    },\n    {\n        'tfOpName': 'HashTableV2',\n        'category': 'hash_table',\n        'inputs': [],\n        'attrs': [\n            { 'tfName': 'shared_name', 'name': 'sharedName', 'type': 'string' },\n            {\n                'tfName': 'use_node_name_sharing',\n                'name': 'useNodeNameSharing',\n                'type': 'bool'\n            },\n            { 'tfName': 'key_dtype', 'name': 'keyDType', 'type': 'dtype' },\n            { 'tfName': 'value_dtype', 'name': 'valueDType', 'type': 'dtype' },\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableImport',\n        'category': 'hash_table',\n        'inputs': [\n            { 'start': 0, 'name': 'tableHandle', 'type': 'tensor' },\n            { 'start': 1, 'name': 'keys', 'type': 'tensor' },\n            { 'start': 2, 'name': 'values', 'type': 'tensor' }\n        ],\n        'attrs': [\n            { 'tfName': 'Tin', 'name': 'tIn', 'type': 'dtype', 'notSupported': true }, {\n                'tfName': 'Tout',\n                'name': 'tOut',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableImportV2',\n        'category': 'hash_table',\n        'inputs': [\n            { 'start': 0, 'name': 'tableHandle', 'type': 'tensor' },\n            { 'start': 1, 'name': 'keys', 'type': 'tensor' },\n            { 'start': 2, 'name': 'values', 'type': 'tensor' }\n        ],\n        'attrs': [\n            { 'tfName': 'Tin', 'name': 'tIn', 'type': 'dtype', 'notSupported': true }, {\n                'tfName': 'Tout',\n                'name': 'tOut',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableFind',\n        'category': 'hash_table',\n        'inputs': [\n            { 'start': 0, 'name': 'tableHandle', 'type': 'tensor' },\n            { 'start': 1, 'name': 'keys', 'type': 'tensor' },\n            { 'start': 2, 'name': 'defaultValue', 'type': 'tensor' }\n        ],\n        'attrs': [\n            { 'tfName': 'Tin', 'name': 'tIn', 'type': 'dtype', 'notSupported': true }, {\n                'tfName': 'Tout',\n                'name': 'tOut',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LookupTableFindV2',\n        'category': 'hash_table',\n        'inputs': [\n            { 'start': 0, 'name': 'tableHandle', 'type': 'tensor' },\n            { 'start': 1, 'name': 'keys', 'type': 'tensor' },\n            { 'start': 2, 'name': 'defaultValue', 'type': 'tensor' }\n        ],\n        'attrs': [\n            { 'tfName': 'Tin', 'name': 'tIn', 'type': 'dtype', 'notSupported': true }, {\n                'tfName': 'Tout',\n                'name': 'tOut',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    }\n];\n//# sourceMappingURL=hash_table.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/hash_table.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/image.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/image.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': 'ResizeBilinear',\n        'category': 'image',\n        'inputs': [\n            { 'start': 0, 'name': 'images', 'type': 'tensor' },\n            { 'start': 1, 'name': 'size', 'type': 'number[]' },\n        ],\n        'attrs': [\n            { 'tfName': 'align_corners', 'name': 'alignCorners', 'type': 'bool' }, {\n                'tfName': 'half_pixel_centers',\n                'name': 'halfPixelCenters',\n                'type': 'bool'\n            },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'ResizeNearestNeighbor',\n        'category': 'image',\n        'inputs': [\n            { 'start': 0, 'name': 'images', 'type': 'tensor' },\n            { 'start': 1, 'name': 'size', 'type': 'number[]' },\n        ],\n        'attrs': [\n            { 'tfName': 'align_corners', 'name': 'alignCorners', 'type': 'bool' }, {\n                'tfName': 'half_pixel_centers',\n                'name': 'halfPixelCenters',\n                'type': 'bool'\n            },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'CropAndResize',\n        'category': 'image',\n        'inputs': [\n            { 'start': 0, 'name': 'image', 'type': 'tensor' },\n            { 'start': 1, 'name': 'boxes', 'type': 'tensor' },\n            { 'start': 2, 'name': 'boxInd', 'type': 'tensor' },\n            { 'start': 3, 'name': 'cropSize', 'type': 'number[]' },\n        ],\n        'attrs': [\n            { 'tfName': 'method', 'name': 'method', 'type': 'string' }, {\n                'tfName': 'extrapolation_value',\n                'name': 'extrapolationValue',\n                'type': 'number'\n            }\n        ]\n    }\n];\n//# sourceMappingURL=image.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/image.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/logical.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/logical.js ***!
  \************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': 'Equal',\n        'category': 'logical',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'NotEqual',\n        'category': 'logical',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Greater',\n        'category': 'logical',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'GreaterEqual',\n        'category': 'logical',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Less',\n        'category': 'logical',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'LessEqual',\n        'category': 'logical',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'LogicalAnd',\n        'category': 'logical',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'LogicalNot',\n        'category': 'logical',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'LogicalOr',\n        'category': 'logical',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Select',\n        'category': 'logical',\n        'inputs': [\n            { 'start': 0, 'name': 'condition', 'type': 'tensor' },\n            { 'start': 1, 'name': 'a', 'type': 'tensor' },\n            { 'start': 2, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'SelectV2',\n        'category': 'logical',\n        'inputs': [\n            { 'start': 0, 'name': 'condition', 'type': 'tensor' },\n            { 'start': 1, 'name': 'a', 'type': 'tensor' },\n            { 'start': 2, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [{\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }]\n    }\n];\n//# sourceMappingURL=logical.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/logical.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/matrices.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/matrices.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': '_FusedMatMul',\n        'category': 'matrices',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n            { 'start': 2, end: 0, 'name': 'args', 'type': 'tensors' },\n        ],\n        'attrs': [\n            { 'tfName': 'num_args', 'name': 'numArgs', 'type': 'number' }, {\n                'tfName': 'fused_ops',\n                'name': 'fusedOps',\n                'type': 'string[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.0001\n            },\n            {\n                'tfName': 'transpose_a',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'transpose_b',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'MatMul',\n        'category': 'matrices',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'transpose_a',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'transpose_b',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'BatchMatMul',\n        'category': 'matrices',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'adj_x',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'adj_y',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'BatchMatMulV2',\n        'category': 'matrices',\n        'inputs': [\n            { 'start': 0, 'name': 'a', 'type': 'tensor' },\n            { 'start': 1, 'name': 'b', 'type': 'tensor' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'adj_x',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'adj_y',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            { 'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true }\n        ]\n    },\n    {\n        'tfOpName': 'Transpose',\n        'category': 'matrices',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'perm', 'type': 'number[]' },\n        ],\n        'attrs': [{\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }]\n    }\n];\n//# sourceMappingURL=matrices.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/matrices.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/normalization.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/normalization.js ***!
  \******************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': 'FusedBatchNorm',\n        'category': 'normalization',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'scale', 'type': 'tensor' },\n            { 'start': 2, 'name': 'offset', 'type': 'tensor' },\n            { 'start': 3, 'name': 'mean', 'type': 'tensor' },\n            { 'start': 4, 'name': 'variance', 'type': 'tensor' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.001\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FusedBatchNormV2',\n        'category': 'normalization',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'scale', 'type': 'tensor' },\n            { 'start': 2, 'name': 'offset', 'type': 'tensor' },\n            { 'start': 3, 'name': 'mean', 'type': 'tensor' },\n            { 'start': 4, 'name': 'variance', 'type': 'tensor' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.001\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'FusedBatchNormV3',\n        'category': 'normalization',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'scale', 'type': 'tensor' },\n            { 'start': 2, 'name': 'offset', 'type': 'tensor' },\n            { 'start': 3, 'name': 'mean', 'type': 'tensor' },\n            { 'start': 4, 'name': 'variance', 'type': 'tensor' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.001\n            },\n            {\n                'tfName': 'data_format',\n                'name': 'dataFormat',\n                'type': 'string',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'LRN',\n        'category': 'normalization',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'depth_radius',\n                'name': 'radius',\n                'type': 'number',\n                'defaultValue': 5\n            },\n            { 'tfName': 'bias', 'name': 'bias', 'type': 'number', 'defaultValue': 1.0 },\n            {\n                'tfName': 'alpha',\n                'name': 'alpha',\n                'type': 'number',\n                'defaultValue': 1.0\n            },\n            {\n                'tfName': 'beta',\n                'name': 'beta',\n                'type': 'number',\n                'defaultValue': 0.5\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Softmax',\n        'category': 'normalization',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'LogSoftmax',\n        'category': 'normalization',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'SparseToDense',\n        'category': 'normalization',\n        'inputs': [\n            { 'start': 0, 'name': 'sparseIndices', 'type': 'tensor' },\n            { 'start': 1, 'name': 'outputShape', 'type': 'number[]' },\n            { 'start': 2, 'name': 'sparseValues', 'type': 'tensor' },\n            { 'start': 3, 'name': 'defaultValue', 'type': 'tensor' },\n        ],\n        'attrs': [{\n                'tfName': 'validate_indices',\n                'name': 'validateIndices',\n                'type': 'bool',\n                'defaultValue': true,\n                'notSupported': true\n            }]\n    }\n];\n//# sourceMappingURL=normalization.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/normalization.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/reduction.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/reduction.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': 'Bincount',\n        'category': 'reduction',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'size', 'type': 'number' },\n            { 'start': 2, 'name': 'weights', 'type': 'tensor' }\n        ]\n    },\n    {\n        'tfOpName': 'DenseBincount',\n        'category': 'reduction',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'size', 'type': 'number' },\n            { 'start': 2, 'name': 'weights', 'type': 'tensor' }\n        ],\n        'attrs': [{ 'tfName': 'binary_output', 'name': 'binaryOutput', 'type': 'bool' }]\n    },\n    {\n        'tfOpName': 'Max',\n        'category': 'reduction',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number[]' },\n        ],\n        'attrs': [{ 'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool' }]\n    },\n    {\n        'tfOpName': 'Mean',\n        'category': 'reduction',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number[]' },\n        ],\n        'attrs': [{ 'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool' }]\n    },\n    {\n        'tfOpName': 'Min',\n        'category': 'reduction',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number[]' },\n        ],\n        'attrs': [{ 'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool' }]\n    },\n    {\n        'tfOpName': 'Sum',\n        'category': 'reduction',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number[]' },\n        ],\n        'attrs': [{ 'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool' }]\n    },\n    {\n        'tfOpName': 'All',\n        'category': 'reduction',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number[]' },\n        ],\n        'attrs': [{ 'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool' }]\n    },\n    {\n        'tfOpName': 'Any',\n        'category': 'reduction',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number[]' },\n        ],\n        'attrs': [{ 'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool' }]\n    },\n    {\n        'tfOpName': 'ArgMax',\n        'category': 'reduction',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number' }\n        ]\n    },\n    {\n        'tfOpName': 'ArgMin',\n        'category': 'reduction',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number' }\n        ]\n    },\n    {\n        'tfOpName': 'Prod',\n        'category': 'reduction',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number[]' },\n        ],\n        'attrs': [{ 'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool' }]\n    },\n    {\n        'tfOpName': 'Cumsum',\n        'category': 'reduction',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number' },\n        ],\n        'attrs': [\n            { 'tfName': 'exclusive', 'name': 'exclusive', 'type': 'bool' },\n            { 'tfName': 'reverse', 'name': 'reverse', 'type': 'bool' }\n        ]\n    }\n];\n//# sourceMappingURL=reduction.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/reduction.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/slice_join.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/slice_join.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': 'ConcatV2',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'end': -1, 'name': 'tensors', 'type': 'tensors' },\n            { 'start': -1, 'name': 'axis', 'type': 'number' }\n        ],\n        'attrs': [{ 'tfName': 'N', 'name': 'n', 'type': 'number', 'defaultValue': 2 }]\n    },\n    {\n        'tfOpName': 'Concat',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 1, 'end': 0, 'name': 'tensors', 'type': 'tensors' },\n            { 'start': 0, 'name': 'axis', 'type': 'number' }\n        ],\n        'attrs': [{ 'tfName': 'N', 'name': 'n', 'type': 'number', 'defaultValue': 2 }]\n    },\n    {\n        'tfOpName': 'GatherV2',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'indices', 'type': 'tensor' },\n            { 'start': 2, 'name': 'axis', 'type': 'number', 'defaultValue': 0 }\n        ],\n        'attrs': [{\n                'tfName': 'batch_dims',\n                'name': 'batchDims',\n                'type': 'number',\n                'defaultValue': 0\n            }]\n    },\n    {\n        'tfOpName': 'Gather',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'indices', 'type': 'tensor' },\n        ],\n        'attrs': [{\n                'tfName': 'validate_indices',\n                'name': 'validateIndices',\n                'type': 'bool',\n                'notSupported': true\n            }]\n    },\n    {\n        'tfOpName': 'Reverse',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'dims', 'type': 'bool[]' }\n        ]\n    },\n    {\n        'tfOpName': 'ReverseV2',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'Slice',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'begin', 'type': 'number[]' },\n            { 'start': 2, 'name': 'size', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'StridedSlice',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'begin', 'type': 'number[]' },\n            { 'start': 2, 'name': 'end', 'type': 'number[]' },\n            { 'start': 3, 'name': 'strides', 'type': 'number[]' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'begin_mask',\n                'name': 'beginMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'end_mask',\n                'name': 'endMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'new_axis_mask',\n                'name': 'newAxisMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'ellipsis_mask',\n                'name': 'ellipsisMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'shrink_axis_mask',\n                'name': 'shrinkAxisMask',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Pack',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors' },\n        ],\n        'attrs': [\n            { 'tfName': 'axis', 'name': 'axis', 'type': 'number', 'defaultValue': 0 }\n        ]\n    },\n    {\n        'tfOpName': 'Unpack',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'axis', 'name': 'axis', 'type': 'number', 'defaultValue': 0 }, {\n                'tfName': 'num',\n                'name': 'num',\n                'type': 'number',\n                'defaultValue': 0,\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Tile',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'reps', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'Split',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'axis', 'type': 'number', 'defaultValue': 0 },\n            { 'start': 1, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [{\n                'tfName': 'num_split',\n                'name': 'numOrSizeSplits',\n                'type': 'number',\n                'defaultValue': 1\n            }]\n    },\n    {\n        'tfOpName': 'SplitV',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'numOrSizeSplits', 'type': 'number[]' },\n            { 'start': 2, 'name': 'axis', 'type': 'number', 'defaultValue': 0 }\n        ]\n    },\n    {\n        'tfOpName': 'ScatterNd',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'indices', 'type': 'tensor' },\n            { 'start': 1, 'name': 'values', 'type': 'tensor' },\n            { 'start': 2, 'name': 'shape', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'GatherNd',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'indices', 'type': 'tensor' }\n        ]\n    },\n    {\n        'tfOpName': 'SparseToDense',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'sparseIndices', 'type': 'tensor' },\n            { 'start': 1, 'name': 'outputShape', 'type': 'number[]' },\n            { 'start': 2, 'name': 'sparseValues', 'type': 'tensor' },\n            { 'start': 3, 'name': 'defaultValue', 'type': 'tensor' },\n        ],\n        'attrs': [{\n                'tfName': 'validate_indices',\n                'name': 'validateIndices',\n                'type': 'bool',\n                'defaultValue': false,\n                'notSupported': true\n            }]\n    }\n];\n//# sourceMappingURL=slice_join.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/slice_join.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/spectral.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/spectral.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': 'FFT',\n        'category': 'spectral',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'IFFT',\n        'category': 'spectral',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'RFFT',\n        'category': 'spectral',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' }, {\n                'start': 1,\n                'name': 'fft_length',\n                'type': 'number',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'IRFFT',\n        'category': 'spectral',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' }, {\n                'start': 1,\n                'name': 'fft_length',\n                'type': 'number',\n                'notSupported': true\n            }\n        ]\n    }\n];\n//# sourceMappingURL=spectral.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/spectral.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/transformation.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/transformation.js ***!
  \*******************************************************************************************/
/*! namespace exports */
/*! export json [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"json\": () => /* binding */ json\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst json = [\n    {\n        'tfOpName': 'Cast',\n        'category': 'transformation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'SrcT',\n                'name': 'sdtype',\n                'type': 'dtype',\n                'notSupported': true\n            },\n            { 'tfName': 'DstT', 'name': 'dtype', 'type': 'dtype' }\n        ]\n    },\n    {\n        'tfOpName': 'ExpandDims',\n        'category': 'transformation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number' }\n        ]\n    },\n    {\n        'tfOpName': 'MirrorPad',\n        'category': 'transformation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'padding', 'type': 'number[]' },\n        ],\n        'attrs': [{ 'tfName': 'mode', 'name': 'mode', 'type': 'string' }]\n    },\n    {\n        'tfOpName': 'Pad',\n        'category': 'transformation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'padding', 'type': 'number[]' },\n        ],\n        'attrs': [{\n                'tfName': 'constant_value',\n                'name': 'constantValue',\n                'type': 'number',\n                'defaultValue': 0\n            }]\n    },\n    {\n        'tfOpName': 'PadV2',\n        'category': 'transformation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'padding', 'type': 'number[]' }, {\n                'start': 2,\n                'name': 'constantValue',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Reshape',\n        'category': 'transformation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'shape', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'Squeeze',\n        'category': 'transformation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [{\n                'tfName': 'axis',\n                'tfDeprecatedName': 'squeeze_dims',\n                'name': 'axis',\n                'type': 'number[]'\n            }]\n    },\n    {\n        'tfOpName': 'SpaceToBatchND',\n        'category': 'transformation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'blockShape', 'type': 'number[]' },\n            { 'start': 2, 'name': 'paddings', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'BatchToSpaceND',\n        'category': 'transformation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'blockShape', 'type': 'number[]' },\n            { 'start': 2, 'name': 'crops', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'DepthToSpace',\n        'category': 'transformation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'block_size', 'name': 'blockSize', 'type': 'number' },\n            { 'tfName': 'data_format', 'name': 'dataFormat', 'type': 'string' }\n        ]\n    },\n    {\n        'tfOpName': 'BroadcastTo',\n        'category': 'transformation',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'shape', 'type': 'number[]' },\n        ],\n        'attrs': []\n    }\n];\n//# sourceMappingURL=transformation.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/transformation.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/operation_executor.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/operation_executor.js ***!
  \***************************************************************************************/
/*! namespace exports */
/*! export executeOp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"executeOp\": () => /* binding */ executeOp\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _custom_op_node_value_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./custom_op/node_value_impl */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/node_value_impl.js\");\n/* harmony import */ var _custom_op_register__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./custom_op/register */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/register.js\");\n/* harmony import */ var _executors_arithmetic_executor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./executors/arithmetic_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/arithmetic_executor.js\");\n/* harmony import */ var _executors_basic_math_executor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./executors/basic_math_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/basic_math_executor.js\");\n/* harmony import */ var _executors_control_executor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./executors/control_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/control_executor.js\");\n/* harmony import */ var _executors_convolution_executor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./executors/convolution_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/convolution_executor.js\");\n/* harmony import */ var _executors_creation_executor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./executors/creation_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/creation_executor.js\");\n/* harmony import */ var _executors_dynamic_executor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./executors/dynamic_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/dynamic_executor.js\");\n/* harmony import */ var _executors_evaluation_executor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./executors/evaluation_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/evaluation_executor.js\");\n/* harmony import */ var _executors_graph_executor__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./executors/graph_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/graph_executor.js\");\n/* harmony import */ var _executors_hash_table_executor__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./executors/hash_table_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/hash_table_executor.js\");\n/* harmony import */ var _executors_image_executor__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./executors/image_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/image_executor.js\");\n/* harmony import */ var _executors_logical_executor__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./executors/logical_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/logical_executor.js\");\n/* harmony import */ var _executors_matrices_executor__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./executors/matrices_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/matrices_executor.js\");\n/* harmony import */ var _executors_normalization_executor__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./executors/normalization_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/normalization_executor.js\");\n/* harmony import */ var _executors_reduction_executor__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./executors/reduction_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/reduction_executor.js\");\n/* harmony import */ var _executors_slice_join_executor__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./executors/slice_join_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/slice_join_executor.js\");\n/* harmony import */ var _executors_spectral_executor__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./executors/spectral_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/spectral_executor.js\");\n/* harmony import */ var _executors_transformation_executor__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./executors/transformation_executor */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/transformation_executor.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Executes the op defined by the node object.\n * @param node\n * @param tensorMap contains tensors for executed nodes and weights\n * @param context contains tensors and information for running the current node.\n * @param resourceManager Optional. Contains global resources of the model.\n */\nfunction executeOp(node, tensorMap, context, resourceManager) {\n    const value = ((node, tensorMap, context) => {\n        switch (node.category) {\n            case 'arithmetic':\n                return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy(() => _executors_arithmetic_executor__WEBPACK_IMPORTED_MODULE_3__.executeOp(node, tensorMap, context));\n            case 'basic_math':\n                return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy(() => _executors_basic_math_executor__WEBPACK_IMPORTED_MODULE_4__.executeOp(node, tensorMap, context));\n            case 'control':\n                return _executors_control_executor__WEBPACK_IMPORTED_MODULE_5__.executeOp(node, tensorMap, context);\n            case 'convolution':\n                return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy(() => _executors_convolution_executor__WEBPACK_IMPORTED_MODULE_6__.executeOp(node, tensorMap, context));\n            case 'creation':\n                return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy(() => _executors_creation_executor__WEBPACK_IMPORTED_MODULE_7__.executeOp(node, tensorMap, context));\n            case 'dynamic':\n                return _executors_dynamic_executor__WEBPACK_IMPORTED_MODULE_8__.executeOp(node, tensorMap, context);\n            case 'evaluation':\n                return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy(() => _executors_evaluation_executor__WEBPACK_IMPORTED_MODULE_9__.executeOp(node, tensorMap, context));\n            case 'image':\n                return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy(() => _executors_image_executor__WEBPACK_IMPORTED_MODULE_12__.executeOp(node, tensorMap, context));\n            case 'graph':\n                return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy(() => _executors_graph_executor__WEBPACK_IMPORTED_MODULE_10__.executeOp(node, tensorMap, context));\n            case 'logical':\n                return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy(() => _executors_logical_executor__WEBPACK_IMPORTED_MODULE_13__.executeOp(node, tensorMap, context));\n            case 'matrices':\n                return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy(() => _executors_matrices_executor__WEBPACK_IMPORTED_MODULE_14__.executeOp(node, tensorMap, context));\n            case 'normalization':\n                return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy(() => _executors_normalization_executor__WEBPACK_IMPORTED_MODULE_15__.executeOp(node, tensorMap, context));\n            case 'reduction':\n                return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy(() => _executors_reduction_executor__WEBPACK_IMPORTED_MODULE_16__.executeOp(node, tensorMap, context));\n            case 'slice_join':\n                return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy(() => _executors_slice_join_executor__WEBPACK_IMPORTED_MODULE_17__.executeOp(node, tensorMap, context));\n            case 'spectral':\n                return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy(() => _executors_spectral_executor__WEBPACK_IMPORTED_MODULE_18__.executeOp(node, tensorMap, context));\n            case 'transformation':\n                return _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.tidy(() => _executors_transformation_executor__WEBPACK_IMPORTED_MODULE_19__.executeOp(node, tensorMap, context));\n            case 'hash_table':\n                return _executors_hash_table_executor__WEBPACK_IMPORTED_MODULE_11__.executeOp(node, tensorMap, context, resourceManager);\n            case 'custom':\n                const opMapper = (0,_custom_op_register__WEBPACK_IMPORTED_MODULE_2__.getRegisteredOp)(node.op);\n                if (opMapper && opMapper.customExecutor) {\n                    return opMapper.customExecutor(new _custom_op_node_value_impl__WEBPACK_IMPORTED_MODULE_1__.NodeValueImpl(node, tensorMap, context));\n                }\n                else {\n                    throw TypeError(`Custom op ${node.op} is not registered.`);\n                }\n            default:\n                throw TypeError(`Unknown op '${node.op}'. File an issue at ` +\n                    `https://github.com/tensorflow/tfjs/issues so we can add it` +\n                    `, or register a custom execution with tf.registerOp()`);\n        }\n    })(node, tensorMap, context);\n    if (_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.util.isPromise(value)) {\n        return value.then((data) => [].concat(data));\n    }\n    return [].concat(value);\n}\n//# sourceMappingURL=operation_executor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/operation_executor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export OperationMapper [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeBase64 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getBoolArrayParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getBoolParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getDtypeArrayParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getDtypeParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getFuncParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getNumberParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getNumericArrayParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getStringArrayParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getStringParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTensorShapeArrayParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTensorShapeParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseDtypeParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseStringParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseTensorShapeParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OperationMapper\": () => /* binding */ OperationMapper,\n/* harmony export */   \"decodeBase64\": () => /* binding */ decodeBase64,\n/* harmony export */   \"parseStringParam\": () => /* binding */ parseStringParam,\n/* harmony export */   \"getStringParam\": () => /* binding */ getStringParam,\n/* harmony export */   \"getBoolParam\": () => /* binding */ getBoolParam,\n/* harmony export */   \"getNumberParam\": () => /* binding */ getNumberParam,\n/* harmony export */   \"parseDtypeParam\": () => /* binding */ parseDtypeParam,\n/* harmony export */   \"getFuncParam\": () => /* binding */ getFuncParam,\n/* harmony export */   \"getDtypeParam\": () => /* binding */ getDtypeParam,\n/* harmony export */   \"getDtypeArrayParam\": () => /* binding */ getDtypeArrayParam,\n/* harmony export */   \"parseTensorShapeParam\": () => /* binding */ parseTensorShapeParam,\n/* harmony export */   \"getTensorShapeParam\": () => /* binding */ getTensorShapeParam,\n/* harmony export */   \"getNumericArrayParam\": () => /* binding */ getNumericArrayParam,\n/* harmony export */   \"getStringArrayParam\": () => /* binding */ getStringArrayParam,\n/* harmony export */   \"getTensorShapeArrayParam\": () => /* binding */ getTensorShapeArrayParam,\n/* harmony export */   \"getBoolArrayParam\": () => /* binding */ getBoolArrayParam\n/* harmony export */ });\n/* harmony import */ var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tensorflow/tfjs-core */ \"./node_modules/@tensorflow/tfjs-core/dist/index.js\");\n/* harmony import */ var _data_compiled_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/compiled_api */ \"./node_modules/@tensorflow/tfjs-converter/dist/data/compiled_api.js\");\n/* harmony import */ var _custom_op_register__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./custom_op/register */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/custom_op/register.js\");\n/* harmony import */ var _executors_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./executors/utils */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/executors/utils.js\");\n/* harmony import */ var _op_list_arithmetic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./op_list/arithmetic */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/arithmetic.js\");\n/* harmony import */ var _op_list_basic_math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./op_list/basic_math */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/basic_math.js\");\n/* harmony import */ var _op_list_control__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./op_list/control */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/control.js\");\n/* harmony import */ var _op_list_convolution__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./op_list/convolution */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/convolution.js\");\n/* harmony import */ var _op_list_creation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./op_list/creation */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/creation.js\");\n/* harmony import */ var _op_list_dynamic__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./op_list/dynamic */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/dynamic.js\");\n/* harmony import */ var _op_list_evaluation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./op_list/evaluation */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/evaluation.js\");\n/* harmony import */ var _op_list_graph__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./op_list/graph */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/graph.js\");\n/* harmony import */ var _op_list_hash_table__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./op_list/hash_table */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/hash_table.js\");\n/* harmony import */ var _op_list_image__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./op_list/image */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/image.js\");\n/* harmony import */ var _op_list_logical__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./op_list/logical */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/logical.js\");\n/* harmony import */ var _op_list_matrices__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./op_list/matrices */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/matrices.js\");\n/* harmony import */ var _op_list_normalization__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./op_list/normalization */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/normalization.js\");\n/* harmony import */ var _op_list_reduction__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./op_list/reduction */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/reduction.js\");\n/* harmony import */ var _op_list_slice_join__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./op_list/slice_join */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/slice_join.js\");\n/* harmony import */ var _op_list_spectral__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./op_list/spectral */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/spectral.js\");\n/* harmony import */ var _op_list_transformation__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./op_list/transformation */ \"./node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/transformation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass OperationMapper {\n    // Singleton instance for the mapper\n    static get Instance() {\n        return this._instance || (this._instance = new this());\n    }\n    // Loads the op mapping from the JSON file.\n    constructor() {\n        const ops = [\n            _op_list_arithmetic__WEBPACK_IMPORTED_MODULE_4__, _op_list_basic_math__WEBPACK_IMPORTED_MODULE_5__, _op_list_control__WEBPACK_IMPORTED_MODULE_6__, _op_list_convolution__WEBPACK_IMPORTED_MODULE_7__, _op_list_creation__WEBPACK_IMPORTED_MODULE_8__, _op_list_dynamic__WEBPACK_IMPORTED_MODULE_9__,\n            _op_list_evaluation__WEBPACK_IMPORTED_MODULE_10__, _op_list_logical__WEBPACK_IMPORTED_MODULE_14__, _op_list_image__WEBPACK_IMPORTED_MODULE_13__, _op_list_graph__WEBPACK_IMPORTED_MODULE_11__, _op_list_matrices__WEBPACK_IMPORTED_MODULE_15__, _op_list_normalization__WEBPACK_IMPORTED_MODULE_16__, _op_list_reduction__WEBPACK_IMPORTED_MODULE_17__,\n            _op_list_slice_join__WEBPACK_IMPORTED_MODULE_18__, _op_list_spectral__WEBPACK_IMPORTED_MODULE_19__, _op_list_transformation__WEBPACK_IMPORTED_MODULE_20__, _op_list_hash_table__WEBPACK_IMPORTED_MODULE_12__\n        ];\n        const mappersJson = [].concat(...ops.map(op => op.json));\n        this.opMappers = mappersJson.reduce((map, mapper) => {\n            map[mapper.tfOpName] = mapper;\n            return map;\n        }, {});\n    }\n    // Converts the model inference graph from Tensorflow GraphDef to local\n    // representation for TensorFlow.js API\n    transformGraph(graph, signature = {}) {\n        const tfNodes = graph.node;\n        const placeholders = [];\n        const weights = [];\n        const initNodes = [];\n        const nodes = tfNodes.reduce((map, node) => {\n            map[node.name] = this.mapNode(node);\n            if (node.op.startsWith('Placeholder')) {\n                placeholders.push(map[node.name]);\n            }\n            else if (node.op === 'Const') {\n                weights.push(map[node.name]);\n            }\n            else if (node.input == null || node.input.length === 0) {\n                initNodes.push(map[node.name]);\n            }\n            return map;\n        }, {});\n        let inputs = [];\n        const outputs = [];\n        let inputNodeNameToKey = {};\n        let outputNodeNameToKey = {};\n        if (signature != null) {\n            inputNodeNameToKey = this.mapSignatureEntries(signature.inputs);\n            outputNodeNameToKey = this.mapSignatureEntries(signature.outputs);\n        }\n        const allNodes = Object.keys(nodes);\n        allNodes.forEach(key => {\n            const node = nodes[key];\n            node.inputNames.forEach(name => {\n                const [nodeName,] = (0,_executors_utils__WEBPACK_IMPORTED_MODULE_3__.getNodeNameAndIndex)(name);\n                node.inputs.push(nodes[nodeName]);\n                nodes[nodeName].children.push(node);\n            });\n        });\n        // if signature has not outputs set, add any node that does not have\n        // outputs.\n        if (Object.keys(outputNodeNameToKey).length === 0) {\n            allNodes.forEach(key => {\n                const node = nodes[key];\n                if (node.children.length === 0) {\n                    outputs.push(node);\n                }\n            });\n        }\n        else {\n            Object.keys(outputNodeNameToKey).forEach(name => {\n                const [nodeName,] = (0,_executors_utils__WEBPACK_IMPORTED_MODULE_3__.getNodeNameAndIndex)(name);\n                const node = nodes[nodeName];\n                if (node != null) {\n                    node.signatureKey = outputNodeNameToKey[name];\n                    outputs.push(node);\n                }\n            });\n        }\n        if (Object.keys(inputNodeNameToKey).length > 0) {\n            Object.keys(inputNodeNameToKey).forEach(name => {\n                const [nodeName,] = (0,_executors_utils__WEBPACK_IMPORTED_MODULE_3__.getNodeNameAndIndex)(name);\n                const node = nodes[nodeName];\n                if (node) {\n                    node.signatureKey = inputNodeNameToKey[name];\n                    inputs.push(node);\n                }\n            });\n        }\n        else {\n            inputs = placeholders;\n        }\n        let functions = {};\n        if (graph.library != null && graph.library.function != null) {\n            functions = graph.library.function.reduce((functions, func) => {\n                functions[func.signature.name] = this.mapFunction(func);\n                return functions;\n            }, {});\n        }\n        const result = { nodes, inputs, outputs, weights, placeholders, signature, functions };\n        if (initNodes.length > 0) {\n            result.initNodes = initNodes;\n        }\n        return result;\n    }\n    mapSignatureEntries(entries) {\n        return Object.keys(entries || {})\n            .reduce((prev, curr) => {\n            prev[entries[curr].name] = curr;\n            return prev;\n        }, {});\n    }\n    mapNode(node) {\n        // Unsupported ops will cause an error at run-time (not parse time), since\n        // they may not be used by the actual execution subgraph.\n        const mapper = (0,_custom_op_register__WEBPACK_IMPORTED_MODULE_2__.getRegisteredOp)(node.op) || this.opMappers[node.op] || {};\n        if (node.attr == null) {\n            node.attr = {};\n        }\n        const newNode = {\n            name: node.name,\n            op: node.op,\n            category: mapper.category,\n            inputNames: (node.input ||\n                []).map(input => input.startsWith('^') ? input.substr(1) : input),\n            inputs: [],\n            children: [],\n            inputParams: {},\n            attrParams: {},\n            rawAttrs: node.attr\n        };\n        if (mapper.inputs != null) {\n            newNode.inputParams =\n                mapper.inputs.reduce((map, param) => {\n                    map[param.name] = {\n                        type: param.type,\n                        inputIndexStart: param.start,\n                        inputIndexEnd: param.end\n                    };\n                    return map;\n                }, {});\n        }\n        if (mapper.attrs != null) {\n            newNode.attrParams =\n                mapper.attrs.reduce((map, param) => {\n                    const type = param.type;\n                    let value = undefined;\n                    switch (param.type) {\n                        case 'string':\n                            value = getStringParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getStringParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'string[]':\n                            value = getStringArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getStringArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'number':\n                            value = getNumberParam(node.attr, param.tfName, (param.defaultValue || 0));\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getNumberParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'number[]':\n                            value = getNumericArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getNumericArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'bool':\n                            value = getBoolParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getBoolParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'bool[]':\n                            value = getBoolArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getBoolArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'shape':\n                            value = getTensorShapeParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getTensorShapeParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'shape[]':\n                            value = getTensorShapeArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getTensorShapeArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'dtype':\n                            value = getDtypeParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getDtypeParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'dtype[]':\n                            value = getDtypeArrayParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getDtypeArrayParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'func':\n                            value = getFuncParam(node.attr, param.tfName, param.defaultValue);\n                            if (value === undefined && !!param.tfDeprecatedName) {\n                                value = getFuncParam(node.attr, param.tfDeprecatedName, param.defaultValue);\n                            }\n                            break;\n                        case 'tensor':\n                        case 'tensors':\n                            break;\n                        default:\n                            throw new Error(`Unsupported param type: ${param.type} for op: ${node.op}`);\n                    }\n                    map[param.name] = { value, type };\n                    return map;\n                }, {});\n        }\n        return newNode;\n    }\n    // map the TFunctionDef to TFJS graph object\n    mapFunction(functionDef) {\n        const tfNodes = functionDef.nodeDef;\n        const placeholders = [];\n        const weights = [];\n        let nodes = {};\n        if (tfNodes != null) {\n            nodes = tfNodes.reduce((map, node) => {\n                map[node.name] = this.mapNode(node);\n                if (node.op === 'Const') {\n                    weights.push(map[node.name]);\n                }\n                return map;\n            }, {});\n        }\n        const inputs = [];\n        const outputs = [];\n        functionDef.signature.inputArg.forEach(arg => {\n            const [nodeName,] = (0,_executors_utils__WEBPACK_IMPORTED_MODULE_3__.getNodeNameAndIndex)(arg.name);\n            const node = {\n                name: nodeName,\n                op: 'Placeholder',\n                inputs: [],\n                inputNames: [],\n                category: 'graph',\n                inputParams: {},\n                attrParams: { dtype: { value: parseDtypeParam(arg.type), type: 'dtype' } },\n                children: []\n            };\n            node.signatureKey = arg.name;\n            inputs.push(node);\n            nodes[nodeName] = node;\n        });\n        const allNodes = Object.keys(nodes);\n        allNodes.forEach(key => {\n            const node = nodes[key];\n            node.inputNames.forEach(name => {\n                const [nodeName,] = (0,_executors_utils__WEBPACK_IMPORTED_MODULE_3__.getNodeNameAndIndex)(name);\n                node.inputs.push(nodes[nodeName]);\n                nodes[nodeName].children.push(node);\n            });\n        });\n        const returnNodeMap = functionDef.ret;\n        functionDef.signature.outputArg.forEach(output => {\n            const [nodeName, index] = (0,_executors_utils__WEBPACK_IMPORTED_MODULE_3__.getNodeNameAndIndex)(returnNodeMap[output.name]);\n            const node = nodes[nodeName];\n            if (node != null) {\n                node.defaultOutput = index;\n                outputs.push(node);\n            }\n        });\n        const signature = this.mapArgsToSignature(functionDef);\n        return { nodes, inputs, outputs, weights, placeholders, signature };\n    }\n    mapArgsToSignature(functionDef) {\n        return {\n            methodName: functionDef.signature.name,\n            inputs: functionDef.signature.inputArg.reduce((map, arg) => {\n                map[arg.name] = this.mapArgToTensorInfo(arg);\n                return map;\n            }, {}),\n            outputs: functionDef.signature.outputArg.reduce((map, arg) => {\n                map[arg.name] = this.mapArgToTensorInfo(arg, functionDef.ret);\n                return map;\n            }, {}),\n        };\n    }\n    mapArgToTensorInfo(arg, nameMap) {\n        let name = arg.name;\n        if (nameMap != null) {\n            name = nameMap[name];\n        }\n        return { name, dtype: arg.type };\n    }\n}\nfunction decodeBase64(text) {\n    const global = (0,_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__.env)().global;\n    if (typeof global.atob !== 'undefined') {\n        return global.atob(text);\n    }\n    else if (typeof Buffer !== 'undefined') {\n        return new Buffer(text, 'base64').toString();\n    }\n    else {\n        throw new Error('Unable to decode base64 in this environment. ' +\n            'Missing built-in atob() or Buffer()');\n    }\n}\nfunction parseStringParam(s, keepCase) {\n    const value = Array.isArray(s) ? String.fromCharCode.apply(null, s) : decodeBase64(s);\n    return keepCase ? value : value.toLowerCase();\n}\nfunction getStringParam(attrs, name, def, keepCase = false) {\n    const param = attrs[name];\n    if (param != null) {\n        return parseStringParam(param.s, keepCase);\n    }\n    return def;\n}\nfunction getBoolParam(attrs, name, def) {\n    const param = attrs[name];\n    return param ? param.b : def;\n}\nfunction getNumberParam(attrs, name, def) {\n    const param = attrs[name] || {};\n    const value = param['i'] != null ? param['i'] : (param['f'] != null ? param['f'] : def);\n    return (typeof value === 'number') ? value : parseInt(value, 10);\n}\nfunction parseDtypeParam(value) {\n    if (typeof (value) === 'string') {\n        // tslint:disable-next-line:no-any\n        value = _data_compiled_api__WEBPACK_IMPORTED_MODULE_1__.DataType[value];\n    }\n    switch (value) {\n        case _data_compiled_api__WEBPACK_IMPORTED_MODULE_1__.DataType.DT_FLOAT:\n            return 'float32';\n        case _data_compiled_api__WEBPACK_IMPORTED_MODULE_1__.DataType.DT_INT32:\n        case _data_compiled_api__WEBPACK_IMPORTED_MODULE_1__.DataType.DT_INT64:\n        case _data_compiled_api__WEBPACK_IMPORTED_MODULE_1__.DataType.DT_INT8:\n        case _data_compiled_api__WEBPACK_IMPORTED_MODULE_1__.DataType.DT_UINT8:\n            return 'int32';\n        case _data_compiled_api__WEBPACK_IMPORTED_MODULE_1__.DataType.DT_BOOL:\n            return 'bool';\n        case _data_compiled_api__WEBPACK_IMPORTED_MODULE_1__.DataType.DT_DOUBLE:\n            return 'float32';\n        case _data_compiled_api__WEBPACK_IMPORTED_MODULE_1__.DataType.DT_STRING:\n            return 'string';\n        default:\n            // Unknown dtype error will happen at runtime (instead of parse time),\n            // since these nodes might not be used by the actual subgraph execution.\n            return null;\n    }\n}\nfunction getFuncParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.func) {\n        return param.func.name;\n    }\n    return def;\n}\nfunction getDtypeParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.type) {\n        return parseDtypeParam(param.type);\n    }\n    return def;\n}\nfunction getDtypeArrayParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.list && param.list.type) {\n        return param.list.type.map(v => parseDtypeParam(v));\n    }\n    return def;\n}\nfunction parseTensorShapeParam(shape) {\n    if (shape.unknownRank) {\n        return undefined;\n    }\n    if (shape.dim != null) {\n        return shape.dim.map(dim => (typeof dim.size === 'number') ? dim.size : parseInt(dim.size, 10));\n    }\n    return [];\n}\nfunction getTensorShapeParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.shape) {\n        return parseTensorShapeParam(param.shape);\n    }\n    return def;\n}\nfunction getNumericArrayParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param) {\n        return ((param.list.f && param.list.f.length ? param.list.f :\n            param.list.i) ||\n            [])\n            .map(v => (typeof v === 'number') ? v : parseInt(v, 10));\n    }\n    return def;\n}\nfunction getStringArrayParam(attrs, name, def, keepCase = false) {\n    const param = attrs[name];\n    if (param && param.list && param.list.s) {\n        return param.list.s.map((v) => {\n            return parseStringParam(v, keepCase);\n        });\n    }\n    return def;\n}\nfunction getTensorShapeArrayParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.list && param.list.shape) {\n        return param.list.shape.map((v) => {\n            return parseTensorShapeParam(v);\n        });\n    }\n    return def;\n}\nfunction getBoolArrayParam(attrs, name, def) {\n    const param = attrs[name];\n    if (param && param.list && param.list.b) {\n        return param.list.b;\n    }\n    return def;\n}\n//# sourceMappingURL=operation_mapper.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/operations/operation_mapper.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-converter/dist/version.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-converter/dist/version.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export version [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => /* binding */ version\n/* harmony export */ });\n/** @license See the LICENSE file. */\n// This code is auto-generated, do not modify this file!\nconst version = '3.2.0';\n\n//# sourceMappingURL=version.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-converter/dist/version.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export DataStorage [provided] [no usage info] [missing usage info prevents renaming] */
/*! export EPSILON_FLOAT16 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export EPSILON_FLOAT32 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export KernelBackend [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EPSILON_FLOAT32\": () => /* binding */ EPSILON_FLOAT32,\n/* harmony export */   \"EPSILON_FLOAT16\": () => /* binding */ EPSILON_FLOAT16,\n/* harmony export */   \"DataStorage\": () => /* binding */ DataStorage,\n/* harmony export */   \"KernelBackend\": () => /* binding */ KernelBackend\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst EPSILON_FLOAT32 = 1e-7;\nconst EPSILON_FLOAT16 = 1e-4;\n/** Convenient class for storing tensor-related data. */\nclass DataStorage {\n    constructor(backend, dataMover) {\n        this.backend = backend;\n        this.dataMover = dataMover;\n        this.data = new WeakMap();\n        this.dataIdsCount = 0;\n    }\n    get(dataId) {\n        if (!this.data.has(dataId)) {\n            this.dataMover.moveData(this.backend, dataId);\n        }\n        return this.data.get(dataId);\n    }\n    set(dataId, value) {\n        this.dataIdsCount++;\n        this.data.set(dataId, value);\n    }\n    has(dataId) {\n        return this.data.has(dataId);\n    }\n    delete(dataId) {\n        this.dataIdsCount--;\n        return this.data.delete(dataId);\n    }\n    numDataIds() {\n        return this.dataIdsCount;\n    }\n}\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\nclass KernelBackend {\n    refCount(dataId) {\n        return notYetImplemented('refCount');\n    }\n    incRef(dataId) {\n        return notYetImplemented('incRef');\n    }\n    timerAvailable() {\n        return true;\n    }\n    time(f) {\n        return notYetImplemented('time');\n    }\n    read(dataId) {\n        return notYetImplemented('read');\n    }\n    readSync(dataId) {\n        return notYetImplemented('readSync');\n    }\n    numDataIds() {\n        return notYetImplemented('numDataIds');\n    }\n    disposeData(dataId, force) {\n        return notYetImplemented('disposeData');\n    }\n    write(values, shape, dtype) {\n        return notYetImplemented('write');\n    }\n    move(dataId, values, shape, dtype, refCount) {\n        return notYetImplemented('move');\n    }\n    memory() {\n        return notYetImplemented('memory');\n    }\n    /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n    floatPrecision() {\n        return notYetImplemented('floatPrecision');\n    }\n    /** Returns the smallest representable number.  */\n    epsilon() {\n        return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n    }\n    dispose() {\n        return notYetImplemented('dispose');\n    }\n}\nfunction notYetImplemented(kernelName) {\n    throw new Error(`'${kernelName}' not yet implemented or not found in the registry. ` +\n        `This kernel may not be supported by the tfjs backend you have chosen`);\n}\n//# sourceMappingURL=backend.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export ERF_A1 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A1 */
/*! export ERF_A2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A2 */
/*! export ERF_A3 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A3 */
/*! export ERF_A4 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A4 */
/*! export ERF_A5 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A5 */
/*! export ERF_P [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_P */
/*! export PARALLELIZE_THRESHOLD [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js .PARALLELIZE_THRESHOLD */
/*! export SELU_SCALE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js .SELU_SCALE */
/*! export SELU_SCALEALPHA [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js .SELU_SCALEALPHA */
/*! export applyActivation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js .applyActivation */
/*! export assertAndGetBroadcastShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js .assertAndGetBroadcastShape */
/*! export assertAxesAreInnerMostDims [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .assertAxesAreInnerMostDims */
/*! export assertParamsConsistent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js .assertParamsConsistent */
/*! export assignToTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .assignToTypedArray */
/*! export axesAreInnerMostDims [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .axesAreInnerMostDims */
/*! export calculateShapes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js .calculateShapes */
/*! export combineLocations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .combineLocations */
/*! export complexWithEvenIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .complexWithEvenIndex */
/*! export complexWithOddIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .complexWithOddIndex */
/*! export computeConv2DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computeConv2DInfo */
/*! export computeConv3DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computeConv3DInfo */
/*! export computeDefaultPad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computeDefaultPad */
/*! export computeDilation2DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computeDilation2DInfo */
/*! export computeOptimalWindowSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js .computeOptimalWindowSize */
/*! export computeOutAndReduceShapes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .computeOutAndReduceShapes */
/*! export computeOutShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js .computeOutShape */
/*! export computePool2DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computePool2DInfo */
/*! export computePool3DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computePool3DInfo */
/*! export convertConv2DDataFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .convertConv2DDataFormat */
/*! export eitherStridesOrDilationsAreOne [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .eitherStridesOrDilationsAreOne */
/*! export expandShapeToKeepDim [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .expandShapeToKeepDim */
/*! export exponent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .exponent */
/*! export exponents [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .exponents */
/*! export fromStringArrayToUint8 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export fromUint8ToStringArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getAxesPermutation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .getAxesPermutation */
/*! export getBroadcastDims [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js .getBroadcastDims */
/*! export getComplexWithIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .getComplexWithIndex */
/*! export getFusedBiasGradient [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js .getFusedBiasGradient */
/*! export getFusedDyActivation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js .getFusedDyActivation */
/*! export getImageCenter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/rotate_util.js .getImageCenter */
/*! export getInnerMostAxes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .getInnerMostAxes */
/*! export getPermuted [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getPermuted */
/*! export getReductionAxes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js .getReductionAxes */
/*! export getReshaped [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getReshaped */
/*! export getReshapedPermuted [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getReshapedPermuted */
/*! export getSliceBeginCoords [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getSliceBeginCoords */
/*! export getSliceSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getSliceSize */
/*! export getUndoAxesPermutation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .getUndoAxesPermutation */
/*! export log [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/log.js .log */
/*! export mergeRealAndImagArrays [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .mergeRealAndImagArrays */
/*! export prepareAndValidate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js .prepareAndValidate */
/*! export prepareSplitSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/split_util.js .prepareSplitSize */
/*! export segment_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/segment_util.js */
/*!   export collectGatherOpShapeInfo [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export computeOutShape [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export segOpComputeOptimalWindowSize [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export shouldFuse [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js .shouldFuse */
/*! export slice_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js */
/*!   export assertParamsValid [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export computeFlatOffset [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export computeOutShape [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getNormalizedAxes [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isSliceContinous [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export maskToAxes [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export parseSliceParams [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export sliceInfo [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export startForAxis [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export startIndicesWithElidedDims [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export stopForAxis [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export stopIndicesWithElidedDims [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export stridesForAxis [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export stridesWithElidedDims [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export splitRealAndImagArrays [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .splitRealAndImagArrays */
/*! export tupleValuesAreOne [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .tupleValuesAreOne */
/*! export upcastType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/types.js .upcastType */
/*! export validateInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js .validateInput */
/*! export validateUpdateShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js .validateUpdateShape */
/*! export warn [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/log.js .warn */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"assertAxesAreInnerMostDims\": () => /* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.assertAxesAreInnerMostDims,\n/* harmony export */   \"axesAreInnerMostDims\": () => /* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.axesAreInnerMostDims,\n/* harmony export */   \"combineLocations\": () => /* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.combineLocations,\n/* harmony export */   \"computeOutAndReduceShapes\": () => /* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.computeOutAndReduceShapes,\n/* harmony export */   \"expandShapeToKeepDim\": () => /* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.expandShapeToKeepDim,\n/* harmony export */   \"getAxesPermutation\": () => /* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.getAxesPermutation,\n/* harmony export */   \"getInnerMostAxes\": () => /* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.getInnerMostAxes,\n/* harmony export */   \"getUndoAxesPermutation\": () => /* reexport safe */ _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__.getUndoAxesPermutation,\n/* harmony export */   \"assertAndGetBroadcastShape\": () => /* reexport safe */ _ops_broadcast_util__WEBPACK_IMPORTED_MODULE_1__.assertAndGetBroadcastShape,\n/* harmony export */   \"getBroadcastDims\": () => /* reexport safe */ _ops_broadcast_util__WEBPACK_IMPORTED_MODULE_1__.getBroadcastDims,\n/* harmony export */   \"getReductionAxes\": () => /* reexport safe */ _ops_broadcast_util__WEBPACK_IMPORTED_MODULE_1__.getReductionAxes,\n/* harmony export */   \"assertParamsConsistent\": () => /* reexport safe */ _ops_concat_util__WEBPACK_IMPORTED_MODULE_2__.assertParamsConsistent,\n/* harmony export */   \"computeOutShape\": () => /* reexport safe */ _ops_concat_util__WEBPACK_IMPORTED_MODULE_2__.computeOutShape,\n/* harmony export */   \"computeConv2DInfo\": () => /* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.computeConv2DInfo,\n/* harmony export */   \"computeConv3DInfo\": () => /* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.computeConv3DInfo,\n/* harmony export */   \"computeDefaultPad\": () => /* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.computeDefaultPad,\n/* harmony export */   \"computeDilation2DInfo\": () => /* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.computeDilation2DInfo,\n/* harmony export */   \"computePool2DInfo\": () => /* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.computePool2DInfo,\n/* harmony export */   \"computePool3DInfo\": () => /* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.computePool3DInfo,\n/* harmony export */   \"convertConv2DDataFormat\": () => /* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.convertConv2DDataFormat,\n/* harmony export */   \"eitherStridesOrDilationsAreOne\": () => /* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.eitherStridesOrDilationsAreOne,\n/* harmony export */   \"tupleValuesAreOne\": () => /* reexport safe */ _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__.tupleValuesAreOne,\n/* harmony export */   \"applyActivation\": () => /* reexport safe */ _ops_fused_util__WEBPACK_IMPORTED_MODULE_4__.applyActivation,\n/* harmony export */   \"getFusedBiasGradient\": () => /* reexport safe */ _ops_fused_util__WEBPACK_IMPORTED_MODULE_4__.getFusedBiasGradient,\n/* harmony export */   \"getFusedDyActivation\": () => /* reexport safe */ _ops_fused_util__WEBPACK_IMPORTED_MODULE_4__.getFusedDyActivation,\n/* harmony export */   \"shouldFuse\": () => /* reexport safe */ _ops_fused_util__WEBPACK_IMPORTED_MODULE_4__.shouldFuse,\n/* harmony export */   \"PARALLELIZE_THRESHOLD\": () => /* reexport safe */ _ops_reduce_util__WEBPACK_IMPORTED_MODULE_5__.PARALLELIZE_THRESHOLD,\n/* harmony export */   \"computeOptimalWindowSize\": () => /* reexport safe */ _ops_reduce_util__WEBPACK_IMPORTED_MODULE_5__.computeOptimalWindowSize,\n/* harmony export */   \"slice_util\": () => /* reexport module object */ _ops_slice_util__WEBPACK_IMPORTED_MODULE_6__,\n/* harmony export */   \"upcastType\": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_7__.upcastType,\n/* harmony export */   \"getImageCenter\": () => /* reexport safe */ _ops_rotate_util__WEBPACK_IMPORTED_MODULE_8__.getImageCenter,\n/* harmony export */   \"getPermuted\": () => /* reexport safe */ _ops_array_ops_util__WEBPACK_IMPORTED_MODULE_9__.getPermuted,\n/* harmony export */   \"getReshaped\": () => /* reexport safe */ _ops_array_ops_util__WEBPACK_IMPORTED_MODULE_9__.getReshaped,\n/* harmony export */   \"getReshapedPermuted\": () => /* reexport safe */ _ops_array_ops_util__WEBPACK_IMPORTED_MODULE_9__.getReshapedPermuted,\n/* harmony export */   \"getSliceBeginCoords\": () => /* reexport safe */ _ops_array_ops_util__WEBPACK_IMPORTED_MODULE_9__.getSliceBeginCoords,\n/* harmony export */   \"getSliceSize\": () => /* reexport safe */ _ops_array_ops_util__WEBPACK_IMPORTED_MODULE_9__.getSliceSize,\n/* harmony export */   \"prepareAndValidate\": () => /* reexport safe */ _ops_gather_nd_util__WEBPACK_IMPORTED_MODULE_10__.prepareAndValidate,\n/* harmony export */   \"calculateShapes\": () => /* reexport safe */ _ops_scatter_nd_util__WEBPACK_IMPORTED_MODULE_11__.calculateShapes,\n/* harmony export */   \"validateInput\": () => /* reexport safe */ _ops_scatter_nd_util__WEBPACK_IMPORTED_MODULE_11__.validateInput,\n/* harmony export */   \"validateUpdateShape\": () => /* reexport safe */ _ops_scatter_nd_util__WEBPACK_IMPORTED_MODULE_11__.validateUpdateShape,\n/* harmony export */   \"SELU_SCALE\": () => /* reexport safe */ _ops_selu_util__WEBPACK_IMPORTED_MODULE_12__.SELU_SCALE,\n/* harmony export */   \"SELU_SCALEALPHA\": () => /* reexport safe */ _ops_selu_util__WEBPACK_IMPORTED_MODULE_12__.SELU_SCALEALPHA,\n/* harmony export */   \"ERF_A1\": () => /* reexport safe */ _ops_erf_util__WEBPACK_IMPORTED_MODULE_13__.ERF_A1,\n/* harmony export */   \"ERF_A2\": () => /* reexport safe */ _ops_erf_util__WEBPACK_IMPORTED_MODULE_13__.ERF_A2,\n/* harmony export */   \"ERF_A3\": () => /* reexport safe */ _ops_erf_util__WEBPACK_IMPORTED_MODULE_13__.ERF_A3,\n/* harmony export */   \"ERF_A4\": () => /* reexport safe */ _ops_erf_util__WEBPACK_IMPORTED_MODULE_13__.ERF_A4,\n/* harmony export */   \"ERF_A5\": () => /* reexport safe */ _ops_erf_util__WEBPACK_IMPORTED_MODULE_13__.ERF_A5,\n/* harmony export */   \"ERF_P\": () => /* reexport safe */ _ops_erf_util__WEBPACK_IMPORTED_MODULE_13__.ERF_P,\n/* harmony export */   \"log\": () => /* reexport safe */ _log__WEBPACK_IMPORTED_MODULE_14__.log,\n/* harmony export */   \"warn\": () => /* reexport safe */ _log__WEBPACK_IMPORTED_MODULE_14__.warn,\n/* harmony export */   \"assignToTypedArray\": () => /* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.assignToTypedArray,\n/* harmony export */   \"complexWithEvenIndex\": () => /* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.complexWithEvenIndex,\n/* harmony export */   \"complexWithOddIndex\": () => /* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.complexWithOddIndex,\n/* harmony export */   \"exponent\": () => /* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.exponent,\n/* harmony export */   \"exponents\": () => /* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.exponents,\n/* harmony export */   \"getComplexWithIndex\": () => /* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.getComplexWithIndex,\n/* harmony export */   \"mergeRealAndImagArrays\": () => /* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.mergeRealAndImagArrays,\n/* harmony export */   \"splitRealAndImagArrays\": () => /* reexport safe */ _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__.splitRealAndImagArrays,\n/* harmony export */   \"prepareSplitSize\": () => /* reexport safe */ _ops_split_util__WEBPACK_IMPORTED_MODULE_16__.prepareSplitSize,\n/* harmony export */   \"segment_util\": () => /* reexport module object */ _ops_segment_util__WEBPACK_IMPORTED_MODULE_17__,\n/* harmony export */   \"fromUint8ToStringArray\": () => /* binding */ fromUint8ToStringArray,\n/* harmony export */   \"fromStringArrayToUint8\": () => /* binding */ fromStringArrayToUint8\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/* harmony import */ var _ops_axis_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ops/axis_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js\");\n/* harmony import */ var _ops_broadcast_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ops/broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _ops_concat_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ops/concat_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js\");\n/* harmony import */ var _ops_conv_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _ops_fused_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/fused_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js\");\n/* harmony import */ var _ops_reduce_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/reduce_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js\");\n/* harmony import */ var _ops_slice_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ops/slice_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../types */ \"./node_modules/@tensorflow/tfjs-core/dist/types.js\");\n/* harmony import */ var _ops_rotate_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ops/rotate_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rotate_util.js\");\n/* harmony import */ var _ops_array_ops_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ops/array_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js\");\n/* harmony import */ var _ops_gather_nd_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ops/gather_nd_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js\");\n/* harmony import */ var _ops_scatter_nd_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../ops/scatter_nd_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js\");\n/* harmony import */ var _ops_selu_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../ops/selu_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js\");\n/* harmony import */ var _ops_erf_util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../ops/erf_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../log */ \"./node_modules/@tensorflow/tfjs-core/dist/log.js\");\n/* harmony import */ var _backends_complex_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../backends/complex_util */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js\");\n/* harmony import */ var _ops_split_util__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../ops/split_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/split_util.js\");\n/* harmony import */ var _ops_segment_util__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../ops/segment_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/segment_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n// Utilities needed by backend consumers of tf-core.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction fromUint8ToStringArray(vals) {\n    try {\n        // Decode the bytes into string.\n        return vals.map(val => (0,_util__WEBPACK_IMPORTED_MODULE_18__.decodeString)(val));\n    }\n    catch (err) {\n        throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${err}`);\n    }\n}\nfunction fromStringArrayToUint8(strings) {\n    return strings.map(s => (0,_util__WEBPACK_IMPORTED_MODULE_18__.encodeString)(s));\n}\n//# sourceMappingURL=backend_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export assignToTypedArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export complexWithEvenIndex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export complexWithOddIndex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export exponent [provided] [no usage info] [missing usage info prevents renaming] */
/*! export exponents [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getComplexWithIndex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export mergeRealAndImagArrays [provided] [no usage info] [missing usage info prevents renaming] */
/*! export splitRealAndImagArrays [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mergeRealAndImagArrays\": () => /* binding */ mergeRealAndImagArrays,\n/* harmony export */   \"splitRealAndImagArrays\": () => /* binding */ splitRealAndImagArrays,\n/* harmony export */   \"complexWithEvenIndex\": () => /* binding */ complexWithEvenIndex,\n/* harmony export */   \"complexWithOddIndex\": () => /* binding */ complexWithOddIndex,\n/* harmony export */   \"getComplexWithIndex\": () => /* binding */ getComplexWithIndex,\n/* harmony export */   \"assignToTypedArray\": () => /* binding */ assignToTypedArray,\n/* harmony export */   \"exponents\": () => /* binding */ exponents,\n/* harmony export */   \"exponent\": () => /* binding */ exponent\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Merges real and imaginary Float32Arrays into a single complex Float32Array.\n *\n * The memory layout is interleaved as follows:\n * real: [r0, r1, r2]\n * imag: [i0, i1, i2]\n * complex: [r0, i0, r1, i1, r2, i2]\n *\n * This is the inverse of splitRealAndImagArrays.\n *\n * @param real The real values of the complex tensor values.\n * @param imag The imag values of the complex tensor values.\n * @returns A complex tensor as a Float32Array with merged values.\n */\nfunction mergeRealAndImagArrays(real, imag) {\n    if (real.length !== imag.length) {\n        throw new Error(`Cannot merge real and imag arrays of different lengths. real:` +\n            `${real.length}, imag: ${imag.length}.`);\n    }\n    const result = new Float32Array(real.length * 2);\n    for (let i = 0; i < result.length; i += 2) {\n        result[i] = real[i / 2];\n        result[i + 1] = imag[i / 2];\n    }\n    return result;\n}\n/**\n * Splits a complex Float32Array into real and imag parts.\n *\n * The memory layout is interleaved as follows:\n * complex: [r0, i0, r1, i1, r2, i2]\n * real: [r0, r1, r2]\n * imag: [i0, i1, i2]\n *\n * This is the inverse of mergeRealAndImagArrays.\n *\n * @param complex The complex tensor values.\n * @returns An object with real and imag Float32Array components of the complex\n *     tensor.\n */\nfunction splitRealAndImagArrays(complex) {\n    const real = new Float32Array(complex.length / 2);\n    const imag = new Float32Array(complex.length / 2);\n    for (let i = 0; i < complex.length; i += 2) {\n        real[i / 2] = complex[i];\n        imag[i / 2] = complex[i + 1];\n    }\n    return { real, imag };\n}\n/**\n * Extracts even indexed complex values in the given array.\n * @param complex The complex tensor values\n */\nfunction complexWithEvenIndex(complex) {\n    const len = Math.ceil(complex.length / 4);\n    const real = new Float32Array(len);\n    const imag = new Float32Array(len);\n    for (let i = 0; i < complex.length; i += 4) {\n        real[Math.floor(i / 4)] = complex[i];\n        imag[Math.floor(i / 4)] = complex[i + 1];\n    }\n    return { real, imag };\n}\n/**\n * Extracts odd indexed comple values in the given array.\n * @param complex The complex tensor values\n */\nfunction complexWithOddIndex(complex) {\n    const len = Math.floor(complex.length / 4);\n    const real = new Float32Array(len);\n    const imag = new Float32Array(len);\n    for (let i = 2; i < complex.length; i += 4) {\n        real[Math.floor(i / 4)] = complex[i];\n        imag[Math.floor(i / 4)] = complex[i + 1];\n    }\n    return { real, imag };\n}\n/**\n * Get the map representing a complex value in the given array.\n * @param complex The complex tensor values.\n * @param index An index of the target complex value.\n */\nfunction getComplexWithIndex(complex, index) {\n    const real = complex[index * 2];\n    const imag = complex[index * 2 + 1];\n    return { real, imag };\n}\n/**\n * Insert a given complex value into the TypedArray.\n * @param data The array in which the complex value is inserted.\n * @param c The complex value to be inserted.\n * @param index An index of the target complex value.\n */\nfunction assignToTypedArray(data, real, imag, index) {\n    data[index * 2] = real;\n    data[index * 2 + 1] = imag;\n}\n/**\n * Make the list of exponent terms used by FFT.\n */\nfunction exponents(n, inverse) {\n    const real = new Float32Array(n / 2);\n    const imag = new Float32Array(n / 2);\n    for (let i = 0; i < Math.ceil(n / 2); i++) {\n        const x = (inverse ? 2 : -2) * Math.PI * (i / n);\n        real[i] = Math.cos(x);\n        imag[i] = Math.sin(x);\n    }\n    return { real, imag };\n}\n/**\n * Make the exponent term used by FFT.\n */\nfunction exponent(k, n, inverse) {\n    const x = (inverse ? 2 : -2) * Math.PI * (k / n);\n    const real = Math.cos(x);\n    const imag = Math.sin(x);\n    return { real, imag };\n}\n//# sourceMappingURL=complex_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/kernel_impls.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/kernel_impls.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export nonMaxSuppressionV3Impl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js .nonMaxSuppressionV3Impl */
/*! export nonMaxSuppressionV4Impl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js .nonMaxSuppressionV4Impl */
/*! export nonMaxSuppressionV5Impl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js .nonMaxSuppressionV5Impl */
/*! export whereImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js .whereImpl */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionV3Impl\": () => /* reexport safe */ _non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_0__.nonMaxSuppressionV3Impl,\n/* harmony export */   \"nonMaxSuppressionV4Impl\": () => /* reexport safe */ _non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_0__.nonMaxSuppressionV4Impl,\n/* harmony export */   \"nonMaxSuppressionV5Impl\": () => /* reexport safe */ _non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_0__.nonMaxSuppressionV5Impl,\n/* harmony export */   \"whereImpl\": () => /* reexport safe */ _where_impl__WEBPACK_IMPORTED_MODULE_1__.whereImpl\n/* harmony export */ });\n/* harmony import */ var _non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./non_max_suppression_impl */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js\");\n/* harmony import */ var _where_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./where_impl */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n\n//# sourceMappingURL=kernel_impls.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/backends/kernel_impls.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export nonMaxSuppressionV3Impl [provided] [no usage info] [missing usage info prevents renaming] */
/*! export nonMaxSuppressionV4Impl [provided] [no usage info] [missing usage info prevents renaming] */
/*! export nonMaxSuppressionV5Impl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionV3Impl\": () => /* binding */ nonMaxSuppressionV3Impl,\n/* harmony export */   \"nonMaxSuppressionV4Impl\": () => /* binding */ nonMaxSuppressionV4Impl,\n/* harmony export */   \"nonMaxSuppressionV5Impl\": () => /* binding */ nonMaxSuppressionV5Impl\n/* harmony export */ });\n/* harmony import */ var _non_max_suppression_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./non_max_suppression_util */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction nonMaxSuppressionV3Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\n    return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, 0 /* softNmsSigma */);\n}\nfunction nonMaxSuppressionV4Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize) {\n    return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, 0 /* softNmsSigma */, false /* returnScoresTensor */, padToMaxOutputSize /* padToMaxOutputSize */, true\n    /* returnValidOutputs */ );\n}\nfunction nonMaxSuppressionV5Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma) {\n    return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma, true /* returnScoresTensor */);\n}\nfunction nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma, returnScoresTensor = false, padToMaxOutputSize = false, returnValidOutputs = false) {\n    // The list is sorted in ascending order, so that we can always pop the\n    // candidate with the largest score in O(1) time.\n    const candidates = [];\n    for (let i = 0; i < scores.length; i++) {\n        if (scores[i] > scoreThreshold) {\n            candidates.push({ score: scores[i], boxIndex: i, suppressBeginIndex: 0 });\n        }\n    }\n    candidates.sort(ascendingComparator);\n    // If softNmsSigma is 0, the outcome of this algorithm is exactly same as\n    // before.\n    const scale = softNmsSigma > 0 ? (-0.5 / softNmsSigma) : 0.0;\n    const selectedIndices = [];\n    const selectedScores = [];\n    while (selectedIndices.length < maxOutputSize && candidates.length > 0) {\n        const candidate = candidates.pop();\n        const { score: originalScore, boxIndex, suppressBeginIndex } = candidate;\n        if (originalScore < scoreThreshold) {\n            break;\n        }\n        // Overlapping boxes are likely to have similar scores, therefore we\n        // iterate through the previously selected boxes backwards in order to\n        // see if candidate's score should be suppressed. We use\n        // suppressBeginIndex to track and ensure a candidate can be suppressed\n        // by a selected box no more than once. Also, if the overlap exceeds\n        // iouThreshold, we simply ignore the candidate.\n        let ignoreCandidate = false;\n        for (let j = selectedIndices.length - 1; j >= suppressBeginIndex; --j) {\n            const iou = intersectionOverUnion(boxes, boxIndex, selectedIndices[j]);\n            if (iou >= iouThreshold) {\n                ignoreCandidate = true;\n                break;\n            }\n            candidate.score =\n                candidate.score * suppressWeight(iouThreshold, scale, iou);\n            if (candidate.score <= scoreThreshold) {\n                break;\n            }\n        }\n        // At this point, if `candidate.score` has not dropped below\n        // `scoreThreshold`, then we know that we went through all of the\n        // previous selections and can safely update `suppressBeginIndex` to the\n        // end of the selected array. Then we can re-insert the candidate with\n        // the updated score and suppressBeginIndex back in the candidate list.\n        // If on the other hand, `candidate.score` has dropped below the score\n        // threshold, we will not add it back to the candidates list.\n        candidate.suppressBeginIndex = selectedIndices.length;\n        if (!ignoreCandidate) {\n            // Candidate has passed all the tests, and is not suppressed, so\n            // select the candidate.\n            if (candidate.score === originalScore) {\n                selectedIndices.push(boxIndex);\n                selectedScores.push(candidate.score);\n            }\n            else if (candidate.score > scoreThreshold) {\n                // Candidate's score is suppressed but is still high enough to be\n                // considered, so add back to the candidates list.\n                (0,_non_max_suppression_util__WEBPACK_IMPORTED_MODULE_0__.binaryInsert)(candidates, candidate, ascendingComparator);\n            }\n        }\n    }\n    // NonMaxSuppressionV4 feature: padding output to maxOutputSize.\n    const validOutputs = selectedIndices.length;\n    const elemsToPad = maxOutputSize - validOutputs;\n    if (padToMaxOutputSize && elemsToPad > 0) {\n        selectedIndices.push(...new Array(elemsToPad).fill(0));\n        selectedScores.push(...new Array(elemsToPad).fill(0.0));\n    }\n    const result = { selectedIndices };\n    if (returnScoresTensor) {\n        result['selectedScores'] = selectedScores;\n    }\n    if (returnValidOutputs) {\n        result['validOutputs'] = validOutputs;\n    }\n    return result;\n}\nfunction intersectionOverUnion(boxes, i, j) {\n    const iCoord = boxes.subarray(i * 4, i * 4 + 4);\n    const jCoord = boxes.subarray(j * 4, j * 4 + 4);\n    const yminI = Math.min(iCoord[0], iCoord[2]);\n    const xminI = Math.min(iCoord[1], iCoord[3]);\n    const ymaxI = Math.max(iCoord[0], iCoord[2]);\n    const xmaxI = Math.max(iCoord[1], iCoord[3]);\n    const yminJ = Math.min(jCoord[0], jCoord[2]);\n    const xminJ = Math.min(jCoord[1], jCoord[3]);\n    const ymaxJ = Math.max(jCoord[0], jCoord[2]);\n    const xmaxJ = Math.max(jCoord[1], jCoord[3]);\n    const areaI = (ymaxI - yminI) * (xmaxI - xminI);\n    const areaJ = (ymaxJ - yminJ) * (xmaxJ - xminJ);\n    if (areaI <= 0 || areaJ <= 0) {\n        return 0.0;\n    }\n    const intersectionYmin = Math.max(yminI, yminJ);\n    const intersectionXmin = Math.max(xminI, xminJ);\n    const intersectionYmax = Math.min(ymaxI, ymaxJ);\n    const intersectionXmax = Math.min(xmaxI, xmaxJ);\n    const intersectionArea = Math.max(intersectionYmax - intersectionYmin, 0.0) *\n        Math.max(intersectionXmax - intersectionXmin, 0.0);\n    return intersectionArea / (areaI + areaJ - intersectionArea);\n}\n// A Gaussian penalty function, this method always returns values in [0, 1].\n// The weight is a function of similarity, the more overlap two boxes are, the\n// smaller the weight is, meaning highly overlapping boxe will be significantly\n// penalized. On the other hand, a non-overlapping box will not be penalized.\nfunction suppressWeight(iouThreshold, scale, iou) {\n    const weight = Math.exp(scale * iou * iou);\n    return iou <= iouThreshold ? weight : 0.0;\n}\nfunction ascendingComparator(c1, c2) {\n    // For objects with same scores, we make the object with the larger index go\n    // first. In an array that pops from the end, this means that the object with\n    // the smaller index will be popped first. This ensures the same output as\n    // the TensorFlow python version.\n    return (c1.score - c2.score) ||\n        ((c1.score === c2.score) && (c2.boxIndex - c1.boxIndex));\n}\n//# sourceMappingURL=non_max_suppression_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_util.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_util.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export binaryInsert [provided] [no usage info] [missing usage info prevents renaming] */
/*! export binarySearch [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"binaryInsert\": () => /* binding */ binaryInsert,\n/* harmony export */   \"binarySearch\": () => /* binding */ binarySearch\n/* harmony export */ });\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Inserts a value into a sorted array. This method allows duplicate, meaning it\n * allows inserting duplicate value, in which case, the element will be inserted\n * at the lowest index of the value.\n * @param arr The array to modify.\n * @param element The element to insert.\n * @param comparator Optional. If no comparator is specified, elements are\n * compared using array_util.defaultComparator, which is suitable for Strings\n * and Numbers in ascending arrays. If the array contains multiple instances of\n * the target value, the left-most instance will be returned. To provide a\n * comparator, it should take 2 arguments to compare and return a negative,\n * zero, or a positive number.\n */\nfunction binaryInsert(arr, element, comparator) {\n    const index = binarySearch(arr, element, comparator);\n    const insertionPoint = index < 0 ? -(index + 1) : index;\n    arr.splice(insertionPoint, 0, element);\n}\n/**\n * Searches the array for the target using binary search, returns the index\n * of the found element, or position to insert if element not found. If no\n * comparator is specified, elements are compared using array_\n * util.defaultComparator, which is suitable for Strings and Numbers in\n * ascending arrays. If the array contains multiple instances of the target\n * value, the left-most instance will be returned.\n * @param arr The array to be searched in.\n * @param target The target to be searched for.\n * @param comparator Should take 2 arguments to compare and return a negative,\n *    zero, or a positive number.\n * @return Lowest index of the target value if found, otherwise the insertion\n *    point where the target should be inserted, in the form of\n *    (-insertionPoint - 1).\n */\nfunction binarySearch(arr, target, comparator) {\n    return binarySearch_(arr, target, comparator || defaultComparator);\n}\n/**\n * Compares its two arguments for order.\n * @param a The first element to be compared.\n * @param b The second element to be compared.\n * @return A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nfunction defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\nfunction binarySearch_(arr, target, comparator) {\n    let left = 0;\n    let right = arr.length;\n    let middle = 0;\n    let found = false;\n    while (left < right) {\n        middle = left + ((right - left) >>> 1);\n        const compareResult = comparator(target, arr[middle]);\n        if (compareResult > 0) {\n            left = middle + 1;\n        }\n        else {\n            right = middle;\n            // If compareResult is 0, the value is found. We record it is found,\n            // and then keep looking because there may be duplicate.\n            found = !compareResult;\n        }\n    }\n    return found ? left : -left - 1;\n}\n//# sourceMappingURL=non_max_suppression_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export whereImpl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"whereImpl\": () => /* binding */ whereImpl\n/* harmony export */ });\n/* harmony import */ var _ops_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ops/buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/** An implementation of the Where kernel shared between cpu and webgl */\n;\nfunction whereImpl(condShape, condVals) {\n    const indices = [];\n    for (let i = 0; i < condVals.length; i++) {\n        if (condVals[i]) {\n            indices.push(i);\n        }\n    }\n    const inBuffer = (0,_ops_buffer__WEBPACK_IMPORTED_MODULE_0__.buffer)(condShape, 'int32');\n    const out = (0,_ops_buffer__WEBPACK_IMPORTED_MODULE_0__.buffer)([indices.length, condShape.length], 'int32');\n    for (let i = 0; i < indices.length; i++) {\n        const loc = inBuffer.indexToLoc(indices[i]);\n        const offset = i * condShape.length;\n        out.values.set(loc, offset);\n    }\n    return out.toTensor();\n}\n//# sourceMappingURL=where_impl.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/base.js":
/*!*********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/base.js ***!
  \*********************************************************/
/*! namespace exports */
/*! export Abs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Abs */
/*! export Acos [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Acos */
/*! export Acosh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Acosh */
/*! export AdadeltaOptimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js .AdadeltaOptimizer */
/*! export AdagradOptimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js .AdagradOptimizer */
/*! export AdamOptimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js .AdamOptimizer */
/*! export AdamaxOptimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js .AdamaxOptimizer */
/*! export Add [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Add */
/*! export AddN [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .AddN */
/*! export All [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .All */
/*! export Any [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Any */
/*! export ArgMax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ArgMax */
/*! export ArgMin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ArgMin */
/*! export Asin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Asin */
/*! export Asinh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Asinh */
/*! export Atan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Atan */
/*! export Atan2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Atan2 */
/*! export Atanh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Atanh */
/*! export AvgPool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .AvgPool */
/*! export AvgPool3D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .AvgPool3D */
/*! export AvgPool3DGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .AvgPool3DGrad */
/*! export AvgPoolGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .AvgPoolGrad */
/*! export BatchMatMul [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .BatchMatMul */
/*! export BatchToSpaceND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .BatchToSpaceND */
/*! export Bincount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Bincount */
/*! export BroadcastTo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .BroadcastTo */
/*! export Cast [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Cast */
/*! export Ceil [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Ceil */
/*! export ClipByValue [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ClipByValue */
/*! export Complex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Complex */
/*! export ComplexAbs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ComplexAbs */
/*! export Concat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Concat */
/*! export Conv2D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Conv2D */
/*! export Conv2DBackpropFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Conv2DBackpropFilter */
/*! export Conv2DBackpropInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Conv2DBackpropInput */
/*! export Conv3D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Conv3D */
/*! export Conv3DBackpropFilterV2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Conv3DBackpropFilterV2 */
/*! export Conv3DBackpropInputV2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Conv3DBackpropInputV2 */
/*! export Cos [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Cos */
/*! export Cosh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Cosh */
/*! export CropAndResize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .CropAndResize */
/*! export Cumsum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Cumsum */
/*! export DataStorage [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js .DataStorage */
/*! export DenseBincount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .DenseBincount */
/*! export DepthToSpace [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .DepthToSpace */
/*! export DepthwiseConv2dNative [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .DepthwiseConv2dNative */
/*! export DepthwiseConv2dNativeBackpropFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .DepthwiseConv2dNativeBackpropFilter */
/*! export DepthwiseConv2dNativeBackpropInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .DepthwiseConv2dNativeBackpropInput */
/*! export Diag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Diag */
/*! export Dilation2D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Dilation2D */
/*! export Dilation2DBackpropFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Dilation2DBackpropFilter */
/*! export Dilation2DBackpropInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Dilation2DBackpropInput */
/*! export ENV [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/environment.js .ENV */
/*! export Elu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Elu */
/*! export EluGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .EluGrad */
/*! export Environment [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/environment.js .Environment */
/*! export Equal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Equal */
/*! export Erf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Erf */
/*! export Exp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Exp */
/*! export ExpandDims [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ExpandDims */
/*! export Expm1 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Expm1 */
/*! export FFT [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .FFT */
/*! export Fill [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Fill */
/*! export FlipLeftRight [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .FlipLeftRight */
/*! export Floor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Floor */
/*! export FloorDiv [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .FloorDiv */
/*! export FromPixels [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .FromPixels */
/*! export FusedBatchNorm [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .FusedBatchNorm */
/*! export FusedConv2D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .FusedConv2D */
/*! export FusedDepthwiseConv2D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .FusedDepthwiseConv2D */
/*! export GatherNd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .GatherNd */
/*! export GatherV2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .GatherV2 */
/*! export Greater [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Greater */
/*! export GreaterEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .GreaterEqual */
/*! export IFFT [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .IFFT */
/*! export Identity [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Identity */
/*! export Imag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Imag */
/*! export IsFinite [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .IsFinite */
/*! export IsInf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .IsInf */
/*! export IsNan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .IsNan */
/*! export KernelBackend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js .KernelBackend */
/*! export LRN [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LRN */
/*! export LRNGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LRNGrad */
/*! export LeakyRelu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LeakyRelu */
/*! export Less [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Less */
/*! export LessEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LessEqual */
/*! export LinSpace [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LinSpace */
/*! export Log [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Log */
/*! export Log1p [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Log1p */
/*! export LogSoftmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LogSoftmax */
/*! export LogicalAnd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LogicalAnd */
/*! export LogicalNot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LogicalNot */
/*! export LogicalOr [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LogicalOr */
/*! export Max [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Max */
/*! export MaxPool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .MaxPool */
/*! export MaxPool3D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .MaxPool3D */
/*! export MaxPool3DGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .MaxPool3DGrad */
/*! export MaxPoolGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .MaxPoolGrad */
/*! export MaxPoolWithArgmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .MaxPoolWithArgmax */
/*! export Maximum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Maximum */
/*! export Mean [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Mean */
/*! export Min [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Min */
/*! export Minimum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Minimum */
/*! export MirrorPad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .MirrorPad */
/*! export Mod [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Mod */
/*! export MomentumOptimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js .MomentumOptimizer */
/*! export Multinomial [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Multinomial */
/*! export Multiply [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Multiply */
/*! export Neg [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Neg */
/*! export NonMaxSuppressionV3 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .NonMaxSuppressionV3 */
/*! export NonMaxSuppressionV4 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .NonMaxSuppressionV4 */
/*! export NonMaxSuppressionV5 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .NonMaxSuppressionV5 */
/*! export NotEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .NotEqual */
/*! export OP_SCOPE_SUFFIX [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js .OP_SCOPE_SUFFIX */
/*! export OneHot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .OneHot */
/*! export OnesLike [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .OnesLike */
/*! export Optimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js .Optimizer */
/*! export Pack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Pack */
/*! export PadV2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .PadV2 */
/*! export Pool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Pool */
/*! export Pow [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Pow */
/*! export Prelu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Prelu */
/*! export Prod [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Prod */
/*! export RMSPropOptimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js .RMSPropOptimizer */
/*! export Range [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Range */
/*! export Rank [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/types.js .Rank */
/*! export Real [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Real */
/*! export RealDiv [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .RealDiv */
/*! export Reciprocal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Reciprocal */
/*! export Reduction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js .Reduction */
/*! export Relu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Relu */
/*! export Relu6 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Relu6 */
/*! export Reshape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Reshape */
/*! export ResizeBilinear [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ResizeBilinear */
/*! export ResizeBilinearGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ResizeBilinearGrad */
/*! export ResizeNearestNeighbor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ResizeNearestNeighbor */
/*! export ResizeNearestNeighborGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ResizeNearestNeighborGrad */
/*! export Reverse [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Reverse */
/*! export RotateWithOffset [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .RotateWithOffset */
/*! export Round [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Round */
/*! export Rsqrt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Rsqrt */
/*! export SGDOptimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js .SGDOptimizer */
/*! export ScatterNd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ScatterNd */
/*! export Select [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Select */
/*! export Selu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Selu */
/*! export Sigmoid [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Sigmoid */
/*! export Sign [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Sign */
/*! export Sin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Sin */
/*! export Sinh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Sinh */
/*! export Slice [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Slice */
/*! export Softmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Softmax */
/*! export Softplus [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Softplus */
/*! export SpaceToBatchND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .SpaceToBatchND */
/*! export SparseToDense [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .SparseToDense */
/*! export SplitV [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .SplitV */
/*! export Sqrt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Sqrt */
/*! export Square [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Square */
/*! export SquaredDifference [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .SquaredDifference */
/*! export Step [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Step */
/*! export StridedSlice [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .StridedSlice */
/*! export Sub [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Sub */
/*! export Sum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Sum */
/*! export Tan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Tan */
/*! export Tanh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Tanh */
/*! export Tensor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/tensor.js .Tensor */
/*! export TensorBuffer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/tensor.js .TensorBuffer */
/*! export Tile [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Tile */
/*! export TopK [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .TopK */
/*! export Transpose [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Transpose */
/*! export Unique [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Unique */
/*! export Unpack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Unpack */
/*! export UnsortedSegmentSum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .UnsortedSegmentSum */
/*! export Variable [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/tensor.js .Variable */
/*! export ZerosLike [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ZerosLike */
/*! export _FusedMatMul [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js ._FusedMatMul */
/*! export abs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js .abs */
/*! export acos [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/acos.js .acos */
/*! export acosh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/acosh.js .acosh */
/*! export add [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/add.js .add */
/*! export addN [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js .addN */
/*! export all [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/all.js .all */
/*! export any [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/any.js .any */
/*! export argMax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/arg_max.js .argMax */
/*! export argMin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/arg_min.js .argMin */
/*! export asin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/asin.js .asin */
/*! export asinh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/asinh.js .asinh */
/*! export atan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/atan.js .atan */
/*! export atan2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js .atan2 */
/*! export atanh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/atanh.js .atanh */
/*! export avgPool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js .avgPool */
/*! export avgPool3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d.js .avgPool3d */
/*! export backend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .backend */
/*! export backend_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js */
/*!   export ERF_A1 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A1 */
/*!   export ERF_A2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A2 */
/*!   export ERF_A3 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A3 */
/*!   export ERF_A4 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A4 */
/*!   export ERF_A5 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A5 */
/*!   export ERF_P [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_P */
/*!   export PARALLELIZE_THRESHOLD [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js .PARALLELIZE_THRESHOLD */
/*!   export SELU_SCALE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js .SELU_SCALE */
/*!   export SELU_SCALEALPHA [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js .SELU_SCALEALPHA */
/*!   export applyActivation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js .applyActivation */
/*!   export assertAndGetBroadcastShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js .assertAndGetBroadcastShape */
/*!   export assertAxesAreInnerMostDims [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .assertAxesAreInnerMostDims */
/*!   export assertParamsConsistent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js .assertParamsConsistent */
/*!   export assignToTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .assignToTypedArray */
/*!   export axesAreInnerMostDims [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .axesAreInnerMostDims */
/*!   export calculateShapes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js .calculateShapes */
/*!   export combineLocations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .combineLocations */
/*!   export complexWithEvenIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .complexWithEvenIndex */
/*!   export complexWithOddIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .complexWithOddIndex */
/*!   export computeConv2DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computeConv2DInfo */
/*!   export computeConv3DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computeConv3DInfo */
/*!   export computeDefaultPad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computeDefaultPad */
/*!   export computeDilation2DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computeDilation2DInfo */
/*!   export computeOptimalWindowSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js .computeOptimalWindowSize */
/*!   export computeOutAndReduceShapes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .computeOutAndReduceShapes */
/*!   export computeOutShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js .computeOutShape */
/*!   export computePool2DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computePool2DInfo */
/*!   export computePool3DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computePool3DInfo */
/*!   export convertConv2DDataFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .convertConv2DDataFormat */
/*!   export eitherStridesOrDilationsAreOne [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .eitherStridesOrDilationsAreOne */
/*!   export expandShapeToKeepDim [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .expandShapeToKeepDim */
/*!   export exponent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .exponent */
/*!   export exponents [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .exponents */
/*!   export fromStringArrayToUint8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export fromUint8ToStringArray [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getAxesPermutation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .getAxesPermutation */
/*!   export getBroadcastDims [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js .getBroadcastDims */
/*!   export getComplexWithIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .getComplexWithIndex */
/*!   export getFusedBiasGradient [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js .getFusedBiasGradient */
/*!   export getFusedDyActivation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js .getFusedDyActivation */
/*!   export getImageCenter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/rotate_util.js .getImageCenter */
/*!   export getInnerMostAxes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .getInnerMostAxes */
/*!   export getPermuted [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getPermuted */
/*!   export getReductionAxes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js .getReductionAxes */
/*!   export getReshaped [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getReshaped */
/*!   export getReshapedPermuted [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getReshapedPermuted */
/*!   export getSliceBeginCoords [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getSliceBeginCoords */
/*!   export getSliceSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getSliceSize */
/*!   export getUndoAxesPermutation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .getUndoAxesPermutation */
/*!   export log [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/log.js .log */
/*!   export mergeRealAndImagArrays [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .mergeRealAndImagArrays */
/*!   export prepareAndValidate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js .prepareAndValidate */
/*!   export prepareSplitSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/split_util.js .prepareSplitSize */
/*!   export segment_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/segment_util.js */
/*!     export collectGatherOpShapeInfo [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export computeOutShape [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export segOpComputeOptimalWindowSize [provided] [no usage info] [missing usage info prevents renaming] */
/*!     other exports [not provided] [no usage info] */
/*!   export shouldFuse [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js .shouldFuse */
/*!   export slice_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js */
/*!     export assertParamsValid [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export computeFlatOffset [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export computeOutShape [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export getNormalizedAxes [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export isSliceContinous [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export maskToAxes [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export parseSliceParams [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export sliceInfo [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export startForAxis [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export startIndicesWithElidedDims [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export stopForAxis [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export stopIndicesWithElidedDims [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export stridesForAxis [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export stridesWithElidedDims [provided] [no usage info] [missing usage info prevents renaming] */
/*!     other exports [not provided] [no usage info] */
/*!   export splitRealAndImagArrays [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .splitRealAndImagArrays */
/*!   export tupleValuesAreOne [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .tupleValuesAreOne */
/*!   export upcastType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/types.js .upcastType */
/*!   export validateInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js .validateInput */
/*!   export validateUpdateShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js .validateUpdateShape */
/*!   export warn [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/log.js .warn */
/*!   other exports [not provided] [no usage info] */
/*! export basicLSTMCell [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/basic_lstm_cell.js .basicLSTMCell */
/*! export batchNorm [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js .batchNorm */
/*! export batchNorm2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm2d.js .batchNorm2d */
/*! export batchNorm3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm3d.js .batchNorm3d */
/*! export batchNorm4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm4d.js .batchNorm4d */
/*! export batchToSpaceND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js .batchToSpaceND */
/*! export bincount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js .bincount */
/*! export booleanMaskAsync [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js .booleanMaskAsync */
/*! export broadcastTo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js .broadcastTo */
/*! export browser [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/browser.js */
/*!   export fromPixels [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export toPixels [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export buffer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js .buffer */
/*! export cast [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js .cast */
/*! export ceil [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ceil.js .ceil */
/*! export clipByValue [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js .clipByValue */
/*! export clone [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js .clone */
/*! export complex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js .complex */
/*! export concat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js .concat */
/*! export concat1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_1d.js .concat1d */
/*! export concat2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_2d.js .concat2d */
/*! export concat3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_3d.js .concat3d */
/*! export concat4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_4d.js .concat4d */
/*! export conv1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv1d.js .conv1d */
/*! export conv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js .conv2d */
/*! export conv2dTranspose [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js .conv2dTranspose */
/*! export conv3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d.js .conv3d */
/*! export conv3dTranspose [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_transpose.js .conv3dTranspose */
/*! export copyRegisteredKernels [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .copyRegisteredKernels */
/*! export cos [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/cos.js .cos */
/*! export cosh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/cosh.js .cosh */
/*! export cosineWindow [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js .cosineWindow */
/*! export cumsum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/cumsum.js .cumsum */
/*! export customGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/gradients.js .customGrad */
/*! export denseBincount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/dense_bincount.js .denseBincount */
/*! export deprecationWarn [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .deprecationWarn */
/*! export depthToSpace [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/depth_to_space.js .depthToSpace */
/*! export depthwiseConv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js .depthwiseConv2d */
/*! export device_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/device_util.js */
/*!   export isBrowser [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isMobile [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export diag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/diag.js .diag */
/*! export dilation2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/dilation2d.js .dilation2d */
/*! export disableDeprecationWarnings [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .disableDeprecationWarnings */
/*! export dispose [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .dispose */
/*! export disposeVariables [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .disposeVariables */
/*! export div [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/div.js .div */
/*! export divNoNan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/div_no_nan.js .divNoNan */
/*! export dot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/dot.js .dot */
/*! export dropout [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/dropout.js .dropout */
/*! export elu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js .elu */
/*! export enableDebugMode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .enableDebugMode */
/*! export enableProdMode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .enableProdMode */
/*! export enclosingPowerOfTwo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js .enclosingPowerOfTwo */
/*! export engine [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .engine */
/*! export env [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/environment.js .env */
/*! export equal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js .equal */
/*! export erf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf.js .erf */
/*! export exp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js .exp */
/*! export expandDims [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js .expandDims */
/*! export expm1 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/expm1.js .expm1 */
/*! export eye [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/eye.js .eye */
/*! export fft [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js .fft */
/*! export fill [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js .fill */
/*! export findBackend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .findBackend */
/*! export findBackendFactory [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .findBackendFactory */
/*! export floor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js .floor */
/*! export floorDiv [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js .floorDiv */
/*! export fused [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_ops.js */
/*!   export conv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/conv2d.js .conv2d */
/*!   export depthwiseConv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/depthwise_conv2d.js .depthwiseConv2d */
/*!   export matMul [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/mat_mul.js .matMul */
/*!   other exports [not provided] [no usage info] */
/*! export gather [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js .gather */
/*! export gatherND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js .gatherND */
/*! export gather_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js */
/*!   export prepareAndValidate [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export getBackend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .getBackend */
/*! export getGradient [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .getGradient */
/*! export getKernel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .getKernel */
/*! export getKernelsForBackend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .getKernelsForBackend */
/*! export grad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/gradients.js .grad */
/*! export grads [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/gradients.js .grads */
/*! export greater [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js .greater */
/*! export greaterEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js .greaterEqual */
/*! export ifft [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js .ifft */
/*! export imag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js .imag */
/*! export image [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js .image */
/*! export inTopKAsync [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js .inTopKAsync */
/*! export io [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/io.js */
/*!   export browserFiles [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/browser_files.js .browserFiles */
/*!   export browserHTTPRequest [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/http.js .browserHTTPRequest */
/*!   export concatenateArrayBuffers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js .concatenateArrayBuffers */
/*!   export copyModel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js .copyModel */
/*!   export decodeWeights [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js .decodeWeights */
/*!   export encodeWeights [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js .encodeWeights */
/*!   export fromMemory [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js .fromMemory */
/*!   export getLoadHandlers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js .getLoadHandlers */
/*!   export getModelArtifactsInfoForJSON [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js .getModelArtifactsInfoForJSON */
/*!   export getSaveHandlers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js .getSaveHandlers */
/*!   export http [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/http.js .http */
/*!   export isHTTPScheme [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/http.js .isHTTPScheme */
/*!   export listModels [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js .listModels */
/*!   export loadWeights [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js .loadWeights */
/*!   export moveModel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js .moveModel */
/*!   export registerLoadRouter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js .registerLoadRouter */
/*!   export registerSaveRouter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js .registerSaveRouter */
/*!   export removeModel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js .removeModel */
/*!   export weightsLoaderFactory [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js .weightsLoaderFactory */
/*!   export withSaveHandler [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js .withSaveHandler */
/*!   other exports [not provided] [no usage info] */
/*! export irfft [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/irfft.js .irfft */
/*! export isFinite [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/is_finite.js .isFinite */
/*! export isInf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/is_inf.js .isInf */
/*! export isNaN [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/is_nan.js .isNaN */
/*! export keep [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .keep */
/*! export kernel_impls [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/kernel_impls.js */
/*!   export nonMaxSuppressionV3Impl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js .nonMaxSuppressionV3Impl */
/*!   export nonMaxSuppressionV4Impl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js .nonMaxSuppressionV4Impl */
/*!   export nonMaxSuppressionV5Impl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js .nonMaxSuppressionV5Impl */
/*!   export whereImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js .whereImpl */
/*!   other exports [not provided] [no usage info] */
/*! export leakyRelu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js .leakyRelu */
/*! export less [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/less.js .less */
/*! export lessEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js .lessEqual */
/*! export linalg [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js .linalg */
/*! export linspace [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/linspace.js .linspace */
/*! export localResponseNormalization [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization.js .localResponseNormalization */
/*! export log [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log.js .log */
/*! export log1p [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js .log1p */
/*! export logSigmoid [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log_sigmoid.js .logSigmoid */
/*! export logSoftmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log_softmax.js .logSoftmax */
/*! export logSumExp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js .logSumExp */
/*! export logicalAnd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js .logicalAnd */
/*! export logicalNot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js .logicalNot */
/*! export logicalOr [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js .logicalOr */
/*! export logicalXor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js .logicalXor */
/*! export losses [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js .losses */
/*! export matMul [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js .matMul */
/*! export math [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/math.js */
/*!   export confusionMatrix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/confusion_matrix.js .confusionMatrix */
/*!   other exports [not provided] [no usage info] */
/*! export max [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/max.js .max */
/*! export maxPool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js .maxPool */
/*! export maxPool3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d.js .maxPool3d */
/*! export maxPoolWithArgmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_with_argmax.js .maxPoolWithArgmax */
/*! export maximum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js .maximum */
/*! export mean [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js .mean */
/*! export memory [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .memory */
/*! export min [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/min.js .min */
/*! export minimum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js .minimum */
/*! export mirrorPad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js .mirrorPad */
/*! export mod [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mod.js .mod */
/*! export moments [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/moments.js .moments */
/*! export movingAverage [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/moving_average.js .movingAverage */
/*! export mul [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js .mul */
/*! export multiRNNCell [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/multi_rnn_cell.js .multiRNNCell */
/*! export multinomial [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/multinomial.js .multinomial */
/*! export neg [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js .neg */
/*! export nextFrame [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/browser_util.js .nextFrame */
/*! export norm [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js .norm */
/*! export notEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js .notEqual */
/*! export oneHot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js .oneHot */
/*! export ones [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js .ones */
/*! export onesLike [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ones_like.js .onesLike */
/*! export op [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js .op */
/*! export outerProduct [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/outer_product.js .outerProduct */
/*! export pad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js .pad */
/*! export pad1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad1d.js .pad1d */
/*! export pad2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad2d.js .pad2d */
/*! export pad3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad3d.js .pad3d */
/*! export pad4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad4d.js .pad4d */
/*! export pool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pool.js .pool */
/*! export pow [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js .pow */
/*! export prelu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js .prelu */
/*! export print [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/print.js .print */
/*! export prod [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/prod.js .prod */
/*! export profile [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .profile */
/*! export rand [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/rand.js .rand */
/*! export randomGamma [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/random_gamma.js .randomGamma */
/*! export randomNormal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/random_normal.js .randomNormal */
/*! export randomUniform [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js .randomUniform */
/*! export range [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/range.js .range */
/*! export ready [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .ready */
/*! export real [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/real.js .real */
/*! export reciprocal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reciprocal.js .reciprocal */
/*! export registerBackend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .registerBackend */
/*! export registerGradient [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .registerGradient */
/*! export registerKernel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .registerKernel */
/*! export relu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js .relu */
/*! export relu6 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js .relu6 */
/*! export removeBackend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .removeBackend */
/*! export reshape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js .reshape */
/*! export reverse [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js .reverse */
/*! export reverse1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_1d.js .reverse1d */
/*! export reverse2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_2d.js .reverse2d */
/*! export reverse3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_3d.js .reverse3d */
/*! export reverse4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_4d.js .reverse4d */
/*! export rfft [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js .rfft */
/*! export round [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/round.js .round */
/*! export rsqrt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/rsqrt.js .rsqrt */
/*! export scalar [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js .scalar */
/*! export scatterND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js .scatterND */
/*! export scatter_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js */
/*!   export calculateShapes [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export validateInput [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export validateUpdateShape [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export selu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/selu.js .selu */
/*! export separableConv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/separable_conv2d.js .separableConv2d */
/*! export serialization [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/serialization.js */
/*!   export Serializable [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export SerializationMap [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export registerClass [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export setBackend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .setBackend */
/*! export setPlatform [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .setPlatform */
/*! export setdiff1dAsync [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js .setdiff1dAsync */
/*! export sigmoid [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js .sigmoid */
/*! export sign [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sign.js .sign */
/*! export signal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js .signal */
/*! export sin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sin.js .sin */
/*! export sinh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sinh.js .sinh */
/*! export slice [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js .slice */
/*! export slice1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice1d.js .slice1d */
/*! export slice2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice2d.js .slice2d */
/*! export slice3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice3d.js .slice3d */
/*! export slice4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice4d.js .slice4d */
/*! export slice_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js */
/*!   ... (15 already listed exports) */
/*! export softmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js .softmax */
/*! export softplus [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js .softplus */
/*! export spaceToBatchND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js .spaceToBatchND */
/*! export sparseToDense [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js .sparseToDense */
/*! export spectral [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js .spectral */
/*! export split [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/split.js .split */
/*! export sqrt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js .sqrt */
/*! export square [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/square.js .square */
/*! export squaredDifference [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js .squaredDifference */
/*! export squeeze [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js .squeeze */
/*! export stack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js .stack */
/*! export step [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/step.js .step */
/*! export stridedSlice [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/strided_slice.js .stridedSlice */
/*! export sub [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js .sub */
/*! export sum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js .sum */
/*! export sumOutType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/types.js .sumOutType */
/*! export tan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tan.js .tan */
/*! export tanh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js .tanh */
/*! export tensor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js .tensor */
/*! export tensor1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js .tensor1d */
/*! export tensor2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js .tensor2d */
/*! export tensor3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js .tensor3d */
/*! export tensor4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor4d.js .tensor4d */
/*! export tensor5d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor5d.js .tensor5d */
/*! export tensor6d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor6d.js .tensor6d */
/*! export tensor_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js */
/*!   export assertTypesMatch [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getTensorsInContainer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isTensorInList [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export makeTypesMatch [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export test_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/test_util.js */
/*!   export TEST_EPSILON_FLOAT16 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export encodeStrings [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export expectArrayBuffersEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export expectArraysClose [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export expectArraysEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export expectNumbersClose [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export expectPromiseToFail [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export expectValuesInRange [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export testEpsilon [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export tidy [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .tidy */
/*! export tile [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js .tile */
/*! export time [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .time */
/*! export topk [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/topk.js .topk */
/*! export train [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/train.js .train */
/*! export transpose [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js .transpose */
/*! export truncatedNormal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/truncated_normal.js .truncatedNormal */
/*! export unique [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/unique.js .unique */
/*! export unregisterGradient [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .unregisterGradient */
/*! export unregisterKernel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .unregisterKernel */
/*! export unsortedSegmentSum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/unsorted_segment_sum.js .unsortedSegmentSum */
/*! export unstack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js .unstack */
/*! export upcastType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/types.js .upcastType */
/*! export util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util.js */
/*!   export arraysEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .arraysEqual */
/*!   export assert [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .assert */
/*!   export assertNonNegativeIntegerDimensions [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .assertNonNegativeIntegerDimensions */
/*!   export assertNonNull [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .assertNonNull */
/*!   export assertShapesMatch [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .assertShapesMatch */
/*!   export bytesFromStringArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .bytesFromStringArray */
/*!   export bytesPerElement [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .bytesPerElement */
/*!   export checkConversionForErrors [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .checkConversionForErrors */
/*!   export clamp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .clamp */
/*!   export computeStrides [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .computeStrides */
/*!   export createScalarValue [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createShuffledIndices [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .createShuffledIndices */
/*!   export decodeString [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export distSquared [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .distSquared */
/*!   export encodeString [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export fetch [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export flatten [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .flatten */
/*!   export getArrayFromDType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .getArrayFromDType */
/*!   export getTypedArrayFromDType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .getTypedArrayFromDType */
/*!   export hasEncodingLoss [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .hasEncodingLoss */
/*!   export indexToLoc [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .indexToLoc */
/*!   export inferDtype [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .inferDtype */
/*!   export inferFromImplicitShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .inferFromImplicitShape */
/*!   export isBoolean [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isBoolean */
/*!   export isFunction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isFunction */
/*!   export isInt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isInt */
/*!   export isNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isNumber */
/*!   export isPromise [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isPromise */
/*!   export isScalarShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isScalarShape */
/*!   export isString [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isString */
/*!   export isTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isTypedArray */
/*!   export isValidDtype [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isValidDtype */
/*!   export locToIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .locToIndex */
/*!   export makeOnesTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .makeOnesTypedArray */
/*!   export makeZerosNestedTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .makeZerosNestedTypedArray */
/*!   export makeZerosTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .makeZerosTypedArray */
/*!   export nearestDivisor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .nearestDivisor */
/*!   export nearestLargerEven [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .nearestLargerEven */
/*!   export now [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export parseAxisParam [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .parseAxisParam */
/*!   export randUniform [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .randUniform */
/*!   export repeatedTry [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .repeatedTry */
/*!   export rightPad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .rightPad */
/*!   export shuffle [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .shuffle */
/*!   export shuffleCombo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .shuffleCombo */
/*!   export sizeFromShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .sizeFromShape */
/*!   export sizeToSquarishShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .sizeToSquarishShape */
/*!   export squeezeShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .squeezeShape */
/*!   export sum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .sum */
/*!   export tanh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .tanh */
/*!   export toNestedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .toNestedArray */
/*!   export toTypedArray [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export valueAndGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/gradients.js .valueAndGrad */
/*! export valueAndGrads [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/gradients.js .valueAndGrads */
/*! export variable [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/variable.js .variable */
/*! export variableGrads [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/gradients.js .variableGrads */
/*! export version_core [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/version.js .version */
/*! export where [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/where.js .where */
/*! export whereAsync [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js .whereAsync */
/*! export zeros [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js .zeros */
/*! export zerosLike [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js .zerosLike */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdadeltaOptimizer\": () => /* reexport safe */ _optimizers_adadelta_optimizer__WEBPACK_IMPORTED_MODULE_1__.AdadeltaOptimizer,\n/* harmony export */   \"AdagradOptimizer\": () => /* reexport safe */ _optimizers_adagrad_optimizer__WEBPACK_IMPORTED_MODULE_2__.AdagradOptimizer,\n/* harmony export */   \"AdamOptimizer\": () => /* reexport safe */ _optimizers_adam_optimizer__WEBPACK_IMPORTED_MODULE_3__.AdamOptimizer,\n/* harmony export */   \"AdamaxOptimizer\": () => /* reexport safe */ _optimizers_adamax_optimizer__WEBPACK_IMPORTED_MODULE_4__.AdamaxOptimizer,\n/* harmony export */   \"MomentumOptimizer\": () => /* reexport safe */ _optimizers_momentum_optimizer__WEBPACK_IMPORTED_MODULE_5__.MomentumOptimizer,\n/* harmony export */   \"Optimizer\": () => /* reexport safe */ _optimizers_optimizer__WEBPACK_IMPORTED_MODULE_6__.Optimizer,\n/* harmony export */   \"RMSPropOptimizer\": () => /* reexport safe */ _optimizers_rmsprop_optimizer__WEBPACK_IMPORTED_MODULE_7__.RMSPropOptimizer,\n/* harmony export */   \"SGDOptimizer\": () => /* reexport safe */ _optimizers_sgd_optimizer__WEBPACK_IMPORTED_MODULE_8__.SGDOptimizer,\n/* harmony export */   \"Tensor\": () => /* reexport safe */ _tensor__WEBPACK_IMPORTED_MODULE_9__.Tensor,\n/* harmony export */   \"TensorBuffer\": () => /* reexport safe */ _tensor__WEBPACK_IMPORTED_MODULE_9__.TensorBuffer,\n/* harmony export */   \"Variable\": () => /* reexport safe */ _tensor__WEBPACK_IMPORTED_MODULE_9__.Variable,\n/* harmony export */   \"Rank\": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_10__.Rank,\n/* harmony export */   \"sumOutType\": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_10__.sumOutType,\n/* harmony export */   \"upcastType\": () => /* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_10__.upcastType,\n/* harmony export */   \"OP_SCOPE_SUFFIX\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.OP_SCOPE_SUFFIX,\n/* harmony export */   \"abs\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.abs,\n/* harmony export */   \"acos\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.acos,\n/* harmony export */   \"acosh\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.acosh,\n/* harmony export */   \"add\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.add,\n/* harmony export */   \"addN\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.addN,\n/* harmony export */   \"all\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.all,\n/* harmony export */   \"any\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.any,\n/* harmony export */   \"argMax\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.argMax,\n/* harmony export */   \"argMin\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.argMin,\n/* harmony export */   \"asin\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.asin,\n/* harmony export */   \"asinh\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.asinh,\n/* harmony export */   \"atan\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.atan,\n/* harmony export */   \"atan2\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.atan2,\n/* harmony export */   \"atanh\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.atanh,\n/* harmony export */   \"avgPool\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.avgPool,\n/* harmony export */   \"avgPool3d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.avgPool3d,\n/* harmony export */   \"basicLSTMCell\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.basicLSTMCell,\n/* harmony export */   \"batchNorm\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.batchNorm,\n/* harmony export */   \"batchNorm2d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.batchNorm2d,\n/* harmony export */   \"batchNorm3d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.batchNorm3d,\n/* harmony export */   \"batchNorm4d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.batchNorm4d,\n/* harmony export */   \"batchToSpaceND\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.batchToSpaceND,\n/* harmony export */   \"bincount\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.bincount,\n/* harmony export */   \"booleanMaskAsync\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.booleanMaskAsync,\n/* harmony export */   \"broadcastTo\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.broadcastTo,\n/* harmony export */   \"buffer\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.buffer,\n/* harmony export */   \"cast\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.cast,\n/* harmony export */   \"ceil\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.ceil,\n/* harmony export */   \"clipByValue\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.clipByValue,\n/* harmony export */   \"clone\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.clone,\n/* harmony export */   \"complex\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.complex,\n/* harmony export */   \"concat\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.concat,\n/* harmony export */   \"concat1d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.concat1d,\n/* harmony export */   \"concat2d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.concat2d,\n/* harmony export */   \"concat3d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.concat3d,\n/* harmony export */   \"concat4d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.concat4d,\n/* harmony export */   \"conv1d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.conv1d,\n/* harmony export */   \"conv2d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.conv2d,\n/* harmony export */   \"conv2dTranspose\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.conv2dTranspose,\n/* harmony export */   \"conv3d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.conv3d,\n/* harmony export */   \"conv3dTranspose\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.conv3dTranspose,\n/* harmony export */   \"cos\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.cos,\n/* harmony export */   \"cosh\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.cosh,\n/* harmony export */   \"cosineWindow\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.cosineWindow,\n/* harmony export */   \"cumsum\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.cumsum,\n/* harmony export */   \"denseBincount\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.denseBincount,\n/* harmony export */   \"depthToSpace\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.depthToSpace,\n/* harmony export */   \"depthwiseConv2d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.depthwiseConv2d,\n/* harmony export */   \"diag\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.diag,\n/* harmony export */   \"dilation2d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.dilation2d,\n/* harmony export */   \"div\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.div,\n/* harmony export */   \"divNoNan\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.divNoNan,\n/* harmony export */   \"dot\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.dot,\n/* harmony export */   \"dropout\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.dropout,\n/* harmony export */   \"elu\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.elu,\n/* harmony export */   \"enclosingPowerOfTwo\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.enclosingPowerOfTwo,\n/* harmony export */   \"equal\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.equal,\n/* harmony export */   \"erf\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.erf,\n/* harmony export */   \"exp\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.exp,\n/* harmony export */   \"expandDims\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.expandDims,\n/* harmony export */   \"expm1\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.expm1,\n/* harmony export */   \"eye\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.eye,\n/* harmony export */   \"fft\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.fft,\n/* harmony export */   \"fill\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.fill,\n/* harmony export */   \"floor\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.floor,\n/* harmony export */   \"floorDiv\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.floorDiv,\n/* harmony export */   \"fused\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.fused,\n/* harmony export */   \"gather\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.gather,\n/* harmony export */   \"gatherND\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.gatherND,\n/* harmony export */   \"greater\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.greater,\n/* harmony export */   \"greaterEqual\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.greaterEqual,\n/* harmony export */   \"ifft\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.ifft,\n/* harmony export */   \"imag\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.imag,\n/* harmony export */   \"image\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.image,\n/* harmony export */   \"inTopKAsync\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.inTopKAsync,\n/* harmony export */   \"irfft\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.irfft,\n/* harmony export */   \"isFinite\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.isFinite,\n/* harmony export */   \"isInf\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.isInf,\n/* harmony export */   \"isNaN\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.isNaN,\n/* harmony export */   \"leakyRelu\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.leakyRelu,\n/* harmony export */   \"less\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.less,\n/* harmony export */   \"lessEqual\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.lessEqual,\n/* harmony export */   \"linalg\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.linalg,\n/* harmony export */   \"linspace\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.linspace,\n/* harmony export */   \"localResponseNormalization\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.localResponseNormalization,\n/* harmony export */   \"log\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.log,\n/* harmony export */   \"log1p\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.log1p,\n/* harmony export */   \"logSigmoid\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.logSigmoid,\n/* harmony export */   \"logSoftmax\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.logSoftmax,\n/* harmony export */   \"logSumExp\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.logSumExp,\n/* harmony export */   \"logicalAnd\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.logicalAnd,\n/* harmony export */   \"logicalNot\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.logicalNot,\n/* harmony export */   \"logicalOr\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.logicalOr,\n/* harmony export */   \"logicalXor\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.logicalXor,\n/* harmony export */   \"losses\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.losses,\n/* harmony export */   \"matMul\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.matMul,\n/* harmony export */   \"max\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.max,\n/* harmony export */   \"maxPool\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.maxPool,\n/* harmony export */   \"maxPool3d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.maxPool3d,\n/* harmony export */   \"maxPoolWithArgmax\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.maxPoolWithArgmax,\n/* harmony export */   \"maximum\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.maximum,\n/* harmony export */   \"mean\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.mean,\n/* harmony export */   \"min\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.min,\n/* harmony export */   \"minimum\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.minimum,\n/* harmony export */   \"mirrorPad\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.mirrorPad,\n/* harmony export */   \"mod\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.mod,\n/* harmony export */   \"moments\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.moments,\n/* harmony export */   \"movingAverage\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.movingAverage,\n/* harmony export */   \"mul\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.mul,\n/* harmony export */   \"multiRNNCell\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.multiRNNCell,\n/* harmony export */   \"multinomial\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.multinomial,\n/* harmony export */   \"neg\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.neg,\n/* harmony export */   \"norm\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.norm,\n/* harmony export */   \"notEqual\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.notEqual,\n/* harmony export */   \"oneHot\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.oneHot,\n/* harmony export */   \"ones\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.ones,\n/* harmony export */   \"onesLike\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.onesLike,\n/* harmony export */   \"op\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.op,\n/* harmony export */   \"outerProduct\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.outerProduct,\n/* harmony export */   \"pad\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.pad,\n/* harmony export */   \"pad1d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.pad1d,\n/* harmony export */   \"pad2d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.pad2d,\n/* harmony export */   \"pad3d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.pad3d,\n/* harmony export */   \"pad4d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.pad4d,\n/* harmony export */   \"pool\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.pool,\n/* harmony export */   \"pow\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.pow,\n/* harmony export */   \"prelu\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.prelu,\n/* harmony export */   \"print\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.print,\n/* harmony export */   \"prod\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.prod,\n/* harmony export */   \"rand\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.rand,\n/* harmony export */   \"randomGamma\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.randomGamma,\n/* harmony export */   \"randomNormal\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.randomNormal,\n/* harmony export */   \"randomUniform\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.randomUniform,\n/* harmony export */   \"range\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.range,\n/* harmony export */   \"real\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.real,\n/* harmony export */   \"reciprocal\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.reciprocal,\n/* harmony export */   \"relu\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.relu,\n/* harmony export */   \"relu6\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.relu6,\n/* harmony export */   \"reshape\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.reshape,\n/* harmony export */   \"reverse\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.reverse,\n/* harmony export */   \"reverse1d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.reverse1d,\n/* harmony export */   \"reverse2d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.reverse2d,\n/* harmony export */   \"reverse3d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.reverse3d,\n/* harmony export */   \"reverse4d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.reverse4d,\n/* harmony export */   \"rfft\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.rfft,\n/* harmony export */   \"round\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.round,\n/* harmony export */   \"rsqrt\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.rsqrt,\n/* harmony export */   \"scalar\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.scalar,\n/* harmony export */   \"scatterND\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.scatterND,\n/* harmony export */   \"selu\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.selu,\n/* harmony export */   \"separableConv2d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.separableConv2d,\n/* harmony export */   \"setdiff1dAsync\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.setdiff1dAsync,\n/* harmony export */   \"sigmoid\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sigmoid,\n/* harmony export */   \"sign\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sign,\n/* harmony export */   \"signal\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.signal,\n/* harmony export */   \"sin\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sin,\n/* harmony export */   \"sinh\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sinh,\n/* harmony export */   \"slice\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.slice,\n/* harmony export */   \"slice1d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.slice1d,\n/* harmony export */   \"slice2d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.slice2d,\n/* harmony export */   \"slice3d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.slice3d,\n/* harmony export */   \"slice4d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.slice4d,\n/* harmony export */   \"softmax\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.softmax,\n/* harmony export */   \"softplus\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.softplus,\n/* harmony export */   \"spaceToBatchND\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.spaceToBatchND,\n/* harmony export */   \"sparseToDense\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sparseToDense,\n/* harmony export */   \"spectral\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.spectral,\n/* harmony export */   \"split\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.split,\n/* harmony export */   \"sqrt\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sqrt,\n/* harmony export */   \"square\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.square,\n/* harmony export */   \"squaredDifference\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.squaredDifference,\n/* harmony export */   \"squeeze\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.squeeze,\n/* harmony export */   \"stack\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.stack,\n/* harmony export */   \"step\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.step,\n/* harmony export */   \"stridedSlice\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.stridedSlice,\n/* harmony export */   \"sub\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sub,\n/* harmony export */   \"sum\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.sum,\n/* harmony export */   \"tan\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tan,\n/* harmony export */   \"tanh\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tanh,\n/* harmony export */   \"tensor\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tensor,\n/* harmony export */   \"tensor1d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tensor1d,\n/* harmony export */   \"tensor2d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tensor2d,\n/* harmony export */   \"tensor3d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tensor3d,\n/* harmony export */   \"tensor4d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tensor4d,\n/* harmony export */   \"tensor5d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tensor5d,\n/* harmony export */   \"tensor6d\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tensor6d,\n/* harmony export */   \"tile\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.tile,\n/* harmony export */   \"topk\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.topk,\n/* harmony export */   \"transpose\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.transpose,\n/* harmony export */   \"truncatedNormal\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.truncatedNormal,\n/* harmony export */   \"unique\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.unique,\n/* harmony export */   \"unsortedSegmentSum\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.unsortedSegmentSum,\n/* harmony export */   \"unstack\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.unstack,\n/* harmony export */   \"variable\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.variable,\n/* harmony export */   \"where\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.where,\n/* harmony export */   \"whereAsync\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.whereAsync,\n/* harmony export */   \"zeros\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.zeros,\n/* harmony export */   \"zerosLike\": () => /* reexport safe */ _ops_ops__WEBPACK_IMPORTED_MODULE_11__.zerosLike,\n/* harmony export */   \"Reduction\": () => /* reexport safe */ _ops_loss_ops_utils__WEBPACK_IMPORTED_MODULE_12__.Reduction,\n/* harmony export */   \"train\": () => /* reexport safe */ _train__WEBPACK_IMPORTED_MODULE_13__.train,\n/* harmony export */   \"backend\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.backend,\n/* harmony export */   \"deprecationWarn\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.deprecationWarn,\n/* harmony export */   \"disableDeprecationWarnings\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.disableDeprecationWarnings,\n/* harmony export */   \"dispose\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.dispose,\n/* harmony export */   \"disposeVariables\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.disposeVariables,\n/* harmony export */   \"enableDebugMode\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.enableDebugMode,\n/* harmony export */   \"enableProdMode\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.enableProdMode,\n/* harmony export */   \"engine\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.engine,\n/* harmony export */   \"findBackend\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.findBackend,\n/* harmony export */   \"findBackendFactory\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.findBackendFactory,\n/* harmony export */   \"getBackend\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.getBackend,\n/* harmony export */   \"keep\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.keep,\n/* harmony export */   \"memory\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.memory,\n/* harmony export */   \"profile\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.profile,\n/* harmony export */   \"ready\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.ready,\n/* harmony export */   \"registerBackend\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.registerBackend,\n/* harmony export */   \"removeBackend\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.removeBackend,\n/* harmony export */   \"setBackend\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.setBackend,\n/* harmony export */   \"setPlatform\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.setPlatform,\n/* harmony export */   \"tidy\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.tidy,\n/* harmony export */   \"time\": () => /* reexport safe */ _globals__WEBPACK_IMPORTED_MODULE_14__.time,\n/* harmony export */   \"copyRegisteredKernels\": () => /* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.copyRegisteredKernels,\n/* harmony export */   \"getGradient\": () => /* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.getGradient,\n/* harmony export */   \"getKernel\": () => /* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.getKernel,\n/* harmony export */   \"getKernelsForBackend\": () => /* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.getKernelsForBackend,\n/* harmony export */   \"registerGradient\": () => /* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.registerGradient,\n/* harmony export */   \"registerKernel\": () => /* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.registerKernel,\n/* harmony export */   \"unregisterGradient\": () => /* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.unregisterGradient,\n/* harmony export */   \"unregisterKernel\": () => /* reexport safe */ _kernel_registry__WEBPACK_IMPORTED_MODULE_15__.unregisterKernel,\n/* harmony export */   \"customGrad\": () => /* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_16__.customGrad,\n/* harmony export */   \"grad\": () => /* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_16__.grad,\n/* harmony export */   \"grads\": () => /* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_16__.grads,\n/* harmony export */   \"valueAndGrad\": () => /* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_16__.valueAndGrad,\n/* harmony export */   \"valueAndGrads\": () => /* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_16__.valueAndGrads,\n/* harmony export */   \"variableGrads\": () => /* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_16__.variableGrads,\n/* harmony export */   \"Environment\": () => /* reexport safe */ _environment__WEBPACK_IMPORTED_MODULE_17__.Environment,\n/* harmony export */   \"env\": () => /* reexport safe */ _environment__WEBPACK_IMPORTED_MODULE_17__.env,\n/* harmony export */   \"ENV\": () => /* reexport safe */ _environment__WEBPACK_IMPORTED_MODULE_17__.ENV,\n/* harmony export */   \"version_core\": () => /* reexport safe */ _version__WEBPACK_IMPORTED_MODULE_18__.version,\n/* harmony export */   \"nextFrame\": () => /* reexport safe */ _browser_util__WEBPACK_IMPORTED_MODULE_19__.nextFrame,\n/* harmony export */   \"browser\": () => /* reexport module object */ _ops_browser__WEBPACK_IMPORTED_MODULE_20__,\n/* harmony export */   \"io\": () => /* reexport module object */ _io_io__WEBPACK_IMPORTED_MODULE_0__,\n/* harmony export */   \"math\": () => /* reexport module object */ _math__WEBPACK_IMPORTED_MODULE_21__,\n/* harmony export */   \"serialization\": () => /* reexport module object */ _serialization__WEBPACK_IMPORTED_MODULE_22__,\n/* harmony export */   \"test_util\": () => /* reexport module object */ _test_util__WEBPACK_IMPORTED_MODULE_23__,\n/* harmony export */   \"util\": () => /* reexport module object */ _util__WEBPACK_IMPORTED_MODULE_24__,\n/* harmony export */   \"backend_util\": () => /* reexport module object */ _backends_backend_util__WEBPACK_IMPORTED_MODULE_25__,\n/* harmony export */   \"tensor_util\": () => /* reexport module object */ _tensor_util__WEBPACK_IMPORTED_MODULE_26__,\n/* harmony export */   \"slice_util\": () => /* reexport module object */ _ops_slice_util__WEBPACK_IMPORTED_MODULE_27__,\n/* harmony export */   \"gather_util\": () => /* reexport module object */ _ops_gather_nd_util__WEBPACK_IMPORTED_MODULE_28__,\n/* harmony export */   \"scatter_util\": () => /* reexport module object */ _ops_scatter_nd_util__WEBPACK_IMPORTED_MODULE_29__,\n/* harmony export */   \"device_util\": () => /* reexport module object */ _device_util__WEBPACK_IMPORTED_MODULE_30__,\n/* harmony export */   \"kernel_impls\": () => /* reexport module object */ _backends_kernel_impls__WEBPACK_IMPORTED_MODULE_31__,\n/* harmony export */   \"KernelBackend\": () => /* reexport safe */ _backends_backend__WEBPACK_IMPORTED_MODULE_32__.KernelBackend,\n/* harmony export */   \"DataStorage\": () => /* reexport safe */ _backends_backend__WEBPACK_IMPORTED_MODULE_32__.DataStorage,\n/* harmony export */   \"Abs\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Abs,\n/* harmony export */   \"Acos\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Acos,\n/* harmony export */   \"Acosh\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Acosh,\n/* harmony export */   \"Add\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Add,\n/* harmony export */   \"AddN\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.AddN,\n/* harmony export */   \"All\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.All,\n/* harmony export */   \"Any\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Any,\n/* harmony export */   \"ArgMax\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ArgMax,\n/* harmony export */   \"ArgMin\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ArgMin,\n/* harmony export */   \"Asin\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Asin,\n/* harmony export */   \"Asinh\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Asinh,\n/* harmony export */   \"Atan\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Atan,\n/* harmony export */   \"Atan2\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Atan2,\n/* harmony export */   \"Atanh\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Atanh,\n/* harmony export */   \"AvgPool\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.AvgPool,\n/* harmony export */   \"AvgPool3D\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.AvgPool3D,\n/* harmony export */   \"AvgPool3DGrad\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.AvgPool3DGrad,\n/* harmony export */   \"AvgPoolGrad\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.AvgPoolGrad,\n/* harmony export */   \"BatchMatMul\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.BatchMatMul,\n/* harmony export */   \"BatchToSpaceND\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.BatchToSpaceND,\n/* harmony export */   \"Bincount\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Bincount,\n/* harmony export */   \"BroadcastTo\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.BroadcastTo,\n/* harmony export */   \"Cast\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Cast,\n/* harmony export */   \"Ceil\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Ceil,\n/* harmony export */   \"ClipByValue\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ClipByValue,\n/* harmony export */   \"Complex\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Complex,\n/* harmony export */   \"ComplexAbs\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ComplexAbs,\n/* harmony export */   \"Concat\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Concat,\n/* harmony export */   \"Conv2D\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Conv2D,\n/* harmony export */   \"Conv2DBackpropFilter\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Conv2DBackpropFilter,\n/* harmony export */   \"Conv2DBackpropInput\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Conv2DBackpropInput,\n/* harmony export */   \"Conv3D\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Conv3D,\n/* harmony export */   \"Conv3DBackpropFilterV2\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Conv3DBackpropFilterV2,\n/* harmony export */   \"Conv3DBackpropInputV2\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Conv3DBackpropInputV2,\n/* harmony export */   \"Cos\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Cos,\n/* harmony export */   \"Cosh\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Cosh,\n/* harmony export */   \"CropAndResize\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.CropAndResize,\n/* harmony export */   \"Cumsum\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Cumsum,\n/* harmony export */   \"DenseBincount\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.DenseBincount,\n/* harmony export */   \"DepthToSpace\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.DepthToSpace,\n/* harmony export */   \"DepthwiseConv2dNative\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.DepthwiseConv2dNative,\n/* harmony export */   \"DepthwiseConv2dNativeBackpropFilter\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.DepthwiseConv2dNativeBackpropFilter,\n/* harmony export */   \"DepthwiseConv2dNativeBackpropInput\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.DepthwiseConv2dNativeBackpropInput,\n/* harmony export */   \"Diag\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Diag,\n/* harmony export */   \"Dilation2D\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Dilation2D,\n/* harmony export */   \"Dilation2DBackpropFilter\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Dilation2DBackpropFilter,\n/* harmony export */   \"Dilation2DBackpropInput\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Dilation2DBackpropInput,\n/* harmony export */   \"Elu\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Elu,\n/* harmony export */   \"EluGrad\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.EluGrad,\n/* harmony export */   \"Equal\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Equal,\n/* harmony export */   \"Erf\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Erf,\n/* harmony export */   \"Exp\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Exp,\n/* harmony export */   \"ExpandDims\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ExpandDims,\n/* harmony export */   \"Expm1\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Expm1,\n/* harmony export */   \"FFT\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.FFT,\n/* harmony export */   \"Fill\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Fill,\n/* harmony export */   \"FlipLeftRight\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.FlipLeftRight,\n/* harmony export */   \"Floor\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Floor,\n/* harmony export */   \"FloorDiv\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.FloorDiv,\n/* harmony export */   \"FromPixels\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.FromPixels,\n/* harmony export */   \"FusedBatchNorm\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.FusedBatchNorm,\n/* harmony export */   \"FusedConv2D\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.FusedConv2D,\n/* harmony export */   \"FusedDepthwiseConv2D\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.FusedDepthwiseConv2D,\n/* harmony export */   \"GatherNd\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.GatherNd,\n/* harmony export */   \"GatherV2\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.GatherV2,\n/* harmony export */   \"Greater\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Greater,\n/* harmony export */   \"GreaterEqual\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.GreaterEqual,\n/* harmony export */   \"IFFT\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.IFFT,\n/* harmony export */   \"Identity\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Identity,\n/* harmony export */   \"Imag\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Imag,\n/* harmony export */   \"IsFinite\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.IsFinite,\n/* harmony export */   \"IsInf\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.IsInf,\n/* harmony export */   \"IsNan\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.IsNan,\n/* harmony export */   \"LRN\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LRN,\n/* harmony export */   \"LRNGrad\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LRNGrad,\n/* harmony export */   \"LeakyRelu\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LeakyRelu,\n/* harmony export */   \"Less\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Less,\n/* harmony export */   \"LessEqual\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LessEqual,\n/* harmony export */   \"LinSpace\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LinSpace,\n/* harmony export */   \"Log\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Log,\n/* harmony export */   \"Log1p\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Log1p,\n/* harmony export */   \"LogSoftmax\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LogSoftmax,\n/* harmony export */   \"LogicalAnd\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LogicalAnd,\n/* harmony export */   \"LogicalNot\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LogicalNot,\n/* harmony export */   \"LogicalOr\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.LogicalOr,\n/* harmony export */   \"Max\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Max,\n/* harmony export */   \"MaxPool\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.MaxPool,\n/* harmony export */   \"MaxPool3D\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.MaxPool3D,\n/* harmony export */   \"MaxPool3DGrad\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.MaxPool3DGrad,\n/* harmony export */   \"MaxPoolGrad\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.MaxPoolGrad,\n/* harmony export */   \"MaxPoolWithArgmax\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.MaxPoolWithArgmax,\n/* harmony export */   \"Maximum\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Maximum,\n/* harmony export */   \"Mean\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Mean,\n/* harmony export */   \"Min\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Min,\n/* harmony export */   \"Minimum\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Minimum,\n/* harmony export */   \"MirrorPad\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.MirrorPad,\n/* harmony export */   \"Mod\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Mod,\n/* harmony export */   \"Multinomial\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Multinomial,\n/* harmony export */   \"Multiply\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Multiply,\n/* harmony export */   \"Neg\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Neg,\n/* harmony export */   \"NonMaxSuppressionV3\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.NonMaxSuppressionV3,\n/* harmony export */   \"NonMaxSuppressionV4\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.NonMaxSuppressionV4,\n/* harmony export */   \"NonMaxSuppressionV5\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.NonMaxSuppressionV5,\n/* harmony export */   \"NotEqual\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.NotEqual,\n/* harmony export */   \"OneHot\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.OneHot,\n/* harmony export */   \"OnesLike\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.OnesLike,\n/* harmony export */   \"Pack\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Pack,\n/* harmony export */   \"PadV2\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.PadV2,\n/* harmony export */   \"Pool\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Pool,\n/* harmony export */   \"Pow\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Pow,\n/* harmony export */   \"Prelu\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Prelu,\n/* harmony export */   \"Prod\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Prod,\n/* harmony export */   \"Range\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Range,\n/* harmony export */   \"Real\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Real,\n/* harmony export */   \"RealDiv\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.RealDiv,\n/* harmony export */   \"Reciprocal\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Reciprocal,\n/* harmony export */   \"Relu\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Relu,\n/* harmony export */   \"Relu6\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Relu6,\n/* harmony export */   \"Reshape\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Reshape,\n/* harmony export */   \"ResizeBilinear\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ResizeBilinear,\n/* harmony export */   \"ResizeBilinearGrad\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ResizeBilinearGrad,\n/* harmony export */   \"ResizeNearestNeighbor\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ResizeNearestNeighbor,\n/* harmony export */   \"ResizeNearestNeighborGrad\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ResizeNearestNeighborGrad,\n/* harmony export */   \"Reverse\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Reverse,\n/* harmony export */   \"RotateWithOffset\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.RotateWithOffset,\n/* harmony export */   \"Round\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Round,\n/* harmony export */   \"Rsqrt\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Rsqrt,\n/* harmony export */   \"ScatterNd\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ScatterNd,\n/* harmony export */   \"Select\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Select,\n/* harmony export */   \"Selu\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Selu,\n/* harmony export */   \"Sigmoid\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Sigmoid,\n/* harmony export */   \"Sign\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Sign,\n/* harmony export */   \"Sin\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Sin,\n/* harmony export */   \"Sinh\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Sinh,\n/* harmony export */   \"Slice\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Slice,\n/* harmony export */   \"Softmax\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Softmax,\n/* harmony export */   \"Softplus\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Softplus,\n/* harmony export */   \"SpaceToBatchND\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.SpaceToBatchND,\n/* harmony export */   \"SparseToDense\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.SparseToDense,\n/* harmony export */   \"SplitV\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.SplitV,\n/* harmony export */   \"Sqrt\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Sqrt,\n/* harmony export */   \"Square\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Square,\n/* harmony export */   \"SquaredDifference\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.SquaredDifference,\n/* harmony export */   \"Step\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Step,\n/* harmony export */   \"StridedSlice\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.StridedSlice,\n/* harmony export */   \"Sub\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Sub,\n/* harmony export */   \"Sum\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Sum,\n/* harmony export */   \"Tan\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Tan,\n/* harmony export */   \"Tanh\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Tanh,\n/* harmony export */   \"Tile\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Tile,\n/* harmony export */   \"TopK\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.TopK,\n/* harmony export */   \"Transpose\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Transpose,\n/* harmony export */   \"Unique\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Unique,\n/* harmony export */   \"Unpack\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.Unpack,\n/* harmony export */   \"UnsortedSegmentSum\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.UnsortedSegmentSum,\n/* harmony export */   \"ZerosLike\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__.ZerosLike,\n/* harmony export */   \"_FusedMatMul\": () => /* reexport safe */ _kernel_names__WEBPACK_IMPORTED_MODULE_33__._FusedMatMul\n/* harmony export */ });\n/* harmony import */ var _io_io__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./io/io */ \"./node_modules/@tensorflow/tfjs-core/dist/io/io.js\");\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./math */ \"./node_modules/@tensorflow/tfjs-core/dist/math.js\");\n/* harmony import */ var _ops_browser__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./ops/browser */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/browser.js\");\n/* harmony import */ var _ops_gather_nd_util__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./ops/gather_nd_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js\");\n/* harmony import */ var _ops_scatter_nd_util__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./ops/scatter_nd_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js\");\n/* harmony import */ var _ops_slice_util__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./ops/slice_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _test_util__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./test_util */ \"./node_modules/@tensorflow/tfjs-core/dist/test_util.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./version */ \"./node_modules/@tensorflow/tfjs-core/dist/version.js\");\n/* harmony import */ var _optimizers_adadelta_optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizers/adadelta_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js\");\n/* harmony import */ var _optimizers_adagrad_optimizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./optimizers/adagrad_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js\");\n/* harmony import */ var _optimizers_adam_optimizer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./optimizers/adam_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js\");\n/* harmony import */ var _optimizers_adamax_optimizer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./optimizers/adamax_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js\");\n/* harmony import */ var _optimizers_momentum_optimizer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./optimizers/momentum_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js\");\n/* harmony import */ var _optimizers_optimizer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./optimizers/optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\");\n/* harmony import */ var _optimizers_rmsprop_optimizer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./optimizers/rmsprop_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js\");\n/* harmony import */ var _optimizers_sgd_optimizer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./optimizers/sgd_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./types */ \"./node_modules/@tensorflow/tfjs-core/dist/types.js\");\n/* harmony import */ var _ops_ops__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ops/ops */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js\");\n/* harmony import */ var _ops_loss_ops_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ops/loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _train__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./train */ \"./node_modules/@tensorflow/tfjs-core/dist/train.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _kernel_registry__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./kernel_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js\");\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _browser_util__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./browser_util */ \"./node_modules/@tensorflow/tfjs-core/dist/browser_util.js\");\n/* harmony import */ var _backends_backend_util__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./backends/backend_util */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js\");\n/* harmony import */ var _device_util__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./device_util */ \"./node_modules/@tensorflow/tfjs-core/dist/device_util.js\");\n/* harmony import */ var _backends_kernel_impls__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./backends/kernel_impls */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/kernel_impls.js\");\n/* harmony import */ var _backends_backend__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./backends/backend */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// base.ts is tfjs-core without auto registration of things like flags,\n// gradients, chained ops or the opHandler. See base_side_effects.ts for parts\n// tfjs core that are required side effects.\n/**\n * @fileoverview\n * @suppress {partialAlias} Optimization disabled due to passing the module\n * object into a function below:\n *\n *   import * as ops from './ops/ops';\n *   setOpHandler(ops);\n */\n// Serialization.\n;\n\n\n\n\n\n\n\n\n\n\n// Optimizers.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Top-level method exports.\n\n// Second level exports.\n\n\n\n\n\n// Backend specific.\n\n// Export all kernel names / info.\n\n//# sourceMappingURL=base.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/base.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/base_side_effects.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/base_side_effects.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./flags */ \"./node_modules/@tensorflow/tfjs-core/dist/flags.js\");\n/* harmony import */ var _platforms_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./platforms/platform_browser */ \"./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_browser.js\");\n/* harmony import */ var _platforms_platform_node__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./platforms/platform_node */ \"./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_node.js\");\n/* harmony import */ var _ops_buffer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ops/buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/* harmony import */ var _ops_cast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ops/cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _ops_clone__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ops/clone */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js\");\n/* harmony import */ var _ops_print__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ops/print */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/print.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Required side effectful code for tfjs-core\n// Set up Engine and ENV\n;\n(0,_engine__WEBPACK_IMPORTED_MODULE_0__.getOrMakeEngine)();\n// Register backend-agnostic flags.\n\n// Register platforms\n\n\n// Set up OpHandler\n\n\n\n\n\nconst opHandler = {\n    buffer: _ops_buffer__WEBPACK_IMPORTED_MODULE_5__.buffer,\n    cast: _ops_cast__WEBPACK_IMPORTED_MODULE_6__.cast,\n    clone: _ops_clone__WEBPACK_IMPORTED_MODULE_7__.clone,\n    print: _ops_print__WEBPACK_IMPORTED_MODULE_8__.print\n};\n(0,_tensor__WEBPACK_IMPORTED_MODULE_4__.setOpHandler)(opHandler);\n//# sourceMappingURL=base_side_effects.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/base_side_effects.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/browser_util.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/browser_util.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export nextFrame [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nextFrame\": () => /* binding */ nextFrame\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst delayCallback = (() => {\n    if (typeof requestAnimationFrame !== 'undefined') {\n        return requestAnimationFrame;\n    }\n    else if (typeof setImmediate !== 'undefined') {\n        return setImmediate;\n    }\n    return (f) => f(); // no delays\n})();\n/**\n * Returns a promise that resolve when a requestAnimationFrame has completed.\n *\n * On Node.js this uses setImmediate instead of requestAnimationFrame.\n *\n * This is simply a sugar method so that users can do the following:\n * `await tf.nextFrame();`\n *\n * @doc {heading: 'Performance', subheading: 'Timing'}\n */\nfunction nextFrame() {\n    return new Promise(resolve => delayCallback(() => resolve()));\n}\n\n//# sourceMappingURL=browser_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/browser_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/device_util.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/device_util.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export isBrowser [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isMobile [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isMobile\": () => /* binding */ isMobile,\n/* harmony export */   \"isBrowser\": () => /* binding */ isBrowser\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line:no-any\nfunction _isNavigatorDefined() {\n    return typeof navigator !== 'undefined' && navigator != null;\n}\nfunction isMobile() {\n    if (_isNavigatorDefined()) {\n        // tslint:disable-next-line:no-any\n        const a = navigator.userAgent || navigator.vendor || window.opera;\n        // tslint:disable-next-line:max-line-length\n        return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i\n            .test(a) ||\n            // tslint:disable-next-line:max-line-length\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i\n                .test(a.substr(0, 4));\n    }\n    return false;\n}\nfunction isBrowser() {\n    return (typeof window !== 'undefined' && window.document != null) ||\n        //@ts-ignore\n        (typeof WorkerGlobalScope !== 'undefined');\n}\n//# sourceMappingURL=device_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/device_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/engine.js":
/*!***********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/engine.js ***!
  \***********************************************************/
/*! namespace exports */
/*! export ENGINE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Engine [provided] [no usage info] [missing usage info prevents renaming] */
/*! export add [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getOrMakeEngine [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Engine\": () => /* binding */ Engine,\n/* harmony export */   \"getOrMakeEngine\": () => /* binding */ getOrMakeEngine,\n/* harmony export */   \"ENGINE\": () => /* binding */ ENGINE,\n/* harmony export */   \"add\": () => /* binding */ add\n/* harmony export */ });\n/* harmony import */ var _backends_backend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./backends/backend */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _global_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./global_util */ \"./node_modules/@tensorflow/tfjs-core/dist/global_util.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _kernel_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kernel_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js\");\n/* harmony import */ var _profiler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./profiler */ \"./node_modules/@tensorflow/tfjs-core/dist/profiler.js\");\n/* harmony import */ var _tape__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tape */ \"./node_modules/@tensorflow/tfjs-core/dist/tape.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\nfunction isRegisteredKernelInvocation(kernelInvocation) {\n    return kernelInvocation.kernelName != null;\n}\nclass EngineState {\n    constructor() {\n        // Public since optimizers will use it.\n        this.registeredVariables = {};\n        this.nextTapeNodeId = 0;\n        this.numBytes = 0;\n        this.numTensors = 0;\n        this.numStringTensors = 0;\n        this.numDataBuffers = 0;\n        // Number of nested tf.grad() statements when computing higher-order\n        // gradients. E.g. `1` for first-order gradients and `2` for second-order\n        // gradients. Used to track if the tape should be removed after a backprop.\n        this.gradientDepth = 0;\n        // Number of nested kernel calls. When kernel depth is greater than 1, we turn\n        // off the tape.\n        this.kernelDepth = 0;\n        this.scopeStack = [];\n        /**\n         * Keeps track of the number of data moves during a kernel execution. We\n         * maintain a stack since kernels can call other kernels, recursively.\n         */\n        this.numDataMovesStack = [];\n        this.nextScopeId = 0;\n        this.tensorInfo = new WeakMap();\n        this.profiling = false;\n        this.activeProfile = {\n            newBytes: 0,\n            newTensors: 0,\n            peakBytes: 0,\n            kernels: [],\n            result: null,\n            get kernelNames() {\n                return Array.from(new Set(this.kernels.map(k => k.name)));\n            }\n        };\n    }\n    dispose() {\n        for (const variableName in this.registeredVariables) {\n            this.registeredVariables[variableName].dispose();\n        }\n    }\n}\nclass Engine {\n    constructor(ENV) {\n        this.ENV = ENV;\n        this.registry = {};\n        this.registryFactory = {};\n        this.pendingBackendInitId = 0;\n        this.state = new EngineState();\n    }\n    async ready() {\n        if (this.pendingBackendInit != null) {\n            return this.pendingBackendInit.then(() => { });\n        }\n        if (this.backendInstance != null) {\n            return;\n        }\n        const sortedBackends = this.getSortedBackends();\n        for (let i = 0; i < sortedBackends.length; i++) {\n            const backendName = sortedBackends[i];\n            const success = await this.initializeBackend(backendName).success;\n            if (success) {\n                await this.setBackend(backendName);\n                return;\n            }\n        }\n        throw new Error(`Could not initialize any backends, all backend initializations ` +\n            `failed.`);\n    }\n    get backend() {\n        if (this.pendingBackendInit != null) {\n            throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make ` +\n                `sure to await tf.ready() or await tf.setBackend() before calling ` +\n                `other methods`);\n        }\n        if (this.backendInstance == null) {\n            const { name, asyncInit } = this.initializeBackendsAndReturnBest();\n            if (asyncInit) {\n                throw new Error(`The highest priority backend '${name}' has not yet been ` +\n                    `initialized. Make sure to await tf.ready() or ` +\n                    `await tf.setBackend() before calling other methods`);\n            }\n            this.setBackend(name);\n        }\n        return this.backendInstance;\n    }\n    backendNames() {\n        return Object.keys(this.registryFactory);\n    }\n    findBackend(backendName) {\n        if (!(backendName in this.registry)) {\n            // If the backend hasn't been initialized but we have a registry entry for\n            // it, initialize it and return it.\n            if (backendName in this.registryFactory) {\n                const { asyncInit } = this.initializeBackend(backendName);\n                if (asyncInit) {\n                    // Backend is not ready yet.\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        return this.registry[backendName];\n    }\n    findBackendFactory(backendName) {\n        if (!(backendName in this.registryFactory)) {\n            return null;\n        }\n        return this.registryFactory[backendName].factory;\n    }\n    registerBackend(backendName, factory, priority = 1) {\n        if (backendName in this.registryFactory) {\n            console.warn(`${backendName} backend was already registered. ` +\n                `Reusing existing backend factory.`);\n            return false;\n        }\n        this.registryFactory[backendName] = { factory, priority };\n        return true;\n    }\n    async setBackend(backendName) {\n        if (this.registryFactory[backendName] == null) {\n            throw new Error(`Backend name '${backendName}' not found in registry`);\n        }\n        this.backendName = backendName;\n        if (this.registry[backendName] == null) {\n            this.backendInstance = null;\n            const { success, asyncInit } = this.initializeBackend(backendName);\n            const result = asyncInit ? await success : success;\n            if (!result) {\n                return false;\n            }\n        }\n        this.backendInstance = this.registry[backendName];\n        this.setupRegisteredKernels();\n        // Reset the profiler.\n        this.profiler = new _profiler__WEBPACK_IMPORTED_MODULE_1__.Profiler(this.backendInstance);\n        return true;\n    }\n    setupRegisteredKernels() {\n        const kernels = (0,_kernel_registry__WEBPACK_IMPORTED_MODULE_2__.getKernelsForBackend)(this.backendName);\n        kernels.forEach(kernel => {\n            if (kernel.setupFunc != null) {\n                kernel.setupFunc(this.backendInstance);\n            }\n        });\n    }\n    disposeRegisteredKernels(backendName) {\n        const kernels = (0,_kernel_registry__WEBPACK_IMPORTED_MODULE_2__.getKernelsForBackend)(backendName);\n        kernels.forEach(kernel => {\n            if (kernel.disposeFunc != null) {\n                kernel.disposeFunc(this.registry[backendName]);\n            }\n        });\n    }\n    /**\n     * Initializes a backend by looking up the backend name in the factory\n     * registry and calling the factory method. Returns a boolean representing\n     * whether the initialization of the backend suceeded. Throws an error if\n     * there is no backend in the factory registry.\n     */\n    initializeBackend(backendName) {\n        const registryFactoryEntry = this.registryFactory[backendName];\n        if (registryFactoryEntry == null) {\n            throw new Error(`Cannot initialize backend ${backendName}, no registration found.`);\n        }\n        try {\n            const backend = registryFactoryEntry.factory();\n            /* Test if the factory returns a promise.\n            Done in a more liberal way than\n            previous 'Promise.resolve(backend)===backend'\n            as we needed to account for custom Promise\n            implementations (e.g. Angular) */\n            if (backend && !(backend instanceof _backends_backend__WEBPACK_IMPORTED_MODULE_3__.KernelBackend) &&\n                typeof backend.then === 'function') {\n                const promiseId = ++this.pendingBackendInitId;\n                const success = backend\n                    .then(backendInstance => {\n                    // Outdated promise. Another backend was set in the meantime.\n                    if (promiseId < this.pendingBackendInitId) {\n                        return false;\n                    }\n                    this.registry[backendName] = backendInstance;\n                    this.pendingBackendInit = null;\n                    return true;\n                })\n                    .catch(err => {\n                    // Outdated promise. Another backend was set in the meantime.\n                    if (promiseId < this.pendingBackendInitId) {\n                        return false;\n                    }\n                    this.pendingBackendInit = null;\n                    console.warn(`Initialization of backend ${backendName} failed`);\n                    console.warn(err.stack || err.message);\n                    return false;\n                });\n                this.pendingBackendInit = success;\n                return { success, asyncInit: true };\n            }\n            else {\n                this.registry[backendName] = backend;\n                return { success: true, asyncInit: false };\n            }\n        }\n        catch (err) {\n            console.warn(`Initialization of backend ${backendName} failed`);\n            console.warn(err.stack || err.message);\n            return { success: false, asyncInit: false };\n        }\n    }\n    removeBackend(backendName) {\n        if (!(backendName in this.registryFactory)) {\n            throw new Error(`${backendName} backend not found in registry`);\n        }\n        if (this.backendName === backendName && this.pendingBackendInit != null) {\n            // There is a pending promise of the backend we want to remove. Make it\n            // obsolete.\n            this.pendingBackendInitId++;\n        }\n        if (backendName in this.registry) {\n            this.disposeRegisteredKernels(backendName);\n            this.registry[backendName].dispose();\n            delete this.registry[backendName];\n        }\n        delete this.registryFactory[backendName];\n        // Unset the backend if it is active.\n        if (this.backendName === backendName) {\n            this.pendingBackendInit = null;\n            this.backendName = null;\n            this.backendInstance = null;\n        }\n    }\n    getSortedBackends() {\n        if (Object.keys(this.registryFactory).length === 0) {\n            throw new Error('No backend found in registry.');\n        }\n        return Object.keys(this.registryFactory).sort((a, b) => {\n            // Highest priority comes first.\n            return this.registryFactory[b].priority -\n                this.registryFactory[a].priority;\n        });\n    }\n    initializeBackendsAndReturnBest() {\n        const sortedBackends = this.getSortedBackends();\n        for (let i = 0; i < sortedBackends.length; i++) {\n            const backendName = sortedBackends[i];\n            const { success, asyncInit } = this.initializeBackend(backendName);\n            if (asyncInit || success) {\n                return { name: backendName, asyncInit };\n            }\n        }\n        throw new Error(`Could not initialize any backends, all backend initializations ` +\n            `failed.`);\n    }\n    moveData(backend, dataId) {\n        const info = this.state.tensorInfo.get(dataId);\n        const srcBackend = info.backend;\n        const values = this.readSync(dataId);\n        const refCount = srcBackend.refCount(dataId);\n        // Delete the tensor from the old backend and move it to the new\n        // backend.\n        srcBackend.disposeData(dataId, true);\n        info.backend = backend;\n        backend.move(dataId, values, info.shape, info.dtype, refCount);\n        if (this.shouldCheckForMemLeaks()) {\n            // Track the number of moves during a kernel execution to correctly\n            // detect memory leaks.\n            this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1]++;\n        }\n    }\n    tidy(nameOrFn, fn) {\n        let name = null;\n        if (fn == null) {\n            // Called with only 1 argument.\n            if (typeof nameOrFn !== 'function') {\n                throw new Error('Please provide a function to tidy()');\n            }\n            fn = nameOrFn;\n        }\n        else {\n            // Called with 2 arguments.\n            if (typeof nameOrFn !== 'string' && !(nameOrFn instanceof String)) {\n                throw new Error('When calling with two arguments, the first argument ' +\n                    'to tidy() must be a string');\n            }\n            if (typeof fn !== 'function') {\n                throw new Error('When calling with two arguments, the 2nd argument ' +\n                    'to tidy() must be a function');\n            }\n            name = nameOrFn;\n            // TODO(nsthorat,smilkov): Do operation logging and performance\n            // profiling.\n        }\n        let result;\n        return this.scopedRun(() => this.startScope(name), () => this.endScope(result), () => {\n            result = fn();\n            if (result instanceof Promise) {\n                console.error('Cannot return a Promise inside of tidy.');\n            }\n            return result;\n        });\n    }\n    scopedRun(start, end, f) {\n        start();\n        try {\n            const res = f();\n            end();\n            return res;\n        }\n        catch (ex) {\n            end();\n            throw ex;\n        }\n    }\n    nextTensorId() {\n        return Engine.nextTensorId++;\n    }\n    nextVariableId() {\n        return Engine.nextVariableId++;\n    }\n    /**\n     * This method is called instead of the public-facing tensor.clone() when\n     * saving a tensor for backwards pass. It makes sure to add the clone\n     * operation to the tape regardless of being called inside a kernel\n     * execution.\n     */\n    clone(x) {\n        const y = ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Identity, { x });\n        const inputs = { x };\n        const grad = (dy) => ({\n            x: () => {\n                const dtype = 'float32';\n                const gradInputs = { x: dy };\n                const attrs = { dtype };\n                return ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Cast, gradInputs, \n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                attrs);\n            }\n        });\n        const saved = [];\n        this.addTapeNode(this.state.activeScope.name, inputs, [y], grad, saved, {});\n        return y;\n    }\n    /**\n     * Execute a kernel with the given name and return the output tensor.\n     *\n     * @param kernelName The name of the kernel to execute.\n     * @param inputs A map of input names to tensors.\n     * @param attrs A map of attribute names to their values. An attribute is a\n     *     primitive (non-tensor) input to the kernel.\n     * @param inputsToSave A list of tensors, inputs to save for the backprop\n     *     computation.\n     * @param outputsToSave A list of booleans, specifying which output to save\n     *     for the backprop computation. These are booleans since the output\n     * tensors are not visible to the user.\n     */\n    runKernel(kernelName, inputs, attrs) {\n        const hasKernel = (0,_kernel_registry__WEBPACK_IMPORTED_MODULE_2__.getKernel)(kernelName, this.backendName) != null;\n        if (!hasKernel) {\n            throw new Error(`Kernel '${kernelName}' not registered for backend '${this.backendName}'`);\n        }\n        return this.runKernelFunc({ kernelName, inputs, attrs });\n    }\n    shouldCheckForMemLeaks() {\n        return this.ENV.getBool('IS_TEST');\n    }\n    checkKernelForMemLeak(kernelName, numDataIdsBefore, outInfos) {\n        const numDataIdsAfter = this.backend.numDataIds();\n        // Count the number of data ids associated with the result of the kernel.\n        let numOutputDataIds = 0;\n        outInfos.forEach(info => {\n            // Complex numbers allocate 3 data ids, one for 'real', one for\n            // 'imaginary', and one for the container that holds the former two.\n            numOutputDataIds += (info.dtype === 'complex64' ? 3 : 1);\n        });\n        // Account for the number of moves during kernel execution. A \"data move\"\n        // can happen in the middle of a kernel execution, placing a new (key,value)\n        // pair in the data storage. Since data moves have net zero effect (we\n        // always remove the data from the old backend), we have to cancel them out\n        // when detecting memory leaks.\n        const numMoves = this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1];\n        const dataIdsLeaked = numDataIdsAfter - numDataIdsBefore - numOutputDataIds - numMoves;\n        if (dataIdsLeaked > 0) {\n            throw new Error(`Backend '${this.backendName}' has an internal memory leak ` +\n                `(${dataIdsLeaked} data ids) after running '${kernelName}'`);\n        }\n    }\n    /**\n     * Internal helper method to execute a kernel Func\n     *\n     * Use `runKernel` to execute kernels from outside of engine.\n     */\n    runKernelFunc(kernelParams) {\n        let outputs;\n        let saved = [];\n        const isTapeOn = this.isTapeOn();\n        const startingBytecount = this.state.numBytes;\n        const startingNumTensors = this.state.numTensors;\n        if (this.shouldCheckForMemLeaks()) {\n            this.state.numDataMovesStack.push(0);\n        }\n        let kernelFunc;\n        if (this.backendName == null) {\n            // backend has not been initialized yet (backend initialization is lazy\n            // can be deferred until an op/ kernel is run).\n            // The below getter has side effects that will try to initialize the\n            // backend and set properties like this.backendName\n            // tslint:disable-next-line: no-unused-expression\n            this.backend;\n        }\n        let out;\n        const kernelOrScopeName = isRegisteredKernelInvocation(kernelParams) ?\n            kernelParams.kernelName :\n            this.state.activeScope != null ? this.state.activeScope.name : '';\n        // Create the kernelFunc from either a registered kernel OR passed in\n        // forward/backward functions (used by custom grad). In this context a\n        // kernelFunc wraps a kernel implementation with some bookkeeping.\n        if (isRegisteredKernelInvocation(kernelParams)) {\n            const { kernelName, inputs, attrs } = kernelParams;\n            if (this.backendName == null) {\n                // backend has not been initialized yet (backend initialization is lazy\n                // can be deferred until an op/ kernel is run).\n                // The below getter has side effects that will try to initialize the\n                // backend and set properties like this.backendName\n                // tslint:disable-next-line: no-unused-expression\n                this.backend;\n            }\n            const kernel = (0,_kernel_registry__WEBPACK_IMPORTED_MODULE_2__.getKernel)(kernelName, this.backendName);\n            _util__WEBPACK_IMPORTED_MODULE_5__.assert(kernel != null, () => `Cannot find registered kernel '${kernelName}' for backend '${this.backendName}'`);\n            kernelFunc = () => {\n                const numDataIdsBefore = this.backend.numDataIds();\n                out = kernel.kernelFunc({ inputs, attrs, backend: this.backend });\n                const outInfos = Array.isArray(out) ? out : [out];\n                if (this.shouldCheckForMemLeaks()) {\n                    this.checkKernelForMemLeak(kernelName, numDataIdsBefore, outInfos);\n                }\n                const outTensors = outInfos.map((outInfo) => {\n                    // todo (yassogba) remove this option (Tensor) when node backend\n                    // methods have been modularized and they all return tensorInfo.\n                    // TensorInfos do not have a rank attribute.\n                    if (outInfo.rank != null) {\n                        return outInfo;\n                    }\n                    const { dataId, shape, dtype } = outInfo;\n                    return this.makeTensorFromDataId(dataId, shape, dtype);\n                });\n                // Save any required inputs and outputs.\n                // Do not save unless we are recording to the tape. Otherwise it would\n                // cause a mem leak since there would be no backprop for these tensors\n                // (which would otherwise dispose them).\n                if (isTapeOn) {\n                    const tensorsToSave = this.getTensorsForGradient(kernelName, inputs, outTensors);\n                    saved = this.saveTensorsForBackwardMode(tensorsToSave);\n                }\n                return outTensors;\n            };\n        }\n        else {\n            const { forwardFunc } = kernelParams;\n            // Running a customGrad op.\n            const saveFunc = (tensors) => {\n                // Do not save unless we are recording to the tape. Otherwise it would\n                // cause a mem leak since we would never run backprop, which disposes\n                // the kept tensors.\n                if (!isTapeOn) {\n                    return;\n                }\n                saved = tensors.map(tensor => this.keep(this.clone(tensor)));\n            };\n            kernelFunc = () => {\n                const numDataIdsBefore = this.backend.numDataIds();\n                out = this.tidy(() => forwardFunc(this.backend, saveFunc));\n                const outs = (Array.isArray(out) ? out : [out]);\n                if (this.shouldCheckForMemLeaks()) {\n                    // Scope name is used to print a more helpful error message if needed.\n                    this.checkKernelForMemLeak(kernelOrScopeName, numDataIdsBefore, outs);\n                }\n                return outs;\n            };\n        }\n        //\n        // Run the kernelFunc. Optionally profiling it.\n        //\n        const { inputs, attrs } = kernelParams;\n        const backwardsFunc = isRegisteredKernelInvocation(kernelParams) ?\n            null :\n            kernelParams.backwardsFunc;\n        let kernelProfile;\n        this.scopedRun(\n        // Stop recording to a tape when running a kernel.\n        () => this.state.kernelDepth++, () => this.state.kernelDepth--, () => {\n            if (!this.ENV.getBool('DEBUG') && !this.state.profiling) {\n                outputs = kernelFunc();\n            }\n            else {\n                kernelProfile = this.profiler.profileKernel(kernelOrScopeName, inputs, () => kernelFunc());\n                if (this.ENV.getBool('DEBUG')) {\n                    this.profiler.logKernelProfile(kernelProfile);\n                }\n                outputs = kernelProfile.outputs;\n            }\n        });\n        if (isTapeOn) {\n            this.addTapeNode(kernelOrScopeName, inputs, outputs, backwardsFunc, saved, attrs);\n        }\n        if (this.state.profiling) {\n            this.state.activeProfile.kernels.push({\n                name: kernelOrScopeName,\n                bytesAdded: this.state.numBytes - startingBytecount,\n                totalBytesSnapshot: this.state.numBytes,\n                tensorsAdded: this.state.numTensors - startingNumTensors,\n                totalTensorsSnapshot: this.state.numTensors,\n                inputShapes: Object.keys(inputs).map(key => inputs[key] != null ? inputs[key].shape : null),\n                outputShapes: outputs.map(item => item.shape),\n                kernelTimeMs: kernelProfile.timeMs,\n                extraInfo: kernelProfile.extraInfo\n            });\n        }\n        return (Array.isArray(out) ? outputs : outputs[0]);\n    }\n    /**\n     * Saves tensors used in forward mode for use in backward mode.\n     *\n     * @param tensors the list of tensors to save.\n     */\n    saveTensorsForBackwardMode(tensors) {\n        const saved = tensors.map(tensor => this.keep(this.clone(tensor)));\n        return saved;\n    }\n    /**\n     * Returns a list of tensors to save for a given gradient calculation.\n     *\n     * @param kernelName name of kernel to look up gradient for.\n     * @param inputs a map of input tensors.\n     * @param outputs an array of output tensors from forward mode of kernel.\n     */\n    getTensorsForGradient(kernelName, inputs, outputs) {\n        const gradConfig = (0,_kernel_registry__WEBPACK_IMPORTED_MODULE_2__.getGradient)(kernelName);\n        if (gradConfig != null) {\n            const inputsToSave = gradConfig.inputsToSave || [];\n            const outputsToSave = gradConfig.outputsToSave || [];\n            // If saveAllInputs is true, all inputs will be saved. Otherwise, inputs\n            // specified in inputsToSave will be saved.\n            let inputTensorsToSave;\n            if (gradConfig.saveAllInputs) {\n                _util__WEBPACK_IMPORTED_MODULE_5__.assert(Array.isArray(inputs), () => 'saveAllInputs is true, expected inputs to be an array.');\n                inputTensorsToSave = Object.keys(inputs).map((key) => inputs[key]);\n            }\n            else {\n                inputTensorsToSave = inputsToSave.map((inputName) => inputs[inputName]);\n            }\n            const outputTensorsToSave = outputs.filter((_, i) => outputsToSave[i]);\n            return inputTensorsToSave.concat(outputTensorsToSave);\n        }\n        // We return an empty list rather than throw an error because the kernel we\n        // are looking up may not actually be relevant to backproping through the\n        // overall function\n        //\n        // See 'does not error if irrelevant (pruned) ops are missing grads' test\n        // in gradients_test.ts for an example.\n        return [];\n    }\n    /**\n     * Internal method used by public APIs for tensor creation. Makes a new\n     * tensor with the provided shape, dtype and values. It always\n     * creates a new data id and writes the values to the underlying backend.\n     */\n    makeTensor(values, shape, dtype, backend) {\n        if (values == null) {\n            throw new Error('Values passed to engine.makeTensor() are null');\n        }\n        dtype = dtype || 'float32';\n        backend = backend || this.backend;\n        let backendVals = values;\n        if (dtype === 'string' && _util__WEBPACK_IMPORTED_MODULE_5__.isString(values[0])) {\n            backendVals = values.map(d => _util__WEBPACK_IMPORTED_MODULE_6__.encodeString(d));\n        }\n        const dataId = backend.write(backendVals, shape, dtype);\n        const t = new _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor(shape, dtype, dataId, this.nextTensorId());\n        this.trackTensor(t, backend);\n        // Count bytes for string tensors.\n        if (dtype === 'string') {\n            const info = this.state.tensorInfo.get(dataId);\n            const newBytes = (0,_util__WEBPACK_IMPORTED_MODULE_5__.bytesFromStringArray)(backendVals);\n            this.state.numBytes += newBytes - info.bytes;\n            info.bytes = newBytes;\n        }\n        return t;\n    }\n    /**\n     * Internal method used by backends. Makes a new tensor\n     * that is a wrapper around an existing data id. It doesn't create\n     * a new data id, only increments the ref count used in memory tracking.\n     */\n    makeTensorFromDataId(dataId, shape, dtype, backend) {\n        dtype = dtype || 'float32';\n        const t = new _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor(shape, dtype, dataId, this.nextTensorId());\n        this.trackTensor(t, backend);\n        return t;\n    }\n    makeVariable(initialValue, trainable = true, name, dtype) {\n        name = name || this.nextVariableId().toString();\n        if (dtype != null && dtype !== initialValue.dtype) {\n            initialValue = initialValue.cast(dtype);\n        }\n        const v = new _tensor__WEBPACK_IMPORTED_MODULE_0__.Variable(initialValue, trainable, name, this.nextTensorId());\n        if (this.state.registeredVariables[v.name] != null) {\n            throw new Error(`Variable with name ${v.name} was already registered`);\n        }\n        this.state.registeredVariables[v.name] = v;\n        this.incRef(v, this.backend);\n        return v;\n    }\n    trackTensor(a, backend) {\n        this.state.numTensors++;\n        if (a.dtype === 'string') {\n            this.state.numStringTensors++;\n        }\n        // Bytes for complex numbers are counted by their components. Bytes for\n        // string tensors are counted when writing values.\n        let bytes = 0;\n        if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n            bytes = a.size * _util__WEBPACK_IMPORTED_MODULE_5__.bytesPerElement(a.dtype);\n        }\n        this.state.numBytes += bytes;\n        if (!this.state.tensorInfo.has(a.dataId)) {\n            this.state.numDataBuffers++;\n            this.state.tensorInfo.set(a.dataId, {\n                backend: backend || this.backend,\n                dtype: a.dtype,\n                shape: a.shape,\n                bytes\n            });\n        }\n        if (!(a instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Variable)) {\n            this.track(a);\n        }\n    }\n    // Track the tensor by dataId and increase the refCount for the dataId in the\n    // backend.\n    // TODO(pyu10055): This is currently used by makeVariable method, to increase\n    // refCount on the backend for the dataId. It can potentially be replaced with\n    // Identity op indead of calling backend directly.\n    incRef(a, backend) {\n        this.trackTensor(a, backend);\n        this.backend.incRef(a.dataId);\n    }\n    removeDataId(dataId, backend) {\n        if (this.state.tensorInfo.has(dataId) &&\n            this.state.tensorInfo.get(dataId).backend === backend) {\n            this.state.tensorInfo.delete(dataId);\n            this.state.numDataBuffers--;\n        }\n    }\n    disposeTensor(a) {\n        if (!this.state.tensorInfo.has(a.dataId)) {\n            return;\n        }\n        const info = this.state.tensorInfo.get(a.dataId);\n        this.state.numTensors--;\n        if (a.dtype === 'string') {\n            this.state.numStringTensors--;\n            this.state.numBytes -= info.bytes;\n        }\n        // Don't count bytes for complex numbers as they are counted by their\n        // components.\n        if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n            const bytes = a.size * _util__WEBPACK_IMPORTED_MODULE_5__.bytesPerElement(a.dtype);\n            this.state.numBytes -= bytes;\n        }\n        // Remove the reference to dataId if backend dispose the data successfully\n        if (info.backend.disposeData(a.dataId)) {\n            this.removeDataId(a.dataId, info.backend);\n        }\n        // TODO(nsthorat): Construct an error and save the stack trace for\n        // debugging when in debug mode. Creating a stack trace is too expensive\n        // to do unconditionally.\n    }\n    disposeVariables() {\n        for (const varName in this.state.registeredVariables) {\n            const v = this.state.registeredVariables[varName];\n            this.disposeVariable(v);\n        }\n    }\n    disposeVariable(v) {\n        this.disposeTensor(v);\n        if (this.state.registeredVariables[v.name] != null) {\n            delete this.state.registeredVariables[v.name];\n        }\n    }\n    memory() {\n        const info = this.backend.memory();\n        info.numTensors = this.state.numTensors;\n        info.numDataBuffers = this.state.numDataBuffers;\n        info.numBytes = this.state.numBytes;\n        if (this.state.numStringTensors > 0) {\n            info.unreliable = true;\n            if (info.reasons == null) {\n                info.reasons = [];\n            }\n            info.reasons.push('Memory usage by string tensors is approximate ' +\n                '(2 bytes per character)');\n        }\n        return info;\n    }\n    async profile(query) {\n        this.state.profiling = true;\n        const startBytes = this.state.numBytes;\n        const startNumTensors = this.state.numTensors;\n        this.state.activeProfile.kernels = [];\n        this.state.activeProfile.result = await query();\n        this.state.profiling = false;\n        this.state.activeProfile.peakBytes = Math.max(...this.state.activeProfile.kernels.map(d => d.totalBytesSnapshot));\n        this.state.activeProfile.newBytes = this.state.numBytes - startBytes;\n        this.state.activeProfile.newTensors =\n            this.state.numTensors - startNumTensors;\n        for (const kernel of this.state.activeProfile.kernels) {\n            kernel.kernelTimeMs = await kernel.kernelTimeMs;\n            kernel.extraInfo = await kernel.extraInfo;\n        }\n        return this.state.activeProfile;\n    }\n    isTapeOn() {\n        return this.state.gradientDepth > 0 && this.state.kernelDepth === 0;\n    }\n    addTapeNode(kernelName, inputs, outputs, gradientsFunc, saved, attrs) {\n        const tapeNode = { id: this.state.nextTapeNodeId++, kernelName, inputs, outputs, saved };\n        const gradConfig = (0,_kernel_registry__WEBPACK_IMPORTED_MODULE_2__.getGradient)(kernelName);\n        if (gradConfig != null) {\n            gradientsFunc = gradConfig.gradFunc;\n        }\n        if (gradientsFunc != null) {\n            tapeNode.gradient = (dys) => {\n                // TODO(smilkov): To optimize back-prop, pass dys that are not used in\n                // the backprop graph to the user as null instead of zeros\n                dys = dys.map((dy, i) => {\n                    if (dy == null) {\n                        const output = outputs[i];\n                        const vals = _util__WEBPACK_IMPORTED_MODULE_5__.makeZerosTypedArray(output.size, output.dtype);\n                        return this.makeTensor(vals, output.shape, output.dtype);\n                    }\n                    return dy;\n                });\n                // Grad functions of ops with single outputs expect a dy, while ops\n                // with multiple outputs expect dys (array of dy).\n                return gradientsFunc(dys.length > 1 ? dys : dys[0], saved, attrs);\n            };\n        }\n        this.state.activeTape.push(tapeNode);\n    }\n    keep(result) {\n        result.kept = true;\n        return result;\n    }\n    startTape() {\n        if (this.state.gradientDepth === 0) {\n            this.state.activeTape = [];\n        }\n        this.state.gradientDepth++;\n    }\n    endTape() {\n        this.state.gradientDepth--;\n    }\n    /**\n     * Start a scope. Use this with endScope() to achieve the same functionality\n     * as scope() without the need for a function closure.\n     */\n    startScope(name) {\n        const scopeInfo = {\n            track: [],\n            name: 'unnamed scope',\n            id: this.state.nextScopeId++\n        };\n        if (name) {\n            scopeInfo.name = name;\n        }\n        this.state.scopeStack.push(scopeInfo);\n        this.state.activeScope = scopeInfo;\n    }\n    /**\n     * End a scope. Use this with startScope() to achieve the same functionality\n     * as scope() without the need for a function closure.\n     */\n    endScope(result) {\n        const tensorsToTrackInParent = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_7__.getTensorsInContainer)(result);\n        const tensorsToTrackInParentSet = new Set(tensorsToTrackInParent.map(t => t.id));\n        // Dispose the arrays tracked in this scope.\n        for (let i = 0; i < this.state.activeScope.track.length; i++) {\n            const tensor = this.state.activeScope.track[i];\n            if (!tensor.kept && !tensorsToTrackInParentSet.has(tensor.id)) {\n                tensor.dispose();\n            }\n        }\n        const oldScope = this.state.scopeStack.pop();\n        this.state.activeScope = this.state.scopeStack.length === 0 ?\n            null :\n            this.state.scopeStack[this.state.scopeStack.length - 1];\n        // Track the current result in the parent scope.\n        tensorsToTrackInParent.forEach(tensor => {\n            // Only track the tensor if was allocated in the inner scope and is not\n            // globally kept.\n            if (!tensor.kept && tensor.scopeId === oldScope.id) {\n                this.track(tensor);\n            }\n        });\n    }\n    /**\n     * Returns gradients of `f` with respect to each of the `xs`. The gradients\n     * returned are of the same length as `xs`, but some might be null if `f`\n     * was not a function of that `x`. It also takes optional dy to multiply the\n     * gradient, which defaults to `1`.\n     */\n    gradients(f, xs, dy, allowNoGradients = false) {\n        _util__WEBPACK_IMPORTED_MODULE_5__.assert(xs.length > 0, () => 'gradients() received an empty list of xs.');\n        if (dy != null && dy.dtype !== 'float32') {\n            throw new Error(`dy must have 'float32' dtype, but has '${dy.dtype}'`);\n        }\n        const y = this.scopedRun(() => this.startTape(), () => this.endTape(), () => this.tidy('forward', f));\n        _util__WEBPACK_IMPORTED_MODULE_5__.assert(y instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor, () => 'The result y returned by f() must be a tensor.');\n        // Filter out the nodes that don't connect x => y.\n        const filteredTape = (0,_tape__WEBPACK_IMPORTED_MODULE_8__.getFilteredNodesXToY)(this.state.activeTape, xs, y);\n        if (!allowNoGradients && filteredTape.length === 0 && xs.length > 0) {\n            throw new Error('Cannot compute gradient of y=f(x) with respect to x. Make sure ' +\n                'that the f you passed encloses all operations that lead from x ' +\n                'to y.');\n        }\n        return this.tidy('backward', () => {\n            const accumulatedGradientMap = {};\n            accumulatedGradientMap[y.id] = (dy == null) ? ones(y.shape) : dy;\n            // Backprop gradients through the filtered nodes.\n            (0,_tape__WEBPACK_IMPORTED_MODULE_8__.backpropagateGradients)(accumulatedGradientMap, filteredTape, \n            // Pass the tidy function to avoid circular dep with `tape.ts`.\n            f => this.tidy(f), \n            // Pass an add function to avoide a circular dep with `tape.ts`.\n            add);\n            const grads = xs.map(x => accumulatedGradientMap[x.id]);\n            if (this.state.gradientDepth === 0) {\n                // This means that we are not computing higher-order gradients\n                // and can clean up the tape.\n                this.state.activeTape.forEach(node => {\n                    for (const tensor of node.saved) {\n                        tensor.dispose();\n                    }\n                });\n                this.state.activeTape = null;\n            }\n            return { value: y, grads };\n        });\n    }\n    customGrad(f) {\n        _util__WEBPACK_IMPORTED_MODULE_5__.assert(_util__WEBPACK_IMPORTED_MODULE_5__.isFunction(f), () => 'The f passed in customGrad(f) must be a function.');\n        return (...inputs) => {\n            _util__WEBPACK_IMPORTED_MODULE_5__.assert(inputs.every(t => t instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor), () => 'The args passed in customGrad(f)(x1, x2,...) must all be ' +\n                'tensors');\n            let res;\n            const inputMap = {};\n            inputs.forEach((input, i) => {\n                inputMap[i] = input;\n            });\n            const forwardFunc = (_, save) => {\n                res = f(...[...inputs, save]);\n                _util__WEBPACK_IMPORTED_MODULE_5__.assert(res.value instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor, () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.value` is a tensor');\n                _util__WEBPACK_IMPORTED_MODULE_5__.assert(_util__WEBPACK_IMPORTED_MODULE_5__.isFunction(res.gradFunc), () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function.');\n                return res.value;\n            };\n            const backwardsFunc = (dy, saved) => {\n                const gradRes = res.gradFunc(dy, saved);\n                const grads = Array.isArray(gradRes) ? gradRes : [gradRes];\n                _util__WEBPACK_IMPORTED_MODULE_5__.assert(grads.length === inputs.length, () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function that returns ' +\n                    'the same number of tensors as inputs passed to f(...).');\n                _util__WEBPACK_IMPORTED_MODULE_5__.assert(grads.every(t => t instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor), () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function that returns ' +\n                    'a list of only tensors.');\n                const gradMap = {};\n                grads.forEach((grad, i) => {\n                    gradMap[i] = () => grad;\n                });\n                return gradMap;\n            };\n            return this.runKernelFunc({\n                forwardFunc,\n                backwardsFunc,\n                inputs: inputMap,\n            });\n        };\n    }\n    readSync(dataId) {\n        // Route the read to the correct backend.\n        const info = this.state.tensorInfo.get(dataId);\n        return info.backend.readSync(dataId);\n    }\n    read(dataId) {\n        // Route the read to the correct backend.\n        const info = this.state.tensorInfo.get(dataId);\n        return info.backend.read(dataId);\n    }\n    async time(query) {\n        const start = (0,_util__WEBPACK_IMPORTED_MODULE_6__.now)();\n        const timingInfo = await this.backend.time(query);\n        timingInfo.wallMs = (0,_util__WEBPACK_IMPORTED_MODULE_6__.now)() - start;\n        return timingInfo;\n    }\n    /**\n     * Tracks a Tensor in the current scope to be automatically cleaned up\n     * when the current scope ends, and returns the value.\n     *\n     * @param result The Tensor to track in the current scope.\n     */\n    track(result) {\n        if (this.state.activeScope != null) {\n            result.scopeId = this.state.activeScope.id;\n            this.state.activeScope.track.push(result);\n        }\n        return result;\n    }\n    get registeredVariables() {\n        return this.state.registeredVariables;\n    }\n    /**\n     * Resets the engine state. Removes all backends but does not remove\n     * registered backend factories.\n     */\n    reset() {\n        // Make any pending promise obsolete.\n        this.pendingBackendInitId++;\n        this.state.dispose();\n        this.ENV.reset();\n        this.state = new EngineState();\n        for (const backendName in this.registry) {\n            this.disposeRegisteredKernels(backendName);\n            this.registry[backendName].dispose();\n            delete this.registry[backendName];\n        }\n        this.backendName = null;\n        this.backendInstance = null;\n        this.pendingBackendInit = null;\n    }\n}\nEngine.nextTensorId = 0;\nEngine.nextVariableId = 0;\nfunction ones(shape) {\n    const values = (0,_util__WEBPACK_IMPORTED_MODULE_5__.makeOnesTypedArray)((0,_util__WEBPACK_IMPORTED_MODULE_5__.sizeFromShape)(shape), 'float32');\n    return ENGINE.makeTensor(values, shape, 'float32');\n}\nfunction getOrMakeEngine() {\n    const ns = (0,_global_util__WEBPACK_IMPORTED_MODULE_9__.getGlobalNamespace)();\n    if (ns._tfengine == null) {\n        const environment = new _environment__WEBPACK_IMPORTED_MODULE_10__.Environment(ns);\n        ns._tfengine = new Engine(environment);\n    }\n    (0,_environment__WEBPACK_IMPORTED_MODULE_10__.setEnvironmentGlobal)(ns._tfengine.ENV);\n    // Tell the current tensor interface that the global engine is responsible\n    // for tracking.\n    (0,_tensor__WEBPACK_IMPORTED_MODULE_0__.setTensorTracker)(() => ns._tfengine);\n    return ns._tfengine;\n}\nconst ENGINE = getOrMakeEngine();\n/**\n * A implementation of the add op for use within engine and tape.\n *\n * This allows us to avoid a circular dependency between add.ts and engine.\n * It is exported to be available in tape tests.\n */\nfunction add(a, b) {\n    // We duplicate Add here to avoid a circular dependency with add.ts.\n    const inputs = { a, b };\n    return ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Add, inputs);\n}\n//# sourceMappingURL=engine.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/engine.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/environment.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/environment.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export ENV [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Environment [provided] [no usage info] [missing usage info prevents renaming] */
/*! export env [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getQueryParams [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setEnvironmentGlobal [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Environment\": () => /* binding */ Environment,\n/* harmony export */   \"getQueryParams\": () => /* binding */ getQueryParams,\n/* harmony export */   \"env\": () => /* binding */ env,\n/* harmony export */   \"ENV\": () => /* binding */ ENV,\n/* harmony export */   \"setEnvironmentGlobal\": () => /* binding */ setEnvironmentGlobal\n/* harmony export */ });\n/* harmony import */ var _util_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util_base */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\nconst TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n *\n * @doc {heading: 'Environment'}\n */\nclass Environment {\n    // tslint:disable-next-line: no-any\n    constructor(global) {\n        this.global = global;\n        this.flags = {};\n        this.flagRegistry = {};\n        this.urlFlags = {};\n        this.populateURLFlags();\n    }\n    setPlatform(platformName, platform) {\n        if (this.platform != null) {\n            console.warn(`Platform ${this.platformName} has already been set. ` +\n                `Overwriting the platform with ${platform}.`);\n        }\n        this.platformName = platformName;\n        this.platform = platform;\n    }\n    registerFlag(flagName, evaluationFn, setHook) {\n        this.flagRegistry[flagName] = { evaluationFn, setHook };\n        // Override the flag value from the URL. This has to happen here because the\n        // environment is initialized before flags get registered.\n        if (this.urlFlags[flagName] != null) {\n            const flagValue = this.urlFlags[flagName];\n            console.warn(`Setting feature override from URL ${flagName}: ${flagValue}.`);\n            this.set(flagName, flagValue);\n        }\n    }\n    async getAsync(flagName) {\n        if (flagName in this.flags) {\n            return this.flags[flagName];\n        }\n        this.flags[flagName] = await this.evaluateFlag(flagName);\n        return this.flags[flagName];\n    }\n    get(flagName) {\n        if (flagName in this.flags) {\n            return this.flags[flagName];\n        }\n        const flagValue = this.evaluateFlag(flagName);\n        if ((0,_util_base__WEBPACK_IMPORTED_MODULE_0__.isPromise)(flagValue)) {\n            throw new Error(`Flag ${flagName} cannot be synchronously evaluated. ` +\n                `Please use getAsync() instead.`);\n        }\n        this.flags[flagName] = flagValue;\n        return this.flags[flagName];\n    }\n    getNumber(flagName) {\n        return this.get(flagName);\n    }\n    getBool(flagName) {\n        return this.get(flagName);\n    }\n    getFlags() {\n        return this.flags;\n    }\n    // For backwards compatibility.\n    get features() {\n        return this.flags;\n    }\n    set(flagName, value) {\n        if (this.flagRegistry[flagName] == null) {\n            throw new Error(`Cannot set flag ${flagName} as it has not been registered.`);\n        }\n        this.flags[flagName] = value;\n        if (this.flagRegistry[flagName].setHook != null) {\n            this.flagRegistry[flagName].setHook(value);\n        }\n    }\n    evaluateFlag(flagName) {\n        if (this.flagRegistry[flagName] == null) {\n            throw new Error(`Cannot evaluate flag '${flagName}': no evaluation function found.`);\n        }\n        return this.flagRegistry[flagName].evaluationFn();\n    }\n    setFlags(flags) {\n        this.flags = Object.assign({}, flags);\n    }\n    reset() {\n        this.flags = {};\n        this.urlFlags = {};\n        this.populateURLFlags();\n    }\n    populateURLFlags() {\n        if (typeof this.global === 'undefined' ||\n            typeof this.global.location === 'undefined' ||\n            typeof this.global.location.search === 'undefined') {\n            return;\n        }\n        const urlParams = getQueryParams(this.global.location.search);\n        if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n            const keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n            keyValues.forEach(keyValue => {\n                const [key, value] = keyValue.split(':');\n                this.urlFlags[key] = parseValue(key, value);\n            });\n        }\n    }\n}\nfunction getQueryParams(queryString) {\n    const params = {};\n    queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, (s, ...t) => {\n        decodeParam(params, t[0], t[1]);\n        return t.join('=');\n    });\n    return params;\n}\nfunction decodeParam(params, name, value) {\n    params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\nfunction parseValue(flagName, value) {\n    value = value.toLowerCase();\n    if (value === 'true' || value === 'false') {\n        return value === 'true';\n    }\n    else if (`${+value}` === value) {\n        return +value;\n    }\n    throw new Error(`Could not parse value flag value ${value} for flag ${flagName}.`);\n}\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n *\n * @doc {heading: 'Environment'}\n */\nfunction env() {\n    return ENV;\n}\nlet ENV = null;\nfunction setEnvironmentGlobal(environment) {\n    ENV = environment;\n}\n//# sourceMappingURL=environment.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/environment.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/flags.js":
/*!**********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/flags.js ***!
  \**********************************************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _device_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./device_util */ \"./node_modules/@tensorflow/tfjs-core/dist/device_util.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst ENV = (0,_environment__WEBPACK_IMPORTED_MODULE_1__.env)();\n/**\n * This file contains environment-related flag registrations.\n */\n/** Whether to enable debug mode. */\nENV.registerFlag('DEBUG', () => false, debugValue => {\n    if (debugValue) {\n        console.warn('Debugging mode is ON. The output of every math call will ' +\n            'be downloaded to CPU and checked for NaNs. ' +\n            'This significantly impacts performance.');\n    }\n});\n/** Whether we are in a browser (as versus, say, node.js) environment. */\nENV.registerFlag('IS_BROWSER', () => _device_util__WEBPACK_IMPORTED_MODULE_2__.isBrowser());\n/** Whether we are in a browser (as versus, say, node.js) environment. */\nENV.registerFlag('IS_NODE', () => (typeof process !== 'undefined') &&\n    (typeof process.versions !== 'undefined') &&\n    (typeof process.versions.node !== 'undefined'));\n/** Whether this browser is Chrome. */\nENV.registerFlag('IS_CHROME', () => typeof navigator !== 'undefined' && navigator != null &&\n    navigator.userAgent != null && /Chrome/.test(navigator.userAgent) &&\n    /Google Inc/.test(navigator.vendor));\n/**\n * True when the environment is \"production\" where we disable safety checks\n * to gain performance.\n */\nENV.registerFlag('PROD', () => false);\n/**\n * Whether to do sanity checks when inferring a shape from user-provided\n * values, used when creating a new tensor.\n */\nENV.registerFlag('TENSORLIKE_CHECK_SHAPE_CONSISTENCY', () => ENV.getBool('DEBUG'));\n/** Whether deprecation warnings are enabled. */\nENV.registerFlag('DEPRECATION_WARNINGS_ENABLED', () => true);\n/** True if running unit tests. */\nENV.registerFlag('IS_TEST', () => false);\n/** Whether to check computation result for errors. */\nENV.registerFlag('CHECK_COMPUTATION_FOR_ERRORS', () => true);\n//# sourceMappingURL=flags.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/flags.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/global_util.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/global_util.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export getGlobal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getGlobalNamespace [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.g, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getGlobalNamespace\": () => /* binding */ getGlobalNamespace,\n/* harmony export */   \"getGlobal\": () => /* binding */ getGlobal\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Note that the identifier globalNameSpace is scoped to this module, but will\n// always resolve to the same global object regardless of how the module is\n// resolved.\n// tslint:disable-next-line:no-any\nlet globalNameSpace;\n// tslint:disable-next-line:no-any\nfunction getGlobalNamespace() {\n    if (globalNameSpace == null) {\n        // tslint:disable-next-line:no-any\n        let ns;\n        if (typeof (window) !== 'undefined') {\n            ns = window;\n        }\n        else if (typeof (__webpack_require__.g) !== 'undefined') {\n            ns = __webpack_require__.g;\n        }\n        else if (typeof (process) !== 'undefined') {\n            ns = process;\n        }\n        else if (typeof (self) !== 'undefined') {\n            ns = self;\n        }\n        else {\n            throw new Error('Could not find a global object');\n        }\n        globalNameSpace = ns;\n    }\n    return globalNameSpace;\n}\n// tslint:disable-next-line:no-any\nfunction getGlobalMap() {\n    const ns = getGlobalNamespace();\n    if (ns._tfGlobals == null) {\n        ns._tfGlobals = new Map();\n    }\n    return ns._tfGlobals;\n}\n/**\n * Returns a globally accessible 'singleton' object.\n *\n * @param key the name of the object\n * @param init a function to initialize to initialize this object\n *             the first time it is fetched.\n */\nfunction getGlobal(key, init) {\n    const globalMap = getGlobalMap();\n    if (globalMap.has(key)) {\n        return globalMap.get(key);\n    }\n    else {\n        const singleton = init();\n        globalMap.set(key, singleton);\n        return globalMap.get(key);\n    }\n}\n//# sourceMappingURL=global_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/global_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/globals.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/globals.js ***!
  \************************************************************/
/*! namespace exports */
/*! export backend [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deprecationWarn [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disableDeprecationWarnings [provided] [no usage info] [missing usage info prevents renaming] */
/*! export dispose [provided] [no usage info] [missing usage info prevents renaming] */
/*! export disposeVariables [provided] [no usage info] [missing usage info prevents renaming] */
/*! export enableDebugMode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export enableProdMode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export engine [provided] [no usage info] [missing usage info prevents renaming] */
/*! export findBackend [provided] [no usage info] [missing usage info prevents renaming] */
/*! export findBackendFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getBackend [provided] [no usage info] [missing usage info prevents renaming] */
/*! export keep [provided] [no usage info] [missing usage info prevents renaming] */
/*! export memory [provided] [no usage info] [missing usage info prevents renaming] */
/*! export profile [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ready [provided] [no usage info] [missing usage info prevents renaming] */
/*! export registerBackend [provided] [no usage info] [missing usage info prevents renaming] */
/*! export removeBackend [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setBackend [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setPlatform [provided] [no usage info] [missing usage info prevents renaming] */
/*! export tidy [provided] [no usage info] [missing usage info prevents renaming] */
/*! export time [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"enableProdMode\": () => /* binding */ enableProdMode,\n/* harmony export */   \"enableDebugMode\": () => /* binding */ enableDebugMode,\n/* harmony export */   \"disableDeprecationWarnings\": () => /* binding */ disableDeprecationWarnings,\n/* harmony export */   \"deprecationWarn\": () => /* binding */ deprecationWarn,\n/* harmony export */   \"disposeVariables\": () => /* binding */ disposeVariables,\n/* harmony export */   \"engine\": () => /* binding */ engine,\n/* harmony export */   \"memory\": () => /* binding */ memory,\n/* harmony export */   \"profile\": () => /* binding */ profile,\n/* harmony export */   \"tidy\": () => /* binding */ tidy,\n/* harmony export */   \"dispose\": () => /* binding */ dispose,\n/* harmony export */   \"keep\": () => /* binding */ keep,\n/* harmony export */   \"time\": () => /* binding */ time,\n/* harmony export */   \"setBackend\": () => /* binding */ setBackend,\n/* harmony export */   \"ready\": () => /* binding */ ready,\n/* harmony export */   \"getBackend\": () => /* binding */ getBackend,\n/* harmony export */   \"removeBackend\": () => /* binding */ removeBackend,\n/* harmony export */   \"findBackend\": () => /* binding */ findBackend,\n/* harmony export */   \"findBackendFactory\": () => /* binding */ findBackendFactory,\n/* harmony export */   \"registerBackend\": () => /* binding */ registerBackend,\n/* harmony export */   \"backend\": () => /* binding */ backend,\n/* harmony export */   \"setPlatform\": () => /* binding */ setPlatform\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Enables production mode which disables correctness checks in favor of\n * performance.\n *\n * @doc {heading: 'Environment'}\n */\nfunction enableProdMode() {\n    (0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().set('PROD', true);\n}\n/**\n * Enables debug mode which will log information about all executed kernels:\n * the elapsed time of the kernel execution, as well as the rank, shape, and\n * size of the output tensor.\n *\n * Debug mode will significantly slow down your application as it will\n * download the result of every operation to the CPU. This should not be used in\n * production. Debug mode does not affect the timing information of the kernel\n * execution as we do not measure download time in the kernel execution time.\n *\n * See also: `tf.profile`, `tf.memory`.\n *\n * @doc {heading: 'Environment'}\n */\nfunction enableDebugMode() {\n    (0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().set('DEBUG', true);\n}\n/** Globally disables deprecation warnings */\nfunction disableDeprecationWarnings() {\n    (0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().set('DEPRECATION_WARNINGS_ENABLED', false);\n    console.warn(`TensorFlow.js deprecation warnings have been disabled.`);\n}\n/** Warn users about deprecated functionality. */\nfunction deprecationWarn(msg) {\n    if ((0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().getBool('DEPRECATION_WARNINGS_ENABLED')) {\n        console.warn(msg + ' You can disable deprecation warnings with ' +\n            'tf.disableDeprecationWarnings().');\n    }\n}\n(0,_tensor__WEBPACK_IMPORTED_MODULE_1__.setDeprecationWarningFn)(deprecationWarn);\n/**\n * Dispose all variables kept in backend engine.\n *\n * @doc {heading: 'Environment'}\n */\nfunction disposeVariables() {\n    _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.disposeVariables();\n}\n/**\n * It returns the global engine that keeps track of all tensors and backends.\n *\n * @doc {heading: 'Environment'}\n */\nfunction engine() {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE;\n}\n/**\n * Returns memory info at the current time in the program. The result is an\n * object with the following properties:\n *\n * - `numBytes`: Number of bytes allocated (undisposed) at this time.\n * - `numTensors`: Number of unique tensors allocated.\n * - `numDataBuffers`: Number of unique data buffers allocated\n *   (undisposed) at this time, which is ≤ the number of tensors\n *   (e.g. `a.reshape(newShape)` makes a new Tensor that shares the same\n *   data buffer with `a`).\n * - `unreliable`: True if the memory usage is unreliable. See `reasons` when\n *    `unreliable` is true.\n * - `reasons`: `string[]`, reasons why the memory is unreliable, present if\n *    `unreliable` is true.\n *\n * WebGL Properties:\n * - `numBytesInGPU`: Number of bytes allocated (undisposed) in the GPU only at\n *     this time.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nfunction memory() {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.memory();\n}\n/**\n * Executes the provided function `f()` and returns a promise that resolves\n * with information about the function's memory use:\n * - `newBytes`: the number of new bytes allocated\n * - `newTensors`: the number of new tensors created\n * - `peakBytes`: the peak number of bytes allocated\n * - `kernels`: an array of objects for each kernel involved that reports\n * their input and output shapes, number of bytes used, and number of new\n * tensors created.\n * - `kernelNames`: an array of unique strings with just the names of the\n * kernels in the `kernels` array.\n *\n * ```js\n * const profile = await tf.profile(() => {\n *   const x = tf.tensor1d([1, 2, 3]);\n *   let x2 = x.square();\n *   x2.dispose();\n *   x2 = x.square();\n *   x2.dispose();\n *   return x;\n * });\n *\n * console.log(`newBytes: ${profile.newBytes}`);\n * console.log(`newTensors: ${profile.newTensors}`);\n * console.log(`byte usage over all kernels: ${profile.kernels.map(k =>\n * k.totalBytesSnapshot)}`);\n * ```\n *\n *\n * @doc {heading: 'Performance', subheading: 'Profile'}\n */\nfunction profile(f) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.profile(f);\n}\n/**\n * Executes the provided function `fn` and after it is executed, cleans up all\n * intermediate tensors allocated by `fn` except those returned by `fn`.\n * `fn` must not return a Promise (async functions not allowed). The returned\n * result can be a complex object.\n *\n * Using this method helps avoid memory leaks. In general, wrap calls to\n * operations in `tf.tidy` for automatic memory cleanup.\n *\n * NOTE: Variables do *not* get cleaned up when inside a tidy(). If you want to\n * dispose variables, please use `tf.disposeVariables` or call dispose()\n * directly on variables.\n *\n * ```js\n * // y = 2 ^ 2 + 1\n * const y = tf.tidy(() => {\n *   // a, b, and one will be cleaned up when the tidy ends.\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *   const b = a.square();\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * y.print();\n * ```\n *\n * @param nameOrFn The name of the closure, or the function to execute.\n *     If a name is provided, the 2nd argument should be the function.\n *     If debug mode is on, the timing and the memory usage of the function\n *     will be tracked and displayed on the console using the provided name.\n * @param fn The function to execute.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nfunction tidy(nameOrFn, fn) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.tidy(nameOrFn, fn);\n}\n/**\n * Disposes any `tf.Tensor`s found within the provided object.\n *\n * @param container an object that may be a `tf.Tensor` or may directly\n *     contain `tf.Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. If\n *     the object is not a `tf.Tensor` or does not contain `Tensors`, nothing\n *     happens. In general it is safe to pass any object here, except that\n *     `Promise`s are not supported.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nfunction dispose(container) {\n    const tensors = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_3__.getTensorsInContainer)(container);\n    tensors.forEach(tensor => tensor.dispose());\n}\n/**\n * Keeps a `tf.Tensor` generated inside a `tf.tidy` from being disposed\n * automatically.\n *\n * ```js\n * let b;\n * const y = tf.tidy(() => {\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *\n *   // b will not be cleaned up by the tidy. a and one will be cleaned up\n *   // when the tidy ends.\n *   b = tf.keep(a.square());\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * console.log('y:');\n * y.print();\n * console.log('b:');\n * b.print();\n * ```\n *\n * @param result The tensor to keep from being disposed.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nfunction keep(result) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.keep(result);\n}\n/**\n * Executes `f()` and returns a promise that resolves with timing\n * information.\n *\n * The result is an object with the following properties:\n *\n * - `wallMs`: Wall execution time.\n * - `kernelMs`: Kernel execution time, ignoring data transfer. If using the\n * WebGL backend and the query timer extension is not available, this will\n * return an error object.\n * - On `WebGL` The following additional properties exist:\n *   - `uploadWaitMs`: CPU blocking time on texture uploads.\n *   - `downloadWaitMs`: CPU blocking time on texture downloads (readPixels).\n *\n * ```js\n * const x = tf.randomNormal([20, 20]);\n * const time = await tf.time(() => x.matMul(x));\n *\n * console.log(`kernelMs: ${time.kernelMs}, wallTimeMs: ${time.wallMs}`);\n * ```\n *\n * @param f The function to execute and time.\n *\n * @doc {heading: 'Performance', subheading: 'Timing'}\n */\nfunction time(f) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.time(f);\n}\n/**\n * Sets the backend (cpu, webgl, wasm, etc) responsible for creating tensors and\n * executing operations on those tensors. Returns a promise that resolves\n * to a boolean if the backend initialization was successful.\n *\n * Note this disposes the current backend, if any, as well as any tensors\n * associated with it. A new backend is initialized, even if it is of the\n * same type as the previous one.\n *\n * @param backendName The name of the backend. Currently supports\n *     `'webgl'|'cpu'` in the browser, `'tensorflow'` under node.js\n *     (requires tfjs-node), and `'wasm'` (requires tfjs-backend-wasm).\n *\n * @doc {heading: 'Backends'}\n */\nfunction setBackend(backendName) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.setBackend(backendName);\n}\n/**\n * Returns a promise that resolves when the currently selected backend (or the\n * highest priority one) has initialized. Await this promise when you are using\n * a backend that has async initialization.\n *\n * @doc {heading: 'Backends'}\n */\nfunction ready() {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.ready();\n}\n/**\n * Returns the current backend name (cpu, webgl, etc). The backend is\n * responsible for creating tensors and executing operations on those tensors.\n *\n * @doc {heading: 'Backends'}\n */\nfunction getBackend() {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backendName;\n}\n/**\n * Removes a backend and the registered factory.\n *\n * @doc {heading: 'Backends'}\n */\nfunction removeBackend(name) {\n    _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.removeBackend(name);\n}\n/**\n * Finds the backend registered under the provided name. Returns null if the\n * name is not in the registry, or the registration hasn't finished yet.\n */\nfunction findBackend(name) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.findBackend(name);\n}\n/**\n * Finds the backend factory registered under the provided name. Returns a\n * function that produces a new backend when called. Returns null if the name\n * is not in the registry.\n */\nfunction findBackendFactory(name) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.findBackendFactory(name);\n}\n/**\n * Registers a global backend. The registration should happen when importing\n * a module file (e.g. when importing `backend_webgl.ts`), and is used for\n * modular builds (e.g. custom tfjs bundle with only webgl support).\n *\n * @param factory The backend factory function. When called, it should\n * return a backend instance, or a promise of an instance.\n * @param priority The priority of the backend (higher = more important).\n *     In case multiple backends are registered, the priority is used to find\n *     the best backend. Defaults to 1.\n * @return False if there is already a registered backend under this name, true\n *     if not.\n *\n * @doc {heading: 'Backends'}\n */\nfunction registerBackend(name, factory, priority = 1) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registerBackend(name, factory, priority);\n}\n/**\n * Gets the current backend. If no backends have been initialized, this will\n * attempt to initialize the best backend. Will throw an error if the highest\n * priority backend has async initialization, in which case, you should call\n * 'await tf.ready()' before running other code.\n *\n * @doc {heading: 'Backends'}\n */\nfunction backend() {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backend;\n}\n/**\n * Sets the global platform.\n *\n * @param platformName The name of this platform.\n * @param platform A platform implementation.\n */\nfunction setPlatform(platformName, platform) {\n    (0,_environment__WEBPACK_IMPORTED_MODULE_2__.env)().setPlatform(platformName, platform);\n}\n//# sourceMappingURL=globals.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/globals.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/gradients.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/gradients.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export customGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export grad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export grads [provided] [no usage info] [missing usage info prevents renaming] */
/*! export valueAndGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export valueAndGrads [provided] [no usage info] [missing usage info prevents renaming] */
/*! export variableGrads [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"customGrad\": () => /* binding */ customGrad,\n/* harmony export */   \"variableGrads\": () => /* binding */ variableGrads,\n/* harmony export */   \"valueAndGrad\": () => /* binding */ valueAndGrad,\n/* harmony export */   \"valueAndGrads\": () => /* binding */ valueAndGrads,\n/* harmony export */   \"grad\": () => /* binding */ grad,\n/* harmony export */   \"grads\": () => /* binding */ grads\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Provided `f(x)`, returns another function `g(x, dy?)`, which gives the\n * gradient of `f(x)` with respect to `x`.\n *\n * If `dy` is provided, the gradient of `f(x).mul(dy).sum()` with respect to\n * `x` is computed instead. `f(x)` must take a single tensor `x` and return a\n * single tensor `y`. If `f()` takes multiple inputs, use `tf.grads` instead.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.grad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * g(x).print();\n * ```\n *\n * ```js\n * // f(x) = x ^ 3\n * const f = x => x.pow(tf.scalar(3, 'int32'));\n * // f'(x) = 3x ^ 2\n * const g = tf.grad(f);\n * // f''(x) = 6x\n * const gg = tf.grad(g);\n *\n * const x = tf.tensor1d([2, 3]);\n * gg(x).print();\n * ```\n *\n * @param f The function f(x), to compute gradient for.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction grad(f) {\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isFunction(f), () => 'The f passed in grad(f) must be a function');\n    return (x, dy) => {\n        // x can be of any dtype, thus null as the last argument.\n        const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_3__.convertToTensor)(x, 'x', 'tf.grad', 'string_or_numeric');\n        const $dy = (dy != null) ? (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_3__.convertToTensor)(dy, 'dy', 'tf.grad') : null;\n        return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.tidy(() => {\n            const { value, grads } = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.gradients(() => f($x), [$x], $dy);\n            if ($dy != null) {\n                _util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch(value.shape, $dy.shape, 'The shape of dy passed in grad(f)(x, dy) must match the shape ' +\n                    'returned by f(x)');\n            }\n            checkGrads(grads);\n            return grads[0];\n        });\n    };\n}\n/**\n * Provided `f(x1, x2,...)`, returns another function `g([x1, x2,...], dy?)`,\n * which gives an array of gradients of `f()` with respect to each input\n * [`x1`,`x2`,...].\n *\n * If `dy` is passed when calling `g()`, the gradient of\n * `f(x1,...).mul(dy).sum()` with respect to each input is computed instead.\n * The provided `f` must take one or more tensors and return a single tensor\n * `y`. If `f()` takes a single input, we recommend using `tf.grad` instead.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df / da = b, df / db = a\n * const g = tf.grads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const [da, db] = g([a, b]);\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n *\n * @param f The function `f(x1, x2,...)` to compute gradients for.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction grads(f) {\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isFunction(f), () => 'The f passed in grads(f) must be a function');\n    return (args, dy) => {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(Array.isArray(args), () => 'The args passed in grads(f)(args) must be an array ' +\n            'of `Tensor`s or `TensorLike`s');\n        // args can be of any dtype, thus null as the last argument.\n        const $args = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_3__.convertToTensorArray)(args, 'args', 'tf.grads', 'string_or_numeric');\n        const $dy = (dy != null) ? (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_3__.convertToTensor)(dy, 'dy', 'tf.grads') : null;\n        return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.tidy(() => {\n            const { value, grads } = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.gradients(() => f(...$args), $args, $dy);\n            if ($dy != null) {\n                _util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch(value.shape, $dy.shape, 'The shape of dy passed in grads(f)([x1,...], dy) must ' +\n                    'match the shape returned by f([x1,...])');\n            }\n            checkGrads(grads);\n            return grads;\n        });\n    };\n}\n/**\n * Like `tf.grad`, but also returns the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grad: The gradient of `f(x)` w.r.t `x` (result of `tf.grad`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.valueAndGrad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * const {value, grad} = g(x);\n *\n * console.log('value');\n * value.print();\n * console.log('grad');\n * grad.print();\n * ```\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction valueAndGrad(f) {\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isFunction(f), () => 'The f passed in valueAndGrad(f) must be a function');\n    return (x, dy) => {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(x instanceof _tensor__WEBPACK_IMPORTED_MODULE_1__.Tensor, () => 'The x passed in valueAndGrad(f)(x) must be a tensor');\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(dy == null || dy instanceof _tensor__WEBPACK_IMPORTED_MODULE_1__.Tensor, () => 'The dy passed in valueAndGrad(f)(x, dy) must be a tensor');\n        const { grads, value } = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.gradients(() => f(x), [x], dy);\n        checkGrads(grads);\n        return { grad: grads[0], value };\n    };\n}\n/**\n * Like `tf.grads`, but returns also the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grads: The gradients of `f()` w.r.t each input (result of `tf.grads`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df/da = b, df/db = a\n * const g = tf.valueAndGrads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const {value, grads} = g([a, b]);\n *\n * const [da, db] = grads;\n *\n * console.log('value');\n * value.print();\n *\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction valueAndGrads(f) {\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isFunction(f), () => 'The f passed in valueAndGrads(f) must be a function');\n    return (args, dy) => {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(Array.isArray(args) && args.every(arg => arg instanceof _tensor__WEBPACK_IMPORTED_MODULE_1__.Tensor), () => 'The args passed in valueAndGrads(f)(args) must be array of ' +\n            'tensors');\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(dy == null || dy instanceof _tensor__WEBPACK_IMPORTED_MODULE_1__.Tensor, () => 'The dy passed in valueAndGrads(f)(args, dy) must be a tensor');\n        const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.gradients(() => f(...args), args, dy);\n        if (dy != null) {\n            _util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch(res.value.shape, dy.shape, 'The shape of dy passed in valueAndGrads(f)([x1,...], dy) must ' +\n                'match the shape returned by f([x1,...])');\n        }\n        checkGrads(res.grads);\n        return res;\n    };\n}\n/**\n * Computes and returns the gradient of f(x) with respect to the list of\n * trainable variables provided by `varList`. If no list is provided, it\n * defaults to all trainable variables.\n *\n * ```js\n * const a = tf.variable(tf.tensor1d([3, 4]));\n * const b = tf.variable(tf.tensor1d([5, 6]));\n * const x = tf.tensor1d([1, 2]);\n *\n * // f(a, b) = a * x ^ 2 + b * x\n * const f = () => a.mul(x.square()).add(b.mul(x)).sum();\n * // df/da = x ^ 2, df/db = x\n * const {value, grads} = tf.variableGrads(f);\n *\n * Object.keys(grads).forEach(varName => grads[varName].print());\n * ```\n *\n * @param f The function to execute. f() should return a scalar.\n * @param varList The list of variables to compute the gradients with respect\n *     to. Defaults to all trainable variables.\n * @returns An object with the following keys and values:\n *   - `value`: The value of the function `f`.\n *   - `grads`: A map from the names of the variables to the gradients.\n *     If the `varList` argument is provided explicitly and contains a subset of\n *     non-trainable variables, this map in the return value will contain keys\n *     that map the names of the non-trainable variables to `null`.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction variableGrads(f, varList) {\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isFunction(f), () => 'The f passed in variableGrads(f) must be a function');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(varList == null ||\n        Array.isArray(varList) && varList.every(v => v instanceof _tensor__WEBPACK_IMPORTED_MODULE_1__.Variable), () => 'The varList passed in variableGrads(f, varList) must be an array ' +\n        'of variables');\n    const specifiedVarList = varList != null;\n    if (!specifiedVarList) {\n        // Get all of the trainable variables.\n        varList = [];\n        for (const varName in _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables) {\n            varList.push(_engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[varName]);\n        }\n    }\n    const specifiedNonTrainable = specifiedVarList ? varList.filter(variable => !variable.trainable) : null;\n    // Prune non-trainable variables.\n    const originalVarCount = varList.length;\n    varList = varList.filter(variable => variable.trainable);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(varList.length > 0, () => `variableGrads() expects at least one of the input variables to ` +\n        `be trainable, but none of the ${originalVarCount} variables is ` +\n        `trainable.`);\n    const allowNoGradients = true;\n    const { value, grads } = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.gradients(f, varList, null, allowNoGradients);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(grads.some(g => g != null), () => 'Cannot find a connection between any variable and the result of ' +\n        'the loss function y=f(x). Please make sure the operations that ' +\n        'use variables are inside the function f passed to minimize().');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(value.rank === 0, () => `The f passed in variableGrads(f) must return a scalar, but it ` +\n        `returned a rank-${value.rank} tensor`);\n    const namedGrads = {};\n    varList.forEach((v, i) => {\n        if (grads[i] != null) {\n            namedGrads[v.name] = grads[i];\n        }\n    });\n    if (specifiedNonTrainable != null) {\n        // If varList is explicitly provided and contains non-trainable values,\n        // add them to the returned gradients with `null` values.\n        specifiedNonTrainable.forEach(v => namedGrads[v.name] = null);\n    }\n    return { value, grads: namedGrads };\n}\n/**\n * Overrides the gradient computation of a function `f`.\n *\n * Takes a function\n * `f(...inputs, save) => {value: Tensor, gradFunc: (dy, saved) => Tensor[]}`\n * and returns another function `g(...inputs)` which takes the same inputs as\n * `f`. When called, `g` returns `f().value`. In backward mode, custom gradients\n * with respect to each input of `f` are computed using `f().gradFunc`.\n *\n * The `save` function passsed to `f` should be used for saving tensors needed\n * in the gradient. And the `saved` passed to the `gradFunc` is a\n * `NamedTensorMap`, which contains those saved tensor.\n *\n * ```js\n * const customOp = tf.customGrad((x, save) => {\n *   // Save x to make sure it's available later for the gradient.\n *   save([x]);\n *   // Override gradient of our custom x ^ 2 op to be dy * abs(x);\n *   return {\n *     value: x.square(),\n *     // Note `saved.x` which points to the `x` we saved earlier.\n *     gradFunc: (dy, saved) => [dy.mul(saved[0].abs())]\n *   };\n * });\n *\n * const x = tf.tensor1d([-1, -2, 3]);\n * const dx = tf.grad(x => customOp(x));\n *\n * console.log(`f(x):`);\n * customOp(x).print();\n * console.log(`f'(x):`);\n * dx(x).print();\n * ```\n *\n * @param f The function to evaluate in forward mode, which should return\n *     `{value: Tensor, gradFunc: (dy, saved) => Tensor[]}`, where `gradFunc`\n *     returns the custom gradients of `f` with respect to its inputs.\n *\n * @doc {heading: 'Training', subheading: 'Gradients'}\n */\nfunction customGrad(f) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.customGrad(f);\n}\nfunction checkGrads(grads) {\n    const numNullGradients = grads.filter(g => g == null).length;\n    if (numNullGradients > 0) {\n        throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.`);\n    }\n}\n\n//# sourceMappingURL=gradients.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/gradients.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/index.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export Abs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Abs */
/*! export Acos [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Acos */
/*! export Acosh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Acosh */
/*! export AdadeltaOptimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js .AdadeltaOptimizer */
/*! export AdagradOptimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js .AdagradOptimizer */
/*! export AdamOptimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js .AdamOptimizer */
/*! export AdamaxOptimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js .AdamaxOptimizer */
/*! export Add [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Add */
/*! export AddN [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .AddN */
/*! export All [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .All */
/*! export Any [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Any */
/*! export ArgMax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ArgMax */
/*! export ArgMin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ArgMin */
/*! export Asin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Asin */
/*! export Asinh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Asinh */
/*! export Atan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Atan */
/*! export Atan2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Atan2 */
/*! export Atanh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Atanh */
/*! export AvgPool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .AvgPool */
/*! export AvgPool3D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .AvgPool3D */
/*! export AvgPool3DGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .AvgPool3DGrad */
/*! export AvgPoolGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .AvgPoolGrad */
/*! export BatchMatMul [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .BatchMatMul */
/*! export BatchToSpaceND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .BatchToSpaceND */
/*! export Bincount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Bincount */
/*! export BroadcastTo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .BroadcastTo */
/*! export Cast [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Cast */
/*! export Ceil [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Ceil */
/*! export ClipByValue [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ClipByValue */
/*! export Complex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Complex */
/*! export ComplexAbs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ComplexAbs */
/*! export Concat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Concat */
/*! export Conv2D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Conv2D */
/*! export Conv2DBackpropFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Conv2DBackpropFilter */
/*! export Conv2DBackpropInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Conv2DBackpropInput */
/*! export Conv3D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Conv3D */
/*! export Conv3DBackpropFilterV2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Conv3DBackpropFilterV2 */
/*! export Conv3DBackpropInputV2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Conv3DBackpropInputV2 */
/*! export Cos [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Cos */
/*! export Cosh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Cosh */
/*! export CropAndResize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .CropAndResize */
/*! export Cumsum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Cumsum */
/*! export DataStorage [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js .DataStorage */
/*! export DenseBincount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .DenseBincount */
/*! export DepthToSpace [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .DepthToSpace */
/*! export DepthwiseConv2dNative [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .DepthwiseConv2dNative */
/*! export DepthwiseConv2dNativeBackpropFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .DepthwiseConv2dNativeBackpropFilter */
/*! export DepthwiseConv2dNativeBackpropInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .DepthwiseConv2dNativeBackpropInput */
/*! export Diag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Diag */
/*! export Dilation2D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Dilation2D */
/*! export Dilation2DBackpropFilter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Dilation2DBackpropFilter */
/*! export Dilation2DBackpropInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Dilation2DBackpropInput */
/*! export ENV [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/environment.js .ENV */
/*! export Elu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Elu */
/*! export EluGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .EluGrad */
/*! export Environment [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/environment.js .Environment */
/*! export Equal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Equal */
/*! export Erf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Erf */
/*! export Exp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Exp */
/*! export ExpandDims [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ExpandDims */
/*! export Expm1 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Expm1 */
/*! export FFT [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .FFT */
/*! export Fill [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Fill */
/*! export FlipLeftRight [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .FlipLeftRight */
/*! export Floor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Floor */
/*! export FloorDiv [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .FloorDiv */
/*! export FromPixels [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .FromPixels */
/*! export FusedBatchNorm [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .FusedBatchNorm */
/*! export FusedConv2D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .FusedConv2D */
/*! export FusedDepthwiseConv2D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .FusedDepthwiseConv2D */
/*! export GatherNd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .GatherNd */
/*! export GatherV2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .GatherV2 */
/*! export Greater [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Greater */
/*! export GreaterEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .GreaterEqual */
/*! export IFFT [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .IFFT */
/*! export Identity [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Identity */
/*! export Imag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Imag */
/*! export IsFinite [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .IsFinite */
/*! export IsInf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .IsInf */
/*! export IsNan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .IsNan */
/*! export KernelBackend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/backend.js .KernelBackend */
/*! export LRN [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LRN */
/*! export LRNGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LRNGrad */
/*! export LeakyRelu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LeakyRelu */
/*! export Less [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Less */
/*! export LessEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LessEqual */
/*! export LinSpace [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LinSpace */
/*! export Log [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Log */
/*! export Log1p [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Log1p */
/*! export LogSoftmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LogSoftmax */
/*! export LogicalAnd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LogicalAnd */
/*! export LogicalNot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LogicalNot */
/*! export LogicalOr [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .LogicalOr */
/*! export Max [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Max */
/*! export MaxPool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .MaxPool */
/*! export MaxPool3D [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .MaxPool3D */
/*! export MaxPool3DGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .MaxPool3DGrad */
/*! export MaxPoolGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .MaxPoolGrad */
/*! export MaxPoolWithArgmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .MaxPoolWithArgmax */
/*! export Maximum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Maximum */
/*! export Mean [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Mean */
/*! export Min [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Min */
/*! export Minimum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Minimum */
/*! export MirrorPad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .MirrorPad */
/*! export Mod [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Mod */
/*! export MomentumOptimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js .MomentumOptimizer */
/*! export Multinomial [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Multinomial */
/*! export Multiply [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Multiply */
/*! export Neg [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Neg */
/*! export NonMaxSuppressionV3 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .NonMaxSuppressionV3 */
/*! export NonMaxSuppressionV4 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .NonMaxSuppressionV4 */
/*! export NonMaxSuppressionV5 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .NonMaxSuppressionV5 */
/*! export NotEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .NotEqual */
/*! export OP_SCOPE_SUFFIX [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js .OP_SCOPE_SUFFIX */
/*! export OneHot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .OneHot */
/*! export OnesLike [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .OnesLike */
/*! export Optimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js .Optimizer */
/*! export Pack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Pack */
/*! export PadV2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .PadV2 */
/*! export Pool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Pool */
/*! export Pow [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Pow */
/*! export Prelu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Prelu */
/*! export Prod [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Prod */
/*! export RMSPropOptimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js .RMSPropOptimizer */
/*! export Range [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Range */
/*! export Rank [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/types.js .Rank */
/*! export Real [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Real */
/*! export RealDiv [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .RealDiv */
/*! export Reciprocal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Reciprocal */
/*! export Reduction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js .Reduction */
/*! export Relu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Relu */
/*! export Relu6 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Relu6 */
/*! export Reshape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Reshape */
/*! export ResizeBilinear [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ResizeBilinear */
/*! export ResizeBilinearGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ResizeBilinearGrad */
/*! export ResizeNearestNeighbor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ResizeNearestNeighbor */
/*! export ResizeNearestNeighborGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ResizeNearestNeighborGrad */
/*! export Reverse [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Reverse */
/*! export RotateWithOffset [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .RotateWithOffset */
/*! export Round [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Round */
/*! export Rsqrt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Rsqrt */
/*! export SGDOptimizer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js .SGDOptimizer */
/*! export ScatterNd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ScatterNd */
/*! export Select [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Select */
/*! export Selu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Selu */
/*! export Sigmoid [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Sigmoid */
/*! export Sign [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Sign */
/*! export Sin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Sin */
/*! export Sinh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Sinh */
/*! export Slice [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Slice */
/*! export Softmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Softmax */
/*! export Softplus [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Softplus */
/*! export SpaceToBatchND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .SpaceToBatchND */
/*! export SparseToDense [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .SparseToDense */
/*! export SplitV [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .SplitV */
/*! export Sqrt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Sqrt */
/*! export Square [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Square */
/*! export SquaredDifference [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .SquaredDifference */
/*! export Step [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Step */
/*! export StridedSlice [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .StridedSlice */
/*! export Sub [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Sub */
/*! export Sum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Sum */
/*! export Tan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Tan */
/*! export Tanh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Tanh */
/*! export Tensor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/tensor.js .Tensor */
/*! export TensorBuffer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/tensor.js .TensorBuffer */
/*! export Tile [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Tile */
/*! export TopK [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .TopK */
/*! export Transpose [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Transpose */
/*! export Unique [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Unique */
/*! export Unpack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .Unpack */
/*! export UnsortedSegmentSum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .UnsortedSegmentSum */
/*! export Variable [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/tensor.js .Variable */
/*! export ZerosLike [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js .ZerosLike */
/*! export _FusedMatMul [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js ._FusedMatMul */
/*! export abs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js .abs */
/*! export acos [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/acos.js .acos */
/*! export acosh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/acosh.js .acosh */
/*! export add [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/add.js .add */
/*! export addN [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js .addN */
/*! export all [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/all.js .all */
/*! export any [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/any.js .any */
/*! export argMax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/arg_max.js .argMax */
/*! export argMin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/arg_min.js .argMin */
/*! export asin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/asin.js .asin */
/*! export asinh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/asinh.js .asinh */
/*! export atan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/atan.js .atan */
/*! export atan2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js .atan2 */
/*! export atanh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/atanh.js .atanh */
/*! export avgPool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js .avgPool */
/*! export avgPool3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d.js .avgPool3d */
/*! export backend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .backend */
/*! export backend_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js */
/*!   export ERF_A1 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A1 */
/*!   export ERF_A2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A2 */
/*!   export ERF_A3 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A3 */
/*!   export ERF_A4 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A4 */
/*!   export ERF_A5 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_A5 */
/*!   export ERF_P [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js .ERF_P */
/*!   export PARALLELIZE_THRESHOLD [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js .PARALLELIZE_THRESHOLD */
/*!   export SELU_SCALE [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js .SELU_SCALE */
/*!   export SELU_SCALEALPHA [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js .SELU_SCALEALPHA */
/*!   export applyActivation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js .applyActivation */
/*!   export assertAndGetBroadcastShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js .assertAndGetBroadcastShape */
/*!   export assertAxesAreInnerMostDims [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .assertAxesAreInnerMostDims */
/*!   export assertParamsConsistent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js .assertParamsConsistent */
/*!   export assignToTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .assignToTypedArray */
/*!   export axesAreInnerMostDims [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .axesAreInnerMostDims */
/*!   export calculateShapes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js .calculateShapes */
/*!   export combineLocations [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .combineLocations */
/*!   export complexWithEvenIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .complexWithEvenIndex */
/*!   export complexWithOddIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .complexWithOddIndex */
/*!   export computeConv2DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computeConv2DInfo */
/*!   export computeConv3DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computeConv3DInfo */
/*!   export computeDefaultPad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computeDefaultPad */
/*!   export computeDilation2DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computeDilation2DInfo */
/*!   export computeOptimalWindowSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js .computeOptimalWindowSize */
/*!   export computeOutAndReduceShapes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .computeOutAndReduceShapes */
/*!   export computeOutShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js .computeOutShape */
/*!   export computePool2DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computePool2DInfo */
/*!   export computePool3DInfo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .computePool3DInfo */
/*!   export convertConv2DDataFormat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .convertConv2DDataFormat */
/*!   export eitherStridesOrDilationsAreOne [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .eitherStridesOrDilationsAreOne */
/*!   export expandShapeToKeepDim [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .expandShapeToKeepDim */
/*!   export exponent [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .exponent */
/*!   export exponents [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .exponents */
/*!   export fromStringArrayToUint8 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export fromUint8ToStringArray [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getAxesPermutation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .getAxesPermutation */
/*!   export getBroadcastDims [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js .getBroadcastDims */
/*!   export getComplexWithIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .getComplexWithIndex */
/*!   export getFusedBiasGradient [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js .getFusedBiasGradient */
/*!   export getFusedDyActivation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js .getFusedDyActivation */
/*!   export getImageCenter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/rotate_util.js .getImageCenter */
/*!   export getInnerMostAxes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .getInnerMostAxes */
/*!   export getPermuted [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getPermuted */
/*!   export getReductionAxes [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js .getReductionAxes */
/*!   export getReshaped [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getReshaped */
/*!   export getReshapedPermuted [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getReshapedPermuted */
/*!   export getSliceBeginCoords [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getSliceBeginCoords */
/*!   export getSliceSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js .getSliceSize */
/*!   export getUndoAxesPermutation [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js .getUndoAxesPermutation */
/*!   export log [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/log.js .log */
/*!   export mergeRealAndImagArrays [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .mergeRealAndImagArrays */
/*!   export prepareAndValidate [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js .prepareAndValidate */
/*!   export prepareSplitSize [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/split_util.js .prepareSplitSize */
/*!   export segment_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/segment_util.js */
/*!     export collectGatherOpShapeInfo [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export computeOutShape [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export segOpComputeOptimalWindowSize [provided] [no usage info] [missing usage info prevents renaming] */
/*!     other exports [not provided] [no usage info] */
/*!   export shouldFuse [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js .shouldFuse */
/*!   export slice_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js */
/*!     export assertParamsValid [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export computeFlatOffset [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export computeOutShape [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export getNormalizedAxes [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export isSliceContinous [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export maskToAxes [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export parseSliceParams [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export sliceInfo [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export startForAxis [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export startIndicesWithElidedDims [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export stopForAxis [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export stopIndicesWithElidedDims [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export stridesForAxis [provided] [no usage info] [missing usage info prevents renaming] */
/*!     export stridesWithElidedDims [provided] [no usage info] [missing usage info prevents renaming] */
/*!     other exports [not provided] [no usage info] */
/*!   export splitRealAndImagArrays [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/complex_util.js .splitRealAndImagArrays */
/*!   export tupleValuesAreOne [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js .tupleValuesAreOne */
/*!   export upcastType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/types.js .upcastType */
/*!   export validateInput [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js .validateInput */
/*!   export validateUpdateShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js .validateUpdateShape */
/*!   export warn [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/log.js .warn */
/*!   other exports [not provided] [no usage info] */
/*! export basicLSTMCell [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/basic_lstm_cell.js .basicLSTMCell */
/*! export batchNorm [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js .batchNorm */
/*! export batchNorm2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm2d.js .batchNorm2d */
/*! export batchNorm3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm3d.js .batchNorm3d */
/*! export batchNorm4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm4d.js .batchNorm4d */
/*! export batchToSpaceND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js .batchToSpaceND */
/*! export bincount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js .bincount */
/*! export booleanMaskAsync [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js .booleanMaskAsync */
/*! export broadcastTo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js .broadcastTo */
/*! export browser [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/browser.js */
/*!   export fromPixels [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export toPixels [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export buffer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js .buffer */
/*! export cast [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js .cast */
/*! export ceil [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ceil.js .ceil */
/*! export clipByValue [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js .clipByValue */
/*! export clone [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js .clone */
/*! export complex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js .complex */
/*! export concat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js .concat */
/*! export concat1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_1d.js .concat1d */
/*! export concat2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_2d.js .concat2d */
/*! export concat3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_3d.js .concat3d */
/*! export concat4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_4d.js .concat4d */
/*! export conv1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv1d.js .conv1d */
/*! export conv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js .conv2d */
/*! export conv2dTranspose [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js .conv2dTranspose */
/*! export conv3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d.js .conv3d */
/*! export conv3dTranspose [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_transpose.js .conv3dTranspose */
/*! export copyRegisteredKernels [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .copyRegisteredKernels */
/*! export cos [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/cos.js .cos */
/*! export cosh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/cosh.js .cosh */
/*! export cosineWindow [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js .cosineWindow */
/*! export cumsum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/cumsum.js .cumsum */
/*! export customGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/gradients.js .customGrad */
/*! export denseBincount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/dense_bincount.js .denseBincount */
/*! export deprecationWarn [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .deprecationWarn */
/*! export depthToSpace [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/depth_to_space.js .depthToSpace */
/*! export depthwiseConv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js .depthwiseConv2d */
/*! export device_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/device_util.js */
/*!   export isBrowser [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isMobile [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export diag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/diag.js .diag */
/*! export dilation2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/dilation2d.js .dilation2d */
/*! export disableDeprecationWarnings [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .disableDeprecationWarnings */
/*! export dispose [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .dispose */
/*! export disposeVariables [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .disposeVariables */
/*! export div [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/div.js .div */
/*! export divNoNan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/div_no_nan.js .divNoNan */
/*! export dot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/dot.js .dot */
/*! export dropout [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/dropout.js .dropout */
/*! export elu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js .elu */
/*! export enableDebugMode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .enableDebugMode */
/*! export enableProdMode [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .enableProdMode */
/*! export enclosingPowerOfTwo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js .enclosingPowerOfTwo */
/*! export engine [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .engine */
/*! export env [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/environment.js .env */
/*! export equal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js .equal */
/*! export erf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf.js .erf */
/*! export exp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js .exp */
/*! export expandDims [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js .expandDims */
/*! export expm1 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/expm1.js .expm1 */
/*! export eye [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/eye.js .eye */
/*! export fft [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js .fft */
/*! export fill [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js .fill */
/*! export findBackend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .findBackend */
/*! export findBackendFactory [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .findBackendFactory */
/*! export floor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js .floor */
/*! export floorDiv [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js .floorDiv */
/*! export fused [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_ops.js */
/*!   export conv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/conv2d.js .conv2d */
/*!   export depthwiseConv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/depthwise_conv2d.js .depthwiseConv2d */
/*!   export matMul [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/mat_mul.js .matMul */
/*!   other exports [not provided] [no usage info] */
/*! export gather [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js .gather */
/*! export gatherND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js .gatherND */
/*! export gather_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js */
/*!   export prepareAndValidate [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export getBackend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .getBackend */
/*! export getGradient [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .getGradient */
/*! export getKernel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .getKernel */
/*! export getKernelsForBackend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .getKernelsForBackend */
/*! export grad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/gradients.js .grad */
/*! export grads [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/gradients.js .grads */
/*! export greater [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js .greater */
/*! export greaterEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js .greaterEqual */
/*! export ifft [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js .ifft */
/*! export imag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js .imag */
/*! export image [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js .image */
/*! export inTopKAsync [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js .inTopKAsync */
/*! export io [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/io.js */
/*!   export browserFiles [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/browser_files.js .browserFiles */
/*!   export browserHTTPRequest [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/http.js .browserHTTPRequest */
/*!   export concatenateArrayBuffers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js .concatenateArrayBuffers */
/*!   export copyModel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js .copyModel */
/*!   export decodeWeights [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js .decodeWeights */
/*!   export encodeWeights [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js .encodeWeights */
/*!   export fromMemory [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js .fromMemory */
/*!   export getLoadHandlers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js .getLoadHandlers */
/*!   export getModelArtifactsInfoForJSON [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js .getModelArtifactsInfoForJSON */
/*!   export getSaveHandlers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js .getSaveHandlers */
/*!   export http [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/http.js .http */
/*!   export isHTTPScheme [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/http.js .isHTTPScheme */
/*!   export listModels [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js .listModels */
/*!   export loadWeights [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js .loadWeights */
/*!   export moveModel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js .moveModel */
/*!   export registerLoadRouter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js .registerLoadRouter */
/*!   export registerSaveRouter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js .registerSaveRouter */
/*!   export removeModel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js .removeModel */
/*!   export weightsLoaderFactory [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js .weightsLoaderFactory */
/*!   export withSaveHandler [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js .withSaveHandler */
/*!   other exports [not provided] [no usage info] */
/*! export irfft [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/irfft.js .irfft */
/*! export isFinite [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/is_finite.js .isFinite */
/*! export isInf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/is_inf.js .isInf */
/*! export isNaN [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/is_nan.js .isNaN */
/*! export keep [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .keep */
/*! export kernel_impls [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/kernel_impls.js */
/*!   export nonMaxSuppressionV3Impl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js .nonMaxSuppressionV3Impl */
/*!   export nonMaxSuppressionV4Impl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js .nonMaxSuppressionV4Impl */
/*!   export nonMaxSuppressionV5Impl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js .nonMaxSuppressionV5Impl */
/*!   export whereImpl [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js .whereImpl */
/*!   other exports [not provided] [no usage info] */
/*! export leakyRelu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js .leakyRelu */
/*! export less [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/less.js .less */
/*! export lessEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js .lessEqual */
/*! export linalg [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js .linalg */
/*! export linspace [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/linspace.js .linspace */
/*! export localResponseNormalization [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization.js .localResponseNormalization */
/*! export log [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log.js .log */
/*! export log1p [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js .log1p */
/*! export logSigmoid [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log_sigmoid.js .logSigmoid */
/*! export logSoftmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log_softmax.js .logSoftmax */
/*! export logSumExp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js .logSumExp */
/*! export logicalAnd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js .logicalAnd */
/*! export logicalNot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js .logicalNot */
/*! export logicalOr [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js .logicalOr */
/*! export logicalXor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js .logicalXor */
/*! export losses [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js .losses */
/*! export matMul [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js .matMul */
/*! export math [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/math.js */
/*!   export confusionMatrix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/confusion_matrix.js .confusionMatrix */
/*!   other exports [not provided] [no usage info] */
/*! export max [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/max.js .max */
/*! export maxPool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js .maxPool */
/*! export maxPool3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d.js .maxPool3d */
/*! export maxPoolWithArgmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_with_argmax.js .maxPoolWithArgmax */
/*! export maximum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js .maximum */
/*! export mean [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js .mean */
/*! export memory [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .memory */
/*! export min [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/min.js .min */
/*! export minimum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js .minimum */
/*! export mirrorPad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js .mirrorPad */
/*! export mod [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mod.js .mod */
/*! export moments [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/moments.js .moments */
/*! export movingAverage [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/moving_average.js .movingAverage */
/*! export mul [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js .mul */
/*! export multiRNNCell [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/multi_rnn_cell.js .multiRNNCell */
/*! export multinomial [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/multinomial.js .multinomial */
/*! export neg [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js .neg */
/*! export nextFrame [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/browser_util.js .nextFrame */
/*! export norm [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js .norm */
/*! export notEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js .notEqual */
/*! export oneHot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js .oneHot */
/*! export ones [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js .ones */
/*! export onesLike [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ones_like.js .onesLike */
/*! export op [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js .op */
/*! export outerProduct [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/outer_product.js .outerProduct */
/*! export pad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js .pad */
/*! export pad1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad1d.js .pad1d */
/*! export pad2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad2d.js .pad2d */
/*! export pad3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad3d.js .pad3d */
/*! export pad4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad4d.js .pad4d */
/*! export pool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pool.js .pool */
/*! export pow [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js .pow */
/*! export prelu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js .prelu */
/*! export print [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/print.js .print */
/*! export prod [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/prod.js .prod */
/*! export profile [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .profile */
/*! export rand [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/rand.js .rand */
/*! export randomGamma [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/random_gamma.js .randomGamma */
/*! export randomNormal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/random_normal.js .randomNormal */
/*! export randomUniform [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js .randomUniform */
/*! export range [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/range.js .range */
/*! export ready [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .ready */
/*! export real [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/real.js .real */
/*! export reciprocal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reciprocal.js .reciprocal */
/*! export registerBackend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .registerBackend */
/*! export registerGradient [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .registerGradient */
/*! export registerKernel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .registerKernel */
/*! export relu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js .relu */
/*! export relu6 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js .relu6 */
/*! export removeBackend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .removeBackend */
/*! export reshape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js .reshape */
/*! export reverse [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js .reverse */
/*! export reverse1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_1d.js .reverse1d */
/*! export reverse2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_2d.js .reverse2d */
/*! export reverse3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_3d.js .reverse3d */
/*! export reverse4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_4d.js .reverse4d */
/*! export rfft [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js .rfft */
/*! export round [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/round.js .round */
/*! export rsqrt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/rsqrt.js .rsqrt */
/*! export scalar [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js .scalar */
/*! export scatterND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js .scatterND */
/*! export scatter_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js */
/*!   export calculateShapes [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export validateInput [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export validateUpdateShape [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export selu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/selu.js .selu */
/*! export separableConv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/separable_conv2d.js .separableConv2d */
/*! export serialization [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/serialization.js */
/*!   export Serializable [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export SerializationMap [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export registerClass [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export setBackend [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .setBackend */
/*! export setPlatform [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .setPlatform */
/*! export setdiff1dAsync [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js .setdiff1dAsync */
/*! export sigmoid [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js .sigmoid */
/*! export sign [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sign.js .sign */
/*! export signal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js .signal */
/*! export sin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sin.js .sin */
/*! export sinh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sinh.js .sinh */
/*! export slice [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js .slice */
/*! export slice1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice1d.js .slice1d */
/*! export slice2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice2d.js .slice2d */
/*! export slice3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice3d.js .slice3d */
/*! export slice4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice4d.js .slice4d */
/*! export slice_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js */
/*!   ... (15 already listed exports) */
/*! export softmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js .softmax */
/*! export softplus [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js .softplus */
/*! export spaceToBatchND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js .spaceToBatchND */
/*! export sparseToDense [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js .sparseToDense */
/*! export spectral [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js .spectral */
/*! export split [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/split.js .split */
/*! export sqrt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js .sqrt */
/*! export square [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/square.js .square */
/*! export squaredDifference [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js .squaredDifference */
/*! export squeeze [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js .squeeze */
/*! export stack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js .stack */
/*! export step [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/step.js .step */
/*! export stridedSlice [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/strided_slice.js .stridedSlice */
/*! export sub [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js .sub */
/*! export sum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js .sum */
/*! export sumOutType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/types.js .sumOutType */
/*! export tan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tan.js .tan */
/*! export tanh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js .tanh */
/*! export tensor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js .tensor */
/*! export tensor1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js .tensor1d */
/*! export tensor2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js .tensor2d */
/*! export tensor3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js .tensor3d */
/*! export tensor4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor4d.js .tensor4d */
/*! export tensor5d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor5d.js .tensor5d */
/*! export tensor6d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor6d.js .tensor6d */
/*! export tensor_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js */
/*!   export assertTypesMatch [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export getTensorsInContainer [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export isTensorInList [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export makeTypesMatch [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export test_util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/test_util.js */
/*!   export TEST_EPSILON_FLOAT16 [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export encodeStrings [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export expectArrayBuffersEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export expectArraysClose [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export expectArraysEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export expectNumbersClose [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export expectPromiseToFail [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export expectValuesInRange [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export testEpsilon [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export tidy [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .tidy */
/*! export tile [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js .tile */
/*! export time [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/globals.js .time */
/*! export topk [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/topk.js .topk */
/*! export train [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/train.js .train */
/*! export transpose [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js .transpose */
/*! export truncatedNormal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/truncated_normal.js .truncatedNormal */
/*! export unique [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/unique.js .unique */
/*! export unregisterGradient [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .unregisterGradient */
/*! export unregisterKernel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js .unregisterKernel */
/*! export unsortedSegmentSum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/unsorted_segment_sum.js .unsortedSegmentSum */
/*! export unstack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js .unstack */
/*! export upcastType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/types.js .upcastType */
/*! export util [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util.js */
/*!   export arraysEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .arraysEqual */
/*!   export assert [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .assert */
/*!   export assertNonNegativeIntegerDimensions [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .assertNonNegativeIntegerDimensions */
/*!   export assertNonNull [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .assertNonNull */
/*!   export assertShapesMatch [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .assertShapesMatch */
/*!   export bytesFromStringArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .bytesFromStringArray */
/*!   export bytesPerElement [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .bytesPerElement */
/*!   export checkConversionForErrors [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .checkConversionForErrors */
/*!   export clamp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .clamp */
/*!   export computeStrides [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .computeStrides */
/*!   export createScalarValue [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export createShuffledIndices [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .createShuffledIndices */
/*!   export decodeString [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export distSquared [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .distSquared */
/*!   export encodeString [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export fetch [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export flatten [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .flatten */
/*!   export getArrayFromDType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .getArrayFromDType */
/*!   export getTypedArrayFromDType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .getTypedArrayFromDType */
/*!   export hasEncodingLoss [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .hasEncodingLoss */
/*!   export indexToLoc [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .indexToLoc */
/*!   export inferDtype [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .inferDtype */
/*!   export inferFromImplicitShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .inferFromImplicitShape */
/*!   export isBoolean [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isBoolean */
/*!   export isFunction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isFunction */
/*!   export isInt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isInt */
/*!   export isNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isNumber */
/*!   export isPromise [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isPromise */
/*!   export isScalarShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isScalarShape */
/*!   export isString [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isString */
/*!   export isTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isTypedArray */
/*!   export isValidDtype [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isValidDtype */
/*!   export locToIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .locToIndex */
/*!   export makeOnesTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .makeOnesTypedArray */
/*!   export makeZerosNestedTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .makeZerosNestedTypedArray */
/*!   export makeZerosTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .makeZerosTypedArray */
/*!   export nearestDivisor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .nearestDivisor */
/*!   export nearestLargerEven [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .nearestLargerEven */
/*!   export now [provided] [no usage info] [missing usage info prevents renaming] */
/*!   export parseAxisParam [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .parseAxisParam */
/*!   export randUniform [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .randUniform */
/*!   export repeatedTry [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .repeatedTry */
/*!   export rightPad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .rightPad */
/*!   export shuffle [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .shuffle */
/*!   export shuffleCombo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .shuffleCombo */
/*!   export sizeFromShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .sizeFromShape */
/*!   export sizeToSquarishShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .sizeToSquarishShape */
/*!   export squeezeShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .squeezeShape */
/*!   export sum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .sum */
/*!   export tanh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .tanh */
/*!   export toNestedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .toNestedArray */
/*!   export toTypedArray [provided] [no usage info] [missing usage info prevents renaming] */
/*!   other exports [not provided] [no usage info] */
/*! export valueAndGrad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/gradients.js .valueAndGrad */
/*! export valueAndGrads [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/gradients.js .valueAndGrads */
/*! export variable [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/variable.js .variable */
/*! export variableGrads [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/gradients.js .variableGrads */
/*! export version_core [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/version.js .version */
/*! export where [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/where.js .where */
/*! export whereAsync [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js .whereAsync */
/*! export zeros [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js .zeros */
/*! export zerosLike [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js .zerosLike */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Abs\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Abs,\n/* harmony export */   \"Acos\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Acos,\n/* harmony export */   \"Acosh\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Acosh,\n/* harmony export */   \"AdadeltaOptimizer\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AdadeltaOptimizer,\n/* harmony export */   \"AdagradOptimizer\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AdagradOptimizer,\n/* harmony export */   \"AdamOptimizer\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AdamOptimizer,\n/* harmony export */   \"AdamaxOptimizer\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AdamaxOptimizer,\n/* harmony export */   \"Add\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Add,\n/* harmony export */   \"AddN\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AddN,\n/* harmony export */   \"All\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.All,\n/* harmony export */   \"Any\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Any,\n/* harmony export */   \"ArgMax\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ArgMax,\n/* harmony export */   \"ArgMin\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ArgMin,\n/* harmony export */   \"Asin\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Asin,\n/* harmony export */   \"Asinh\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Asinh,\n/* harmony export */   \"Atan\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Atan,\n/* harmony export */   \"Atan2\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Atan2,\n/* harmony export */   \"Atanh\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Atanh,\n/* harmony export */   \"AvgPool\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AvgPool,\n/* harmony export */   \"AvgPool3D\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AvgPool3D,\n/* harmony export */   \"AvgPool3DGrad\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AvgPool3DGrad,\n/* harmony export */   \"AvgPoolGrad\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.AvgPoolGrad,\n/* harmony export */   \"BatchMatMul\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.BatchMatMul,\n/* harmony export */   \"BatchToSpaceND\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.BatchToSpaceND,\n/* harmony export */   \"Bincount\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Bincount,\n/* harmony export */   \"BroadcastTo\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.BroadcastTo,\n/* harmony export */   \"Cast\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Cast,\n/* harmony export */   \"Ceil\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Ceil,\n/* harmony export */   \"ClipByValue\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ClipByValue,\n/* harmony export */   \"Complex\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Complex,\n/* harmony export */   \"ComplexAbs\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ComplexAbs,\n/* harmony export */   \"Concat\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Concat,\n/* harmony export */   \"Conv2D\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Conv2D,\n/* harmony export */   \"Conv2DBackpropFilter\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Conv2DBackpropFilter,\n/* harmony export */   \"Conv2DBackpropInput\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Conv2DBackpropInput,\n/* harmony export */   \"Conv3D\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Conv3D,\n/* harmony export */   \"Conv3DBackpropFilterV2\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Conv3DBackpropFilterV2,\n/* harmony export */   \"Conv3DBackpropInputV2\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Conv3DBackpropInputV2,\n/* harmony export */   \"Cos\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Cos,\n/* harmony export */   \"Cosh\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Cosh,\n/* harmony export */   \"CropAndResize\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.CropAndResize,\n/* harmony export */   \"Cumsum\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Cumsum,\n/* harmony export */   \"DataStorage\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.DataStorage,\n/* harmony export */   \"DenseBincount\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.DenseBincount,\n/* harmony export */   \"DepthToSpace\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.DepthToSpace,\n/* harmony export */   \"DepthwiseConv2dNative\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.DepthwiseConv2dNative,\n/* harmony export */   \"DepthwiseConv2dNativeBackpropFilter\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.DepthwiseConv2dNativeBackpropFilter,\n/* harmony export */   \"DepthwiseConv2dNativeBackpropInput\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.DepthwiseConv2dNativeBackpropInput,\n/* harmony export */   \"Diag\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Diag,\n/* harmony export */   \"Dilation2D\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Dilation2D,\n/* harmony export */   \"Dilation2DBackpropFilter\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Dilation2DBackpropFilter,\n/* harmony export */   \"Dilation2DBackpropInput\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Dilation2DBackpropInput,\n/* harmony export */   \"ENV\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ENV,\n/* harmony export */   \"Elu\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Elu,\n/* harmony export */   \"EluGrad\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.EluGrad,\n/* harmony export */   \"Environment\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Environment,\n/* harmony export */   \"Equal\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Equal,\n/* harmony export */   \"Erf\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Erf,\n/* harmony export */   \"Exp\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Exp,\n/* harmony export */   \"ExpandDims\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ExpandDims,\n/* harmony export */   \"Expm1\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Expm1,\n/* harmony export */   \"FFT\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.FFT,\n/* harmony export */   \"Fill\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Fill,\n/* harmony export */   \"FlipLeftRight\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.FlipLeftRight,\n/* harmony export */   \"Floor\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Floor,\n/* harmony export */   \"FloorDiv\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.FloorDiv,\n/* harmony export */   \"FromPixels\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.FromPixels,\n/* harmony export */   \"FusedBatchNorm\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.FusedBatchNorm,\n/* harmony export */   \"FusedConv2D\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.FusedConv2D,\n/* harmony export */   \"FusedDepthwiseConv2D\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.FusedDepthwiseConv2D,\n/* harmony export */   \"GatherNd\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.GatherNd,\n/* harmony export */   \"GatherV2\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.GatherV2,\n/* harmony export */   \"Greater\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Greater,\n/* harmony export */   \"GreaterEqual\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.GreaterEqual,\n/* harmony export */   \"IFFT\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.IFFT,\n/* harmony export */   \"Identity\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Identity,\n/* harmony export */   \"Imag\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Imag,\n/* harmony export */   \"IsFinite\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.IsFinite,\n/* harmony export */   \"IsInf\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.IsInf,\n/* harmony export */   \"IsNan\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.IsNan,\n/* harmony export */   \"KernelBackend\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.KernelBackend,\n/* harmony export */   \"LRN\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LRN,\n/* harmony export */   \"LRNGrad\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LRNGrad,\n/* harmony export */   \"LeakyRelu\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LeakyRelu,\n/* harmony export */   \"Less\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Less,\n/* harmony export */   \"LessEqual\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LessEqual,\n/* harmony export */   \"LinSpace\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LinSpace,\n/* harmony export */   \"Log\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Log,\n/* harmony export */   \"Log1p\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Log1p,\n/* harmony export */   \"LogSoftmax\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LogSoftmax,\n/* harmony export */   \"LogicalAnd\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LogicalAnd,\n/* harmony export */   \"LogicalNot\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LogicalNot,\n/* harmony export */   \"LogicalOr\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.LogicalOr,\n/* harmony export */   \"Max\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Max,\n/* harmony export */   \"MaxPool\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.MaxPool,\n/* harmony export */   \"MaxPool3D\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.MaxPool3D,\n/* harmony export */   \"MaxPool3DGrad\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.MaxPool3DGrad,\n/* harmony export */   \"MaxPoolGrad\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.MaxPoolGrad,\n/* harmony export */   \"MaxPoolWithArgmax\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.MaxPoolWithArgmax,\n/* harmony export */   \"Maximum\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Maximum,\n/* harmony export */   \"Mean\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Mean,\n/* harmony export */   \"Min\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Min,\n/* harmony export */   \"Minimum\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Minimum,\n/* harmony export */   \"MirrorPad\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.MirrorPad,\n/* harmony export */   \"Mod\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Mod,\n/* harmony export */   \"MomentumOptimizer\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.MomentumOptimizer,\n/* harmony export */   \"Multinomial\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Multinomial,\n/* harmony export */   \"Multiply\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Multiply,\n/* harmony export */   \"Neg\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Neg,\n/* harmony export */   \"NonMaxSuppressionV3\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.NonMaxSuppressionV3,\n/* harmony export */   \"NonMaxSuppressionV4\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.NonMaxSuppressionV4,\n/* harmony export */   \"NonMaxSuppressionV5\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.NonMaxSuppressionV5,\n/* harmony export */   \"NotEqual\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.NotEqual,\n/* harmony export */   \"OP_SCOPE_SUFFIX\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.OP_SCOPE_SUFFIX,\n/* harmony export */   \"OneHot\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.OneHot,\n/* harmony export */   \"OnesLike\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.OnesLike,\n/* harmony export */   \"Optimizer\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Optimizer,\n/* harmony export */   \"Pack\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Pack,\n/* harmony export */   \"PadV2\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.PadV2,\n/* harmony export */   \"Pool\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Pool,\n/* harmony export */   \"Pow\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Pow,\n/* harmony export */   \"Prelu\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Prelu,\n/* harmony export */   \"Prod\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Prod,\n/* harmony export */   \"RMSPropOptimizer\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.RMSPropOptimizer,\n/* harmony export */   \"Range\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Range,\n/* harmony export */   \"Rank\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Rank,\n/* harmony export */   \"Real\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Real,\n/* harmony export */   \"RealDiv\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.RealDiv,\n/* harmony export */   \"Reciprocal\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Reciprocal,\n/* harmony export */   \"Reduction\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Reduction,\n/* harmony export */   \"Relu\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Relu,\n/* harmony export */   \"Relu6\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Relu6,\n/* harmony export */   \"Reshape\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Reshape,\n/* harmony export */   \"ResizeBilinear\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ResizeBilinear,\n/* harmony export */   \"ResizeBilinearGrad\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ResizeBilinearGrad,\n/* harmony export */   \"ResizeNearestNeighbor\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ResizeNearestNeighbor,\n/* harmony export */   \"ResizeNearestNeighborGrad\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ResizeNearestNeighborGrad,\n/* harmony export */   \"Reverse\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Reverse,\n/* harmony export */   \"RotateWithOffset\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.RotateWithOffset,\n/* harmony export */   \"Round\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Round,\n/* harmony export */   \"Rsqrt\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Rsqrt,\n/* harmony export */   \"SGDOptimizer\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.SGDOptimizer,\n/* harmony export */   \"ScatterNd\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ScatterNd,\n/* harmony export */   \"Select\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Select,\n/* harmony export */   \"Selu\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Selu,\n/* harmony export */   \"Sigmoid\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Sigmoid,\n/* harmony export */   \"Sign\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Sign,\n/* harmony export */   \"Sin\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Sin,\n/* harmony export */   \"Sinh\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Sinh,\n/* harmony export */   \"Slice\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Slice,\n/* harmony export */   \"Softmax\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Softmax,\n/* harmony export */   \"Softplus\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Softplus,\n/* harmony export */   \"SpaceToBatchND\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.SpaceToBatchND,\n/* harmony export */   \"SparseToDense\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.SparseToDense,\n/* harmony export */   \"SplitV\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.SplitV,\n/* harmony export */   \"Sqrt\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Sqrt,\n/* harmony export */   \"Square\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Square,\n/* harmony export */   \"SquaredDifference\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.SquaredDifference,\n/* harmony export */   \"Step\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Step,\n/* harmony export */   \"StridedSlice\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.StridedSlice,\n/* harmony export */   \"Sub\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Sub,\n/* harmony export */   \"Sum\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Sum,\n/* harmony export */   \"Tan\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Tan,\n/* harmony export */   \"Tanh\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Tanh,\n/* harmony export */   \"Tensor\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Tensor,\n/* harmony export */   \"TensorBuffer\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.TensorBuffer,\n/* harmony export */   \"Tile\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Tile,\n/* harmony export */   \"TopK\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.TopK,\n/* harmony export */   \"Transpose\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Transpose,\n/* harmony export */   \"Unique\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Unique,\n/* harmony export */   \"Unpack\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Unpack,\n/* harmony export */   \"UnsortedSegmentSum\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.UnsortedSegmentSum,\n/* harmony export */   \"Variable\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.Variable,\n/* harmony export */   \"ZerosLike\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ZerosLike,\n/* harmony export */   \"_FusedMatMul\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__._FusedMatMul,\n/* harmony export */   \"abs\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.abs,\n/* harmony export */   \"acos\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.acos,\n/* harmony export */   \"acosh\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.acosh,\n/* harmony export */   \"add\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.add,\n/* harmony export */   \"addN\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.addN,\n/* harmony export */   \"all\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.all,\n/* harmony export */   \"any\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.any,\n/* harmony export */   \"argMax\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.argMax,\n/* harmony export */   \"argMin\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.argMin,\n/* harmony export */   \"asin\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.asin,\n/* harmony export */   \"asinh\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.asinh,\n/* harmony export */   \"atan\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.atan,\n/* harmony export */   \"atan2\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.atan2,\n/* harmony export */   \"atanh\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.atanh,\n/* harmony export */   \"avgPool\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.avgPool,\n/* harmony export */   \"avgPool3d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.avgPool3d,\n/* harmony export */   \"backend\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.backend,\n/* harmony export */   \"backend_util\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.backend_util,\n/* harmony export */   \"basicLSTMCell\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.basicLSTMCell,\n/* harmony export */   \"batchNorm\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.batchNorm,\n/* harmony export */   \"batchNorm2d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.batchNorm2d,\n/* harmony export */   \"batchNorm3d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.batchNorm3d,\n/* harmony export */   \"batchNorm4d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.batchNorm4d,\n/* harmony export */   \"batchToSpaceND\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.batchToSpaceND,\n/* harmony export */   \"bincount\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.bincount,\n/* harmony export */   \"booleanMaskAsync\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.booleanMaskAsync,\n/* harmony export */   \"broadcastTo\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.broadcastTo,\n/* harmony export */   \"browser\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.browser,\n/* harmony export */   \"buffer\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.buffer,\n/* harmony export */   \"cast\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.cast,\n/* harmony export */   \"ceil\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ceil,\n/* harmony export */   \"clipByValue\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.clipByValue,\n/* harmony export */   \"clone\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.clone,\n/* harmony export */   \"complex\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.complex,\n/* harmony export */   \"concat\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.concat,\n/* harmony export */   \"concat1d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.concat1d,\n/* harmony export */   \"concat2d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.concat2d,\n/* harmony export */   \"concat3d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.concat3d,\n/* harmony export */   \"concat4d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.concat4d,\n/* harmony export */   \"conv1d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.conv1d,\n/* harmony export */   \"conv2d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.conv2d,\n/* harmony export */   \"conv2dTranspose\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.conv2dTranspose,\n/* harmony export */   \"conv3d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.conv3d,\n/* harmony export */   \"conv3dTranspose\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.conv3dTranspose,\n/* harmony export */   \"copyRegisteredKernels\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.copyRegisteredKernels,\n/* harmony export */   \"cos\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.cos,\n/* harmony export */   \"cosh\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.cosh,\n/* harmony export */   \"cosineWindow\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.cosineWindow,\n/* harmony export */   \"cumsum\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.cumsum,\n/* harmony export */   \"customGrad\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.customGrad,\n/* harmony export */   \"denseBincount\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.denseBincount,\n/* harmony export */   \"deprecationWarn\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.deprecationWarn,\n/* harmony export */   \"depthToSpace\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.depthToSpace,\n/* harmony export */   \"depthwiseConv2d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.depthwiseConv2d,\n/* harmony export */   \"device_util\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.device_util,\n/* harmony export */   \"diag\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.diag,\n/* harmony export */   \"dilation2d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.dilation2d,\n/* harmony export */   \"disableDeprecationWarnings\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.disableDeprecationWarnings,\n/* harmony export */   \"dispose\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.dispose,\n/* harmony export */   \"disposeVariables\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.disposeVariables,\n/* harmony export */   \"div\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.div,\n/* harmony export */   \"divNoNan\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.divNoNan,\n/* harmony export */   \"dot\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.dot,\n/* harmony export */   \"dropout\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.dropout,\n/* harmony export */   \"elu\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.elu,\n/* harmony export */   \"enableDebugMode\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.enableDebugMode,\n/* harmony export */   \"enableProdMode\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.enableProdMode,\n/* harmony export */   \"enclosingPowerOfTwo\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.enclosingPowerOfTwo,\n/* harmony export */   \"engine\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.engine,\n/* harmony export */   \"env\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.env,\n/* harmony export */   \"equal\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.equal,\n/* harmony export */   \"erf\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.erf,\n/* harmony export */   \"exp\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.exp,\n/* harmony export */   \"expandDims\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.expandDims,\n/* harmony export */   \"expm1\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.expm1,\n/* harmony export */   \"eye\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.eye,\n/* harmony export */   \"fft\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.fft,\n/* harmony export */   \"fill\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.fill,\n/* harmony export */   \"findBackend\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.findBackend,\n/* harmony export */   \"findBackendFactory\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.findBackendFactory,\n/* harmony export */   \"floor\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.floor,\n/* harmony export */   \"floorDiv\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.floorDiv,\n/* harmony export */   \"fused\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.fused,\n/* harmony export */   \"gather\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.gather,\n/* harmony export */   \"gatherND\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.gatherND,\n/* harmony export */   \"gather_util\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.gather_util,\n/* harmony export */   \"getBackend\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.getBackend,\n/* harmony export */   \"getGradient\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.getGradient,\n/* harmony export */   \"getKernel\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.getKernel,\n/* harmony export */   \"getKernelsForBackend\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.getKernelsForBackend,\n/* harmony export */   \"grad\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.grad,\n/* harmony export */   \"grads\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.grads,\n/* harmony export */   \"greater\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.greater,\n/* harmony export */   \"greaterEqual\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.greaterEqual,\n/* harmony export */   \"ifft\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ifft,\n/* harmony export */   \"imag\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.imag,\n/* harmony export */   \"image\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.image,\n/* harmony export */   \"inTopKAsync\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.inTopKAsync,\n/* harmony export */   \"io\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.io,\n/* harmony export */   \"irfft\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.irfft,\n/* harmony export */   \"isFinite\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.isFinite,\n/* harmony export */   \"isInf\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.isInf,\n/* harmony export */   \"isNaN\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.isNaN,\n/* harmony export */   \"keep\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.keep,\n/* harmony export */   \"kernel_impls\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.kernel_impls,\n/* harmony export */   \"leakyRelu\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.leakyRelu,\n/* harmony export */   \"less\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.less,\n/* harmony export */   \"lessEqual\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.lessEqual,\n/* harmony export */   \"linalg\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.linalg,\n/* harmony export */   \"linspace\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.linspace,\n/* harmony export */   \"localResponseNormalization\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.localResponseNormalization,\n/* harmony export */   \"log\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.log,\n/* harmony export */   \"log1p\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.log1p,\n/* harmony export */   \"logSigmoid\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.logSigmoid,\n/* harmony export */   \"logSoftmax\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.logSoftmax,\n/* harmony export */   \"logSumExp\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.logSumExp,\n/* harmony export */   \"logicalAnd\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.logicalAnd,\n/* harmony export */   \"logicalNot\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.logicalNot,\n/* harmony export */   \"logicalOr\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.logicalOr,\n/* harmony export */   \"logicalXor\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.logicalXor,\n/* harmony export */   \"losses\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.losses,\n/* harmony export */   \"matMul\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.matMul,\n/* harmony export */   \"math\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.math,\n/* harmony export */   \"max\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.max,\n/* harmony export */   \"maxPool\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.maxPool,\n/* harmony export */   \"maxPool3d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.maxPool3d,\n/* harmony export */   \"maxPoolWithArgmax\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.maxPoolWithArgmax,\n/* harmony export */   \"maximum\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.maximum,\n/* harmony export */   \"mean\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.mean,\n/* harmony export */   \"memory\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.memory,\n/* harmony export */   \"min\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.min,\n/* harmony export */   \"minimum\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.minimum,\n/* harmony export */   \"mirrorPad\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.mirrorPad,\n/* harmony export */   \"mod\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.mod,\n/* harmony export */   \"moments\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.moments,\n/* harmony export */   \"movingAverage\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.movingAverage,\n/* harmony export */   \"mul\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.mul,\n/* harmony export */   \"multiRNNCell\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.multiRNNCell,\n/* harmony export */   \"multinomial\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.multinomial,\n/* harmony export */   \"neg\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.neg,\n/* harmony export */   \"nextFrame\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.nextFrame,\n/* harmony export */   \"norm\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.norm,\n/* harmony export */   \"notEqual\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.notEqual,\n/* harmony export */   \"oneHot\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.oneHot,\n/* harmony export */   \"ones\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ones,\n/* harmony export */   \"onesLike\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.onesLike,\n/* harmony export */   \"op\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.op,\n/* harmony export */   \"outerProduct\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.outerProduct,\n/* harmony export */   \"pad\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.pad,\n/* harmony export */   \"pad1d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.pad1d,\n/* harmony export */   \"pad2d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.pad2d,\n/* harmony export */   \"pad3d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.pad3d,\n/* harmony export */   \"pad4d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.pad4d,\n/* harmony export */   \"pool\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.pool,\n/* harmony export */   \"pow\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.pow,\n/* harmony export */   \"prelu\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.prelu,\n/* harmony export */   \"print\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.print,\n/* harmony export */   \"prod\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.prod,\n/* harmony export */   \"profile\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.profile,\n/* harmony export */   \"rand\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.rand,\n/* harmony export */   \"randomGamma\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.randomGamma,\n/* harmony export */   \"randomNormal\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.randomNormal,\n/* harmony export */   \"randomUniform\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.randomUniform,\n/* harmony export */   \"range\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.range,\n/* harmony export */   \"ready\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.ready,\n/* harmony export */   \"real\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.real,\n/* harmony export */   \"reciprocal\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.reciprocal,\n/* harmony export */   \"registerBackend\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.registerBackend,\n/* harmony export */   \"registerGradient\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.registerGradient,\n/* harmony export */   \"registerKernel\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.registerKernel,\n/* harmony export */   \"relu\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.relu,\n/* harmony export */   \"relu6\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.relu6,\n/* harmony export */   \"removeBackend\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.removeBackend,\n/* harmony export */   \"reshape\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.reshape,\n/* harmony export */   \"reverse\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.reverse,\n/* harmony export */   \"reverse1d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.reverse1d,\n/* harmony export */   \"reverse2d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.reverse2d,\n/* harmony export */   \"reverse3d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.reverse3d,\n/* harmony export */   \"reverse4d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.reverse4d,\n/* harmony export */   \"rfft\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.rfft,\n/* harmony export */   \"round\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.round,\n/* harmony export */   \"rsqrt\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.rsqrt,\n/* harmony export */   \"scalar\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.scalar,\n/* harmony export */   \"scatterND\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.scatterND,\n/* harmony export */   \"scatter_util\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.scatter_util,\n/* harmony export */   \"selu\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.selu,\n/* harmony export */   \"separableConv2d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.separableConv2d,\n/* harmony export */   \"serialization\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.serialization,\n/* harmony export */   \"setBackend\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.setBackend,\n/* harmony export */   \"setPlatform\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.setPlatform,\n/* harmony export */   \"setdiff1dAsync\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.setdiff1dAsync,\n/* harmony export */   \"sigmoid\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sigmoid,\n/* harmony export */   \"sign\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sign,\n/* harmony export */   \"signal\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.signal,\n/* harmony export */   \"sin\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sin,\n/* harmony export */   \"sinh\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sinh,\n/* harmony export */   \"slice\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.slice,\n/* harmony export */   \"slice1d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.slice1d,\n/* harmony export */   \"slice2d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.slice2d,\n/* harmony export */   \"slice3d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.slice3d,\n/* harmony export */   \"slice4d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.slice4d,\n/* harmony export */   \"slice_util\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.slice_util,\n/* harmony export */   \"softmax\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.softmax,\n/* harmony export */   \"softplus\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.softplus,\n/* harmony export */   \"spaceToBatchND\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.spaceToBatchND,\n/* harmony export */   \"sparseToDense\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sparseToDense,\n/* harmony export */   \"spectral\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.spectral,\n/* harmony export */   \"split\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.split,\n/* harmony export */   \"sqrt\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sqrt,\n/* harmony export */   \"square\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.square,\n/* harmony export */   \"squaredDifference\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.squaredDifference,\n/* harmony export */   \"squeeze\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.squeeze,\n/* harmony export */   \"stack\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.stack,\n/* harmony export */   \"step\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.step,\n/* harmony export */   \"stridedSlice\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.stridedSlice,\n/* harmony export */   \"sub\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sub,\n/* harmony export */   \"sum\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sum,\n/* harmony export */   \"sumOutType\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.sumOutType,\n/* harmony export */   \"tan\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tan,\n/* harmony export */   \"tanh\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tanh,\n/* harmony export */   \"tensor\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor,\n/* harmony export */   \"tensor1d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor1d,\n/* harmony export */   \"tensor2d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor2d,\n/* harmony export */   \"tensor3d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor3d,\n/* harmony export */   \"tensor4d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor4d,\n/* harmony export */   \"tensor5d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor5d,\n/* harmony export */   \"tensor6d\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor6d,\n/* harmony export */   \"tensor_util\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tensor_util,\n/* harmony export */   \"test_util\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.test_util,\n/* harmony export */   \"tidy\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tidy,\n/* harmony export */   \"tile\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.tile,\n/* harmony export */   \"time\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.time,\n/* harmony export */   \"topk\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.topk,\n/* harmony export */   \"train\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.train,\n/* harmony export */   \"transpose\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.transpose,\n/* harmony export */   \"truncatedNormal\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.truncatedNormal,\n/* harmony export */   \"unique\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.unique,\n/* harmony export */   \"unregisterGradient\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.unregisterGradient,\n/* harmony export */   \"unregisterKernel\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.unregisterKernel,\n/* harmony export */   \"unsortedSegmentSum\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.unsortedSegmentSum,\n/* harmony export */   \"unstack\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.unstack,\n/* harmony export */   \"upcastType\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.upcastType,\n/* harmony export */   \"util\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.util,\n/* harmony export */   \"valueAndGrad\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.valueAndGrad,\n/* harmony export */   \"valueAndGrads\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.valueAndGrads,\n/* harmony export */   \"variable\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.variable,\n/* harmony export */   \"variableGrads\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.variableGrads,\n/* harmony export */   \"version_core\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.version_core,\n/* harmony export */   \"where\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.where,\n/* harmony export */   \"whereAsync\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.whereAsync,\n/* harmony export */   \"zeros\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.zeros,\n/* harmony export */   \"zerosLike\": () => /* reexport safe */ _base__WEBPACK_IMPORTED_MODULE_1__.zerosLike\n/* harmony export */ });\n/* harmony import */ var _base_side_effects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base_side_effects */ \"./node_modules/@tensorflow/tfjs-core/dist/base_side_effects.js\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ \"./node_modules/@tensorflow/tfjs-core/dist/base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Required side effectful code.\n;\n// All exports from this package should be in base.\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/index.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/browser_files.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/browser_files.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export BrowserDownloads [provided] [no usage info] [missing usage info prevents renaming] */
/*! export browserDownloads [provided] [no usage info] [missing usage info prevents renaming] */
/*! export browserDownloadsRouter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export browserFiles [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BrowserDownloads\": () => /* binding */ BrowserDownloads,\n/* harmony export */   \"browserDownloadsRouter\": () => /* binding */ browserDownloadsRouter,\n/* harmony export */   \"browserDownloads\": () => /* binding */ browserDownloads,\n/* harmony export */   \"browserFiles\": () => /* binding */ browserFiles\n/* harmony export */ });\n/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flags */ \"./node_modules/@tensorflow/tfjs-core/dist/flags.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _io_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./io_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js\");\n/* harmony import */ var _router_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./router_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * IOHandlers related to files, such as browser-triggered file downloads,\n * user-selected files in browser.\n */\n;\n\n\n\nconst DEFAULT_FILE_NAME_PREFIX = 'model';\nconst DEFAULT_JSON_EXTENSION_NAME = '.json';\nconst DEFAULT_WEIGHT_DATA_EXTENSION_NAME = '.weights.bin';\nfunction defer(f) {\n    return new Promise(resolve => setTimeout(resolve)).then(f);\n}\nclass BrowserDownloads {\n    constructor(fileNamePrefix) {\n        if (!(0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER')) {\n            // TODO(cais): Provide info on what IOHandlers are available under the\n            //   current environment.\n            throw new Error('browserDownloads() cannot proceed because the current environment ' +\n                'is not a browser.');\n        }\n        if (fileNamePrefix.startsWith(BrowserDownloads.URL_SCHEME)) {\n            fileNamePrefix = fileNamePrefix.slice(BrowserDownloads.URL_SCHEME.length);\n        }\n        if (fileNamePrefix == null || fileNamePrefix.length === 0) {\n            fileNamePrefix = DEFAULT_FILE_NAME_PREFIX;\n        }\n        this.modelTopologyFileName = fileNamePrefix + DEFAULT_JSON_EXTENSION_NAME;\n        this.weightDataFileName =\n            fileNamePrefix + DEFAULT_WEIGHT_DATA_EXTENSION_NAME;\n    }\n    async save(modelArtifacts) {\n        if (typeof (document) === 'undefined') {\n            throw new Error('Browser downloads are not supported in ' +\n                'this environment since `document` is not present');\n        }\n        const weightsURL = window.URL.createObjectURL(new Blob([modelArtifacts.weightData], { type: 'application/octet-stream' }));\n        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n            throw new Error('BrowserDownloads.save() does not support saving model topology ' +\n                'in binary formats yet.');\n        }\n        else {\n            const weightsManifest = [{\n                    paths: ['./' + this.weightDataFileName],\n                    weights: modelArtifacts.weightSpecs\n                }];\n            const modelTopologyAndWeightManifest = {\n                modelTopology: modelArtifacts.modelTopology,\n                format: modelArtifacts.format,\n                generatedBy: modelArtifacts.generatedBy,\n                convertedBy: modelArtifacts.convertedBy,\n                weightsManifest\n            };\n            if (modelArtifacts.signature != null) {\n                modelTopologyAndWeightManifest.signature = modelArtifacts.signature;\n            }\n            if (modelArtifacts.userDefinedMetadata != null) {\n                modelTopologyAndWeightManifest.userDefinedMetadata =\n                    modelArtifacts.userDefinedMetadata;\n            }\n            if (modelArtifacts.modelInitializer != null) {\n                modelTopologyAndWeightManifest.modelInitializer =\n                    modelArtifacts.modelInitializer;\n            }\n            const modelTopologyAndWeightManifestURL = window.URL.createObjectURL(new Blob([JSON.stringify(modelTopologyAndWeightManifest)], { type: 'application/json' }));\n            // If anchor elements are not provided, create them without attaching them\n            // to parents, so that the downloaded file names can be controlled.\n            const jsonAnchor = this.jsonAnchor == null ? document.createElement('a') :\n                this.jsonAnchor;\n            jsonAnchor.download = this.modelTopologyFileName;\n            jsonAnchor.href = modelTopologyAndWeightManifestURL;\n            // Trigger downloads by evoking a click event on the download anchors.\n            // When multiple downloads are started synchronously, Firefox will only\n            // save the last one.\n            await defer(() => jsonAnchor.dispatchEvent(new MouseEvent('click')));\n            if (modelArtifacts.weightData != null) {\n                const weightDataAnchor = this.weightDataAnchor == null ?\n                    document.createElement('a') :\n                    this.weightDataAnchor;\n                weightDataAnchor.download = this.weightDataFileName;\n                weightDataAnchor.href = weightsURL;\n                await defer(() => weightDataAnchor.dispatchEvent(new MouseEvent('click')));\n            }\n            return { modelArtifactsInfo: (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.getModelArtifactsInfoForJSON)(modelArtifacts) };\n        }\n    }\n}\nBrowserDownloads.URL_SCHEME = 'downloads://';\nclass BrowserFiles {\n    constructor(files) {\n        if (files == null || files.length < 1) {\n            throw new Error(`When calling browserFiles, at least 1 file is required, ` +\n                `but received ${files}`);\n        }\n        this.files = files;\n    }\n    async load() {\n        const jsonFile = this.files[0];\n        const weightFiles = this.files.slice(1);\n        return new Promise((resolve, reject) => {\n            const jsonReader = new FileReader();\n            jsonReader.onload = (event) => {\n                // tslint:disable-next-line:no-any\n                const modelJSON = JSON.parse(event.target.result);\n                const modelTopology = modelJSON.modelTopology;\n                if (modelTopology == null) {\n                    reject(new Error(`modelTopology field is missing from file ${jsonFile.name}`));\n                    return;\n                }\n                if (weightFiles.length === 0) {\n                    resolve({ modelTopology });\n                }\n                const weightsManifest = modelJSON.weightsManifest;\n                if (weightsManifest == null) {\n                    reject(new Error(`weightManifest field is missing from file ${jsonFile.name}`));\n                    return;\n                }\n                let pathToFile;\n                try {\n                    pathToFile =\n                        this.checkManifestAndWeightFiles(weightsManifest, weightFiles);\n                }\n                catch (err) {\n                    reject(err);\n                    return;\n                }\n                const weightSpecs = [];\n                const paths = [];\n                const perFileBuffers = [];\n                weightsManifest.forEach(weightsGroup => {\n                    weightsGroup.paths.forEach(path => {\n                        paths.push(path);\n                        perFileBuffers.push(null);\n                    });\n                    weightSpecs.push(...weightsGroup.weights);\n                });\n                weightsManifest.forEach(weightsGroup => {\n                    weightsGroup.paths.forEach(path => {\n                        const weightFileReader = new FileReader();\n                        weightFileReader.onload = (event) => {\n                            // tslint:disable-next-line:no-any\n                            const weightData = event.target.result;\n                            const index = paths.indexOf(path);\n                            perFileBuffers[index] = weightData;\n                            if (perFileBuffers.indexOf(null) === -1) {\n                                const result = {\n                                    modelTopology,\n                                    weightSpecs,\n                                    weightData: (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.concatenateArrayBuffers)(perFileBuffers),\n                                    format: modelJSON.format,\n                                    generatedBy: modelJSON.generatedBy,\n                                    convertedBy: modelJSON.convertedBy\n                                };\n                                if (modelJSON.signature != null) {\n                                    result.signature = modelJSON.signature;\n                                }\n                                if (modelJSON.userDefinedMetadata != null) {\n                                    result.userDefinedMetadata = modelJSON.userDefinedMetadata;\n                                }\n                                if (modelJSON.modelInitializer != null) {\n                                    result.modelInitializer = modelJSON.modelInitializer;\n                                }\n                                resolve(result);\n                            }\n                        };\n                        weightFileReader.onerror = error => reject(`Failed to weights data from file of path '${path}'.`);\n                        weightFileReader.readAsArrayBuffer(pathToFile[path]);\n                    });\n                });\n            };\n            jsonReader.onerror = error => reject(`Failed to read model topology and weights manifest JSON ` +\n                `from file '${jsonFile.name}'. BrowserFiles supports loading ` +\n                `Keras-style tf.Model artifacts only.`);\n            jsonReader.readAsText(jsonFile);\n        });\n    }\n    /**\n     * Check the compatibility between weights manifest and weight files.\n     */\n    checkManifestAndWeightFiles(manifest, files) {\n        const basenames = [];\n        const fileNames = files.map(file => (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.basename)(file.name));\n        const pathToFile = {};\n        for (const group of manifest) {\n            group.paths.forEach(path => {\n                const pathBasename = (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.basename)(path);\n                if (basenames.indexOf(pathBasename) !== -1) {\n                    throw new Error(`Duplicate file basename found in weights manifest: ` +\n                        `'${pathBasename}'`);\n                }\n                basenames.push(pathBasename);\n                if (fileNames.indexOf(pathBasename) === -1) {\n                    throw new Error(`Weight file with basename '${pathBasename}' is not provided.`);\n                }\n                else {\n                    pathToFile[path] = files[fileNames.indexOf(pathBasename)];\n                }\n            });\n        }\n        if (basenames.length !== files.length) {\n            throw new Error(`Mismatch in the number of files in weights manifest ` +\n                `(${basenames.length}) and the number of weight files provided ` +\n                `(${files.length}).`);\n        }\n        return pathToFile;\n    }\n}\nconst browserDownloadsRouter = (url) => {\n    if (!(0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER')) {\n        return null;\n    }\n    else {\n        if (!Array.isArray(url) && url.startsWith(BrowserDownloads.URL_SCHEME)) {\n            return browserDownloads(url.slice(BrowserDownloads.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\n_router_registry__WEBPACK_IMPORTED_MODULE_2__.IORouterRegistry.registerSaveRouter(browserDownloadsRouter);\n/**\n * Creates an IOHandler that triggers file downloads from the browser.\n *\n * The returned `IOHandler` instance can be used as model exporting methods such\n * as `tf.Model.save` and supports only saving.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * const saveResult = await model.save('downloads://mymodel');\n * // This will trigger downloading of two files:\n * //   'mymodel.json' and 'mymodel.weights.bin'.\n * console.log(saveResult);\n * ```\n *\n * @param fileNamePrefix Prefix name of the files to be downloaded. For use with\n *   `tf.Model`, `fileNamePrefix` should follow either of the following two\n *   formats:\n *   1. `null` or `undefined`, in which case the default file\n *      names will be used:\n *      - 'model.json' for the JSON file containing the model topology and\n *        weights manifest.\n *      - 'model.weights.bin' for the binary file containing the binary weight\n *        values.\n *   2. A single string or an Array of a single string, as the file name prefix.\n *      For example, if `'foo'` is provided, the downloaded JSON\n *      file and binary weights file will be named 'foo.json' and\n *      'foo.weights.bin', respectively.\n * @param config Additional configuration for triggering downloads.\n * @returns An instance of `BrowserDownloads` `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nfunction browserDownloads(fileNamePrefix = 'model') {\n    return new BrowserDownloads(fileNamePrefix);\n}\n/**\n * Creates an IOHandler that loads model artifacts from user-selected files.\n *\n * This method can be used for loading from files such as user-selected files\n * in the browser.\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * // Note: This code snippet won't run properly without the actual file input\n * //   elements in the HTML DOM.\n *\n * // Suppose there are two HTML file input (`<input type=\"file\" ...>`)\n * // elements.\n * const uploadJSONInput = document.getElementById('upload-json');\n * const uploadWeightsInput = document.getElementById('upload-weights');\n * const model = await tf.loadLayersModel(tf.io.browserFiles(\n *     [uploadJSONInput.files[0], uploadWeightsInput.files[0]]));\n * ```\n *\n * @param files `File`s to load from. Currently, this function supports only\n *   loading from files that contain Keras-style models (i.e., `tf.Model`s), for\n *   which an `Array` of `File`s is expected (in that order):\n *   - A JSON file containing the model topology and weight manifest.\n *   - Optionally, One or more binary files containing the binary weights.\n *     These files must have names that match the paths in the `weightsManifest`\n *     contained by the aforementioned JSON file, or errors will be thrown\n *     during loading. These weights files have the same format as the ones\n *     generated by `tensorflowjs_converter` that comes with the `tensorflowjs`\n *     Python PIP package. If no weights files are provided, only the model\n *     topology will be loaded from the JSON file above.\n * @returns An instance of `Files` `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nfunction browserFiles(files) {\n    return new BrowserFiles(files);\n}\n//# sourceMappingURL=browser_files.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/io/browser_files.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/http.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/http.js ***!
  \************************************************************/
/*! namespace exports */
/*! export HTTPRequest [provided] [no usage info] [missing usage info prevents renaming] */
/*! export browserHTTPRequest [provided] [no usage info] [missing usage info prevents renaming] */
/*! export http [provided] [no usage info] [missing usage info prevents renaming] */
/*! export httpRouter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isHTTPScheme [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseUrl [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HTTPRequest\": () => /* binding */ HTTPRequest,\n/* harmony export */   \"parseUrl\": () => /* binding */ parseUrl,\n/* harmony export */   \"isHTTPScheme\": () => /* binding */ isHTTPScheme,\n/* harmony export */   \"httpRouter\": () => /* binding */ httpRouter,\n/* harmony export */   \"http\": () => /* binding */ http,\n/* harmony export */   \"browserHTTPRequest\": () => /* binding */ browserHTTPRequest\n/* harmony export */ });\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _io_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./io_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js\");\n/* harmony import */ var _router_registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./router_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js\");\n/* harmony import */ var _weights_loader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./weights_loader */ \"./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * IOHandler implementations based on HTTP requests in the web browser.\n *\n * Uses [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n */\n;\n\n\n\n\nconst OCTET_STREAM_MIME_TYPE = 'application/octet-stream';\nconst JSON_TYPE = 'application/json';\nclass HTTPRequest {\n    constructor(path, loadOptions) {\n        this.DEFAULT_METHOD = 'POST';\n        if (loadOptions == null) {\n            loadOptions = {};\n        }\n        this.weightPathPrefix = loadOptions.weightPathPrefix;\n        this.onProgress = loadOptions.onProgress;\n        this.weightUrlConverter = loadOptions.weightUrlConverter;\n        if (loadOptions.fetchFunc != null) {\n            (0,_util__WEBPACK_IMPORTED_MODULE_3__.assert)(typeof loadOptions.fetchFunc === 'function', () => 'Must pass a function that matches the signature of ' +\n                '`fetch` (see ' +\n                'https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)');\n            this.fetch = loadOptions.fetchFunc;\n        }\n        else {\n            this.fetch = (0,_environment__WEBPACK_IMPORTED_MODULE_4__.env)().platform.fetch;\n        }\n        (0,_util__WEBPACK_IMPORTED_MODULE_3__.assert)(path != null && path.length > 0, () => 'URL path for http must not be null, undefined or ' +\n            'empty.');\n        if (Array.isArray(path)) {\n            (0,_util__WEBPACK_IMPORTED_MODULE_3__.assert)(path.length === 2, () => 'URL paths for http must have a length of 2, ' +\n                `(actual length is ${path.length}).`);\n        }\n        this.path = path;\n        if (loadOptions.requestInit != null &&\n            loadOptions.requestInit.body != null) {\n            throw new Error('requestInit is expected to have no pre-existing body, but has one.');\n        }\n        this.requestInit = loadOptions.requestInit || {};\n    }\n    async save(modelArtifacts) {\n        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n            throw new Error('BrowserHTTPRequest.save() does not support saving model topology ' +\n                'in binary formats yet.');\n        }\n        const init = Object.assign({ method: this.DEFAULT_METHOD }, this.requestInit);\n        init.body = new FormData();\n        const weightsManifest = [{\n                paths: ['./model.weights.bin'],\n                weights: modelArtifacts.weightSpecs,\n            }];\n        const modelTopologyAndWeightManifest = {\n            modelTopology: modelArtifacts.modelTopology,\n            format: modelArtifacts.format,\n            generatedBy: modelArtifacts.generatedBy,\n            convertedBy: modelArtifacts.convertedBy,\n            weightsManifest\n        };\n        if (modelArtifacts.signature != null) {\n            modelTopologyAndWeightManifest.signature = modelArtifacts.signature;\n        }\n        if (modelArtifacts.userDefinedMetadata != null) {\n            modelTopologyAndWeightManifest.userDefinedMetadata =\n                modelArtifacts.userDefinedMetadata;\n        }\n        if (modelArtifacts.modelInitializer != null) {\n            modelTopologyAndWeightManifest.modelInitializer =\n                modelArtifacts.modelInitializer;\n        }\n        init.body.append('model.json', new Blob([JSON.stringify(modelTopologyAndWeightManifest)], { type: JSON_TYPE }), 'model.json');\n        if (modelArtifacts.weightData != null) {\n            init.body.append('model.weights.bin', new Blob([modelArtifacts.weightData], { type: OCTET_STREAM_MIME_TYPE }), 'model.weights.bin');\n        }\n        const response = await this.fetch(this.path, init);\n        if (response.ok) {\n            return {\n                modelArtifactsInfo: (0,_io_utils__WEBPACK_IMPORTED_MODULE_0__.getModelArtifactsInfoForJSON)(modelArtifacts),\n                responses: [response],\n            };\n        }\n        else {\n            throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ` +\n                `${response.status}.`);\n        }\n    }\n    /**\n     * Load model artifacts via HTTP request(s).\n     *\n     * See the documentation to `tf.io.http` for details on the saved\n     * artifacts.\n     *\n     * @returns The loaded model artifacts (if loading succeeds).\n     */\n    async load() {\n        const modelConfigRequest = await this.fetch(this.path, this.requestInit);\n        if (!modelConfigRequest.ok) {\n            throw new Error(`Request to ${this.path} failed with status code ` +\n                `${modelConfigRequest.status}. Please verify this URL points to ` +\n                `the model JSON of the model to load.`);\n        }\n        let modelConfig;\n        try {\n            modelConfig = await modelConfigRequest.json();\n        }\n        catch (e) {\n            let message = `Failed to parse model JSON of response from ${this.path}.`;\n            // TODO(nsthorat): Remove this after some time when we're comfortable that\n            // .pb files are mostly gone.\n            if (this.path.endsWith('.pb')) {\n                message += ' Your path contains a .pb file extension. ' +\n                    'Support for .pb models have been removed in TensorFlow.js 1.0 ' +\n                    'in favor of .json models. You can re-convert your Python ' +\n                    'TensorFlow model using the TensorFlow.js 1.0 conversion scripts ' +\n                    'or you can convert your.pb models with the \\'pb2json\\'' +\n                    'NPM script in the tensorflow/tfjs-converter repository.';\n            }\n            else {\n                message += ' Please make sure the server is serving valid ' +\n                    'JSON for this request.';\n            }\n            throw new Error(message);\n        }\n        const modelTopology = modelConfig.modelTopology;\n        const weightsManifest = modelConfig.weightsManifest;\n        const generatedBy = modelConfig.generatedBy;\n        const convertedBy = modelConfig.convertedBy;\n        const format = modelConfig.format;\n        const signature = modelConfig.signature;\n        const userDefinedMetadata = modelConfig.userDefinedMetadata;\n        // We do not allow both modelTopology and weightsManifest to be missing.\n        if (modelTopology == null && weightsManifest == null) {\n            throw new Error(`The JSON from HTTP path ${this.path} contains neither model ` +\n                `topology or manifest for weights.`);\n        }\n        let weightSpecs;\n        let weightData;\n        if (weightsManifest != null) {\n            const results = await this.loadWeights(weightsManifest);\n            [weightSpecs, weightData] = results;\n        }\n        const artifacts = {\n            modelTopology,\n            weightSpecs,\n            weightData,\n            generatedBy,\n            convertedBy,\n            format\n        };\n        if (signature != null) {\n            artifacts.signature = signature;\n        }\n        if (userDefinedMetadata != null) {\n            artifacts.userDefinedMetadata = userDefinedMetadata;\n        }\n        const initializer = modelConfig.modelInitializer;\n        if (initializer) {\n            artifacts.modelInitializer = initializer;\n        }\n        return artifacts;\n    }\n    async loadWeights(weightsManifest) {\n        const weightPath = Array.isArray(this.path) ? this.path[1] : this.path;\n        const [prefix, suffix] = parseUrl(weightPath);\n        const pathPrefix = this.weightPathPrefix || prefix;\n        const weightSpecs = [];\n        for (const entry of weightsManifest) {\n            weightSpecs.push(...entry.weights);\n        }\n        const fetchURLs = [];\n        const urlPromises = [];\n        for (const weightsGroup of weightsManifest) {\n            for (const path of weightsGroup.paths) {\n                if (this.weightUrlConverter != null) {\n                    urlPromises.push(this.weightUrlConverter(path));\n                }\n                else {\n                    fetchURLs.push(pathPrefix + path + suffix);\n                }\n            }\n        }\n        if (this.weightUrlConverter) {\n            fetchURLs.push(...await Promise.all(urlPromises));\n        }\n        const buffers = await (0,_weights_loader__WEBPACK_IMPORTED_MODULE_2__.loadWeightsAsArrayBuffer)(fetchURLs, {\n            requestInit: this.requestInit,\n            fetchFunc: this.fetch,\n            onProgress: this.onProgress\n        });\n        return [weightSpecs, (0,_io_utils__WEBPACK_IMPORTED_MODULE_0__.concatenateArrayBuffers)(buffers)];\n    }\n}\nHTTPRequest.URL_SCHEME_REGEX = /^https?:\\/\\//;\n/**\n * Extract the prefix and suffix of the url, where the prefix is the path before\n * the last file, and suffix is the search params after the last file.\n * ```\n * const url = 'http://tfhub.dev/model/1/tensorflowjs_model.pb?tfjs-format=file'\n * [prefix, suffix] = parseUrl(url)\n * // prefix = 'http://tfhub.dev/model/1/'\n * // suffix = '?tfjs-format=file'\n * ```\n * @param url the model url to be parsed.\n */\nfunction parseUrl(url) {\n    const lastSlash = url.lastIndexOf('/');\n    const lastSearchParam = url.lastIndexOf('?');\n    const prefix = url.substring(0, lastSlash);\n    const suffix = lastSearchParam > lastSlash ? url.substring(lastSearchParam) : '';\n    return [prefix + '/', suffix];\n}\nfunction isHTTPScheme(url) {\n    return url.match(HTTPRequest.URL_SCHEME_REGEX) != null;\n}\nconst httpRouter = (url, loadOptions) => {\n    if (typeof fetch === 'undefined' &&\n        (loadOptions == null || loadOptions.fetchFunc == null)) {\n        // `http` uses `fetch` or `node-fetch`, if one wants to use it in\n        // an environment that is not the browser or node they have to setup a\n        // global fetch polyfill.\n        return null;\n    }\n    else {\n        let isHTTP = true;\n        if (Array.isArray(url)) {\n            isHTTP = url.every(urlItem => isHTTPScheme(urlItem));\n        }\n        else {\n            isHTTP = isHTTPScheme(url);\n        }\n        if (isHTTP) {\n            return http(url, loadOptions);\n        }\n    }\n    return null;\n};\n_router_registry__WEBPACK_IMPORTED_MODULE_1__.IORouterRegistry.registerSaveRouter(httpRouter);\n_router_registry__WEBPACK_IMPORTED_MODULE_1__.IORouterRegistry.registerLoadRouter(httpRouter);\n/**\n * Creates an IOHandler subtype that sends model artifacts to HTTP server.\n *\n * An HTTP request of the `multipart/form-data` mime type will be sent to the\n * `path` URL. The form data includes artifacts that represent the topology\n * and/or weights of the model. In the case of Keras-style `tf.Model`, two\n * blobs (files) exist in form-data:\n *   - A JSON file consisting of `modelTopology` and `weightsManifest`.\n *   - A binary weights file consisting of the concatenated weight values.\n * These files are in the same format as the one generated by\n * [tfjs_converter](https://js.tensorflow.org/tutorials/import-keras.html).\n *\n * The following code snippet exemplifies the client-side code that uses this\n * function:\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save(tf.io.http(\n *     'http://model-server:5000/upload', {requestInit: {method: 'PUT'}}));\n * console.log(saveResult);\n * ```\n *\n * If the default `POST` method is to be used, without any custom parameters\n * such as headers, you can simply pass an HTTP or HTTPS URL to `model.save`:\n *\n * ```js\n * const saveResult = await model.save('http://model-server:5000/upload');\n * ```\n *\n * The following GitHub Gist\n * https://gist.github.com/dsmilkov/1b6046fd6132d7408d5257b0976f7864\n * implements a server based on [flask](https://github.com/pallets/flask) that\n * can receive the request. Upon receiving the model artifacts via the requst,\n * this particular server reconsistutes instances of [Keras\n * Models](https://keras.io/models/model/) in memory.\n *\n *\n * @param path A URL path to the model.\n *   Can be an absolute HTTP path (e.g.,\n *   'http://localhost:8000/model-upload)') or a relative path (e.g.,\n *   './model-upload').\n * @param requestInit Request configurations to be used when sending\n *    HTTP request to server using `fetch`. It can contain fields such as\n *    `method`, `credentials`, `headers`, `mode`, etc. See\n *    https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n *    for more information. `requestInit` must not have a body, because the\n * body will be set by TensorFlow.js. File blobs representing the model\n * topology (filename: 'model.json') and the weights of the model (filename:\n * 'model.weights.bin') will be appended to the body. If `requestInit` has a\n * `body`, an Error will be thrown.\n * @param loadOptions Optional configuration for the loading. It includes the\n *   following fields:\n *   - weightPathPrefix Optional, this specifies the path prefix for weight\n *     files, by default this is calculated from the path param.\n *   - fetchFunc Optional, custom `fetch` function. E.g., in Node.js,\n *     the `fetch` from node-fetch can be used here.\n *   - onProgress Optional, progress callback function, fired periodically\n *     before the load is completed.\n * @returns An instance of `IOHandler`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nfunction http(path, loadOptions) {\n    return new HTTPRequest(path, loadOptions);\n}\n/**\n * Deprecated. Use `tf.io.http`.\n * @param path\n * @param loadOptions\n */\nfunction browserHTTPRequest(path, loadOptions) {\n    return http(path, loadOptions);\n}\n//# sourceMappingURL=http.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/io/http.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export BrowserIndexedDB [provided] [no usage info] [missing usage info prevents renaming] */
/*! export BrowserIndexedDBManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! export browserIndexedDB [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deleteDatabase [provided] [no usage info] [missing usage info prevents renaming] */
/*! export indexedDBRouter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"deleteDatabase\": () => /* binding */ deleteDatabase,\n/* harmony export */   \"BrowserIndexedDB\": () => /* binding */ BrowserIndexedDB,\n/* harmony export */   \"indexedDBRouter\": () => /* binding */ indexedDBRouter,\n/* harmony export */   \"browserIndexedDB\": () => /* binding */ browserIndexedDB,\n/* harmony export */   \"BrowserIndexedDBManager\": () => /* binding */ BrowserIndexedDBManager\n/* harmony export */ });\n/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flags */ \"./node_modules/@tensorflow/tfjs-core/dist/flags.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _io_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./io_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js\");\n/* harmony import */ var _router_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./router_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nconst DATABASE_NAME = 'tensorflowjs';\nconst DATABASE_VERSION = 1;\n// Model data and ModelArtifactsInfo (metadata) are stored in two separate\n// stores for efficient access of the list of stored models and their metadata.\n// 1. The object store for model data: topology, weights and weight manifests.\nconst MODEL_STORE_NAME = 'models_store';\n// 2. The object store for ModelArtifactsInfo, including meta-information such\n//    as the type of topology (JSON vs binary), byte size of the topology, byte\n//    size of the weights, etc.\nconst INFO_STORE_NAME = 'model_info_store';\n/**\n * Delete the entire database for tensorflow.js, including the models store.\n */\nasync function deleteDatabase() {\n    const idbFactory = getIndexedDBFactory();\n    return new Promise((resolve, reject) => {\n        const deleteRequest = idbFactory.deleteDatabase(DATABASE_NAME);\n        deleteRequest.onsuccess = () => resolve();\n        deleteRequest.onerror = error => reject(error);\n    });\n}\nfunction getIndexedDBFactory() {\n    if (!(0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER')) {\n        // TODO(cais): Add more info about what IOHandler subtypes are available.\n        //   Maybe point to a doc page on the web and/or automatically determine\n        //   the available IOHandlers and print them in the error message.\n        throw new Error('Failed to obtain IndexedDB factory because the current environment' +\n            'is not a web browser.');\n    }\n    // tslint:disable-next-line:no-any\n    const theWindow = typeof window === 'undefined' ? self : window;\n    const factory = theWindow.indexedDB || theWindow.mozIndexedDB ||\n        theWindow.webkitIndexedDB || theWindow.msIndexedDB ||\n        theWindow.shimIndexedDB;\n    if (factory == null) {\n        throw new Error('The current browser does not appear to support IndexedDB.');\n    }\n    return factory;\n}\nfunction setUpDatabase(openRequest) {\n    const db = openRequest.result;\n    db.createObjectStore(MODEL_STORE_NAME, { keyPath: 'modelPath' });\n    db.createObjectStore(INFO_STORE_NAME, { keyPath: 'modelPath' });\n}\n/**\n * IOHandler subclass: Browser IndexedDB.\n *\n * See the doc string of `browserIndexedDB` for more details.\n */\nclass BrowserIndexedDB {\n    constructor(modelPath) {\n        this.indexedDB = getIndexedDBFactory();\n        if (modelPath == null || !modelPath) {\n            throw new Error('For IndexedDB, modelPath must not be null, undefined or empty.');\n        }\n        this.modelPath = modelPath;\n    }\n    async save(modelArtifacts) {\n        // TODO(cais): Support saving GraphDef models.\n        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n            throw new Error('BrowserLocalStorage.save() does not support saving model topology ' +\n                'in binary formats yet.');\n        }\n        return this.databaseAction(this.modelPath, modelArtifacts);\n    }\n    async load() {\n        return this.databaseAction(this.modelPath);\n    }\n    /**\n     * Perform database action to put model artifacts into or read model artifacts\n     * from IndexedDB object store.\n     *\n     * Whether the action is put or get depends on whether `modelArtifacts` is\n     * specified. If it is specified, the action will be put; otherwise the action\n     * will be get.\n     *\n     * @param modelPath A unique string path for the model.\n     * @param modelArtifacts If specified, it will be the model artifacts to be\n     *   stored in IndexedDB.\n     * @returns A `Promise` of `SaveResult`, if the action is put, or a `Promise`\n     *   of `ModelArtifacts`, if the action is get.\n     */\n    databaseAction(modelPath, modelArtifacts) {\n        return new Promise((resolve, reject) => {\n            const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n            openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (modelArtifacts == null) {\n                    // Read model out from object store.\n                    const modelTx = db.transaction(MODEL_STORE_NAME, 'readonly');\n                    const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                    const getRequest = modelStore.get(this.modelPath);\n                    getRequest.onsuccess = () => {\n                        if (getRequest.result == null) {\n                            db.close();\n                            return reject(new Error(`Cannot find model with path '${this.modelPath}' ` +\n                                `in IndexedDB.`));\n                        }\n                        else {\n                            resolve(getRequest.result.modelArtifacts);\n                        }\n                    };\n                    getRequest.onerror = error => {\n                        db.close();\n                        return reject(getRequest.error);\n                    };\n                    modelTx.oncomplete = () => db.close();\n                }\n                else {\n                    // Put model into object store.\n                    const modelArtifactsInfo = (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.getModelArtifactsInfoForJSON)(modelArtifacts);\n                    // First, put ModelArtifactsInfo into info store.\n                    const infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n                    let infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                    const putInfoRequest = infoStore.put({ modelPath: this.modelPath, modelArtifactsInfo });\n                    let modelTx;\n                    putInfoRequest.onsuccess = () => {\n                        // Second, put model data into model store.\n                        modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n                        const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                        const putModelRequest = modelStore.put({\n                            modelPath: this.modelPath,\n                            modelArtifacts,\n                            modelArtifactsInfo\n                        });\n                        putModelRequest.onsuccess = () => resolve({ modelArtifactsInfo });\n                        putModelRequest.onerror = error => {\n                            // If the put-model request fails, roll back the info entry as\n                            // well.\n                            infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                            const deleteInfoRequest = infoStore.delete(this.modelPath);\n                            deleteInfoRequest.onsuccess = () => {\n                                db.close();\n                                return reject(putModelRequest.error);\n                            };\n                            deleteInfoRequest.onerror = error => {\n                                db.close();\n                                return reject(putModelRequest.error);\n                            };\n                        };\n                    };\n                    putInfoRequest.onerror = error => {\n                        db.close();\n                        return reject(putInfoRequest.error);\n                    };\n                    infoTx.oncomplete = () => {\n                        if (modelTx == null) {\n                            db.close();\n                        }\n                        else {\n                            modelTx.oncomplete = () => db.close();\n                        }\n                    };\n                }\n            };\n            openRequest.onerror = error => reject(openRequest.error);\n        });\n    }\n}\nBrowserIndexedDB.URL_SCHEME = 'indexeddb://';\nconst indexedDBRouter = (url) => {\n    if (!(0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER')) {\n        return null;\n    }\n    else {\n        if (!Array.isArray(url) && url.startsWith(BrowserIndexedDB.URL_SCHEME)) {\n            return browserIndexedDB(url.slice(BrowserIndexedDB.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\n_router_registry__WEBPACK_IMPORTED_MODULE_2__.IORouterRegistry.registerSaveRouter(indexedDBRouter);\n_router_registry__WEBPACK_IMPORTED_MODULE_2__.IORouterRegistry.registerLoadRouter(indexedDBRouter);\n/**\n * Creates a browser IndexedDB IOHandler for saving and loading models.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save('indexeddb://MyModel'));\n * console.log(saveResult);\n * ```\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `BrowserIndexedDB` (sublcass of `IOHandler`),\n *   which can be used with, e.g., `tf.Model.save`.\n */\nfunction browserIndexedDB(modelPath) {\n    return new BrowserIndexedDB(modelPath);\n}\nfunction maybeStripScheme(key) {\n    return key.startsWith(BrowserIndexedDB.URL_SCHEME) ?\n        key.slice(BrowserIndexedDB.URL_SCHEME.length) :\n        key;\n}\nclass BrowserIndexedDBManager {\n    constructor() {\n        this.indexedDB = getIndexedDBFactory();\n    }\n    async listModels() {\n        return new Promise((resolve, reject) => {\n            const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n            openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                const tx = db.transaction(INFO_STORE_NAME, 'readonly');\n                const store = tx.objectStore(INFO_STORE_NAME);\n                // tslint:disable:max-line-length\n                // Need to cast `store` as `any` here because TypeScript's DOM\n                // library does not have the `getAll()` method even though the\n                // method is supported in the latest version of most mainstream\n                // browsers:\n                // https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getAll\n                // tslint:enable:max-line-length\n                // tslint:disable-next-line:no-any\n                const getAllInfoRequest = store.getAll();\n                getAllInfoRequest.onsuccess = () => {\n                    const out = {};\n                    for (const item of getAllInfoRequest.result) {\n                        out[item.modelPath] = item.modelArtifactsInfo;\n                    }\n                    resolve(out);\n                };\n                getAllInfoRequest.onerror = error => {\n                    db.close();\n                    return reject(getAllInfoRequest.error);\n                };\n                tx.oncomplete = () => db.close();\n            };\n            openRequest.onerror = error => reject(openRequest.error);\n        });\n    }\n    async removeModel(path) {\n        path = maybeStripScheme(path);\n        return new Promise((resolve, reject) => {\n            const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n            openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                const infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n                const infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                const getInfoRequest = infoStore.get(path);\n                let modelTx;\n                getInfoRequest.onsuccess = () => {\n                    if (getInfoRequest.result == null) {\n                        db.close();\n                        return reject(new Error(`Cannot find model with path '${path}' ` +\n                            `in IndexedDB.`));\n                    }\n                    else {\n                        // First, delete the entry in the info store.\n                        const deleteInfoRequest = infoStore.delete(path);\n                        const deleteModelData = () => {\n                            // Second, delete the entry in the model store.\n                            modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n                            const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                            const deleteModelRequest = modelStore.delete(path);\n                            deleteModelRequest.onsuccess = () => resolve(getInfoRequest.result.modelArtifactsInfo);\n                            deleteModelRequest.onerror = error => reject(getInfoRequest.error);\n                        };\n                        // Proceed with deleting model data regardless of whether deletion\n                        // of info data succeeds or not.\n                        deleteInfoRequest.onsuccess = deleteModelData;\n                        deleteInfoRequest.onerror = error => {\n                            deleteModelData();\n                            db.close();\n                            return reject(getInfoRequest.error);\n                        };\n                    }\n                };\n                getInfoRequest.onerror = error => {\n                    db.close();\n                    return reject(getInfoRequest.error);\n                };\n                infoTx.oncomplete = () => {\n                    if (modelTx == null) {\n                        db.close();\n                    }\n                    else {\n                        modelTx.oncomplete = () => db.close();\n                    }\n                };\n            };\n            openRequest.onerror = error => reject(openRequest.error);\n        });\n    }\n}\n//# sourceMappingURL=indexed_db.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/io.js":
/*!**********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/io.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export browserFiles [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/browser_files.js .browserFiles */
/*! export browserHTTPRequest [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/http.js .browserHTTPRequest */
/*! export concatenateArrayBuffers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js .concatenateArrayBuffers */
/*! export copyModel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js .copyModel */
/*! export decodeWeights [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js .decodeWeights */
/*! export encodeWeights [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js .encodeWeights */
/*! export fromMemory [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js .fromMemory */
/*! export getLoadHandlers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js .getLoadHandlers */
/*! export getModelArtifactsInfoForJSON [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js .getModelArtifactsInfoForJSON */
/*! export getSaveHandlers [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js .getSaveHandlers */
/*! export http [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/http.js .http */
/*! export isHTTPScheme [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/http.js .isHTTPScheme */
/*! export listModels [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js .listModels */
/*! export loadWeights [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js .loadWeights */
/*! export moveModel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js .moveModel */
/*! export registerLoadRouter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js .registerLoadRouter */
/*! export registerSaveRouter [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js .registerSaveRouter */
/*! export removeModel [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js .removeModel */
/*! export weightsLoaderFactory [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js .weightsLoaderFactory */
/*! export withSaveHandler [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js .withSaveHandler */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"copyModel\": () => /* reexport safe */ _model_management__WEBPACK_IMPORTED_MODULE_8__.copyModel,\n/* harmony export */   \"listModels\": () => /* reexport safe */ _model_management__WEBPACK_IMPORTED_MODULE_8__.listModels,\n/* harmony export */   \"moveModel\": () => /* reexport safe */ _model_management__WEBPACK_IMPORTED_MODULE_8__.moveModel,\n/* harmony export */   \"removeModel\": () => /* reexport safe */ _model_management__WEBPACK_IMPORTED_MODULE_8__.removeModel,\n/* harmony export */   \"browserFiles\": () => /* reexport safe */ _browser_files__WEBPACK_IMPORTED_MODULE_2__.browserFiles,\n/* harmony export */   \"browserHTTPRequest\": () => /* reexport safe */ _http__WEBPACK_IMPORTED_MODULE_3__.browserHTTPRequest,\n/* harmony export */   \"concatenateArrayBuffers\": () => /* reexport safe */ _io_utils__WEBPACK_IMPORTED_MODULE_4__.concatenateArrayBuffers,\n/* harmony export */   \"decodeWeights\": () => /* reexport safe */ _io_utils__WEBPACK_IMPORTED_MODULE_4__.decodeWeights,\n/* harmony export */   \"encodeWeights\": () => /* reexport safe */ _io_utils__WEBPACK_IMPORTED_MODULE_4__.encodeWeights,\n/* harmony export */   \"fromMemory\": () => /* reexport safe */ _passthrough__WEBPACK_IMPORTED_MODULE_5__.fromMemory,\n/* harmony export */   \"getLoadHandlers\": () => /* reexport safe */ _router_registry__WEBPACK_IMPORTED_MODULE_6__.getLoadHandlers,\n/* harmony export */   \"getModelArtifactsInfoForJSON\": () => /* reexport safe */ _io_utils__WEBPACK_IMPORTED_MODULE_4__.getModelArtifactsInfoForJSON,\n/* harmony export */   \"getSaveHandlers\": () => /* reexport safe */ _router_registry__WEBPACK_IMPORTED_MODULE_6__.getSaveHandlers,\n/* harmony export */   \"http\": () => /* reexport safe */ _http__WEBPACK_IMPORTED_MODULE_3__.http,\n/* harmony export */   \"isHTTPScheme\": () => /* reexport safe */ _http__WEBPACK_IMPORTED_MODULE_3__.isHTTPScheme,\n/* harmony export */   \"loadWeights\": () => /* reexport safe */ _weights_loader__WEBPACK_IMPORTED_MODULE_7__.loadWeights,\n/* harmony export */   \"registerLoadRouter\": () => /* reexport safe */ _router_registry__WEBPACK_IMPORTED_MODULE_6__.registerLoadRouter,\n/* harmony export */   \"registerSaveRouter\": () => /* reexport safe */ _router_registry__WEBPACK_IMPORTED_MODULE_6__.registerSaveRouter,\n/* harmony export */   \"weightsLoaderFactory\": () => /* reexport safe */ _weights_loader__WEBPACK_IMPORTED_MODULE_7__.weightsLoaderFactory,\n/* harmony export */   \"withSaveHandler\": () => /* reexport safe */ _passthrough__WEBPACK_IMPORTED_MODULE_5__.withSaveHandler\n/* harmony export */ });\n/* harmony import */ var _indexed_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./indexed_db */ \"./node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js\");\n/* harmony import */ var _local_storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./local_storage */ \"./node_modules/@tensorflow/tfjs-core/dist/io/local_storage.js\");\n/* harmony import */ var _browser_files__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./browser_files */ \"./node_modules/@tensorflow/tfjs-core/dist/io/browser_files.js\");\n/* harmony import */ var _http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./http */ \"./node_modules/@tensorflow/tfjs-core/dist/io/http.js\");\n/* harmony import */ var _io_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./io_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js\");\n/* harmony import */ var _passthrough__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./passthrough */ \"./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js\");\n/* harmony import */ var _router_registry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./router_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js\");\n/* harmony import */ var _weights_loader__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./weights_loader */ \"./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js\");\n/* harmony import */ var _model_management__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./model_management */ \"./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Importing local_storage and indexed_db is necessary for the routers to be\n// registered.\n;\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=io.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/io/io.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export arrayBufferToBase64String [provided] [no usage info] [missing usage info prevents renaming] */
/*! export base64StringToArrayBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export basename [provided] [no usage info] [missing usage info prevents renaming] */
/*! export concatenateArrayBuffers [provided] [no usage info] [missing usage info prevents renaming] */
/*! export concatenateTypedArrays [provided] [no usage info] [missing usage info prevents renaming] */
/*! export decodeWeights [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeWeights [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getFloat16Decoder [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getModelArtifactsInfoForJSON [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stringByteLength [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"encodeWeights\": () => /* binding */ encodeWeights,\n/* harmony export */   \"decodeWeights\": () => /* binding */ decodeWeights,\n/* harmony export */   \"concatenateTypedArrays\": () => /* binding */ concatenateTypedArrays,\n/* harmony export */   \"stringByteLength\": () => /* binding */ stringByteLength,\n/* harmony export */   \"arrayBufferToBase64String\": () => /* binding */ arrayBufferToBase64String,\n/* harmony export */   \"base64StringToArrayBuffer\": () => /* binding */ base64StringToArrayBuffer,\n/* harmony export */   \"concatenateArrayBuffers\": () => /* binding */ concatenateArrayBuffers,\n/* harmony export */   \"basename\": () => /* binding */ basename,\n/* harmony export */   \"getModelArtifactsInfoForJSON\": () => /* binding */ getModelArtifactsInfoForJSON,\n/* harmony export */   \"getFloat16Decoder\": () => /* binding */ getFloat16Decoder\n/* harmony export */ });\n/* harmony import */ var _ops_complex__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/complex */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js\");\n/* harmony import */ var _ops_tensor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ops/tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"./node_modules/@tensorflow/tfjs-core/dist/io/types.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/** Number of bytes reserved for the length of the string. (32bit integer). */\nconst NUM_BYTES_STRING_LENGTH = 4;\n/**\n * Encode a map from names to weight values as an ArrayBuffer, along with an\n * `Array` of `WeightsManifestEntry` as specification of the encoded weights.\n *\n * This function does not perform sharding.\n *\n * This function is the reverse of `decodeWeights`.\n *\n * @param tensors A map (\"dict\") from names to tensors.\n * @param group Group to which the weights belong (optional).\n * @returns A `Promise` of\n *   - A flat `ArrayBuffer` with all the binary values of the `Tensor`s\n *     concatenated.\n *   - An `Array` of `WeightManifestEntry`s, carrying information including\n *     tensor names, `dtype`s and shapes.\n * @throws Error: on unsupported tensor `dtype`.\n */\nasync function encodeWeights(tensors, group) {\n    // TODO(adarob, cais): Support quantization.\n    const specs = [];\n    const dataPromises = [];\n    const names = Array.isArray(tensors) ?\n        tensors.map(tensor => tensor.name) :\n        Object.keys(tensors);\n    for (let i = 0; i < names.length; ++i) {\n        const name = names[i];\n        const t = Array.isArray(tensors) ? tensors[i].tensor : tensors[name];\n        if (t.dtype !== 'float32' && t.dtype !== 'int32' && t.dtype !== 'bool' &&\n            t.dtype !== 'string' && t.dtype !== 'complex64') {\n            throw new Error(`Unsupported dtype in weight '${name}': ${t.dtype}`);\n        }\n        const spec = { name, shape: t.shape, dtype: t.dtype };\n        if (t.dtype === 'string') {\n            const utf8bytes = new Promise(async (resolve) => {\n                const vals = await t.bytes();\n                const totalNumBytes = vals.reduce((p, c) => p + c.length, 0) +\n                    NUM_BYTES_STRING_LENGTH * vals.length;\n                const bytes = new Uint8Array(totalNumBytes);\n                let offset = 0;\n                for (let i = 0; i < vals.length; i++) {\n                    const val = vals[i];\n                    const bytesOfLength = new Uint8Array(new Uint32Array([val.length]).buffer);\n                    bytes.set(bytesOfLength, offset);\n                    offset += NUM_BYTES_STRING_LENGTH;\n                    bytes.set(val, offset);\n                    offset += val.length;\n                }\n                resolve(bytes);\n            });\n            dataPromises.push(utf8bytes);\n        }\n        else {\n            dataPromises.push(t.data());\n        }\n        if (group != null) {\n            spec.group = group;\n        }\n        specs.push(spec);\n    }\n    const tensorValues = await Promise.all(dataPromises);\n    return { data: concatenateTypedArrays(tensorValues), specs };\n}\n/**\n * Decode flat ArrayBuffer as weights.\n *\n * This function does not handle sharding.\n *\n * This function is the reverse of `encodeWeights`.\n *\n * @param buffer A flat ArrayBuffer carrying the binary values of the tensors\n *   concatenated in the order specified in `specs`.\n * @param specs Specifications of the names, dtypes and shapes of the tensors\n *   whose value are encoded by `buffer`.\n * @return A map from tensor name to tensor value, with the names corresponding\n *   to names in `specs`.\n * @throws Error, if any of the tensors has unsupported dtype.\n */\nfunction decodeWeights(buffer, specs) {\n    // TODO(adarob, cais): Support quantization.\n    const out = {};\n    let float16Decode;\n    let offset = 0;\n    for (const spec of specs) {\n        const name = spec.name;\n        const dtype = spec.dtype;\n        const shape = spec.shape;\n        const size = (0,_util__WEBPACK_IMPORTED_MODULE_1__.sizeFromShape)(shape);\n        let values;\n        if ('quantization' in spec) {\n            const quantization = spec.quantization;\n            if (quantization.dtype === 'uint8' || quantization.dtype === 'uint16') {\n                if (!('min' in quantization && 'scale' in quantization)) {\n                    throw new Error(`Weight ${spec.name} with quantization ${quantization.dtype} ` +\n                        `doesn't have corresponding metadata min and scale.`);\n                }\n            }\n            else if (quantization.dtype === 'float16') {\n                if (dtype !== 'float32') {\n                    throw new Error(`Weight ${spec.name} is quantized with ${quantization.dtype} ` +\n                        `which only supports weights of type float32 not ${dtype}.`);\n                }\n            }\n            else {\n                throw new Error(`Weight ${spec.name} has unknown ` +\n                    `quantization dtype ${quantization.dtype}. ` +\n                    `Supported quantization dtypes are: ` +\n                    `'uint8', 'uint16', and 'float16'.`);\n            }\n            const quantizationSizeFactor = _types__WEBPACK_IMPORTED_MODULE_0__.DTYPE_VALUE_SIZE_MAP[quantization.dtype];\n            const byteBuffer = buffer.slice(offset, offset + size * quantizationSizeFactor);\n            const quantizedArray = (quantization.dtype === 'uint8') ?\n                new Uint8Array(byteBuffer) :\n                new Uint16Array(byteBuffer);\n            if (dtype === 'float32') {\n                if (quantization.dtype === 'uint8' || quantization.dtype === 'uint16') {\n                    values = new Float32Array(quantizedArray.length);\n                    for (let i = 0; i < quantizedArray.length; i++) {\n                        const v = quantizedArray[i];\n                        values[i] = v * quantization.scale + quantization.min;\n                    }\n                }\n                else if (quantization.dtype === 'float16') {\n                    if (float16Decode === undefined) {\n                        float16Decode = getFloat16Decoder();\n                    }\n                    values = float16Decode(quantizedArray);\n                }\n                else {\n                    throw new Error(`Unsupported quantization type ${quantization.dtype} ` +\n                        `for weight type float32.`);\n                }\n            }\n            else if (dtype === 'int32') {\n                if (quantization.dtype !== 'uint8' && quantization.dtype !== 'uint16') {\n                    throw new Error(`Unsupported quantization type ${quantization.dtype} ` +\n                        `for weight type int32.`);\n                }\n                values = new Int32Array(quantizedArray.length);\n                for (let i = 0; i < quantizedArray.length; i++) {\n                    const v = quantizedArray[i];\n                    values[i] = Math.round(v * quantization.scale + quantization.min);\n                }\n            }\n            else {\n                throw new Error(`Unsupported dtype in weight '${name}': ${dtype}`);\n            }\n            offset += size * quantizationSizeFactor;\n        }\n        else if (dtype === 'string') {\n            const size = (0,_util__WEBPACK_IMPORTED_MODULE_1__.sizeFromShape)(spec.shape);\n            values = [];\n            for (let i = 0; i < size; i++) {\n                const byteLength = new Uint32Array(buffer.slice(offset, offset + NUM_BYTES_STRING_LENGTH))[0];\n                offset += NUM_BYTES_STRING_LENGTH;\n                const bytes = new Uint8Array(buffer.slice(offset, offset + byteLength));\n                values.push(bytes);\n                offset += byteLength;\n            }\n        }\n        else {\n            const dtypeFactor = _types__WEBPACK_IMPORTED_MODULE_0__.DTYPE_VALUE_SIZE_MAP[dtype];\n            const byteBuffer = buffer.slice(offset, offset + size * dtypeFactor);\n            if (dtype === 'float32') {\n                values = new Float32Array(byteBuffer);\n            }\n            else if (dtype === 'int32') {\n                values = new Int32Array(byteBuffer);\n            }\n            else if (dtype === 'bool') {\n                values = new Uint8Array(byteBuffer);\n            }\n            else if (dtype === 'complex64') {\n                values = new Float32Array(byteBuffer);\n                const real = new Float32Array(values.length / 2);\n                const image = new Float32Array(values.length / 2);\n                for (let i = 0; i < real.length; i++) {\n                    real[i] = values[i * 2];\n                    image[i] = values[i * 2 + 1];\n                }\n                const realTensor = (0,_ops_tensor__WEBPACK_IMPORTED_MODULE_2__.tensor)(real, shape, 'float32');\n                const imageTensor = (0,_ops_tensor__WEBPACK_IMPORTED_MODULE_2__.tensor)(image, shape, 'float32');\n                out[name] = (0,_ops_complex__WEBPACK_IMPORTED_MODULE_3__.complex)(realTensor, imageTensor);\n                realTensor.dispose();\n                imageTensor.dispose();\n            }\n            else {\n                throw new Error(`Unsupported dtype in weight '${name}': ${dtype}`);\n            }\n            offset += size * dtypeFactor;\n        }\n        if (dtype !== 'complex64') {\n            out[name] = (0,_ops_tensor__WEBPACK_IMPORTED_MODULE_2__.tensor)(values, shape, dtype);\n        }\n    }\n    return out;\n}\n/**\n * Concatenate TypedArrays into an ArrayBuffer.\n */\nfunction concatenateTypedArrays(xs) {\n    // TODO(adarob, cais): Support quantization.\n    if (xs === null) {\n        throw new Error(`Invalid input value: ${JSON.stringify(xs)}`);\n    }\n    let totalByteLength = 0;\n    // `normalizedXs` is here for this reason: a `TypedArray`'s `buffer'\n    // can have a different byte length from that of the `TypedArray` itself,\n    // for example, when the `TypedArray` is created from an offset in an\n    // `ArrayBuffer`. `normliazedXs` holds `TypedArray`s whose `buffer`s match\n    // the `TypedArray` in byte length. If an element of `xs` does not show\n    // this property, a new `TypedArray` that satisfy this property will be\n    // constructed and pushed into `normalizedXs`.\n    const normalizedXs = [];\n    xs.forEach((x) => {\n        totalByteLength += x.byteLength;\n        // tslint:disable:no-any\n        normalizedXs.push(x.byteLength === x.buffer.byteLength ? x :\n            new x.constructor(x));\n        if (!(x instanceof Float32Array || x instanceof Int32Array ||\n            x instanceof Uint8Array)) {\n            throw new Error(`Unsupported TypedArray subtype: ${x.constructor.name}`);\n        }\n        // tslint:enable:no-any\n    });\n    const y = new Uint8Array(totalByteLength);\n    let offset = 0;\n    normalizedXs.forEach((x) => {\n        y.set(new Uint8Array(x.buffer), offset);\n        offset += x.byteLength;\n    });\n    return y.buffer;\n}\n// Use Buffer on Node.js instead of Blob/atob/btoa\nconst useNodeBuffer = typeof Buffer !== 'undefined' &&\n    (typeof Blob === 'undefined' || typeof atob === 'undefined' ||\n        typeof btoa === 'undefined');\n/**\n * Calculate the byte length of a JavaScript string.\n *\n * Note that a JavaScript string can contain wide characters, therefore the\n * length of the string is not necessarily equal to the byte length.\n *\n * @param str Input string.\n * @returns Byte length.\n */\nfunction stringByteLength(str) {\n    if (useNodeBuffer) {\n        return Buffer.byteLength(str);\n    }\n    return new Blob([str]).size;\n}\n/**\n * Encode an ArrayBuffer as a base64 encoded string.\n *\n * @param buffer `ArrayBuffer` to be converted.\n * @returns A string that base64-encodes `buffer`.\n */\nfunction arrayBufferToBase64String(buffer) {\n    if (useNodeBuffer) {\n        return Buffer.from(buffer).toString('base64');\n    }\n    const buf = new Uint8Array(buffer);\n    let s = '';\n    for (let i = 0, l = buf.length; i < l; i++) {\n        s += String.fromCharCode(buf[i]);\n    }\n    return btoa(s);\n}\n/**\n * Decode a base64 string as an ArrayBuffer.\n *\n * @param str Base64 string.\n * @returns Decoded `ArrayBuffer`.\n */\nfunction base64StringToArrayBuffer(str) {\n    if (useNodeBuffer) {\n        const buf = Buffer.from(str, 'base64');\n        return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n    }\n    const s = atob(str);\n    const buffer = new Uint8Array(s.length);\n    for (let i = 0; i < s.length; ++i) {\n        buffer.set([s.charCodeAt(i)], i);\n    }\n    return buffer.buffer;\n}\n/**\n * Concatenate a number of ArrayBuffers into one.\n *\n * @param buffers A number of array buffers to concatenate.\n * @returns Result of concatenating `buffers` in order.\n */\nfunction concatenateArrayBuffers(buffers) {\n    if (buffers.length === 1) {\n        return buffers[0];\n    }\n    let totalByteLength = 0;\n    buffers.forEach((buffer) => {\n        totalByteLength += buffer.byteLength;\n    });\n    const temp = new Uint8Array(totalByteLength);\n    let offset = 0;\n    buffers.forEach((buffer) => {\n        temp.set(new Uint8Array(buffer), offset);\n        offset += buffer.byteLength;\n    });\n    return temp.buffer;\n}\n/**\n * Get the basename of a path.\n *\n * Behaves in a way analogous to Linux's basename command.\n *\n * @param path\n */\nfunction basename(path) {\n    const SEPARATOR = '/';\n    path = path.trim();\n    while (path.endsWith(SEPARATOR)) {\n        path = path.slice(0, path.length - 1);\n    }\n    const items = path.split(SEPARATOR);\n    return items[items.length - 1];\n}\n/**\n * Populate ModelArtifactsInfo fields for a model with JSON topology.\n * @param modelArtifacts\n * @returns A ModelArtifactsInfo object.\n */\nfunction getModelArtifactsInfoForJSON(modelArtifacts) {\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n        throw new Error('Expected JSON model topology, received ArrayBuffer.');\n    }\n    return {\n        dateSaved: new Date(),\n        modelTopologyType: 'JSON',\n        modelTopologyBytes: modelArtifacts.modelTopology == null ?\n            0 :\n            stringByteLength(JSON.stringify(modelArtifacts.modelTopology)),\n        weightSpecsBytes: modelArtifacts.weightSpecs == null ?\n            0 :\n            stringByteLength(JSON.stringify(modelArtifacts.weightSpecs)),\n        weightDataBytes: modelArtifacts.weightData == null ?\n            0 :\n            modelArtifacts.weightData.byteLength,\n    };\n}\n/**\n * Computes mantisa table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 2048 mantissa lookup values.\n */\nfunction computeFloat16MantisaTable() {\n    const convertMantissa = (i) => {\n        let m = i << 13;\n        let e = 0;\n        while ((m & 0x00800000) === 0) {\n            e -= 0x00800000;\n            m <<= 1;\n        }\n        m &= ~0x00800000;\n        e += 0x38800000;\n        return m | e;\n    };\n    const mantisaTable = new Uint32Array(2048);\n    mantisaTable[0] = 0;\n    for (let i = 1; i < 1024; i++) {\n        mantisaTable[i] = convertMantissa(i);\n    }\n    for (let i = 1024; i < 2048; i++) {\n        mantisaTable[i] = 0x38000000 + ((i - 1024) << 13);\n    }\n    return mantisaTable;\n}\n/**\n * Computes exponent table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 64 exponent lookup values.\n */\nfunction computeFloat16ExponentTable() {\n    const exponentTable = new Uint32Array(64);\n    exponentTable[0] = 0;\n    exponentTable[31] = 0x47800000;\n    exponentTable[32] = 0x80000000;\n    exponentTable[63] = 0xc7800000;\n    for (let i = 1; i < 31; i++) {\n        exponentTable[i] = i << 23;\n    }\n    for (let i = 33; i < 63; i++) {\n        exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n    }\n    return exponentTable;\n}\n/**\n * Computes offset table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 6d offset values.\n */\nfunction computeFloat16OffsetTable() {\n    const offsetTable = new Uint32Array(64);\n    for (let i = 0; i < 64; i++) {\n        offsetTable[i] = 1024;\n    }\n    offsetTable[0] = offsetTable[32] = 0;\n    return offsetTable;\n}\n/**\n * Retrieve a Float16 decoder which will decode a ByteArray of Float16 values\n * to a Float32Array.\n *\n * @returns Function (buffer: Uint16Array) => Float32Array which decodes\n *          the Uint16Array of Float16 bytes to a Float32Array.\n */\nfunction getFloat16Decoder() {\n    // Algorithm is based off of\n    // http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n    // Cache lookup tables\n    const mantisaTable = computeFloat16MantisaTable();\n    const exponentTable = computeFloat16ExponentTable();\n    const offsetTable = computeFloat16OffsetTable();\n    return (quantizedArray) => {\n        const buffer = new ArrayBuffer(4 * quantizedArray.length);\n        const bufferUint32View = new Uint32Array(buffer);\n        for (let index = 0; index < quantizedArray.length; index++) {\n            const float16Bits = quantizedArray[index];\n            const float32Bits = mantisaTable[offsetTable[float16Bits >> 10] + (float16Bits & 0x3ff)] +\n                exponentTable[float16Bits >> 10];\n            bufferUint32View[index] = float32Bits;\n        }\n        return new Float32Array(buffer);\n    };\n}\n//# sourceMappingURL=io_utils.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/local_storage.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/local_storage.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export BrowserLocalStorage [provided] [no usage info] [missing usage info prevents renaming] */
/*! export BrowserLocalStorageManager [provided] [no usage info] [missing usage info prevents renaming] */
/*! export browserLocalStorage [provided] [no usage info] [missing usage info prevents renaming] */
/*! export localStorageRouter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export purgeLocalStorageArtifacts [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"purgeLocalStorageArtifacts\": () => /* binding */ purgeLocalStorageArtifacts,\n/* harmony export */   \"BrowserLocalStorage\": () => /* binding */ BrowserLocalStorage,\n/* harmony export */   \"localStorageRouter\": () => /* binding */ localStorageRouter,\n/* harmony export */   \"browserLocalStorage\": () => /* binding */ browserLocalStorage,\n/* harmony export */   \"BrowserLocalStorageManager\": () => /* binding */ BrowserLocalStorageManager\n/* harmony export */ });\n/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flags */ \"./node_modules/@tensorflow/tfjs-core/dist/flags.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _io_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./io_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js\");\n/* harmony import */ var _router_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./router_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\nconst PATH_SEPARATOR = '/';\nconst PATH_PREFIX = 'tensorflowjs_models';\nconst INFO_SUFFIX = 'info';\nconst MODEL_TOPOLOGY_SUFFIX = 'model_topology';\nconst WEIGHT_SPECS_SUFFIX = 'weight_specs';\nconst WEIGHT_DATA_SUFFIX = 'weight_data';\nconst MODEL_METADATA_SUFFIX = 'model_metadata';\n/**\n * Purge all tensorflow.js-saved model artifacts from local storage.\n *\n * @returns Paths of the models purged.\n */\nfunction purgeLocalStorageArtifacts() {\n    if (!(0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER') || typeof window === 'undefined' ||\n        typeof window.localStorage === 'undefined') {\n        throw new Error('purgeLocalStorageModels() cannot proceed because local storage is ' +\n            'unavailable in the current environment.');\n    }\n    const LS = window.localStorage;\n    const purgedModelPaths = [];\n    for (let i = 0; i < LS.length; ++i) {\n        const key = LS.key(i);\n        const prefix = PATH_PREFIX + PATH_SEPARATOR;\n        if (key.startsWith(prefix) && key.length > prefix.length) {\n            LS.removeItem(key);\n            const modelName = getModelPathFromKey(key);\n            if (purgedModelPaths.indexOf(modelName) === -1) {\n                purgedModelPaths.push(modelName);\n            }\n        }\n    }\n    return purgedModelPaths;\n}\nfunction getModelKeys(path) {\n    return {\n        info: [PATH_PREFIX, path, INFO_SUFFIX].join(PATH_SEPARATOR),\n        topology: [PATH_PREFIX, path, MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),\n        weightSpecs: [PATH_PREFIX, path, WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),\n        weightData: [PATH_PREFIX, path, WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),\n        modelMetadata: [PATH_PREFIX, path, MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)\n    };\n}\n/**\n * Get model path from a local-storage key.\n *\n * E.g., 'tensorflowjs_models/my/model/1/info' --> 'my/model/1'\n *\n * @param key\n */\nfunction getModelPathFromKey(key) {\n    const items = key.split(PATH_SEPARATOR);\n    if (items.length < 3) {\n        throw new Error(`Invalid key format: ${key}`);\n    }\n    return items.slice(1, items.length - 1).join(PATH_SEPARATOR);\n}\nfunction maybeStripScheme(key) {\n    return key.startsWith(BrowserLocalStorage.URL_SCHEME) ?\n        key.slice(BrowserLocalStorage.URL_SCHEME.length) :\n        key;\n}\n/**\n * IOHandler subclass: Browser Local Storage.\n *\n * See the doc string to `browserLocalStorage` for more details.\n */\nclass BrowserLocalStorage {\n    constructor(modelPath) {\n        if (!(0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER') || typeof window === 'undefined' ||\n            typeof window.localStorage === 'undefined') {\n            // TODO(cais): Add more info about what IOHandler subtypes are\n            // available.\n            //   Maybe point to a doc page on the web and/or automatically determine\n            //   the available IOHandlers and print them in the error message.\n            throw new Error('The current environment does not support local storage.');\n        }\n        this.LS = window.localStorage;\n        if (modelPath == null || !modelPath) {\n            throw new Error('For local storage, modelPath must not be null, undefined or empty.');\n        }\n        this.modelPath = modelPath;\n        this.keys = getModelKeys(this.modelPath);\n    }\n    /**\n     * Save model artifacts to browser local storage.\n     *\n     * See the documentation to `browserLocalStorage` for details on the saved\n     * artifacts.\n     *\n     * @param modelArtifacts The model artifacts to be stored.\n     * @returns An instance of SaveResult.\n     */\n    async save(modelArtifacts) {\n        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n            throw new Error('BrowserLocalStorage.save() does not support saving model topology ' +\n                'in binary formats yet.');\n        }\n        else {\n            const topology = JSON.stringify(modelArtifacts.modelTopology);\n            const weightSpecs = JSON.stringify(modelArtifacts.weightSpecs);\n            const modelArtifactsInfo = (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.getModelArtifactsInfoForJSON)(modelArtifacts);\n            try {\n                this.LS.setItem(this.keys.info, JSON.stringify(modelArtifactsInfo));\n                this.LS.setItem(this.keys.topology, topology);\n                this.LS.setItem(this.keys.weightSpecs, weightSpecs);\n                this.LS.setItem(this.keys.weightData, (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.arrayBufferToBase64String)(modelArtifacts.weightData));\n                const result = {\n                    format: modelArtifacts.format,\n                    generatedBy: modelArtifacts.generatedBy,\n                    convertedBy: modelArtifacts.convertedBy\n                };\n                if (modelArtifacts.signature != null) {\n                    result.signature = modelArtifacts.signature;\n                }\n                if (modelArtifacts.userDefinedMetadata != null) {\n                    result.userDefinedMetadata = modelArtifacts.userDefinedMetadata;\n                }\n                if (modelArtifacts.modelInitializer != null) {\n                    result.modelInitializer = modelArtifacts.modelInitializer;\n                }\n                this.LS.setItem(this.keys.modelMetadata, JSON.stringify(result));\n                return { modelArtifactsInfo };\n            }\n            catch (err) {\n                // If saving failed, clean up all items saved so far.\n                this.LS.removeItem(this.keys.info);\n                this.LS.removeItem(this.keys.topology);\n                this.LS.removeItem(this.keys.weightSpecs);\n                this.LS.removeItem(this.keys.weightData);\n                this.LS.removeItem(this.keys.modelMetadata);\n                throw new Error(`Failed to save model '${this.modelPath}' to local storage: ` +\n                    `size quota being exceeded is a possible cause of this failure: ` +\n                    `modelTopologyBytes=${modelArtifactsInfo.modelTopologyBytes}, ` +\n                    `weightSpecsBytes=${modelArtifactsInfo.weightSpecsBytes}, ` +\n                    `weightDataBytes=${modelArtifactsInfo.weightDataBytes}.`);\n            }\n        }\n    }\n    /**\n     * Load a model from local storage.\n     *\n     * See the documentation to `browserLocalStorage` for details on the saved\n     * artifacts.\n     *\n     * @returns The loaded model (if loading succeeds).\n     */\n    async load() {\n        const info = JSON.parse(this.LS.getItem(this.keys.info));\n        if (info == null) {\n            throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);\n        }\n        if (info.modelTopologyType !== 'JSON') {\n            throw new Error('BrowserLocalStorage does not support loading non-JSON model ' +\n                'topology yet.');\n        }\n        const out = {};\n        // Load topology.\n        const topology = JSON.parse(this.LS.getItem(this.keys.topology));\n        if (topology == null) {\n            throw new Error(`In local storage, the topology of model '${this.modelPath}' ` +\n                `is missing.`);\n        }\n        out.modelTopology = topology;\n        // Load weight specs.\n        const weightSpecs = JSON.parse(this.LS.getItem(this.keys.weightSpecs));\n        if (weightSpecs == null) {\n            throw new Error(`In local storage, the weight specs of model '${this.modelPath}' ` +\n                `are missing.`);\n        }\n        out.weightSpecs = weightSpecs;\n        // Load meta-data fields.\n        const metadataString = this.LS.getItem(this.keys.modelMetadata);\n        if (metadataString != null) {\n            const metadata = JSON.parse(metadataString);\n            out.format = metadata['format'];\n            out.generatedBy = metadata['generatedBy'];\n            out.convertedBy = metadata['convertedBy'];\n            if (metadata['signature'] != null) {\n                out.signature = metadata['signature'];\n            }\n            if (metadata['userDefinedMetadata'] != null) {\n                out.userDefinedMetadata = metadata['userDefinedMetadata'];\n            }\n            if (metadata['modelInitializer'] != null) {\n                out.modelInitializer = metadata['modelInitializer'];\n            }\n        }\n        // Load weight data.\n        const weightDataBase64 = this.LS.getItem(this.keys.weightData);\n        if (weightDataBase64 == null) {\n            throw new Error(`In local storage, the binary weight values of model ` +\n                `'${this.modelPath}' are missing.`);\n        }\n        out.weightData = (0,_io_utils__WEBPACK_IMPORTED_MODULE_1__.base64StringToArrayBuffer)(weightDataBase64);\n        return out;\n    }\n}\nBrowserLocalStorage.URL_SCHEME = 'localstorage://';\nconst localStorageRouter = (url) => {\n    if (!(0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER')) {\n        return null;\n    }\n    else {\n        if (!Array.isArray(url) && url.startsWith(BrowserLocalStorage.URL_SCHEME)) {\n            return browserLocalStorage(url.slice(BrowserLocalStorage.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\n_router_registry__WEBPACK_IMPORTED_MODULE_2__.IORouterRegistry.registerSaveRouter(localStorageRouter);\n_router_registry__WEBPACK_IMPORTED_MODULE_2__.IORouterRegistry.registerLoadRouter(localStorageRouter);\n/**\n * Factory function for local storage IOHandler.\n *\n * This `IOHandler` supports both `save` and `load`.\n *\n * For each model's saved artifacts, four items are saved to local storage.\n *   - `${PATH_SEPARATOR}/${modelPath}/info`: Contains meta-info about the\n *     model, such as date saved, type of the topology, size in bytes, etc.\n *   - `${PATH_SEPARATOR}/${modelPath}/topology`: Model topology. For Keras-\n *     style models, this is a stringized JSON.\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_specs`: Weight specs of the\n *     model, can be used to decode the saved binary weight values (see\n *     item below).\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_data`: Concatenated binary\n *     weight values, stored as a base64-encoded string.\n *\n * Saving may throw an `Error` if the total size of the artifacts exceed the\n * browser-specific quota.\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `IOHandler`, which can be used with, e.g.,\n *   `tf.Model.save`.\n */\nfunction browserLocalStorage(modelPath) {\n    return new BrowserLocalStorage(modelPath);\n}\nclass BrowserLocalStorageManager {\n    constructor() {\n        (0,_util__WEBPACK_IMPORTED_MODULE_4__.assert)((0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('IS_BROWSER'), () => 'Current environment is not a web browser');\n        (0,_util__WEBPACK_IMPORTED_MODULE_4__.assert)(typeof window === 'undefined' ||\n            typeof window.localStorage !== 'undefined', () => 'Current browser does not appear to support localStorage');\n        this.LS = window.localStorage;\n    }\n    async listModels() {\n        const out = {};\n        const prefix = PATH_PREFIX + PATH_SEPARATOR;\n        const suffix = PATH_SEPARATOR + INFO_SUFFIX;\n        for (let i = 0; i < this.LS.length; ++i) {\n            const key = this.LS.key(i);\n            if (key.startsWith(prefix) && key.endsWith(suffix)) {\n                const modelPath = getModelPathFromKey(key);\n                out[modelPath] = JSON.parse(this.LS.getItem(key));\n            }\n        }\n        return out;\n    }\n    async removeModel(path) {\n        path = maybeStripScheme(path);\n        const keys = getModelKeys(path);\n        if (this.LS.getItem(keys.info) == null) {\n            throw new Error(`Cannot find model at path '${path}'`);\n        }\n        const info = JSON.parse(this.LS.getItem(keys.info));\n        this.LS.removeItem(keys.info);\n        this.LS.removeItem(keys.topology);\n        this.LS.removeItem(keys.weightSpecs);\n        this.LS.removeItem(keys.weightData);\n        return info;\n    }\n}\n//# sourceMappingURL=local_storage.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/io/local_storage.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export ModelStoreManagerRegistry [provided] [no usage info] [missing usage info prevents renaming] */
/*! export copyModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export listModels [provided] [no usage info] [missing usage info prevents renaming] */
/*! export moveModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export removeModel [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ModelStoreManagerRegistry\": () => /* binding */ ModelStoreManagerRegistry,\n/* harmony export */   \"moveModel\": () => /* binding */ moveModel,\n/* harmony export */   \"copyModel\": () => /* binding */ copyModel,\n/* harmony export */   \"removeModel\": () => /* binding */ removeModel,\n/* harmony export */   \"listModels\": () => /* binding */ listModels\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _router_registry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./router_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Classes and functions for model management across multiple storage mediums.\n *\n * Supported client actions:\n * - Listing models on all registered storage mediums.\n * - Remove model by URL from any registered storage mediums, by using URL\n *   string.\n * - Moving or copying model from one path to another in the same medium or from\n *   one medium to another, by using URL strings.\n */\n;\n\nconst URL_SCHEME_SUFFIX = '://';\nclass ModelStoreManagerRegistry {\n    constructor() {\n        this.managers = {};\n    }\n    static getInstance() {\n        if (ModelStoreManagerRegistry.instance == null) {\n            ModelStoreManagerRegistry.instance = new ModelStoreManagerRegistry();\n        }\n        return ModelStoreManagerRegistry.instance;\n    }\n    /**\n     * Register a save-handler router.\n     *\n     * @param saveRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `save` method defined or `null`.\n     */\n    static registerManager(scheme, manager) {\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(scheme != null, () => 'scheme must not be undefined or null.');\n        if (scheme.endsWith(URL_SCHEME_SUFFIX)) {\n            scheme = scheme.slice(0, scheme.indexOf(URL_SCHEME_SUFFIX));\n        }\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(scheme.length > 0, () => 'scheme must not be an empty string.');\n        const registry = ModelStoreManagerRegistry.getInstance();\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(registry.managers[scheme] == null, () => `A model store manager is already registered for scheme '${scheme}'.`);\n        registry.managers[scheme] = manager;\n    }\n    static getManager(scheme) {\n        const manager = this.getInstance().managers[scheme];\n        if (manager == null) {\n            throw new Error(`Cannot find model manager for scheme '${scheme}'`);\n        }\n        return manager;\n    }\n    static getSchemes() {\n        return Object.keys(this.getInstance().managers);\n    }\n}\n/**\n * Helper method for parsing a URL string into a scheme and a path.\n *\n * @param url E.g., 'localstorage://my-model'\n * @returns A dictionary with two fields: scheme and path.\n *   Scheme: e.g., 'localstorage' in the example above.\n *   Path: e.g., 'my-model' in the example above.\n */\nfunction parseURL(url) {\n    if (url.indexOf(URL_SCHEME_SUFFIX) === -1) {\n        throw new Error(`The url string provided does not contain a scheme. ` +\n            `Supported schemes are: ` +\n            `${ModelStoreManagerRegistry.getSchemes().join(',')}`);\n    }\n    return {\n        scheme: url.split(URL_SCHEME_SUFFIX)[0],\n        path: url.split(URL_SCHEME_SUFFIX)[1],\n    };\n}\nasync function cloneModelInternal(sourceURL, destURL, deleteSource = false) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(sourceURL !== destURL, () => `Old path and new path are the same: '${sourceURL}'`);\n    const loadHandlers = _router_registry__WEBPACK_IMPORTED_MODULE_0__.IORouterRegistry.getLoadHandlers(sourceURL);\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(loadHandlers.length > 0, () => `Copying failed because no load handler is found for source URL ${sourceURL}.`);\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(loadHandlers.length < 2, () => `Copying failed because more than one (${loadHandlers.length}) ` +\n        `load handlers for source URL ${sourceURL}.`);\n    const loadHandler = loadHandlers[0];\n    const saveHandlers = _router_registry__WEBPACK_IMPORTED_MODULE_0__.IORouterRegistry.getSaveHandlers(destURL);\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(saveHandlers.length > 0, () => `Copying failed because no save handler is found for destination ` +\n        `URL ${destURL}.`);\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(saveHandlers.length < 2, () => `Copying failed because more than one (${loadHandlers.length}) ` +\n        `save handlers for destination URL ${destURL}.`);\n    const saveHandler = saveHandlers[0];\n    const sourceScheme = parseURL(sourceURL).scheme;\n    const sourcePath = parseURL(sourceURL).path;\n    const sameMedium = sourceScheme === parseURL(sourceURL).scheme;\n    const modelArtifacts = await loadHandler.load();\n    // If moving within the same storage medium, remove the old model as soon as\n    // the loading is done. Without doing this, it is possible that the combined\n    // size of the two models will cause the cloning to fail.\n    if (deleteSource && sameMedium) {\n        await ModelStoreManagerRegistry.getManager(sourceScheme)\n            .removeModel(sourcePath);\n    }\n    const saveResult = await saveHandler.save(modelArtifacts);\n    // If moving between mediums, the deletion is done after the save succeeds.\n    // This guards against the case in which saving to the destination medium\n    // fails.\n    if (deleteSource && !sameMedium) {\n        await ModelStoreManagerRegistry.getManager(sourceScheme)\n            .removeModel(sourcePath);\n    }\n    return saveResult.modelArtifactsInfo;\n}\n/**\n * List all models stored in registered storage mediums.\n *\n * For a web browser environment, the registered mediums are Local Storage and\n * IndexedDB.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @returns A `Promise` of a dictionary mapping URLs of existing models to\n * their model artifacts info. URLs include medium-specific schemes, e.g.,\n *   'indexeddb://my/model/1'. Model artifacts info include type of the\n * model's topology, byte sizes of the topology, weights, etc.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function listModels() {\n    const schemes = ModelStoreManagerRegistry.getSchemes();\n    const out = {};\n    for (const scheme of schemes) {\n        const schemeOut = await ModelStoreManagerRegistry.getManager(scheme).listModels();\n        for (const path in schemeOut) {\n            const url = scheme + URL_SCHEME_SUFFIX + path;\n            out[url] = schemeOut[path];\n        }\n    }\n    return out;\n}\n/**\n * Remove a model specified by URL from a reigstered storage medium.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @param url A URL to a stored model, with a scheme prefix, e.g.,\n *   'localstorage://my-model-1', 'indexeddb://my/model/2'.\n * @returns ModelArtifactsInfo of the deleted model (if and only if deletion\n *   is successful).\n * @throws Error if deletion fails, e.g., if no model exists at `path`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function removeModel(url) {\n    const schemeAndPath = parseURL(url);\n    const manager = ModelStoreManagerRegistry.getManager(schemeAndPath.scheme);\n    return manager.removeModel(schemeAndPath.path);\n}\n/**\n * Copy a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Copying within a storage medium, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Copying between two storage mediums, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Copy the model, from Local Storage to IndexedDB.\n * await tf.io.copyModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove both models.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of copying.\n * @param destURL Destination URL of copying.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if copying fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function copyModel(sourceURL, destURL) {\n    const deleteSource = false;\n    return cloneModelInternal(sourceURL, destURL, deleteSource);\n}\n/**\n * Move a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Moving within a storage medium, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Moving between two storage mediums, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Move the model, from Local Storage to IndexedDB.\n * await tf.io.moveModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove the moved model.\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of moving.\n * @param destURL Destination URL of moving.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if moving fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function moveModel(sourceURL, destURL) {\n    const deleteSource = true;\n    return cloneModelInternal(sourceURL, destURL, deleteSource);\n}\n\n//# sourceMappingURL=model_management.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export fromMemory [provided] [no usage info] [missing usage info prevents renaming] */
/*! export withSaveHandler [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fromMemory\": () => /* binding */ fromMemory,\n/* harmony export */   \"withSaveHandler\": () => /* binding */ withSaveHandler\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass PassthroughLoader {\n    constructor(modelArtifacts) {\n        this.modelArtifacts = modelArtifacts;\n    }\n    async load() {\n        return this.modelArtifacts;\n    }\n}\nclass PassthroughSaver {\n    constructor(saveHandler) {\n        this.saveHandler = saveHandler;\n    }\n    async save(modelArtifacts) {\n        return this.saveHandler(modelArtifacts);\n    }\n}\n/**\n * Creates an IOHandler that loads model artifacts from memory.\n *\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * const model = await tf.loadLayersModel(tf.io.fromMemory(\n *     modelTopology, weightSpecs, weightData));\n * ```\n *\n * @param modelArtifacts a object containing model topology (i.e., parsed from\n *   the JSON format).\n * @param weightSpecs An array of `WeightsManifestEntry` objects describing the\n *   names, shapes, types, and quantization of the weight data.\n * @param weightData A single `ArrayBuffer` containing the weight data,\n *   concatenated in the order described by the weightSpecs.\n * @param trainingConfig Model training configuration. Optional.\n *\n * @returns A passthrough `IOHandler` that simply loads the provided data.\n */\nfunction fromMemory(modelArtifacts, weightSpecs, weightData, trainingConfig) {\n    if (arguments.length === 1) {\n        const isModelArtifacts = modelArtifacts.modelTopology != null ||\n            modelArtifacts.weightSpecs != null;\n        if (isModelArtifacts) {\n            return new PassthroughLoader(modelArtifacts);\n        }\n        else {\n            // Legacy support: with only modelTopology.\n            // TODO(cais): Remove this deprecated API.\n            console.warn('Please call tf.io.fromMemory() with only one argument. ' +\n                'The argument should be of type ModelArtifacts. ' +\n                'The multi-argument signature of tf.io.fromMemory() has been ' +\n                'deprecated and will be removed in a future release.');\n            return new PassthroughLoader({ modelTopology: modelArtifacts });\n        }\n    }\n    else {\n        // Legacy support.\n        // TODO(cais): Remove this deprecated API.\n        console.warn('Please call tf.io.fromMemory() with only one argument. ' +\n            'The argument should be of type ModelArtifacts. ' +\n            'The multi-argument signature of tf.io.fromMemory() has been ' +\n            'deprecated and will be removed in a future release.');\n        return new PassthroughLoader({\n            modelTopology: modelArtifacts,\n            weightSpecs,\n            weightData,\n            trainingConfig\n        });\n    }\n}\n/**\n * Creates an IOHandler that passes saved model artifacts to a callback.\n *\n * ```js\n * function handleSave(artifacts) {\n *   // ... do something with the artifacts ...\n *   return {modelArtifactsInfo: {...}, ...};\n * }\n *\n * const saveResult = model.save(tf.io.withSaveHandler(handleSave));\n * ```\n *\n * @param saveHandler A function that accepts a `ModelArtifacts` and returns a\n *     `SaveResult`.\n */\nfunction withSaveHandler(saveHandler) {\n    return new PassthroughSaver(saveHandler);\n}\n//# sourceMappingURL=passthrough.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/io/passthrough.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/progress.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/progress.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export monitorPromisesProgress [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"monitorPromisesProgress\": () => /* binding */ monitorPromisesProgress\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n/**\n * Monitor Promise.all progress, fire onProgress callback function.\n *\n * @param promises Promise list going to be monitored\n * @param onProgress Callback function. Fired when a promise resolved.\n * @param startFraction Optional fraction start. Default to 0.\n * @param endFraction Optional fraction end. Default to 1.\n */\nfunction monitorPromisesProgress(promises, onProgress, startFraction, endFraction) {\n    checkPromises(promises);\n    startFraction = startFraction == null ? 0 : startFraction;\n    endFraction = endFraction == null ? 1 : endFraction;\n    checkFraction(startFraction, endFraction);\n    let resolvedPromise = 0;\n    const registerMonitor = (promise) => {\n        promise.then(value => {\n            const fraction = startFraction +\n                ++resolvedPromise / promises.length * (endFraction - startFraction);\n            // pass fraction as parameter to callback function.\n            onProgress(fraction);\n            return value;\n        });\n        return promise;\n    };\n    function checkPromises(promises) {\n        (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(promises != null && Array.isArray(promises) && promises.length > 0, () => 'promises must be a none empty array');\n    }\n    function checkFraction(startFraction, endFraction) {\n        (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(startFraction >= 0 && startFraction <= 1, () => `Progress fraction must be in range [0, 1], but ` +\n            `got startFraction ${startFraction}`);\n        (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(endFraction >= 0 && endFraction <= 1, () => `Progress fraction must be in range [0, 1], but ` +\n            `got endFraction ${endFraction}`);\n        (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(endFraction >= startFraction, () => `startFraction must be no more than endFraction, but ` +\n            `got startFraction ${startFraction} and endFraction ` +\n            `${endFraction}`);\n    }\n    return Promise.all(promises.map(registerMonitor));\n}\n//# sourceMappingURL=progress.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/io/progress.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export IORouterRegistry [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getLoadHandlers [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getSaveHandlers [provided] [no usage info] [missing usage info prevents renaming] */
/*! export registerLoadRouter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export registerSaveRouter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IORouterRegistry\": () => /* binding */ IORouterRegistry,\n/* harmony export */   \"registerSaveRouter\": () => /* binding */ registerSaveRouter,\n/* harmony export */   \"registerLoadRouter\": () => /* binding */ registerLoadRouter,\n/* harmony export */   \"getSaveHandlers\": () => /* binding */ getSaveHandlers,\n/* harmony export */   \"getLoadHandlers\": () => /* binding */ getLoadHandlers\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nclass IORouterRegistry {\n    constructor() {\n        this.saveRouters = [];\n        this.loadRouters = [];\n    }\n    static getInstance() {\n        if (IORouterRegistry.instance == null) {\n            IORouterRegistry.instance = new IORouterRegistry();\n        }\n        return IORouterRegistry.instance;\n    }\n    /**\n     * Register a save-handler router.\n     *\n     * @param saveRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `save` method defined or `null`.\n     */\n    static registerSaveRouter(saveRouter) {\n        IORouterRegistry.getInstance().saveRouters.push(saveRouter);\n    }\n    /**\n     * Register a load-handler router.\n     *\n     * @param loadRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `load` method defined or `null`.\n     */\n    static registerLoadRouter(loadRouter) {\n        IORouterRegistry.getInstance().loadRouters.push(loadRouter);\n    }\n    /**\n     * Look up IOHandler for saving, given a URL-like string.\n     *\n     * @param url\n     * @returns If only one match is found, an instance of IOHandler with the\n     * `save` method defined. If no match is found, `null`.\n     * @throws Error, if more than one match is found.\n     */\n    static getSaveHandlers(url) {\n        return IORouterRegistry.getHandlers(url, 'save');\n    }\n    /**\n     * Look up IOHandler for loading, given a URL-like string.\n     *\n     * @param url\n     * @param loadOptions Optional, custom load options.\n     * @returns All valid handlers for `url`, given the currently registered\n     *   handler routers.\n     */\n    static getLoadHandlers(url, loadOptions) {\n        return IORouterRegistry.getHandlers(url, 'load', loadOptions);\n    }\n    static getHandlers(url, handlerType, loadOptions) {\n        const validHandlers = [];\n        const routers = handlerType === 'load' ?\n            IORouterRegistry.getInstance().loadRouters :\n            IORouterRegistry.getInstance().saveRouters;\n        routers.forEach(router => {\n            const handler = router(url, loadOptions);\n            if (handler !== null) {\n                validHandlers.push(handler);\n            }\n        });\n        return validHandlers;\n    }\n}\nconst registerSaveRouter = (loudRouter) => IORouterRegistry.registerSaveRouter(loudRouter);\nconst registerLoadRouter = (loudRouter) => IORouterRegistry.registerLoadRouter(loudRouter);\nconst getSaveHandlers = (url) => IORouterRegistry.getSaveHandlers(url);\nconst getLoadHandlers = (url, loadOptions) => IORouterRegistry.getLoadHandlers(url, loadOptions);\n//# sourceMappingURL=router_registry.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/types.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/types.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export DTYPE_VALUE_SIZE_MAP [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DTYPE_VALUE_SIZE_MAP\": () => /* binding */ DTYPE_VALUE_SIZE_MAP\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/* Type definitions for exporting and importing of models. */\n/**\n * A map from Tensor dtype to number of bytes per element of the Tensor.\n */\nconst DTYPE_VALUE_SIZE_MAP = {\n    'float32': 4,\n    'float16': 2,\n    'int32': 4,\n    'uint16': 2,\n    'uint8': 1,\n    'bool': 1,\n    'complex64': 8\n};\n//# sourceMappingURL=types.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/io/types.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export loadWeights [provided] [no usage info] [missing usage info prevents renaming] */
/*! export loadWeightsAsArrayBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export weightsLoaderFactory [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"loadWeightsAsArrayBuffer\": () => /* binding */ loadWeightsAsArrayBuffer,\n/* harmony export */   \"loadWeights\": () => /* binding */ loadWeights,\n/* harmony export */   \"weightsLoaderFactory\": () => /* binding */ weightsLoaderFactory\n/* harmony export */ });\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _io_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./io_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js\");\n/* harmony import */ var _progress__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./progress */ \"./node_modules/@tensorflow/tfjs-core/dist/io/progress.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ \"./node_modules/@tensorflow/tfjs-core/dist/io/types.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Reads binary weights data from a number of URLs.\n *\n * @param fetchURLs URLs to send the HTTP requests at, using `fetch` calls.\n * @param requestOptions RequestInit (options) for the HTTP requests.\n * @param fetchFunc Optional overriding value for the `window.fetch` function.\n * @param onProgress Optional, progress callback function, fired periodically\n *   before the load is completed.\n * @returns A `Promise` of an Array of `ArrayBuffer`. The Array has the same\n *   length as `fetchURLs`.\n */\nasync function loadWeightsAsArrayBuffer(fetchURLs, loadOptions) {\n    if (loadOptions == null) {\n        loadOptions = {};\n    }\n    const fetchFunc = loadOptions.fetchFunc == null ? (0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().platform.fetch :\n        loadOptions.fetchFunc;\n    // Create the requests for all of the weights in parallel.\n    const requests = fetchURLs.map(fetchURL => fetchFunc(fetchURL, loadOptions.requestInit, { isBinary: true }));\n    const fetchStartFraction = 0;\n    const fetchEndFraction = 0.5;\n    const responses = loadOptions.onProgress == null ?\n        await Promise.all(requests) :\n        await (0,_progress__WEBPACK_IMPORTED_MODULE_1__.monitorPromisesProgress)(requests, loadOptions.onProgress, fetchStartFraction, fetchEndFraction);\n    const bufferPromises = responses.map(response => response.arrayBuffer());\n    const bufferStartFraction = 0.5;\n    const bufferEndFraction = 1;\n    const buffers = loadOptions.onProgress == null ?\n        await Promise.all(bufferPromises) :\n        await (0,_progress__WEBPACK_IMPORTED_MODULE_1__.monitorPromisesProgress)(bufferPromises, loadOptions.onProgress, bufferStartFraction, bufferEndFraction);\n    return buffers;\n}\n/**\n * Reads a weights manifest JSON configuration, fetches the weights and\n * returns them as `Tensor`s.\n *\n * @param manifest The weights manifest JSON.\n * @param filePathPrefix The path prefix for filenames given in the manifest.\n *     Defaults to the empty string.\n * @param weightNames The names of the weights to be fetched.\n */\nasync function loadWeights(manifest, filePathPrefix = '', weightNames, requestInit) {\n    // TODO(nsthorat): Groups are currently fetched atomically. If you need a\n    // single weight from a group, the whole group will be fetched. At a future\n    // date, we should support fetching only the individual shards within a\n    // group that are needed to reconstruct the requested weight.\n    // TODO(cais): Use `decodeWeights` for implementation.\n    const fetchWeights = (fetchUrls) => loadWeightsAsArrayBuffer(fetchUrls, { requestInit });\n    const loadWeights = weightsLoaderFactory(fetchWeights);\n    return loadWeights(manifest, filePathPrefix, weightNames);\n}\n/**\n * Creates a function, which reads a weights manifest JSON configuration,\n * fetches the weight files using the specified function and returns them as\n * `Tensor`s.\n *\n * ```js\n * // example for creating a nodejs weight loader, which reads the weight files\n * // from disk using fs.readFileSync\n *\n * import * as fs from 'fs'\n *\n * const fetchWeightsFromDisk = (filePaths: string[]) =>\n *   filePaths.map(filePath => fs.readFileSync(filePath).buffer)\n *\n * const loadWeights = tf.io.weightsLoaderFactory(fetchWeightsFromDisk)\n *\n * const manifest = JSON.parse(\n *   fs.readFileSync('./my_model-weights_manifest').toString()\n * )\n * const weightMap = await loadWeights(manifest, './')\n * ```\n * @param fetchWeightsFunction The function used for fetching the weight files.\n * @returns Weight loading function.\n */\nfunction weightsLoaderFactory(fetchWeightsFunction) {\n    return async (manifest, filePathPrefix = '', weightNames) => {\n        // Collect all the groups, weights, and their relative offsets to be\n        // fetched.\n        const groupIndicesToFetchMap = manifest.map(() => false);\n        const groupWeightsToFetch = {};\n        const weightsFound = weightNames != null ? weightNames.map(() => false) : [];\n        const allManifestWeightNames = [];\n        manifest.forEach((manifestGroupConfig, groupIndex) => {\n            let groupOffset = 0;\n            manifestGroupConfig.weights.forEach(weightsEntry => {\n                const rawDtype = ('quantization' in weightsEntry) ?\n                    weightsEntry.quantization.dtype :\n                    weightsEntry.dtype;\n                const weightsBytes = _types__WEBPACK_IMPORTED_MODULE_2__.DTYPE_VALUE_SIZE_MAP[rawDtype] *\n                    _util__WEBPACK_IMPORTED_MODULE_4__.sizeFromShape(weightsEntry.shape);\n                const enqueueWeightsForFetchingFn = () => {\n                    groupIndicesToFetchMap[groupIndex] = true;\n                    if (groupWeightsToFetch[groupIndex] == null) {\n                        groupWeightsToFetch[groupIndex] = [];\n                    }\n                    groupWeightsToFetch[groupIndex].push({\n                        manifestEntry: weightsEntry,\n                        groupOffset,\n                        sizeBytes: weightsBytes\n                    });\n                };\n                if (weightNames != null) {\n                    weightNames.forEach((weightName, weightIndex) => {\n                        if (weightName === weightsEntry.name) {\n                            enqueueWeightsForFetchingFn();\n                            weightsFound[weightIndex] = true;\n                        }\n                    });\n                }\n                else {\n                    enqueueWeightsForFetchingFn();\n                }\n                allManifestWeightNames.push(weightsEntry.name);\n                groupOffset += weightsBytes;\n            });\n        });\n        if (!weightsFound.every(found => found)) {\n            const weightsNotFound = weightNames.filter((_, i) => !weightsFound[i]);\n            throw new Error(`Could not find weights in manifest with names: ` +\n                `${weightsNotFound.join(', ')}. \\n` +\n                `Manifest JSON has weights with names: ` +\n                `${allManifestWeightNames.join(', ')}.`);\n        }\n        // Convert the one-hot boolean groupId => shouldFetch map to a list of group\n        // IDs.\n        const groupIndicesToFetch = groupIndicesToFetchMap.reduce((accumulator, shouldFetch, i) => {\n            if (shouldFetch) {\n                accumulator.push(i);\n            }\n            return accumulator;\n        }, []);\n        const fetchUrls = [];\n        groupIndicesToFetch.forEach(i => {\n            manifest[i].paths.forEach(filepath => {\n                const fetchUrl = filePathPrefix +\n                    (!filePathPrefix.endsWith('/') ? '/' : '') + filepath;\n                fetchUrls.push(fetchUrl);\n            });\n        });\n        const buffers = await fetchWeightsFunction(fetchUrls);\n        const weightsTensorMap = {};\n        let bufferIndexOffset = 0;\n        groupIndicesToFetch.forEach(i => {\n            const numBuffers = manifest[i].paths.length;\n            let groupBytes = 0;\n            for (let i = 0; i < numBuffers; i++) {\n                groupBytes += buffers[bufferIndexOffset + i].byteLength;\n            }\n            // Create a buffer for the whole group.\n            const groupBuffer = new ArrayBuffer(groupBytes);\n            const groupByteBuffer = new Uint8Array(groupBuffer);\n            let groupBufferOffset = 0;\n            for (let i = 0; i < numBuffers; i++) {\n                const buffer = new Uint8Array(buffers[bufferIndexOffset + i]);\n                groupByteBuffer.set(buffer, groupBufferOffset);\n                groupBufferOffset += buffer.byteLength;\n            }\n            const weightsEntries = groupWeightsToFetch[i];\n            weightsEntries.forEach(weightsEntry => {\n                const byteBuffer = groupBuffer.slice(weightsEntry.groupOffset, weightsEntry.groupOffset + weightsEntry.sizeBytes);\n                const nameToTensorMap = (0,_io_utils__WEBPACK_IMPORTED_MODULE_0__.decodeWeights)(byteBuffer, [weightsEntry.manifestEntry]);\n                for (const name in nameToTensorMap) {\n                    weightsTensorMap[name] = nameToTensorMap[name];\n                }\n            });\n            bufferIndexOffset += numBuffers;\n        });\n        return weightsTensorMap;\n    };\n}\n//# sourceMappingURL=weights_loader.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export Abs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Acos [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Acosh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Add [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AddN [provided] [no usage info] [missing usage info prevents renaming] */
/*! export All [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Any [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ArgMax [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ArgMin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Asin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Asinh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Atan [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Atan2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Atanh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AvgPool [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AvgPool3D [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AvgPool3DGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export AvgPoolGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export BatchMatMul [provided] [no usage info] [missing usage info prevents renaming] */
/*! export BatchToSpaceND [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Bincount [provided] [no usage info] [missing usage info prevents renaming] */
/*! export BroadcastTo [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Cast [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Ceil [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ClipByValue [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Complex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ComplexAbs [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Concat [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Conv2D [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Conv2DBackpropFilter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Conv2DBackpropInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Conv3D [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Conv3DBackpropFilterV2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Conv3DBackpropInputV2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Cos [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Cosh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export CropAndResize [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Cumsum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export DenseBincount [provided] [no usage info] [missing usage info prevents renaming] */
/*! export DepthToSpace [provided] [no usage info] [missing usage info prevents renaming] */
/*! export DepthwiseConv2dNative [provided] [no usage info] [missing usage info prevents renaming] */
/*! export DepthwiseConv2dNativeBackpropFilter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export DepthwiseConv2dNativeBackpropInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Diag [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Dilation2D [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Dilation2DBackpropFilter [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Dilation2DBackpropInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Elu [provided] [no usage info] [missing usage info prevents renaming] */
/*! export EluGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Equal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Erf [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Exp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ExpandDims [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Expm1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export FFT [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Fill [provided] [no usage info] [missing usage info prevents renaming] */
/*! export FlipLeftRight [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Floor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export FloorDiv [provided] [no usage info] [missing usage info prevents renaming] */
/*! export FromPixels [provided] [no usage info] [missing usage info prevents renaming] */
/*! export FusedBatchNorm [provided] [no usage info] [missing usage info prevents renaming] */
/*! export FusedConv2D [provided] [no usage info] [missing usage info prevents renaming] */
/*! export FusedDepthwiseConv2D [provided] [no usage info] [missing usage info prevents renaming] */
/*! export GatherNd [provided] [no usage info] [missing usage info prevents renaming] */
/*! export GatherV2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Greater [provided] [no usage info] [missing usage info prevents renaming] */
/*! export GreaterEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export IFFT [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Identity [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Imag [provided] [no usage info] [missing usage info prevents renaming] */
/*! export IsFinite [provided] [no usage info] [missing usage info prevents renaming] */
/*! export IsInf [provided] [no usage info] [missing usage info prevents renaming] */
/*! export IsNan [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LRN [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LRNGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LeakyRelu [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Less [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LessEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LinSpace [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Log [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Log1p [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LogSoftmax [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LogicalAnd [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LogicalNot [provided] [no usage info] [missing usage info prevents renaming] */
/*! export LogicalOr [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Max [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MaxPool [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MaxPool3D [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MaxPool3DGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MaxPoolGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MaxPoolWithArgmax [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Maximum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Mean [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Min [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Minimum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export MirrorPad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Mod [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Multinomial [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Multiply [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Neg [provided] [no usage info] [missing usage info prevents renaming] */
/*! export NonMaxSuppressionV3 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export NonMaxSuppressionV4 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export NonMaxSuppressionV5 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export NotEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export OneHot [provided] [no usage info] [missing usage info prevents renaming] */
/*! export OnesLike [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Pack [provided] [no usage info] [missing usage info prevents renaming] */
/*! export PadV2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Pool [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Pow [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Prelu [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Prod [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Range [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Real [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RealDiv [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Reciprocal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Relu [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Relu6 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Reshape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ResizeBilinear [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ResizeBilinearGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ResizeNearestNeighbor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ResizeNearestNeighborGrad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Reverse [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RotateWithOffset [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Round [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Rsqrt [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ScatterNd [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Select [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Selu [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Sigmoid [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Sign [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Sin [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Sinh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Slice [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Softmax [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Softplus [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SpaceToBatchND [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SparseToDense [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SplitV [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Sqrt [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Square [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SquaredDifference [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Step [provided] [no usage info] [missing usage info prevents renaming] */
/*! export StridedSlice [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Sub [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Sum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Tan [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Tanh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Tile [provided] [no usage info] [missing usage info prevents renaming] */
/*! export TopK [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Transpose [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Unique [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Unpack [provided] [no usage info] [missing usage info prevents renaming] */
/*! export UnsortedSegmentSum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ZerosLike [provided] [no usage info] [missing usage info prevents renaming] */
/*! export _FusedMatMul [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Abs\": () => /* binding */ Abs,\n/* harmony export */   \"Acos\": () => /* binding */ Acos,\n/* harmony export */   \"Acosh\": () => /* binding */ Acosh,\n/* harmony export */   \"Add\": () => /* binding */ Add,\n/* harmony export */   \"AddN\": () => /* binding */ AddN,\n/* harmony export */   \"All\": () => /* binding */ All,\n/* harmony export */   \"Any\": () => /* binding */ Any,\n/* harmony export */   \"ArgMax\": () => /* binding */ ArgMax,\n/* harmony export */   \"ArgMin\": () => /* binding */ ArgMin,\n/* harmony export */   \"Asin\": () => /* binding */ Asin,\n/* harmony export */   \"Asinh\": () => /* binding */ Asinh,\n/* harmony export */   \"Atan\": () => /* binding */ Atan,\n/* harmony export */   \"Atanh\": () => /* binding */ Atanh,\n/* harmony export */   \"Atan2\": () => /* binding */ Atan2,\n/* harmony export */   \"AvgPool\": () => /* binding */ AvgPool,\n/* harmony export */   \"AvgPoolGrad\": () => /* binding */ AvgPoolGrad,\n/* harmony export */   \"AvgPool3D\": () => /* binding */ AvgPool3D,\n/* harmony export */   \"AvgPool3DGrad\": () => /* binding */ AvgPool3DGrad,\n/* harmony export */   \"BatchMatMul\": () => /* binding */ BatchMatMul,\n/* harmony export */   \"BatchToSpaceND\": () => /* binding */ BatchToSpaceND,\n/* harmony export */   \"Bincount\": () => /* binding */ Bincount,\n/* harmony export */   \"BroadcastTo\": () => /* binding */ BroadcastTo,\n/* harmony export */   \"Cast\": () => /* binding */ Cast,\n/* harmony export */   \"Ceil\": () => /* binding */ Ceil,\n/* harmony export */   \"ClipByValue\": () => /* binding */ ClipByValue,\n/* harmony export */   \"Complex\": () => /* binding */ Complex,\n/* harmony export */   \"ComplexAbs\": () => /* binding */ ComplexAbs,\n/* harmony export */   \"Concat\": () => /* binding */ Concat,\n/* harmony export */   \"Conv2D\": () => /* binding */ Conv2D,\n/* harmony export */   \"Conv2DBackpropFilter\": () => /* binding */ Conv2DBackpropFilter,\n/* harmony export */   \"Conv2DBackpropInput\": () => /* binding */ Conv2DBackpropInput,\n/* harmony export */   \"Conv3D\": () => /* binding */ Conv3D,\n/* harmony export */   \"Conv3DBackpropFilterV2\": () => /* binding */ Conv3DBackpropFilterV2,\n/* harmony export */   \"Conv3DBackpropInputV2\": () => /* binding */ Conv3DBackpropInputV2,\n/* harmony export */   \"Cos\": () => /* binding */ Cos,\n/* harmony export */   \"Cosh\": () => /* binding */ Cosh,\n/* harmony export */   \"Cumsum\": () => /* binding */ Cumsum,\n/* harmony export */   \"CropAndResize\": () => /* binding */ CropAndResize,\n/* harmony export */   \"DenseBincount\": () => /* binding */ DenseBincount,\n/* harmony export */   \"DepthToSpace\": () => /* binding */ DepthToSpace,\n/* harmony export */   \"DepthwiseConv2dNative\": () => /* binding */ DepthwiseConv2dNative,\n/* harmony export */   \"DepthwiseConv2dNativeBackpropFilter\": () => /* binding */ DepthwiseConv2dNativeBackpropFilter,\n/* harmony export */   \"DepthwiseConv2dNativeBackpropInput\": () => /* binding */ DepthwiseConv2dNativeBackpropInput,\n/* harmony export */   \"Diag\": () => /* binding */ Diag,\n/* harmony export */   \"Dilation2D\": () => /* binding */ Dilation2D,\n/* harmony export */   \"Dilation2DBackpropInput\": () => /* binding */ Dilation2DBackpropInput,\n/* harmony export */   \"Dilation2DBackpropFilter\": () => /* binding */ Dilation2DBackpropFilter,\n/* harmony export */   \"RealDiv\": () => /* binding */ RealDiv,\n/* harmony export */   \"Elu\": () => /* binding */ Elu,\n/* harmony export */   \"EluGrad\": () => /* binding */ EluGrad,\n/* harmony export */   \"Erf\": () => /* binding */ Erf,\n/* harmony export */   \"Equal\": () => /* binding */ Equal,\n/* harmony export */   \"Exp\": () => /* binding */ Exp,\n/* harmony export */   \"ExpandDims\": () => /* binding */ ExpandDims,\n/* harmony export */   \"Expm1\": () => /* binding */ Expm1,\n/* harmony export */   \"FFT\": () => /* binding */ FFT,\n/* harmony export */   \"Fill\": () => /* binding */ Fill,\n/* harmony export */   \"FlipLeftRight\": () => /* binding */ FlipLeftRight,\n/* harmony export */   \"Floor\": () => /* binding */ Floor,\n/* harmony export */   \"FloorDiv\": () => /* binding */ FloorDiv,\n/* harmony export */   \"FusedBatchNorm\": () => /* binding */ FusedBatchNorm,\n/* harmony export */   \"GatherV2\": () => /* binding */ GatherV2,\n/* harmony export */   \"GatherNd\": () => /* binding */ GatherNd,\n/* harmony export */   \"Greater\": () => /* binding */ Greater,\n/* harmony export */   \"GreaterEqual\": () => /* binding */ GreaterEqual,\n/* harmony export */   \"Identity\": () => /* binding */ Identity,\n/* harmony export */   \"IFFT\": () => /* binding */ IFFT,\n/* harmony export */   \"Imag\": () => /* binding */ Imag,\n/* harmony export */   \"IsFinite\": () => /* binding */ IsFinite,\n/* harmony export */   \"IsInf\": () => /* binding */ IsInf,\n/* harmony export */   \"IsNan\": () => /* binding */ IsNan,\n/* harmony export */   \"LeakyRelu\": () => /* binding */ LeakyRelu,\n/* harmony export */   \"Less\": () => /* binding */ Less,\n/* harmony export */   \"LessEqual\": () => /* binding */ LessEqual,\n/* harmony export */   \"LinSpace\": () => /* binding */ LinSpace,\n/* harmony export */   \"Log\": () => /* binding */ Log,\n/* harmony export */   \"Log1p\": () => /* binding */ Log1p,\n/* harmony export */   \"LogicalAnd\": () => /* binding */ LogicalAnd,\n/* harmony export */   \"LogicalNot\": () => /* binding */ LogicalNot,\n/* harmony export */   \"LogicalOr\": () => /* binding */ LogicalOr,\n/* harmony export */   \"LogSoftmax\": () => /* binding */ LogSoftmax,\n/* harmony export */   \"LRN\": () => /* binding */ LRN,\n/* harmony export */   \"LRNGrad\": () => /* binding */ LRNGrad,\n/* harmony export */   \"Max\": () => /* binding */ Max,\n/* harmony export */   \"Maximum\": () => /* binding */ Maximum,\n/* harmony export */   \"MaxPool\": () => /* binding */ MaxPool,\n/* harmony export */   \"MaxPoolGrad\": () => /* binding */ MaxPoolGrad,\n/* harmony export */   \"MaxPool3D\": () => /* binding */ MaxPool3D,\n/* harmony export */   \"MaxPool3DGrad\": () => /* binding */ MaxPool3DGrad,\n/* harmony export */   \"MaxPoolWithArgmax\": () => /* binding */ MaxPoolWithArgmax,\n/* harmony export */   \"Mean\": () => /* binding */ Mean,\n/* harmony export */   \"Min\": () => /* binding */ Min,\n/* harmony export */   \"Minimum\": () => /* binding */ Minimum,\n/* harmony export */   \"MirrorPad\": () => /* binding */ MirrorPad,\n/* harmony export */   \"Mod\": () => /* binding */ Mod,\n/* harmony export */   \"Multinomial\": () => /* binding */ Multinomial,\n/* harmony export */   \"Multiply\": () => /* binding */ Multiply,\n/* harmony export */   \"Neg\": () => /* binding */ Neg,\n/* harmony export */   \"NotEqual\": () => /* binding */ NotEqual,\n/* harmony export */   \"NonMaxSuppressionV3\": () => /* binding */ NonMaxSuppressionV3,\n/* harmony export */   \"NonMaxSuppressionV4\": () => /* binding */ NonMaxSuppressionV4,\n/* harmony export */   \"NonMaxSuppressionV5\": () => /* binding */ NonMaxSuppressionV5,\n/* harmony export */   \"OnesLike\": () => /* binding */ OnesLike,\n/* harmony export */   \"OneHot\": () => /* binding */ OneHot,\n/* harmony export */   \"Pack\": () => /* binding */ Pack,\n/* harmony export */   \"PadV2\": () => /* binding */ PadV2,\n/* harmony export */   \"Pool\": () => /* binding */ Pool,\n/* harmony export */   \"Pow\": () => /* binding */ Pow,\n/* harmony export */   \"Prelu\": () => /* binding */ Prelu,\n/* harmony export */   \"Prod\": () => /* binding */ Prod,\n/* harmony export */   \"Range\": () => /* binding */ Range,\n/* harmony export */   \"Real\": () => /* binding */ Real,\n/* harmony export */   \"Reciprocal\": () => /* binding */ Reciprocal,\n/* harmony export */   \"Relu\": () => /* binding */ Relu,\n/* harmony export */   \"Reshape\": () => /* binding */ Reshape,\n/* harmony export */   \"ResizeNearestNeighbor\": () => /* binding */ ResizeNearestNeighbor,\n/* harmony export */   \"ResizeNearestNeighborGrad\": () => /* binding */ ResizeNearestNeighborGrad,\n/* harmony export */   \"ResizeBilinear\": () => /* binding */ ResizeBilinear,\n/* harmony export */   \"ResizeBilinearGrad\": () => /* binding */ ResizeBilinearGrad,\n/* harmony export */   \"Relu6\": () => /* binding */ Relu6,\n/* harmony export */   \"Reverse\": () => /* binding */ Reverse,\n/* harmony export */   \"Round\": () => /* binding */ Round,\n/* harmony export */   \"Rsqrt\": () => /* binding */ Rsqrt,\n/* harmony export */   \"ScatterNd\": () => /* binding */ ScatterNd,\n/* harmony export */   \"Select\": () => /* binding */ Select,\n/* harmony export */   \"Selu\": () => /* binding */ Selu,\n/* harmony export */   \"Slice\": () => /* binding */ Slice,\n/* harmony export */   \"Sin\": () => /* binding */ Sin,\n/* harmony export */   \"Sinh\": () => /* binding */ Sinh,\n/* harmony export */   \"Sign\": () => /* binding */ Sign,\n/* harmony export */   \"Sigmoid\": () => /* binding */ Sigmoid,\n/* harmony export */   \"Softplus\": () => /* binding */ Softplus,\n/* harmony export */   \"Sqrt\": () => /* binding */ Sqrt,\n/* harmony export */   \"Sum\": () => /* binding */ Sum,\n/* harmony export */   \"SpaceToBatchND\": () => /* binding */ SpaceToBatchND,\n/* harmony export */   \"SplitV\": () => /* binding */ SplitV,\n/* harmony export */   \"Softmax\": () => /* binding */ Softmax,\n/* harmony export */   \"SquaredDifference\": () => /* binding */ SquaredDifference,\n/* harmony export */   \"Square\": () => /* binding */ Square,\n/* harmony export */   \"Sub\": () => /* binding */ Sub,\n/* harmony export */   \"SparseToDense\": () => /* binding */ SparseToDense,\n/* harmony export */   \"StridedSlice\": () => /* binding */ StridedSlice,\n/* harmony export */   \"Tan\": () => /* binding */ Tan,\n/* harmony export */   \"Tanh\": () => /* binding */ Tanh,\n/* harmony export */   \"Tile\": () => /* binding */ Tile,\n/* harmony export */   \"TopK\": () => /* binding */ TopK,\n/* harmony export */   \"Transpose\": () => /* binding */ Transpose,\n/* harmony export */   \"Unique\": () => /* binding */ Unique,\n/* harmony export */   \"Unpack\": () => /* binding */ Unpack,\n/* harmony export */   \"UnsortedSegmentSum\": () => /* binding */ UnsortedSegmentSum,\n/* harmony export */   \"ZerosLike\": () => /* binding */ ZerosLike,\n/* harmony export */   \"Step\": () => /* binding */ Step,\n/* harmony export */   \"FromPixels\": () => /* binding */ FromPixels,\n/* harmony export */   \"RotateWithOffset\": () => /* binding */ RotateWithOffset,\n/* harmony export */   \"_FusedMatMul\": () => /* binding */ _FusedMatMul,\n/* harmony export */   \"FusedConv2D\": () => /* binding */ FusedConv2D,\n/* harmony export */   \"FusedDepthwiseConv2D\": () => /* binding */ FusedDepthwiseConv2D\n/* harmony export */ });\nconst Abs = 'Abs';\nconst Acos = 'Acos';\nconst Acosh = 'Acosh';\nconst Add = 'Add';\nconst AddN = 'AddN';\nconst All = 'All';\nconst Any = 'Any';\nconst ArgMax = 'ArgMax';\nconst ArgMin = 'ArgMin';\nconst Asin = 'Asin';\nconst Asinh = 'Asinh';\nconst Atan = 'Atan';\nconst Atanh = 'Atanh';\nconst Atan2 = 'Atan2';\nconst AvgPool = 'AvgPool';\nconst AvgPoolGrad = 'AvgPoolGrad';\nconst AvgPool3D = 'AvgPool3D';\nconst AvgPool3DGrad = 'AvgPool3DGrad';\nconst BatchMatMul = 'BatchMatMul';\nconst BatchToSpaceND = 'BatchToSpaceND';\nconst Bincount = 'Bincount';\nconst BroadcastTo = 'BroadcastTo';\nconst Cast = 'Cast';\nconst Ceil = 'Ceil';\nconst ClipByValue = 'ClipByValue';\nconst Complex = 'Complex';\nconst ComplexAbs = 'ComplexAbs';\nconst Concat = 'Concat';\nconst Conv2D = 'Conv2D';\nconst Conv2DBackpropFilter = 'Conv2DBackpropFilter';\nconst Conv2DBackpropInput = 'Conv2DBackpropInput';\nconst Conv3D = 'Conv3D';\nconst Conv3DBackpropFilterV2 = 'Conv3DBackpropFilterV2';\nconst Conv3DBackpropInputV2 = 'Conv3DBackpropInputV2';\nconst Cos = 'Cos';\nconst Cosh = 'Cosh';\nconst Cumsum = 'Cumsum';\nconst CropAndResize = 'CropAndResize';\nconst DenseBincount = 'DenseBincount';\nconst DepthToSpace = 'DepthToSpace';\nconst DepthwiseConv2dNative = 'DepthwiseConv2dNative';\nconst DepthwiseConv2dNativeBackpropFilter = 'DepthwiseConv2dNativeBackpropFilter';\nconst DepthwiseConv2dNativeBackpropInput = 'DepthwiseConv2dNativeBackpropInput';\nconst Diag = 'Diag';\nconst Dilation2D = 'Dilation2D';\nconst Dilation2DBackpropInput = 'Dilation2DBackpropInput';\nconst Dilation2DBackpropFilter = 'Dilation2DBackpropFilter';\nconst RealDiv = 'RealDiv';\nconst Elu = 'Elu';\nconst EluGrad = 'EluGrad';\nconst Erf = 'Erf';\nconst Equal = 'Equal';\nconst Exp = 'Exp';\nconst ExpandDims = 'ExpandDims';\nconst Expm1 = 'Expm1';\nconst FFT = 'FFT';\nconst Fill = 'Fill';\nconst FlipLeftRight = 'FlipLeftRight';\nconst Floor = 'Floor';\nconst FloorDiv = 'FloorDiv';\nconst FusedBatchNorm = 'FusedBatchNorm';\nconst GatherV2 = 'GatherV2';\nconst GatherNd = 'GatherNd';\nconst Greater = 'Greater';\nconst GreaterEqual = 'GreaterEqual';\nconst Identity = 'Identity';\nconst IFFT = 'IFFT';\nconst Imag = 'Imag';\nconst IsFinite = 'IsFinite';\nconst IsInf = 'IsInf';\nconst IsNan = 'IsNan';\nconst LeakyRelu = 'LeakyRelu';\nconst Less = 'Less';\nconst LessEqual = 'LessEqual';\nconst LinSpace = 'LinSpace';\nconst Log = 'Log';\nconst Log1p = 'Log1p';\nconst LogicalAnd = 'LogicalAnd';\nconst LogicalNot = 'LogicalNot';\nconst LogicalOr = 'LogicalOr';\nconst LogSoftmax = 'LogSoftmax';\nconst LRN = 'LRN';\nconst LRNGrad = 'LRNGrad';\nconst Max = 'Max';\nconst Maximum = 'Maximum';\nconst MaxPool = 'MaxPool';\nconst MaxPoolGrad = 'MaxPoolGrad';\nconst MaxPool3D = 'MaxPool3D';\nconst MaxPool3DGrad = 'MaxPool3DGrad';\nconst MaxPoolWithArgmax = 'MaxPoolWithArgmax';\nconst Mean = 'Mean';\nconst Min = 'Min';\nconst Minimum = 'Minimum';\nconst MirrorPad = 'MirrorPad';\nconst Mod = 'Mod';\nconst Multinomial = 'Multinomial';\nconst Multiply = 'Multiply';\nconst Neg = 'Neg';\nconst NotEqual = 'NotEqual';\nconst NonMaxSuppressionV3 = 'NonMaxSuppressionV3';\nconst NonMaxSuppressionV4 = 'NonMaxSuppressionV4';\nconst NonMaxSuppressionV5 = 'NonMaxSuppressionV5';\nconst OnesLike = 'OnesLike';\nconst OneHot = 'OneHot';\nconst Pack = 'Pack';\nconst PadV2 = 'PadV2';\nconst Pool = 'Pool';\nconst Pow = 'Pow';\nconst Prelu = 'Prelu';\nconst Prod = 'Prod';\nconst Range = 'Range';\nconst Real = 'Real';\nconst Reciprocal = 'Reciprocal';\nconst Relu = 'Relu';\nconst Reshape = 'Reshape';\nconst ResizeNearestNeighbor = 'ResizeNearestNeighbor';\nconst ResizeNearestNeighborGrad = 'ResizeNearestNeighborGrad';\nconst ResizeBilinear = 'ResizeBilinear';\nconst ResizeBilinearGrad = 'ResizeBilinearGrad';\nconst Relu6 = 'Relu6';\nconst Reverse = 'Reverse';\nconst Round = 'Round';\nconst Rsqrt = 'Rsqrt';\nconst ScatterNd = 'ScatterNd';\nconst Select = 'Select';\nconst Selu = 'Selu';\nconst Slice = 'Slice';\nconst Sin = 'Sin';\nconst Sinh = 'Sinh';\nconst Sign = 'Sign';\nconst Sigmoid = 'Sigmoid';\nconst Softplus = 'Softplus';\nconst Sqrt = 'Sqrt';\nconst Sum = 'Sum';\nconst SpaceToBatchND = 'SpaceToBatchND';\nconst SplitV = 'SplitV';\nconst Softmax = 'Softmax';\nconst SquaredDifference = 'SquaredDifference';\nconst Square = 'Square';\nconst Sub = 'Sub';\nconst SparseToDense = 'SparseToDense';\nconst StridedSlice = 'StridedSlice';\nconst Tan = 'Tan';\nconst Tanh = 'Tanh';\nconst Tile = 'Tile';\nconst TopK = 'TopK';\nconst Transpose = 'Transpose';\nconst Unique = 'Unique';\nconst Unpack = 'Unpack';\nconst UnsortedSegmentSum = 'UnsortedSegmentSum';\nconst ZerosLike = 'ZerosLike';\n/**\n * TensorFlow.js-only kernels\n */\nconst Step = 'Step';\nconst FromPixels = 'FromPixels';\nconst RotateWithOffset = 'RotateWithOffset';\nconst _FusedMatMul = '_FusedMatMul';\nconst FusedConv2D = 'FusedConv2D';\nconst FusedDepthwiseConv2D = 'FusedDepthwiseConv2D';\n//# sourceMappingURL=kernel_names.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export copyRegisteredKernels [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getGradient [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getKernel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getKernelsForBackend [provided] [no usage info] [missing usage info prevents renaming] */
/*! export registerGradient [provided] [no usage info] [missing usage info prevents renaming] */
/*! export registerKernel [provided] [no usage info] [missing usage info prevents renaming] */
/*! export unregisterGradient [provided] [no usage info] [missing usage info prevents renaming] */
/*! export unregisterKernel [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getKernel\": () => /* binding */ getKernel,\n/* harmony export */   \"getGradient\": () => /* binding */ getGradient,\n/* harmony export */   \"getKernelsForBackend\": () => /* binding */ getKernelsForBackend,\n/* harmony export */   \"registerKernel\": () => /* binding */ registerKernel,\n/* harmony export */   \"registerGradient\": () => /* binding */ registerGradient,\n/* harmony export */   \"unregisterKernel\": () => /* binding */ unregisterKernel,\n/* harmony export */   \"unregisterGradient\": () => /* binding */ unregisterGradient,\n/* harmony export */   \"copyRegisteredKernels\": () => /* binding */ copyRegisteredKernels\n/* harmony export */ });\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _global_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./global_util */ \"./node_modules/@tensorflow/tfjs-core/dist/global_util.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst kernelRegistry = (0,_global_util__WEBPACK_IMPORTED_MODULE_0__.getGlobal)('kernelRegistry', () => new Map());\nconst gradRegistry = (0,_global_util__WEBPACK_IMPORTED_MODULE_0__.getGlobal)('gradRegistry', () => new Map());\n/**\n * Returns the kernel function (code) associated with the provided names.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n */\nfunction getKernel(kernelName, backendName) {\n    const key = makeKey(kernelName, backendName);\n    return kernelRegistry.get(key);\n}\n/**\n * Returns the registered gradient info associated with the provided kernel.\n * @param kernelName The official TF kernel name.\n */\nfunction getGradient(kernelName) {\n    return gradRegistry.get(kernelName);\n}\nfunction getKernelsForBackend(backendName) {\n    const it = kernelRegistry.entries();\n    const result = [];\n    while (true) {\n        const { done, value } = it.next();\n        if (done) {\n            break;\n        }\n        const [key, config] = value;\n        const [backend,] = key.split('_');\n        if (backend === backendName) {\n            result.push(config);\n        }\n    }\n    return result;\n}\n/**\n * Registers the function (forward pass) for the kernel in a global registry.\n *\n * @param config A config object with the following properties:\n * - `kernelName` The official name of the kernel.\n * - `backendName` The official name of the backend.\n * - `kernelFunc` The function to run during the forward pass of the kernel.\n * - `setupFunc` Optional. Gets called once, after the backend initializes.\n * - `disposeFunc` Optional. Gets called once, right before the backend is\n * disposed.\n */\nfunction registerKernel(config) {\n    const { kernelName, backendName } = config;\n    const key = makeKey(kernelName, backendName);\n    if (kernelRegistry.has(key)) {\n        console.warn(`The kernel '${kernelName}' for backend ` +\n            `'${backendName}' is already registered`);\n    }\n    kernelRegistry.set(key, config);\n}\n/**\n * Registers a gradient function for a given kernel in the global registry,\n * to be used during the back-propagation of that kernel.\n *\n * @param config An object with the following properties:\n * - `kernelName` The name of the kernel that the gradient function is for.\n * - `gradFunc` The function to run during back-propagation.\n */\nfunction registerGradient(config) {\n    const { kernelName } = config;\n    if (gradRegistry.has(kernelName)) {\n        // TODO (yassogba) after 3.0 assess whether we need to keep this gated\n        // to debug mode.\n        if ((0,_environment__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('DEBUG')) {\n            console.warn(`Overriding the gradient for '${kernelName}'`);\n        }\n    }\n    gradRegistry.set(kernelName, config);\n}\n/**\n * Removes the kernel function from the registry.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n *\n */\nfunction unregisterKernel(kernelName, backendName) {\n    const key = makeKey(kernelName, backendName);\n    if (!kernelRegistry.has(key)) {\n        throw new Error(`The kernel '${kernelName}' for backend ` +\n            `'${backendName}' is not registered`);\n    }\n    kernelRegistry.delete(key);\n}\n/** Removes the registered gradient from the global registry. */\nfunction unregisterGradient(kernelName) {\n    if (!gradRegistry.has(kernelName)) {\n        throw new Error(`The gradient '${kernelName}' for backend is not registered`);\n    }\n    gradRegistry.delete(kernelName);\n}\n/**\n * Finds kernels that have already been registered to a backend and re-registers\n * them for a new backend. Useful for registering custom backends.\n * @param registeredBackendName Already registered backend.\n * @param newBackendName New backend.\n */\nfunction copyRegisteredKernels(registeredBackendName, newBackendName) {\n    const kernels = getKernelsForBackend(registeredBackendName);\n    kernels.forEach(kernelConfig => {\n        const newKernelConfig = Object.assign({}, kernelConfig, { backendName: newBackendName });\n        registerKernel(newKernelConfig);\n    });\n}\nfunction makeKey(kernelName, backendName) {\n    return `${backendName}_${kernelName}`;\n}\n//# sourceMappingURL=kernel_registry.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/log.js":
/*!********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/log.js ***!
  \********************************************************/
/*! namespace exports */
/*! export log [provided] [no usage info] [missing usage info prevents renaming] */
/*! export warn [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"warn\": () => /* binding */ warn,\n/* harmony export */   \"log\": () => /* binding */ log\n/* harmony export */ });\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction warn(...msg) {\n    if (!(0,_environment__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('IS_TEST')) {\n        console.warn(...msg);\n    }\n}\nfunction log(...msg) {\n    if (!(0,_environment__WEBPACK_IMPORTED_MODULE_0__.env)().getBool('IS_TEST')) {\n        console.log(...msg);\n    }\n}\n//# sourceMappingURL=log.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/log.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/math.js":
/*!*********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/math.js ***!
  \*********************************************************/
/*! namespace exports */
/*! export confusionMatrix [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/confusion_matrix.js .confusionMatrix */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"confusionMatrix\": () => /* reexport safe */ _ops_confusion_matrix__WEBPACK_IMPORTED_MODULE_0__.confusionMatrix\n/* harmony export */ });\n/* harmony import */ var _ops_confusion_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ops/confusion_matrix */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/confusion_matrix.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Exports under the tf.math.* namespace.\n */\n;\n\n//# sourceMappingURL=math.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/math.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js ***!
  \************************************************************/
/*! namespace exports */
/*! export abs [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"abs\": () => /* binding */ abs\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes absolute value element-wise: `abs(x)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.abs().print();  // or tf.abs(x)\n * ```\n * @param x The input `tf.Tensor`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction abs_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'abs');\n    if ($x.dtype === 'complex64') {\n        const inputs = { x: $x };\n        return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.ComplexAbs, inputs);\n    }\n    else {\n        const inputs = { x: $x };\n        return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Abs, inputs);\n    }\n}\nconst abs = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ abs_ });\n//# sourceMappingURL=abs.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/acos.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/acos.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export acos [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"acos\": () => /* binding */ acos\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes acos of the input `tf.Tensor` element-wise: `acos(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.acos().print();  // or tf.acos(x)\n * ```\n * @param x The input tensor.\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction acos_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'acos');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Acos, inputs);\n}\nconst acos = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ acos_ });\n//# sourceMappingURL=acos.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/acos.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/acosh.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/acosh.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export acosh [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"acosh\": () => /* binding */ acosh\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes the inverse hyperbolic cos of the input `tf.Tensor` element-wise:\n * `acosh(x)`\n *\n * ```js\n * const x = tf.tensor1d([10, 1, 3, 5.7]);\n *\n * x.acosh().print();  // or tf.acosh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction acosh_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'acosh');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Acosh, inputs);\n}\nconst acosh = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ acosh_ });\n//# sourceMappingURL=acosh.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/acosh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/add.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/add.js ***!
  \************************************************************/
/*! namespace exports */
/*! export add [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"add\": () => /* binding */ add\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Adds two `tf.Tensor`s element-wise, A + B. Supports broadcasting.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n *\n * ```js\n * // Broadcast add a with b.\n * const a = tf.scalar(5);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n * @param a The first `tf.Tensor` to add.\n * @param b The second `tf.Tensor` to add. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction add_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'add');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'add');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Add, inputs);\n}\nconst add = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ add_ });\n//# sourceMappingURL=add.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/add.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export addN [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addN\": () => /* binding */ addN\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Adds a list of `tf.Tensor`s element-wise, each with the same shape and dtype.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n *\n * tf.addN([a, b, c]).print();\n * ```\n * @param tensors A list of tensors with the same shape and dtype.\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction addN_(tensors) {\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(Array.isArray(tensors), () => 'The argument passed to tf.addN() must be a list of tensors');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(tensors.length >= 1, () => `Must pass at least one tensor to tf.addN(), but got ` +\n        `${tensors.length}`);\n    const $tensors = tensors.map((t, i) => (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_2__.convertToTensor)(t, `tensors${i}`, 'addN'));\n    const firstTensor = $tensors[0];\n    $tensors.forEach(t => {\n        if (t.dtype !== firstTensor.dtype) {\n            throw new Error('All tensors passed to tf.addN() must have the same dtype');\n        }\n    });\n    $tensors.forEach(t => {\n        if (!_util__WEBPACK_IMPORTED_MODULE_1__.arraysEqual(t.shape, firstTensor.shape)) {\n            throw new Error('All tensors passed to tf.addN() must have the same shape');\n        }\n    });\n    const inputs = $tensors;\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.AddN, inputs);\n}\nconst addN = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ addN_ });\n//# sourceMappingURL=add_n.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/all.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/all.js ***!
  \************************************************************/
/*! namespace exports */
/*! export all [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"all\": () => /* binding */ all\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes the logical and of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.all().print();  // or tf.all(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.all(axis).print();  // or tf.all(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction all_(x, axis = null, keepDims = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'all', 'bool');\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.All, inputs, attrs);\n}\nconst all = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ all_ });\n//# sourceMappingURL=all.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/all.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/any.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/any.js ***!
  \************************************************************/
/*! namespace exports */
/*! export any [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"any\": () => /* binding */ any\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes the logical or of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.any().print();  // or tf.any(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.any(axis).print();  // or tf.any(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction any_(x, axis = null, keepDims = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'any', 'bool');\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Any, inputs, attrs);\n}\n// tslint:disable-next-line:variable-name\nconst any = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ any_ });\n//# sourceMappingURL=any.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/any.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/arg_max.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/arg_max.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export argMax [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"argMax\": () => /* binding */ argMax\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Returns the indices of the maximum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMax().print();  // or tf.argMax(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMax(axis).print();  // or tf.argMax(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction argMax_(x, axis = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'argMax');\n    const inputs = { x: $x };\n    const attrs = { axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.ArgMax, inputs, attrs);\n}\nconst argMax = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ argMax_ });\n//# sourceMappingURL=arg_max.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/arg_max.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/arg_min.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/arg_min.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export argMin [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"argMin\": () => /* binding */ argMin\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Returns the indices of the minimum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMin().print();  // or tf.argMin(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMin(axis).print();  // or tf.argMin(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction argMin_(x, axis = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'argMin');\n    const inputs = { x: $x };\n    const attrs = { axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.ArgMin, inputs, attrs);\n}\nconst argMin = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ argMin_ });\n//# sourceMappingURL=arg_min.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/arg_min.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export getPermuted [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getReshaped [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getReshapedPermuted [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getSliceBeginCoords [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getSliceSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getReshaped\": () => /* binding */ getReshaped,\n/* harmony export */   \"getPermuted\": () => /* binding */ getPermuted,\n/* harmony export */   \"getReshapedPermuted\": () => /* binding */ getReshapedPermuted,\n/* harmony export */   \"getSliceBeginCoords\": () => /* binding */ getSliceBeginCoords,\n/* harmony export */   \"getSliceSize\": () => /* binding */ getSliceSize\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Gets the new shape of the input Tensor after it's been reshaped\n * to:\n * [blockShape[0], ..., blockShape[M-1], batch / prod(blockShape),\n * inputShape[1], ..., inputShape[N-1]]\n *\n * See step 1: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nfunction getReshaped(inputShape, blockShape, prod, batchToSpace = true) {\n    let reshaped = [];\n    if (batchToSpace) {\n        reshaped = reshaped.concat(blockShape.slice(0));\n        reshaped.push(inputShape[0] / prod);\n        reshaped = reshaped.concat(inputShape.slice(1));\n    }\n    else {\n        reshaped = reshaped.concat(inputShape[0]);\n        const spatialLength = blockShape.length;\n        for (let i = 0; i < spatialLength; ++i) {\n            reshaped =\n                reshaped.concat([inputShape[i + 1] / blockShape[i], blockShape[i]]);\n        }\n        reshaped = reshaped.concat(inputShape.slice(spatialLength + 1));\n    }\n    return reshaped;\n}\n/**\n * Gets the permutation that will transpose the dimensions of the\n * reshaped tensor to shape:\n *\n * [batch / prod(block_shape),inputShape[1], blockShape[0], ...,\n * inputShape[M], blockShape[M-1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * see step 2: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nfunction getPermuted(reshapedRank, blockShapeRank, batchToSpace = true) {\n    const permuted = [];\n    if (batchToSpace) {\n        permuted.push(blockShapeRank);\n        for (let i = blockShapeRank + 1; i < reshapedRank; ++i) {\n            if (i <= 2 * blockShapeRank) {\n                permuted.push(i);\n                permuted.push(i - (blockShapeRank + 1));\n            }\n            else {\n                permuted.push(i);\n            }\n        }\n    }\n    else {\n        const permutedBeforeBatch = [];\n        const permutedAfterBatch = [];\n        for (let i = 1; i < reshapedRank; ++i) {\n            if (i >= blockShapeRank * 2 + 1 || i % 2 === 1) {\n                permutedAfterBatch.push(i);\n            }\n            else {\n                permutedBeforeBatch.push(i);\n            }\n        }\n        permuted.push(...permutedBeforeBatch);\n        permuted.push(0);\n        permuted.push(...permutedAfterBatch);\n    }\n    return permuted;\n}\n/**\n * Gets the shape of the reshaped and permuted input Tensor before any cropping\n * is applied.  The new shape will be:\n *\n * [batch / prod(blockShape),inputShape[1] * blockShape[0], ...,\n * inputShape[M] * blockShape[M-1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * See step 3: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nfunction getReshapedPermuted(inputShape, blockShape, prod, batchToSpace = true) {\n    const reshapedPermuted = [];\n    if (batchToSpace) {\n        reshapedPermuted.push(inputShape[0] / prod);\n    }\n    else {\n        reshapedPermuted.push(inputShape[0] * prod);\n    }\n    for (let i = 1; i < inputShape.length; ++i) {\n        if (i <= blockShape.length) {\n            if (batchToSpace) {\n                reshapedPermuted.push(blockShape[i - 1] * inputShape[i]);\n            }\n            else {\n                reshapedPermuted.push(inputShape[i] / blockShape[i - 1]);\n            }\n        }\n        else {\n            reshapedPermuted.push(inputShape[i]);\n        }\n    }\n    return reshapedPermuted;\n}\n/**\n * Converts the crops argument into the beginning coordinates of a slice\n * operation.\n */\nfunction getSliceBeginCoords(crops, blockShape) {\n    const sliceBeginCoords = [0];\n    for (let i = 0; i < blockShape; ++i) {\n        sliceBeginCoords.push(crops[i][0]);\n    }\n    return sliceBeginCoords;\n}\n/**\n * Converts the crops argument into the size of a slice operation.  When\n * combined with getSliceBeginCoords this function allows the reshaped and\n * permuted Tensor to be cropped to its final output shape of:\n *\n * inputShape[1] * blockShape[0] - crops[0,0] - crops[0,1], ...,\n * inputShape[M] * blockShape[M-1] -crops[M-1,0] -\n * crops[M-1,1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * See step 4: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nfunction getSliceSize(uncroppedShape, crops, blockShape) {\n    const sliceSize = uncroppedShape.slice(0, 1);\n    for (let i = 0; i < blockShape; ++i) {\n        sliceSize.push(uncroppedShape[i + 1] - crops[i][0] - crops[i][1]);\n    }\n    return sliceSize;\n}\n//# sourceMappingURL=array_ops_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/array_ops_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/asin.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/asin.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export asin [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"asin\": () => /* binding */ asin\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes asin of the input `tf.Tensor` element-wise: `asin(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.asin().print();  // or tf.asin(x)\n * ```\n * @param x The input tensor.\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction asin_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'asin');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Asin, inputs);\n}\nconst asin = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ asin_ });\n//# sourceMappingURL=asin.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/asin.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/asinh.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/asinh.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export asinh [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"asinh\": () => /* binding */ asinh\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes inverse hyperbolic sin of the input `tf.Tensor` element-wise:\n * `asinh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.asinh().print();  // or tf.asinh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction asinh_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'asinh');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Asinh, inputs);\n}\nconst asinh = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ asinh_ });\n//# sourceMappingURL=asinh.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/asinh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/atan.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/atan.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export atan [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"atan\": () => /* binding */ atan\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes atan of the input `tf.Tensor` element-wise: `atan(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.atan().print();  // or tf.atan(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction atan_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'atan');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Atan, inputs);\n}\nconst atan = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ atan_ });\n//# sourceMappingURL=atan.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/atan.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export atan2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"atan2\": () => /* binding */ atan2\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Computes arctangent of `tf.Tensor`s a / b element-wise: `atan2(a, b)`.\n * Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1.0, 1.0, -1.0, .7]);\n * const b = tf.tensor1d([2.0, 13.0, 3.5, .21]);\n *\n * tf.atan2(a, b).print()\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction atan2_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'atan2');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'atan2');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Atan2, inputs);\n}\nconst atan2 = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ atan2_ });\n//# sourceMappingURL=atan2.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/atanh.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/atanh.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export atanh [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"atanh\": () => /* binding */ atanh\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes inverse hyperbolic tan of the input `tf.Tensor` element-wise:\n * `atanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, .1, -.1, .7]);\n *\n * x.atanh().print();  // or tf.atanh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction atanh_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'atanh');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Atanh, inputs);\n}\nconst atanh = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ atanh_ });\n//# sourceMappingURL=atanh.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/atanh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export avgPool [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"avgPool\": () => /* binding */ avgPool\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n/**\n * Computes the 2D average pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *         https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction avgPool_(x, filterSize, strides, pad, dimRoundingMode) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'avgPool', 'float32');\n    const dilations = 1;\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_3__.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in avgPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_4__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(x4D.rank === 4, () => `Error in avgPool: x must be rank 4 but got rank ${x4D.rank}.`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isInt(pad), () => `Error in avgPool: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x4D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    let res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_5__.AvgPool, inputs, attrs);\n    res = (0,_cast__WEBPACK_IMPORTED_MODULE_6__.cast)(res, $x.dtype);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_4__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst avgPool = (0,_operation__WEBPACK_IMPORTED_MODULE_7__.op)({ avgPool_ });\n//# sourceMappingURL=avg_pool.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export avgPool3d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"avgPool3d\": () => /* binding */ avgPool3d\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n/**\n * Computes the 3D average pooling.\n *\n * ```js\n * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n * const result = tf.avgPool3d(x, 2, 1, 'valid');\n * result.print();\n * ```\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     `[batch, depth, height, width, inChannels]`.\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     If `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideDepth == strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction avgPool3d_(x, filterSize, strides, pad, dimRoundingMode, dataFormat = 'NDHWC') {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'avgPool3d', 'float32');\n    let x5D = $x;\n    let reshapedTo5D = false;\n    if ($x.rank === 4) {\n        reshapedTo5D = true;\n        x5D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x5D.rank === 5, () => `Error in avgPool3d: x must be rank 5 but got rank ${x5D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(dataFormat === 'NDHWC', () => `Error in avgPool3d: Only NDHWC is currently supported, ` +\n        `but got dataFormat of ${dataFormat}`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_3__.assert(_util__WEBPACK_IMPORTED_MODULE_3__.isInt(pad), () => `Error in avgPool3d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x5D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode, dataFormat };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    let res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.AvgPool3D, inputs, attrs);\n    res = (0,_cast__WEBPACK_IMPORTED_MODULE_5__.cast)(res, x5D.dtype);\n    if (reshapedTo5D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n    }\n    return res;\n}\nconst avgPool3d = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ avgPool3d_ });\n//# sourceMappingURL=avg_pool_3d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export assertAxesAreInnerMostDims [provided] [no usage info] [missing usage info prevents renaming] */
/*! export axesAreInnerMostDims [provided] [no usage info] [missing usage info prevents renaming] */
/*! export combineLocations [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computeOutAndReduceShapes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expandShapeToKeepDim [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getAxesPermutation [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getInnerMostAxes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getUndoAxesPermutation [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"axesAreInnerMostDims\": () => /* binding */ axesAreInnerMostDims,\n/* harmony export */   \"combineLocations\": () => /* binding */ combineLocations,\n/* harmony export */   \"computeOutAndReduceShapes\": () => /* binding */ computeOutAndReduceShapes,\n/* harmony export */   \"expandShapeToKeepDim\": () => /* binding */ expandShapeToKeepDim,\n/* harmony export */   \"assertAxesAreInnerMostDims\": () => /* binding */ assertAxesAreInnerMostDims,\n/* harmony export */   \"getAxesPermutation\": () => /* binding */ getAxesPermutation,\n/* harmony export */   \"getUndoAxesPermutation\": () => /* binding */ getUndoAxesPermutation,\n/* harmony export */   \"getInnerMostAxes\": () => /* binding */ getInnerMostAxes\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n/**\n * Returns true if the axis specifies the inner most dimensions of the\n * array.\n */\nfunction axesAreInnerMostDims(axes, rank) {\n    for (let i = 0; i < axes.length; ++i) {\n        if (axes[axes.length - i - 1] !== rank - 1 - i) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction combineLocations(outputLoc, reduceLoc, axes) {\n    const rank = outputLoc.length + reduceLoc.length;\n    const loc = [];\n    let outIdx = 0;\n    let reduceIdx = 0;\n    for (let dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            loc.push(outputLoc[outIdx++]);\n        }\n        else {\n            loc.push(reduceLoc[reduceIdx++]);\n        }\n    }\n    return loc;\n}\nfunction computeOutAndReduceShapes(aShape, axes) {\n    const outShape = [];\n    const rank = aShape.length;\n    for (let dim = 0; dim < rank; dim++) {\n        if (axes.indexOf(dim) === -1) {\n            outShape.push(aShape[dim]);\n        }\n    }\n    const reduceShape = axes.map(dim => aShape[dim]);\n    return [outShape, reduceShape];\n}\nfunction expandShapeToKeepDim(shape, axes) {\n    const reduceSubShape = axes.map(x => 1);\n    return combineLocations(shape, reduceSubShape, axes);\n}\nfunction assertAxesAreInnerMostDims(msg, axes, rank) {\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(axesAreInnerMostDims(axes, rank), () => `${msg} supports only inner-most axes for now. ` +\n        `Got axes ${axes} and rank-${rank} input.`);\n}\n/**\n * Returns the axes permutation to be used with `tf.transpose`, if such\n * permutation is necessary. Otherwise it returns null. This method is used by\n * operations that operate only on inner-most axes.\n */\nfunction getAxesPermutation(axes, rank) {\n    if (axesAreInnerMostDims(axes, rank)) {\n        return null;\n    }\n    const result = [];\n    for (let i = 0; i < rank; ++i) {\n        if (axes.indexOf(i) === -1) {\n            result.push(i);\n        }\n    }\n    axes.forEach(axis => result.push(axis));\n    return result;\n}\n/** Returns the axes permutation that undoes the original permutation. */\nfunction getUndoAxesPermutation(axes) {\n    return axes.map((axis, i) => [i, axis])\n        .sort((a, b) => a[1] - b[1])\n        .map(x => x[0]);\n}\nfunction getInnerMostAxes(numAxes, rank) {\n    const res = [];\n    for (let i = rank - numAxes; i < rank; ++i) {\n        res.push(i);\n    }\n    return res;\n}\n//# sourceMappingURL=axis_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/basic_lstm_cell.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/basic_lstm_cell.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export basicLSTMCell [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"basicLSTMCell\": () => /* binding */ basicLSTMCell\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _sigmoid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sigmoid */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _tanh__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tanh */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n/**\n * Computes the next state and output of a BasicLSTMCell.\n *\n * Returns `[newC, newH]`.\n *\n * Derived from tf.contrib.rnn.BasicLSTMCell.\n *\n * @param forgetBias Forget bias for the cell.\n * @param lstmKernel The weights for the cell.\n * @param lstmBias The bias for the cell.\n * @param data The input to the cell.\n * @param c Previous cell state.\n * @param h Previous cell output.\n *\n * @doc {heading: 'Operations', subheading: 'RNN'}\n */\nfunction basicLSTMCell_(forgetBias, lstmKernel, lstmBias, data, c, h) {\n    const $forgetBias = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(forgetBias, 'forgetBias', 'basicLSTMCell');\n    const $lstmKernel = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(lstmKernel, 'lstmKernel', 'basicLSTMCell');\n    const $lstmBias = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(lstmBias, 'lstmBias', 'basicLSTMCell');\n    const $data = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(data, 'data', 'basicLSTMCell');\n    const $c = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(c, 'c', 'basicLSTMCell');\n    const $h = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(h, 'h', 'basicLSTMCell');\n    const combined = (0,_concat__WEBPACK_IMPORTED_MODULE_1__.concat)([$data, $h], 1);\n    const weighted = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(combined, $lstmKernel);\n    const res = (0,_add__WEBPACK_IMPORTED_MODULE_3__.add)(weighted, $lstmBias);\n    // i = input_gate, j = new_input, f = forget_gate, o = output_gate\n    const batchSize = res.shape[0];\n    const sliceCols = res.shape[1] / 4;\n    const sliceSize = [batchSize, sliceCols];\n    const i = (0,_slice__WEBPACK_IMPORTED_MODULE_4__.slice)(res, [0, 0], sliceSize);\n    const j = (0,_slice__WEBPACK_IMPORTED_MODULE_4__.slice)(res, [0, sliceCols], sliceSize);\n    const f = (0,_slice__WEBPACK_IMPORTED_MODULE_4__.slice)(res, [0, sliceCols * 2], sliceSize);\n    const o = (0,_slice__WEBPACK_IMPORTED_MODULE_4__.slice)(res, [0, sliceCols * 3], sliceSize);\n    const newC = (0,_add__WEBPACK_IMPORTED_MODULE_3__.add)((0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_sigmoid__WEBPACK_IMPORTED_MODULE_6__.sigmoid)(i), (0,_tanh__WEBPACK_IMPORTED_MODULE_7__.tanh)(j)), (0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)($c, (0,_sigmoid__WEBPACK_IMPORTED_MODULE_6__.sigmoid)((0,_add__WEBPACK_IMPORTED_MODULE_3__.add)($forgetBias, f))));\n    const newH = (0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_tanh__WEBPACK_IMPORTED_MODULE_7__.tanh)(newC), (0,_sigmoid__WEBPACK_IMPORTED_MODULE_6__.sigmoid)(o));\n    return [newC, newH];\n}\nconst basicLSTMCell = (0,_operation__WEBPACK_IMPORTED_MODULE_8__.op)({ basicLSTMCell_ });\n//# sourceMappingURL=basic_lstm_cell.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/basic_lstm_cell.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export batchToSpaceND [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchToSpaceND\": () => /* binding */ batchToSpaceND\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * This operation reshapes the \"batch\" dimension 0 into `M + 1` dimensions of\n * shape `blockShape + [batch]`, interleaves these blocks back into the grid\n * defined by the spatial dimensions `[1, ..., M]`, to obtain a result with\n * the same rank as the input. The spatial dimensions of this intermediate\n * result are then optionally cropped according to `crops` to produce the\n * output. This is the reverse of `tf.spaceToBatchND`. See below for a precise\n * description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [4, 1, 1, 1]);\n * const blockShape = [2, 2];\n * const crops = [[0, 0], [0, 0]];\n *\n * x.batchToSpaceND(blockShape, crops).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param crops A 2-D array.  Must have shape `[M, 2]`, all values must be >= 0.\n * `crops[i] = [cropStart, cropEnd]` specifies the amount to crop from input\n * dimension `i + 1`, which corresponds to spatial dimension `i`. It is required\n * that `cropStart[i] + cropEnd[i] <= blockShape[i] * inputShape[i + 1]`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Reshape `x` to `reshaped` of shape: `[blockShape[0], ...,\n * blockShape[M-1], batch / prod(blockShape), x.shape[1], ...,\n * x.shape[N-1]]`\n *\n * 2. Permute dimensions of `reshaped`to produce `permuted` of shape `[batch /\n * prod(blockShape),x.shape[1], blockShape[0], ..., x.shape[M],\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 3. Reshape `permuted` to produce `reshapedPermuted` of shape `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0], ..., x.shape[M] *\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 4. Crop the start and end of dimensions `[1, ..., M]` of `reshapedPermuted`\n * according to `crops` to produce the output of shape: `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0] - crops[0,0] - crops[0,1],\n * ..., x.shape[M] * blockShape[M-1] - crops[M-1,0] -\n * crops[M-1,1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction batchToSpaceND_(x, blockShape, crops) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'batchToSpaceND');\n    const prod = blockShape.reduce((a, b) => a * b);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank >= 1 + blockShape.length, () => `input rank is ${$x.rank} but should be > than blockShape.length ${blockShape.length}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(crops.length === blockShape.length, () => `crops.length is ${crops.length} but should be equal to blockShape.length  ${blockShape.length}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.shape[0] % prod === 0, () => `input tensor batch is ${$x.shape[0]} but is not divisible by the product of ` +\n        `the elements of blockShape ${blockShape.join(' * ')} === ${prod}`);\n    const inputs = { x: $x };\n    const attrs = { blockShape, crops };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.BatchToSpaceND, inputs, attrs);\n}\nconst batchToSpaceND = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ batchToSpaceND_ });\n//# sourceMappingURL=batch_to_space_nd.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export batchNorm [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchNorm\": () => /* binding */ batchNorm\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _batchnorm_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./batchnorm_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n/**\n * Batch normalization.\n *\n * As described in\n * [http://arxiv.org/abs/1502.03167](http://arxiv.org/abs/1502.03167).\n *\n * Mean, variance, scale, and offset can be of two shapes:\n *   - The same shape as the input.\n *   - In the common case, the depth dimension is the last dimension of x, so\n *     the values would be an `tf.Tensor1D` of shape [depth].\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that parameters passed are of given rank\n *   - `tf.batchNorm2d`\n *   - `tf.batchNorm3d`\n *   - `tf.batchNorm4d`\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction batchNorm_(x, mean, variance, offset, scale, varianceEpsilon) {\n    if (varianceEpsilon == null) {\n        varianceEpsilon = 0.001;\n    }\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'batchNorm');\n    const $mean = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(mean, 'mean', 'batchNorm');\n    const $variance = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(variance, 'variance', 'batchNorm');\n    let $scale;\n    if (scale != null) {\n        $scale = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(scale, 'scale', 'batchNorm');\n    }\n    let $offset;\n    if (offset != null) {\n        $offset = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(offset, 'offset', 'batchNorm');\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($mean.rank === $variance.rank, () => 'Batch normalization gradient requires mean and variance to have ' +\n        'equal ranks.');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($offset == null || $mean.rank === $offset.rank, () => 'Batch normalization gradient requires mean and offset to have ' +\n        'equal ranks.');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($scale == null || $mean.rank === $scale.rank, () => 'Batch normalization gradient requires mean and scale to have ' +\n        'equal ranks.');\n    const x4D = (0,_batchnorm_util__WEBPACK_IMPORTED_MODULE_3__.xAs4D)($x);\n    const inputs = {\n        x: x4D,\n        scale: $scale,\n        offset: $offset,\n        mean: $mean,\n        variance: $variance\n    };\n    const attrs = { varianceEpsilon };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.FusedBatchNorm, inputs, attrs);\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)(res, $x.shape);\n}\nconst batchNorm = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ batchNorm_ });\n//# sourceMappingURL=batchnorm.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm2d.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm2d.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export batchNorm2d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchNorm2d\": () => /* binding */ batchNorm2d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _batchnorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./batchnorm */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n;\n\n\n\n/**\n * Batch normalization, strictly for 2D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm2d_(x, mean, variance, offset, scale, varianceEpsilon) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'batchNorm');\n    const $mean = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(mean, 'mean', 'batchNorm');\n    const $variance = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(variance, 'variance', 'batchNorm');\n    let $scale;\n    if (scale != null) {\n        $scale = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(scale, 'scale', 'batchNorm');\n    }\n    let $offset;\n    if (offset != null) {\n        $offset = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(offset, 'offset', 'batchNorm');\n    }\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 2, () => `Error in batchNorm2D: x must be rank 2 but got rank ` +\n        `${$x.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($mean.rank === 2 || $mean.rank === 1, () => `Error in batchNorm2D: mean must be rank 2 or rank 1 but ` +\n        `got rank ${$mean.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($variance.rank === 2 || $variance.rank === 1, () => `Error in batchNorm2D: variance must be rank 2 or rank 1 ` +\n        `but got rank ${$variance.rank}.`);\n    if ($scale != null) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert($scale.rank === 2 || $scale.rank === 1, () => `Error in batchNorm2D: scale must be rank 2 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n    }\n    if ($offset != null) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert($offset.rank === 2 || $offset.rank === 1, () => `Error in batchNorm2D: offset must be rank 2 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n    }\n    return (0,_batchnorm__WEBPACK_IMPORTED_MODULE_2__.batchNorm)($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\nconst batchNorm2d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ batchNorm2d_ });\n//# sourceMappingURL=batchnorm2d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm3d.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm3d.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export batchNorm3d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchNorm3d\": () => /* binding */ batchNorm3d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _batchnorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./batchnorm */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n;\n\n\n\n/**\n * Batch normalization, strictly for 3D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm3d_(x, mean, variance, offset, scale, varianceEpsilon) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'batchNorm');\n    const $mean = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(mean, 'mean', 'batchNorm');\n    const $variance = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(variance, 'variance', 'batchNorm');\n    let $scale;\n    if (scale != null) {\n        $scale = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(scale, 'scale', 'batchNorm');\n    }\n    let $offset;\n    if (offset != null) {\n        $offset = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(offset, 'offset', 'batchNorm');\n    }\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 3, () => `Error in batchNorm3D: x must be rank 3 but got rank ` +\n        `${$x.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($mean.rank === 3 || $mean.rank === 1, () => `Error in batchNorm3D: mean must be rank 3 or rank 1 but ` +\n        `got rank ${$mean.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($variance.rank === 3 || $variance.rank === 1, () => `Error in batchNorm3D: variance must be rank 3 or rank 1 ` +\n        `but got rank ${$variance.rank}.`);\n    if ($scale != null) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert($scale.rank === 3 || $scale.rank === 1, () => `Error in batchNorm3D: scale must be rank 3 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n    }\n    if ($offset != null) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert($offset.rank === 3 || $offset.rank === 1, () => `Error in batchNorm3D: offset must be rank 3 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n    }\n    return (0,_batchnorm__WEBPACK_IMPORTED_MODULE_2__.batchNorm)($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\nconst batchNorm3d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ batchNorm3d_ });\n//# sourceMappingURL=batchnorm3d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm4d.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm4d.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export batchNorm4d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"batchNorm4d\": () => /* binding */ batchNorm4d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _batchnorm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./batchnorm */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n;\n\n\n\n/**\n * Batch normalization, strictly for 4D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm4d_(x, mean, variance, offset, scale, varianceEpsilon) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'batchNorm');\n    const $mean = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(mean, 'mean', 'batchNorm');\n    const $variance = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(variance, 'variance', 'batchNorm');\n    let $scale;\n    if (scale != null) {\n        $scale = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(scale, 'scale', 'batchNorm');\n    }\n    let $offset;\n    if (offset != null) {\n        $offset = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(offset, 'offset', 'batchNorm');\n    }\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 4, () => `Error in batchNorm4D: x must be rank 4 but got rank ` +\n        `${$x.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($mean.rank === 4 || $mean.rank === 1, () => `Error in batchNorm4D: mean must be rank 4 or rank 1 but ` +\n        `got rank ${$mean.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($variance.rank === 4 || $variance.rank === 1, () => `Error in batchNorm4D: variance must be rank 4 or rank 1 ` +\n        `but got rank ${$variance.rank}.`);\n    if ($scale != null) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert($scale.rank === 4 || $scale.rank === 1, () => `Error in batchNorm4D: scale must be rank 4 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n    }\n    if ($offset != null) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert($offset.rank === 4 || $offset.rank === 1, () => `Error in batchNorm4D: offset must be rank 4 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n    }\n    return (0,_batchnorm__WEBPACK_IMPORTED_MODULE_2__.batchNorm)($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\nconst batchNorm4d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ batchNorm4d_ });\n//# sourceMappingURL=batchnorm4d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm4d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm_util.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm_util.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export xAs4D [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"xAs4D\": () => /* binding */ xAs4D\n/* harmony export */ });\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n;\nfunction xAs4D(x) {\n    let x4D;\n    if (x.rank === 0 || x.rank === 1) {\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)(x, [1, 1, 1, x.size]);\n    }\n    else if (x.rank === 2) {\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)(x, [1, 1, x.shape[0], x.shape[1]]);\n    }\n    else if (x.rank === 3) {\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n    }\n    else {\n        x4D = x;\n    }\n    return x4D;\n}\n//# sourceMappingURL=batchnorm_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export bincount [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bincount\": () => /* binding */ bincount\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Outputs a vector with length `size` and the same dtype as `weights`.\n *\n * If `weights` are empty, then index `i` stores the number of times the value\n * `i` is counted in `x`. If `weights` are non-empty, then index `i` stores the\n * sum of the value in `weights` at each index where the corresponding value in\n * `x` is `i`.\n *\n * Values in `x` outside of the range [0, size) are ignored.\n *\n * @param x The input int tensor, rank 1.\n * @param weights The weights tensor, must have the same shape as x, or a\n *     length-0 Tensor, in which case it acts as all weights equal to 1.\n * @param size Non-negative integer.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction bincount_(x, weights, size) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'bincount');\n    const $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'bincount');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.dtype === 'int32', () => `Error in bincount: input ` +\n        `dtype must be int32, but got ${$x.dtype}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(size >= 0, () => `size must be non-negative, but got ${size}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($weights.size === $x.size || $weights.size === 0, () => `Error in bincount: weights must have the same size as input or` +\n        `0-length, but got input shape: ${$x.shape}, weights shape: ` +\n        `${$weights.shape}.`);\n    const inputs = { x: $x, weights: $weights };\n    const attrs = { size };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Bincount, inputs, attrs);\n}\nconst bincount = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ bincount_ });\n//# sourceMappingURL=bincount.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export booleanMaskAsync [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"booleanMaskAsync\": () => /* binding */ booleanMaskAsync\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _gather__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./gather */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _squeeze__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./squeeze */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js\");\n/* harmony import */ var _where_async__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./where_async */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Apply boolean mask to tensor.\n *\n * ```js\n * const tensor = tf.tensor2d([1, 2, 3, 4, 5, 6], [3, 2]);\n * const mask = tf.tensor1d([1, 0, 1], 'bool');\n * const result = await tf.booleanMaskAsync(tensor, mask);\n * result.print();\n * ```\n *\n * @param tensor N-D tensor.\n * @param mask K-D boolean tensor, K <= N and K must be known statically.\n * @param axis A 0-D int Tensor representing the axis in tensor to mask from.\n *     By default, axis is 0 which will mask from the first dimension.\n *     Otherwise K + axis <= N.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nasync function booleanMaskAsync_(tensor, mask, axis) {\n    const $tensor = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(tensor, 'tensor', 'boolMask');\n    const $mask = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(mask, 'mask', 'boolMask', 'bool');\n    const axisFrom = axis == null ? 0 : axis;\n    const maskDim = $mask.rank;\n    const tensorShape = $tensor.shape;\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(maskDim > 0, () => 'mask cannot be scalar');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatch(tensorShape.slice(axisFrom, axisFrom + maskDim), $mask.shape, `mask's shape must match the first K dimensions of tensor's shape,`);\n    let leadingSize = 1;\n    for (let i = axisFrom; i < axisFrom + maskDim; i++) {\n        leadingSize *= tensorShape[i];\n    }\n    const targetTensorShape = tensorShape.slice(0, axisFrom)\n        .concat([leadingSize], tensorShape.slice(axisFrom + maskDim));\n    const reshapedTensor = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($tensor, targetTensorShape);\n    const reshapedMask = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($mask, [-1]);\n    const positivePositions = await (0,_where_async__WEBPACK_IMPORTED_MODULE_3__.whereAsync)(reshapedMask);\n    const indices = (0,_squeeze__WEBPACK_IMPORTED_MODULE_4__.squeeze)(positivePositions, [1]);\n    const res = (0,_gather__WEBPACK_IMPORTED_MODULE_5__.gather)(reshapedTensor, indices, axisFrom);\n    // Ensure no memory leak.\n    if (tensor !== $tensor) {\n        $tensor.dispose();\n    }\n    if (mask !== $mask) {\n        $mask.dispose();\n    }\n    indices.dispose();\n    reshapedTensor.dispose();\n    reshapedMask.dispose();\n    positivePositions.dispose();\n    return res;\n}\nconst booleanMaskAsync = booleanMaskAsync_;\n//# sourceMappingURL=boolean_mask.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export broadcastTo [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"broadcastTo\": () => /* binding */ broadcastTo\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _clone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./clone */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Broadcast an array to a compatible shape NumPy-style.\n *\n * The tensor's shape is compared to the broadcast shape from end to beginning.\n * Ones are prepended to the tensor's shape until is has the same length as\n * the broadcast shape. If input.shape[i]==shape[i], the (i+1)-th axis is\n * already broadcast-compatible. If input.shape[i]==1 and shape[i]==N, then\n * the input tensor is tiled N times along that axis (using tf.tile).\n *\n * @param input The tensor that is to be broadcasted.\n * @param shape The input is to be broadcast to this shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction broadcastTo_(x, shape) {\n    let input = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'broadcastTo', 'x');\n    const xShape = input.shape;\n    if (shape.some(d => !(d > 0) || d % 1 !== 0)) {\n        throw new Error(`broadcastTo(): Invalid broadcast shape [${shape}].`);\n    }\n    if (shape.length < input.rank) {\n        throw new Error(`broadcastTo(): shape.length=${shape.length} < input.rank=${input.rank}.`);\n    }\n    if (shape.length > input.rank) {\n        const newShape = input.shape.slice();\n        while (newShape.length < shape.length) {\n            newShape.unshift(1);\n        }\n        input = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(input, newShape);\n    }\n    const inputShape = input.shape;\n    const reps = Array.from(shape);\n    for (let i = shape.length - 1; i >= 0; i--) {\n        if (inputShape[i] === shape[i]) {\n            reps[i] = 1;\n        }\n        else if (input.shape[i] !== 1) {\n            throw new Error(`broadcastTo(): [${xShape}] cannot be broadcast to [${shape}].`);\n        }\n    }\n    const axes = reps.map((n, i) => n > 1 ? i : -1).filter(i => i >= 0);\n    if (axes.length === 0) {\n        return (0,_clone__WEBPACK_IMPORTED_MODULE_3__.clone)(input);\n    }\n    // TODO call broadcastTo kernel directly once backends implement broadcstTo\n    const inputs = { x: input };\n    const attrs = { reps };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Tile, inputs, attrs);\n}\nconst broadcastTo = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ broadcastTo_ });\n//# sourceMappingURL=broadcast_to.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export assertAndGetBroadcastShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getBroadcastDims [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getReductionAxes [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getBroadcastDims\": () => /* binding */ getBroadcastDims,\n/* harmony export */   \"getReductionAxes\": () => /* binding */ getReductionAxes,\n/* harmony export */   \"assertAndGetBroadcastShape\": () => /* binding */ assertAndGetBroadcastShape\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Returns the dimensions in the input shape that are broadcasted to\n * produce the provided output shape.\n *\n * The returned dimensions are 0-indexed and sorted. An example:\n * inShape = [4, 1, 3]\n * outShape = [5, 4, 3, 3]\n * result = [1]. Dimension 1 (2nd dimension of input) gets broadcasted 1 => 3.\n */\nfunction getBroadcastDims(inShape, outShape) {\n    const inRank = inShape.length;\n    const dims = [];\n    for (let i = 0; i < inRank; i++) {\n        const dim = inRank - 1 - i;\n        const a = inShape[dim] || 1;\n        const b = outShape[outShape.length - 1 - i] || 1;\n        if (b > 1 && a === 1) {\n            dims.unshift(dim);\n        }\n    }\n    return dims;\n}\n/**\n * Returns the axes in the output space that should be reduced to produce\n * the input space.\n */\nfunction getReductionAxes(inShape, outShape) {\n    const result = [];\n    for (let i = 0; i < outShape.length; i++) {\n        const inDim = inShape[inShape.length - i - 1];\n        const outAxis = outShape.length - i - 1;\n        const outDim = outShape[outAxis];\n        if (inDim == null || (inDim === 1 && outDim > 1)) {\n            result.unshift(outAxis);\n        }\n    }\n    return result;\n}\nfunction assertAndGetBroadcastShape(shapeA, shapeB) {\n    const result = [];\n    const l = Math.max(shapeA.length, shapeB.length);\n    for (let i = 0; i < l; i++) {\n        let a = shapeA[shapeA.length - i - 1];\n        if (a == null) {\n            a = 1;\n        }\n        let b = shapeB[shapeB.length - i - 1];\n        if (b == null) {\n            b = 1;\n        }\n        if (a === 1) {\n            result.unshift(b);\n        }\n        else if (b === 1) {\n            result.unshift(a);\n        }\n        else if (a !== b) {\n            const errMsg = `Operands could not be broadcast together with shapes ` +\n                `${shapeA} and ${shapeB}.`;\n            throw Error(errMsg);\n        }\n        else {\n            result.unshift(a);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=broadcast_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/browser.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/browser.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export fromPixels [provided] [no usage info] [missing usage info prevents renaming] */
/*! export toPixels [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"toPixels\": () => /* binding */ toPixels,\n/* harmony export */   \"fromPixels\": () => /* binding */ fromPixels\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _kernel_registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_registry */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _tensor3d__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tensor3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\nlet fromPixels2DContext;\n/**\n * Creates a `tf.Tensor` from an image.\n *\n * ```js\n * const image = new ImageData(1, 1);\n * image.data[0] = 100;\n * image.data[1] = 150;\n * image.data[2] = 200;\n * image.data[3] = 255;\n *\n * tf.browser.fromPixels(image).print();\n * ```\n *\n * @param pixels The input image to construct the tensor from. The\n * supported image types are all 4-channel. You can also pass in an image\n * object with following attributes:\n * `{data: Uint8Array; width: number; height: number}`\n * @param numChannels The number of channels of the output tensor. A\n * numChannels value less than 4 allows you to ignore channels. Defaults to\n * 3 (ignores alpha channel of input image).\n *\n * @returns A Tensor3D with the shape `[height, width, numChannels]`.\n *\n * @doc {heading: 'Browser', namespace: 'browser', ignoreCI: true}\n */\nfunction fromPixels_(pixels, numChannels = 3) {\n    // Sanity checks.\n    if (numChannels > 4) {\n        throw new Error('Cannot construct Tensor with more than 4 channels from pixels.');\n    }\n    if (pixels == null) {\n        throw new Error('pixels passed to tf.browser.fromPixels() can not be null');\n    }\n    let isPixelData = false;\n    let isImageData = false;\n    let isVideo = false;\n    let isImage = false;\n    let isCanvasLike = false;\n    let isImageBitmap = false;\n    if (pixels.data instanceof Uint8Array) {\n        isPixelData = true;\n    }\n    else if (typeof (ImageData) !== 'undefined' && pixels instanceof ImageData) {\n        isImageData = true;\n    }\n    else if (typeof (HTMLVideoElement) !== 'undefined' &&\n        pixels instanceof HTMLVideoElement) {\n        isVideo = true;\n    }\n    else if (typeof (HTMLImageElement) !== 'undefined' &&\n        pixels instanceof HTMLImageElement) {\n        isImage = true;\n        // tslint:disable-next-line: no-any\n    }\n    else if (pixels.getContext != null) {\n        isCanvasLike = true;\n    }\n    else if (typeof (ImageBitmap) !== 'undefined' &&\n        pixels instanceof ImageBitmap) {\n        isImageBitmap = true;\n    }\n    else {\n        throw new Error('pixels passed to tf.browser.fromPixels() must be either an ' +\n            `HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData ` +\n            `in browser, or OffscreenCanvas, ImageData in webworker` +\n            ` or {data: Uint32Array, width: number, height: number}, ` +\n            `but was ${pixels.constructor.name}`);\n    }\n    if (isVideo) {\n        const HAVE_CURRENT_DATA_READY_STATE = 2;\n        if (isVideo &&\n            pixels.readyState <\n                HAVE_CURRENT_DATA_READY_STATE) {\n            throw new Error('The video element has not loaded data yet. Please wait for ' +\n                '`loadeddata` event on the <video> element.');\n        }\n    }\n    // If the current backend has 'FromPixels' registered, it has a more\n    // efficient way of handling pixel uploads, so we call that.\n    const kernel = (0,_kernel_registry__WEBPACK_IMPORTED_MODULE_2__.getKernel)(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.FromPixels, _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backendName);\n    if (kernel != null) {\n        const inputs = { pixels };\n        const attrs = { numChannels };\n        return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.FromPixels, inputs, attrs);\n    }\n    const [width, height] = isVideo ?\n        [\n            pixels.videoWidth,\n            pixels.videoHeight\n        ] :\n        [pixels.width, pixels.height];\n    let vals;\n    if (isCanvasLike) {\n        vals =\n            // tslint:disable-next-line:no-any\n            pixels.getContext('2d').getImageData(0, 0, width, height).data;\n    }\n    else if (isImageData || isPixelData) {\n        vals = pixels.data;\n    }\n    else if (isImage || isVideo || isImageBitmap) {\n        if (fromPixels2DContext == null) {\n            fromPixels2DContext = document.createElement('canvas').getContext('2d');\n        }\n        fromPixels2DContext.canvas.width = width;\n        fromPixels2DContext.canvas.height = height;\n        fromPixels2DContext.drawImage(pixels, 0, 0, width, height);\n        vals = fromPixels2DContext.getImageData(0, 0, width, height).data;\n    }\n    let values;\n    if (numChannels === 4) {\n        values = new Int32Array(vals);\n    }\n    else {\n        const numPixels = width * height;\n        values = new Int32Array(numPixels * numChannels);\n        for (let i = 0; i < numPixels; i++) {\n            for (let channel = 0; channel < numChannels; ++channel) {\n                values[i * numChannels + channel] = vals[i * 4 + channel];\n            }\n        }\n    }\n    const outShape = [height, width, numChannels];\n    return (0,_tensor3d__WEBPACK_IMPORTED_MODULE_4__.tensor3d)(values, outShape, 'int32');\n}\n/**\n * Draws a `tf.Tensor` of pixel values to a byte array or optionally a\n * canvas.\n *\n * When the dtype of the input is 'float32', we assume values in the range\n * [0-1]. Otherwise, when input is 'int32', we assume values in the range\n * [0-255].\n *\n * Returns a promise that resolves when the canvas has been drawn to.\n *\n * @param img A rank-2 tensor with shape `[height, width]`, or a rank-3 tensor\n * of shape `[height, width, numChannels]`. If rank-2, draws grayscale. If\n * rank-3, must have depth of 1, 3 or 4. When depth of 1, draws\n * grayscale. When depth of 3, we draw with the first three components of\n * the depth dimension corresponding to r, g, b and alpha = 1. When depth of\n * 4, all four components of the depth dimension correspond to r, g, b, a.\n * @param canvas The canvas to draw to.\n *\n * @doc {heading: 'Browser', namespace: 'browser'}\n */\nasync function toPixels(img, canvas) {\n    let $img = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_5__.convertToTensor)(img, 'img', 'toPixels');\n    if (!(img instanceof _tensor__WEBPACK_IMPORTED_MODULE_1__.Tensor)) {\n        // Assume int32 if user passed a native array.\n        const originalImgTensor = $img;\n        $img = (0,_cast__WEBPACK_IMPORTED_MODULE_6__.cast)(originalImgTensor, 'int32');\n        originalImgTensor.dispose();\n    }\n    if ($img.rank !== 2 && $img.rank !== 3) {\n        throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${$img.rank}.`);\n    }\n    const [height, width] = $img.shape.slice(0, 2);\n    const depth = $img.rank === 2 ? 1 : $img.shape[2];\n    if (depth > 4 || depth === 2) {\n        throw new Error(`toPixels only supports depth of size ` +\n            `1, 3 or 4 but got ${depth}`);\n    }\n    if ($img.dtype !== 'float32' && $img.dtype !== 'int32') {\n        throw new Error(`Unsupported type for toPixels: ${$img.dtype}.` +\n            ` Please use float32 or int32 tensors.`);\n    }\n    const data = await $img.data();\n    const multiplier = $img.dtype === 'float32' ? 255 : 1;\n    const bytes = new Uint8ClampedArray(width * height * 4);\n    for (let i = 0; i < height * width; ++i) {\n        const rgba = [0, 0, 0, 255];\n        for (let d = 0; d < depth; d++) {\n            const value = data[i * depth + d];\n            if ($img.dtype === 'float32') {\n                if (value < 0 || value > 1) {\n                    throw new Error(`Tensor values for a float32 Tensor must be in the ` +\n                        `range [0 - 1] but encountered ${value}.`);\n                }\n            }\n            else if ($img.dtype === 'int32') {\n                if (value < 0 || value > 255) {\n                    throw new Error(`Tensor values for a int32 Tensor must be in the ` +\n                        `range [0 - 255] but encountered ${value}.`);\n                }\n            }\n            if (depth === 1) {\n                rgba[0] = value * multiplier;\n                rgba[1] = value * multiplier;\n                rgba[2] = value * multiplier;\n            }\n            else {\n                rgba[d] = value * multiplier;\n            }\n        }\n        const j = i * 4;\n        bytes[j + 0] = Math.round(rgba[0]);\n        bytes[j + 1] = Math.round(rgba[1]);\n        bytes[j + 2] = Math.round(rgba[2]);\n        bytes[j + 3] = Math.round(rgba[3]);\n    }\n    if (canvas != null) {\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        const imageData = new ImageData(bytes, width, height);\n        ctx.putImageData(imageData, 0, 0);\n    }\n    if ($img !== img) {\n        $img.dispose();\n    }\n    return bytes;\n}\nconst fromPixels = (0,_operation__WEBPACK_IMPORTED_MODULE_7__.op)({ fromPixels_ });\n//# sourceMappingURL=browser.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/browser.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export buffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"buffer\": () => /* binding */ buffer\n/* harmony export */ });\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * Creates an empty `tf.TensorBuffer` with the specified `shape` and `dtype`.\n *\n * The values are stored in CPU as `TypedArray`. Fill the buffer using\n * `buffer.set()`, or by modifying directly `buffer.values`.\n *\n * When done, call `buffer.toTensor()` to get an immutable `tf.Tensor` with\n * those values.\n *\n * ```js\n * // Create a buffer and set values at particular indices.\n * const buffer = tf.buffer([2, 2]);\n * buffer.set(3, 0, 0);\n * buffer.set(5, 1, 0);\n *\n * // Convert the buffer back to a tensor.\n * buffer.toTensor().print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The dtype of the buffer. Defaults to 'float32'.\n * @param values The values of the buffer as `TypedArray`. Defaults to\n * zeros.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction buffer(shape, dtype = 'float32', values) {\n    dtype = dtype || 'float32';\n    _util__WEBPACK_IMPORTED_MODULE_1__.assertNonNegativeIntegerDimensions(shape);\n    return new _tensor__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer(shape, dtype, values);\n}\n//# sourceMappingURL=buffer.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export cast [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cast\": () => /* binding */ cast\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Casts a `tf.Tensor` to a new dtype.\n *\n * ```js\n * const x = tf.tensor1d([1.5, 2.5, 3]);\n * tf.cast(x, 'int32').print();\n * ```\n * @param x The input tensor to be casted.\n * @param dtype The dtype to cast the input tensor to.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction cast_(x, dtype) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'cast');\n    // Sanity checks.\n    if (!_util__WEBPACK_IMPORTED_MODULE_2__.isValidDtype(dtype)) {\n        throw new Error(`Failed to cast to unknown dtype ${dtype}`);\n    }\n    if (dtype === 'string' && $x.dtype !== 'string' ||\n        dtype !== 'string' && $x.dtype === 'string') {\n        throw new Error('Only strings can be casted to strings');\n    }\n    const inputs = { x: $x };\n    const attrs = { dtype };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Cast, inputs, attrs);\n}\nconst cast = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ cast_ });\n//# sourceMappingURL=cast.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/ceil.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/ceil.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export ceil [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ceil\": () => /* binding */ ceil\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes ceiling of input `tf.Tensor` element-wise: `ceil(x)`\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.ceil().print();  // or tf.ceil(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction ceil_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'ceil');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Ceil, inputs);\n}\nconst ceil = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ ceil_ });\n//# sourceMappingURL=ceil.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/ceil.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export clipByValue [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clipByValue\": () => /* binding */ clipByValue\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Clips values element-wise. `max(min(x, clipValueMax), clipValueMin)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.clipByValue(-2, 3).print();  // or tf.clipByValue(x, -2, 3)\n * ```\n * @param x The input tensor.\n * @param clipValueMin Lower-bound of range to be clipped to.\n * @param clipValueMax Upper-bound of range to be clipped to.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction clipByValue_(x, clipValueMin, clipValueMax) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'clipByValue');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert((clipValueMin <= clipValueMax), () => `Error in clip: min (${clipValueMin}) must be ` +\n        `less than or equal to max (${clipValueMax}).`);\n    const inputs = { x: $x };\n    const attrs = { clipValueMin, clipValueMax };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.ClipByValue, inputs, attrs);\n}\nconst clipByValue = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ clipByValue_ });\n//# sourceMappingURL=clip_by_value.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export clone [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clone\": () => /* binding */ clone\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Creates a new tensor with the same values and shape as the specified\n * tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n *\n * x.clone().print();\n * ```\n *\n * @param x The tensor to clone.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction clone_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'clone', 'string_or_numeric');\n    const inputs = { x: $x };\n    // Note this op is called tf.identity in python. Hence the kernel name used\n    // here.\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Identity, inputs);\n}\nconst clone = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ clone_ });\n//# sourceMappingURL=clone.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export complex [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"complex\": () => /* binding */ complex\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Converts two real numbers to a complex number.\n *\n * Given a tensor `real` representing the real part of a complex number, and a\n * tensor `imag` representing the imaginary part of a complex number, this\n * operation returns complex numbers elementwise of the form [r0, i0, r1, i1],\n * where r represents the real part and i represents the imag part.\n *\n * The input tensors real and imag must have the same shape.\n *\n * ```js\n * const real = tf.tensor1d([2.25, 3.25]);\n * const imag = tf.tensor1d([4.75, 5.75]);\n * const complex = tf.complex(real, imag);\n *\n * complex.print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction complex_(real, imag) {\n    const $real = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(real, 'real', 'complex');\n    const $imag = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(imag, 'imag', 'complex');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch($real.shape, $imag.shape, `real and imag shapes, ${$real.shape} and ${$imag.shape}, ` +\n        `must match in call to tf.complex().`);\n    const inputs = { real: $real, imag: $imag };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Complex, inputs);\n}\nconst complex = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ complex_ });\n//# sourceMappingURL=complex.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export concat [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concat\": () => /* binding */ concat\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _clone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./clone */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Concatenates a list of `tf.Tensor`s along a given axis.\n *\n * The tensors ranks and types must match, and their sizes must match in all\n * dimensions except `axis`.\n *\n * Also available are stricter rank-specific methods that assert that\n * `tensors` are of the given rank:\n *   - `tf.concat1d`\n *   - `tf.concat2d`\n *   - `tf.concat3d`\n *   - `tf.concat4d`\n *\n * Except `tf.concat1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * a.concat(b).print();  // or a.concat(b)\n * ```\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.concat([a, b, c]).print();\n * ```\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [10, 20]]);\n * const b = tf.tensor2d([[3, 4], [30, 40]]);\n * const axis = 1;\n * tf.concat([a, b], axis).print();\n * ```\n * @param tensors A list of tensors to concatenate.\n * @param axis The axis to concate along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction concat_(tensors, axis = 0) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(tensors.length >= 1, () => 'Pass at least one tensor to concat');\n    const $tensors = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_2__.convertToTensorArray)(tensors, 'tensors', 'concat', 'string_or_numeric');\n    if ($tensors[0].dtype === 'complex64') {\n        $tensors.forEach(tensor => {\n            if (tensor.dtype !== 'complex64') {\n                throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${tensor.dtype}. `);\n            }\n        });\n    }\n    if ($tensors.length === 1) {\n        return (0,_clone__WEBPACK_IMPORTED_MODULE_3__.clone)($tensors[0]);\n    }\n    const inputs = $tensors;\n    const attr = { axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Concat, inputs, attr);\n}\nconst concat = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ concat_ });\n//# sourceMappingURL=concat.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/concat_1d.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_1d.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export concat1d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concat1d\": () => /* binding */ concat1d\n/* harmony export */ });\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n;\n\n/**\n * Concatenates a list of`tf.Tensor1D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(3) = |r1, g1, b1|\n * B: shape(2) = |r2, g2|\n * C = tf.concat1d([A, B]) == |r1, g1, b1, r2, g2|\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @return The concatenated array.\n */\nfunction concat1d_(tensors) {\n    return (0,_concat__WEBPACK_IMPORTED_MODULE_0__.concat)(tensors, 0 /* axis */);\n}\nconst concat1d = (0,_operation__WEBPACK_IMPORTED_MODULE_1__.op)({ concat1d_ });\n//# sourceMappingURL=concat_1d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_1d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/concat_2d.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_2d.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export concat2d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concat2d\": () => /* binding */ concat2d\n/* harmony export */ });\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n;\n\n/**\n * Concatenates a list of`tf.Tensor2D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *\n * B: shape(2, 3) = | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * C = tf.concat2d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *                  | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * if axis = 1:\n * C = shape(2, 6) = | r1, g1, b1, r3, g3, b3 |\n *                   | r2, g2, b2, r4, g4, b4 |\n *\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concatenate along.\n * @return The concatenated array.\n */\nfunction concat2d_(tensors, axis) {\n    return (0,_concat__WEBPACK_IMPORTED_MODULE_0__.concat)(tensors, axis);\n}\nconst concat2d = (0,_operation__WEBPACK_IMPORTED_MODULE_1__.op)({ concat2d_ });\n//# sourceMappingURL=concat_2d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/concat_3d.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_3d.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export concat3d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concat3d\": () => /* binding */ concat3d\n/* harmony export */ });\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n;\n\n/**\n * Concatenates a list of `tf.Tensor3D`s along an axis.\n * See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *\n * B: shape(2, 1, 3) = | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * C = tf.concat3d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *                     | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * if axis = 1:\n * C: shape(2, 2, 3) = | r1, g1, b1, r3, g3, b3 |\n *                     | r2, g2, b2, r4, g4, b4 |\n *\n * if axis = 2:\n * C = shape(2, 1, 6) = | r1, g1, b1, r3, g3, b3 |\n *                      | r2, g2, b2, r4, g4, b4 |\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\nfunction concat3d_(tensors, axis) {\n    return (0,_concat__WEBPACK_IMPORTED_MODULE_0__.concat)(tensors, axis);\n}\nconst concat3d = (0,_operation__WEBPACK_IMPORTED_MODULE_1__.op)({ concat3d_ });\n//# sourceMappingURL=concat_3d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/concat_4d.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_4d.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export concat4d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"concat4d\": () => /* binding */ concat4d\n/* harmony export */ });\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n;\n\n/**\n * Concatenates a list of `tf.Tensor4D`s along an axis.\n * See `concat` for details.\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\nfunction concat4d_(tensors, axis) {\n    return (0,_concat__WEBPACK_IMPORTED_MODULE_0__.concat)(tensors, axis);\n}\nconst concat4d = (0,_operation__WEBPACK_IMPORTED_MODULE_1__.op)({ concat4d_ });\n//# sourceMappingURL=concat_4d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_4d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export assertParamsConsistent [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computeOutShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"assertParamsConsistent\": () => /* binding */ assertParamsConsistent,\n/* harmony export */   \"computeOutShape\": () => /* binding */ computeOutShape\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction assertParamsConsistent(shapes, axis) {\n    const rank = shapes[0].length;\n    shapes.forEach((shape, i) => {\n        _util__WEBPACK_IMPORTED_MODULE_0__.assert(shape.length === rank, () => `Error in concat${rank}D: rank of tensors[${i}] must be the same ` +\n            `as the rank of the rest (${rank})`);\n    });\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(axis >= 0 && axis < rank, () => `Error in concat${rank}D: axis must be between 0 and ${rank - 1}.`);\n    const firstShape = shapes[0];\n    shapes.forEach((shape, i) => {\n        for (let r = 0; r < rank; r++) {\n            _util__WEBPACK_IMPORTED_MODULE_0__.assert((r === axis) || (shape[r] === firstShape[r]), () => `Error in concat${rank}D: Shape of tensors[${i}] (${shape}) ` +\n                `does not match the shape of the rest (${firstShape}) ` +\n                `along the non-concatenated axis ${i}.`);\n        }\n    });\n}\nfunction computeOutShape(shapes, axis) {\n    const outputShape = shapes[0].slice();\n    for (let i = 1; i < shapes.length; i++) {\n        outputShape[axis] += shapes[i][axis];\n    }\n    return outputShape;\n}\n//# sourceMappingURL=concat_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/concat_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/confusion_matrix.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/confusion_matrix.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export confusionMatrix [provided] [no usage info] [missing usage info prevents renaming] */
/*! export confusionMatrix_ [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"confusionMatrix_\": () => /* binding */ confusionMatrix_,\n/* harmony export */   \"confusionMatrix\": () => /* binding */ confusionMatrix\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _one_hot__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./one_hot */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _transpose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./transpose */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n/**\n * Computes the confusion matrix from true labels and predicted labels.\n *\n * ```js\n * const labels = tf.tensor1d([0, 1, 2, 1, 0], 'int32');\n * const predictions = tf.tensor1d([0, 2, 2, 1, 0], 'int32');\n * const numClasses = 3;\n * const out = tf.math.confusionMatrix(labels, predictions, numClasses);\n * out.print();\n * // Expected output matrix:\n * // [[2, 0, 0],\n * //  [0, 1, 1],\n * //  [0, 0, 1]]\n * ```\n *\n * @param labels The target labels, assumed to be 0-based integers\n *   for the classes. The shape is `[numExamples]`, where\n *   `numExamples` is the number of examples included.\n * @param predictions The predicted classes, assumed to be\n *   0-based integers for the classes. Must have the same shape as `labels`.\n * @param numClasses Number of all classes, as an integer.\n *   Its value must be larger than the largest element in `labels` and\n *   `predictions`.\n * @returns The confusion matrix as a int32-type 2D tensor. The value at\n *   row `r` and column `c` is the number of times examples of actual class\n *   `r` were predicted as class `c`.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nfunction confusionMatrix_(labels, predictions, numClasses) {\n    const $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(labels, 'labels', 'confusionMatrix');\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(predictions, 'predictions', 'confusionMatrix');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(numClasses == null || numClasses > 0 && Number.isInteger(numClasses), () => `If provided, numClasses must be a positive integer, ` +\n        `but got ${numClasses}`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($labels.rank === 1, () => `Expected the rank of labels to be 1, but got ${$labels.rank}`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($predictions.rank === 1, () => `Expected the rank of predictions to be 1, ` +\n        `but got ${$predictions.rank}`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($labels.shape[0] === $predictions.shape[0], () => `Mismatch in the number of examples: ` +\n        `${$labels.shape[0]} vs. ${$predictions.shape[0]}. ` +\n        `Labels and predictions should have the same number of elements.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(numClasses > 0 && Number.isInteger(numClasses), () => `numClasses is required to be a positive integer, but got ` +\n        `${numClasses}`);\n    // TODO(cais): In the future, if oneHot supports tensors inputs for\n    //   `numClasses`, `confusionMatrix` can make `numClasses` optional.\n    const oneHotLabels = (0,_one_hot__WEBPACK_IMPORTED_MODULE_2__.oneHot)((0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)($labels, 'int32'), numClasses);\n    const oneHotPredictions = (0,_one_hot__WEBPACK_IMPORTED_MODULE_2__.oneHot)((0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)($predictions, 'int32'), numClasses);\n    const oneHotLabelsT = (0,_transpose__WEBPACK_IMPORTED_MODULE_4__.transpose)(oneHotLabels);\n    const product = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_5__.matMul)(oneHotLabelsT, oneHotPredictions);\n    return (0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)(product, 'int32');\n}\nconst confusionMatrix = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ confusionMatrix_ });\n//# sourceMappingURL=confusion_matrix.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/confusion_matrix.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv1d.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv1d.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export conv1d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv1d\": () => /* binding */ conv1d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _conv2d__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n;\n\n\n\n\n\n/**\n * Computes a 1D convolution over the input x.\n *\n * @param x The input tensor, of rank 3 or rank 2, of shape\n *     `[batch, width, inChannels]`. If rank 2, batch of 1 is assumed.\n * @param filter The filter, rank 3, of shape\n *     `[filterWidth, inDepth, outDepth]`.\n * @param stride The number of entries by which the filter is moved right at\n *     each step.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat An optional string from \"NWC\", \"NCW\". Defaults to \"NWC\",\n *     the data is stored in the order of [batch, in_width, in_channels]. Only\n *     \"NWC\" is currently supported.\n * @param dilation The dilation rate in which we sample input values in\n *     atrous convolution. Defaults to `1`. If it is greater than 1, then\n *     stride must be `1`.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv1d_(x, filter, stride, pad, dataFormat = 'NWC', dilation = 1, dimRoundingMode) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'conv1d');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(filter, 'filter', 'conv1d');\n    let x3D = $x;\n    let reshapedTo3D = false;\n    if ($x.rank === 2) {\n        reshapedTo3D = true;\n        x3D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)($x, [1, $x.shape[0], $x.shape[1]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(x3D.rank === 3, () => `Error in conv1d: input must be rank 3, but got rank ${x3D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($filter.rank === 3, () => `Error in conv1d: filter must be rank 3, but got rank ` +\n        `${$filter.rank}.`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isInt(pad), () => `Error in conv1d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(x3D.shape[2] === $filter.shape[1], () => `Error in conv1d: depth of input (${x3D.shape[2]}) must match ` +\n        `input depth for filter ${$filter.shape[1]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_3__.eitherStridesOrDilationsAreOne(stride, dilation), () => 'Error in conv1D: Either stride or dilation must be 1. ' +\n        `Got stride ${stride} and dilation '${dilation}'`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(dataFormat === 'NWC', () => `Error in conv1d: got dataFormat of ${dataFormat} but only NWC is currently supported.`);\n    const filter4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)($filter, [1, $filter.shape[0], $filter.shape[1], $filter.shape[2]]);\n    const input4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(x3D, [x3D.shape[0], 1, x3D.shape[1], x3D.shape[2]]);\n    const strides = [1, stride];\n    const dilations = [1, dilation];\n    const conv2dDataFormat = 'NHWC';\n    const res = (0,_conv2d__WEBPACK_IMPORTED_MODULE_4__.conv2d)(input4D, filter4D, strides, pad, conv2dDataFormat, dilations, dimRoundingMode);\n    if (reshapedTo3D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(res, [res.shape[2], res.shape[3]]);\n    }\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(res, [res.shape[0], res.shape[2], res.shape[3]]);\n}\nconst conv1d = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ conv1d_ });\n//# sourceMappingURL=conv1d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/conv1d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export conv2d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2d\": () => /* binding */ conv2d\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n/**\n * Computes a 2D convolution over the input x.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv2d_(x, filter, strides, pad, dataFormat = 'NHWC', dilations = [1, 1], dimRoundingMode) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'conv2d');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(filter, 'filter', 'conv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x4D.rank === 4, () => `Error in conv2d: input must be rank 4, but got rank ${x4D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert($filter.rank === 4, () => `Error in conv2d: filter must be rank 4, but got rank ` +\n        `${$filter.rank}.`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_3__.assert(_util__WEBPACK_IMPORTED_MODULE_3__.isInt(pad), () => `Error in conv2d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(inDepth === $filter.shape[2], () => `Error in conv2d: depth of input (${inDepth}) must match ` +\n        `input depth for filter ${$filter.shape[2]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_4__.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in conv2D: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const inputs = { x: x4D, filter: $filter };\n    const attrs = { strides, pad, dataFormat, dilations, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_5__.Conv2D, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst conv2d = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ conv2d_ });\n//# sourceMappingURL=conv2d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_filter.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_filter.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export conv2DBackpropFilter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2DBackpropFilter\": () => /* binding */ conv2DBackpropFilter\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Computes the derivative of the filter of a 2D convolution.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     [batch, height, width, inChannels]. If rank 3, batch of 1 is assumed.\n * @param dy The dy image, of rank 4 or rank 3, of shape\n *     [batch, height, width, outDepth]. If rank 3, batch of 1 is assumed.\n * @param filterShape The shape of the filter, length 4,\n *     [filterHeight, filterWidth, inDepth, outDepth].\n * @param strides The strides of the convolution: [strideHeight,\n * strideWidth].\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction conv2DBackpropFilter_(x, dy, filterShape, strides, pad, dataFormat = 'NHWC', dimRoundingMode) {\n    let x4D = x;\n    if (x.rank === 3) {\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n    }\n    let dy4D = dy;\n    if (dy4D.rank === 3) {\n        dy4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(x4D.rank === 4, () => `Error in conv2dDerFilter: input must be rank 4, but got shape ` +\n        `${x4D.shape}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(dy4D.rank === 4, () => `Error in conv2dDerFilter: dy must be rank 4, but got shape ` +\n        `${dy4D.shape}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(filterShape.length === 4, () => `Error in conv2dDerFilter: filterShape must be length 4, but got ` +\n        `${filterShape}.`);\n    const inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n    const outDepth = dataFormat === 'NHWC' ? dy4D.shape[3] : dy4D.shape[1];\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(inDepth === filterShape[2], () => `Error in conv2dDerFilter: depth of input ${inDepth}) must ` +\n        `match input depth in filter (${filterShape[2]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(outDepth === filterShape[3], () => `Error in conv2dDerFilter: depth of dy (${outDepth}) must ` +\n        `match output depth for filter (${filterShape[3]}).`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isInt(pad), () => `Error in conv2dDerFilter: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x4D, dy: dy4D };\n    const attrs = { strides, pad, dataFormat, dimRoundingMode, filterShape };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Conv2DBackpropFilter, inputs, attrs);\n}\nconst conv2DBackpropFilter = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ conv2DBackpropFilter_ });\n//# sourceMappingURL=conv2d_backprop_filter.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_filter.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_input.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_input.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export conv2DBackpropInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2DBackpropInput\": () => /* binding */ conv2DBackpropInput\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Computes the derivative of the input of a 2D convolution.\n *\n * @param xShape The shape of the input: [batch, height, width, inDepth].\n * If length of 3, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 4 or rank 3 of shape\n *   `[batch, outHeight, outWidth, outDepth]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction conv2DBackpropInput_(xShape, dy, filter, strides, pad, dataFormat = 'NHWC', dimRoundingMode) {\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(xShape.length === dy.rank, () => `Length of inShape ` +\n        `(${xShape.length}) and rank of dy (${dy.rank}) must match`);\n    let xShape4D = xShape;\n    let dy4D = dy;\n    let reshapedTo4D = false;\n    if (dy.rank === 3) {\n        reshapedTo4D = true;\n        dy4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n        xShape4D = [1, xShape[0], xShape[1], xShape[2]];\n    }\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(xShape4D.length === 4, () => `Error in conv2dDerInput: inShape must be length 4, but got length ` +\n        `${xShape4D.length}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(dy4D.rank === 4, () => `Error in conv2dDerInput: dy must be rank 4, but got ` +\n        `rank ${dy4D.rank}`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(filter.rank === 4, () => `Error in conv2dDerInput: filter must be rank 4, but got ` +\n        `rank ${filter.rank}`);\n    const inDepth = dataFormat === 'NHWC' ? xShape4D[3] : xShape4D[1];\n    const outDepth = dataFormat === 'NHWC' ? dy4D.shape[3] : dy4D.shape[1];\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(inDepth === filter.shape[2], () => `Error in conv2dDerInput: depth of input (${inDepth}) must ` +\n        `match input depth for filter ${filter.shape[2]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(outDepth === filter.shape[3], () => `Error in conv2dDerInput: depth of output (${outDepth}) must ` +\n        `match output depth for filter ${filter.shape[3]}.`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert(_util__WEBPACK_IMPORTED_MODULE_1__.isInt(pad), () => `Error in conv2dDerInput: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { dy: dy4D, filter };\n    const attrs = { strides, pad, dataFormat, dimRoundingMode, inputShape: xShape4D };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Conv2DBackpropInput, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst conv2DBackpropInput = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ conv2DBackpropInput_ });\n//# sourceMappingURL=conv2d_backprop_input.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_input.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export conv2dTranspose [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2dTranspose\": () => /* binding */ conv2dTranspose\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _conv2d_backprop_input__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conv2d_backprop_input */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_input.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n;\n\n\n/**\n * Computes the transposed 2D convolution of an image, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 4 or rank 3, of shape\n *   `[batch, height, width, inDepth]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 4 or rank 3:\n *     `[batch, height, width, outDepth]`. If rank 3, batch of 1 is assumed.\n * @param strides The strides of the original convolution:\n *     `[strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv2dTranspose_(x, filter, outputShape, strides, pad, dimRoundingMode) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'conv2dTranspose');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(filter, 'filter', 'conv2dTranspose');\n    return (0,_conv2d_backprop_input__WEBPACK_IMPORTED_MODULE_1__.conv2DBackpropInput)(outputShape, $x, $filter, strides, pad, 'NHWC', dimRoundingMode);\n}\nconst conv2dTranspose = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ conv2dTranspose_ });\n//# sourceMappingURL=conv2d_transpose.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export conv3d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv3d\": () => /* binding */ conv3d\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n/**\n * Computes a 3D convolution over the input x.\n *\n * @param x The input tensor, of rank 5 or rank 4, of shape\n *     `[batch, depth, height, width, channels]`. If rank 4,\n * batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inChannels, outChannels]`.\n *      inChannels must match between input and filter.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat: An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationDepth, dilationHeight,\n *     dilationWidth]` in which we sample input values across the height\n *     and width dimensions in atrous convolution. Defaults to `[1, 1, 1]`.\n *     If `dilations` is a single number, then\n *     `dilationDepth == dilationHeight == dilationWidth`. If it is greater\n *     than 1, then all values of `strides` must be 1.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv3d_(x, filter, strides, pad, dataFormat = 'NDHWC', dilations = [1, 1, 1]) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'conv3d');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(filter, 'filter', 'conv3d');\n    let x5D = $x;\n    let reshapedTo5D = false;\n    if ($x.rank === 4) {\n        reshapedTo5D = true;\n        x5D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x5D.rank === 5, () => `Error in conv3d: input must be rank 5, but got rank ${x5D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert($filter.rank === 5, () => `Error in conv3d: filter must be rank 5, but got rank ` +\n        `${$filter.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x5D.shape[4] === $filter.shape[3], () => `Error in conv3d: depth of input (${x5D.shape[4]}) must match ` +\n        `input depth for filter ${$filter.shape[3]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert((0,_conv_util__WEBPACK_IMPORTED_MODULE_4__.eitherStridesOrDilationsAreOne)(strides, dilations), () => 'Error in conv3D: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(dataFormat === 'NDHWC', () => `Error in conv3d: got dataFormat of ${dataFormat} but only NDHWC is currently supported.`);\n    const inputs = { x: x5D, filter: $filter };\n    const attrs = { strides, pad, dataFormat, dilations };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_5__.Conv3D, inputs, attrs);\n    if (reshapedTo5D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n    }\n    return res;\n}\nconst conv3d = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ conv3d_ });\n//# sourceMappingURL=conv3d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_backprop_input.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_backprop_input.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export conv3DBackpropInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv3DBackpropInput\": () => /* binding */ conv3DBackpropInput\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Computes the derivative of the input of a 3D convolution.\n *\n * @param xShape The shape of the input: [batch, depth, height, width,\n * in_channels]. If length of 4, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 5 or rank 4 of shape\n *   `[batch, outDepth, outHeight, outWidth, in_channels]`.\n * If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n */\nfunction conv3DBackpropInput_(xShape, dy, filter, strides, pad) {\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(xShape.length === dy.rank, () => `Length of inShape ` +\n        `(${xShape.length}) and rank of dy (${dy.rank}) must match`);\n    let xShape5D = xShape;\n    let dy5D = dy;\n    let reshapedTo5D = false;\n    if (dy.rank === 4) {\n        reshapedTo5D = true;\n        dy5D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2], dy.shape[3]]);\n        xShape5D = [1, xShape[0], xShape[1], xShape[2], xShape[3]];\n    }\n    const inDepth = xShape5D[4];\n    const outDepth = dy5D.shape[4];\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(xShape5D.length === 5, () => `Error in conv3dDerInput: inShape must be length 5, but got length ` +\n        `${xShape5D.length}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(dy5D.rank === 5, () => `Error in conv3dDerInput: dy must be rank 5, but got ` +\n        `rank ${dy5D.rank}`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(filter.rank === 5, () => `Error in conv3dDerInput: filter must be rank 5, but got ` +\n        `rank ${filter.rank}`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(inDepth === filter.shape[3], () => `Error in conv3dDerInput: depth of input (${inDepth}) must ` +\n        `match input depth for filter ${filter.shape[3]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(outDepth === filter.shape[4], () => `Error in conv3dDerInput: depth of output (${outDepth}) must ` +\n        `match output depth for filter ${filter.shape[4]}.`);\n    const inputs = { dy: dy5D, filter };\n    const attrs = { pad, strides, inputShape: xShape5D };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Conv3DBackpropInputV2, inputs, attrs);\n    if (reshapedTo5D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n    }\n    return res;\n}\nconst conv3DBackpropInput = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ conv3DBackpropInput_ });\n//# sourceMappingURL=conv3d_backprop_input.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_backprop_input.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_transpose.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_transpose.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export conv3dTranspose [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv3dTranspose\": () => /* binding */ conv3dTranspose\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _conv3d_backprop_input__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conv3d_backprop_input */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_backprop_input.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n;\n\n\n/**\n * Computes the transposed 3D convolution of a volume, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 5 or rank 4, of shape\n *   `[batch, depth, height, width, inDepth]`. If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[depth, filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 5 or rank 4:\n *     `[batch, depth, height, width, outDepth]`. If rank 3, batch of 1 is\n *    assumed.\n * @param strides The strides of the original convolution:\n *     `[strideDepth, strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv3dTranspose_(x, filter, outputShape, strides, pad) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'conv3dTranspose');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(filter, 'filter', 'conv3dTranspose');\n    return (0,_conv3d_backprop_input__WEBPACK_IMPORTED_MODULE_1__.conv3DBackpropInput)(outputShape, $x, $filter, strides, pad);\n}\nconst conv3dTranspose = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ conv3dTranspose_ });\n//# sourceMappingURL=conv3d_transpose.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_transpose.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export computeConv2DInfo [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computeConv3DInfo [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computeDefaultPad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computeDilation2DInfo [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computePool2DInfo [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computePool3DInfo [provided] [no usage info] [missing usage info prevents renaming] */
/*! export convertConv2DDataFormat [provided] [no usage info] [missing usage info prevents renaming] */
/*! export eitherStridesOrDilationsAreOne [provided] [no usage info] [missing usage info prevents renaming] */
/*! export tupleValuesAreOne [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"computeDilation2DInfo\": () => /* binding */ computeDilation2DInfo,\n/* harmony export */   \"computePool2DInfo\": () => /* binding */ computePool2DInfo,\n/* harmony export */   \"computePool3DInfo\": () => /* binding */ computePool3DInfo,\n/* harmony export */   \"computeConv2DInfo\": () => /* binding */ computeConv2DInfo,\n/* harmony export */   \"computeConv3DInfo\": () => /* binding */ computeConv3DInfo,\n/* harmony export */   \"computeDefaultPad\": () => /* binding */ computeDefaultPad,\n/* harmony export */   \"tupleValuesAreOne\": () => /* binding */ tupleValuesAreOne,\n/* harmony export */   \"eitherStridesOrDilationsAreOne\": () => /* binding */ eitherStridesOrDilationsAreOne,\n/* harmony export */   \"convertConv2DDataFormat\": () => /* binding */ convertConv2DDataFormat\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n *\n * @param inputShape Input tensor shape is of the following dimensions:\n *     `[batch, height, width, inChannels]`.\n * @param filterShape The filter shape is of the following dimensions:\n *     `[filterHeight, filterWidth, depth]`.\n * @param strides The strides of the sliding window for each dimension of the\n *     input tensor: `[strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat The data format of the input and output data.\n *     Defaults to 'NHWC'.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`.\n *     Defaults to `[1, 1]`. If `dilations` is a single number, then\n *     `dilationHeight == dilationWidth`.\n */\nfunction computeDilation2DInfo(inputShape, filterShape, strides, pad, dataFormat = 'NHWC', dilations) {\n    // `computerConv2DInfo` require filterShape to be in the dimension of:\n    // `[filterHeight, filterWidth, depth, outDepth]`, dilation2d doesn't have\n    // outDepth, it should have the same depth as the input.\n    // Input shape: [batch, height, width, inChannels]\n    const inputChannels = inputShape[3];\n    const $filterShape = [...filterShape, inputChannels];\n    const $dataFormat = convertConv2DDataFormat(dataFormat);\n    return computeConv2DInfo(inputShape, $filterShape, strides, dilations, pad, null /* roundingMode */, null /* depthWise */, $dataFormat);\n}\nfunction computePool2DInfo(inShape, filterSize, strides, dilations, pad, roundingMode, dataFormat = 'channelsLast') {\n    const [filterHeight, filterWidth] = parseTupleParam(filterSize);\n    let filterShape;\n    if (dataFormat === 'channelsLast') {\n        filterShape = [filterHeight, filterWidth, inShape[3], inShape[3]];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        filterShape = [filterHeight, filterWidth, inShape[1], inShape[1]];\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    return computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, false, dataFormat);\n}\n/**\n * Computes the information for a forward pass of a pooling3D operation.\n */\nfunction computePool3DInfo(inShape, filterSize, strides, dilations, pad, roundingMode, dataFormat = 'NDHWC') {\n    const [filterDepth, filterHeight, filterWidth] = parse3TupleParam(filterSize);\n    let filterShape;\n    let $dataFormat;\n    if (dataFormat === 'NDHWC') {\n        $dataFormat = 'channelsLast';\n        filterShape =\n            [filterDepth, filterHeight, filterWidth, inShape[4], inShape[4]];\n    }\n    else if (dataFormat === 'NCDHW') {\n        $dataFormat = 'channelsFirst';\n        filterShape =\n            [filterDepth, filterHeight, filterWidth, inShape[1], inShape[1]];\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    return computeConv3DInfo(inShape, filterShape, strides, dilations, pad, false, $dataFormat, roundingMode);\n}\n/**\n * Computes the information for a forward pass of a convolution/pooling\n * operation.\n */\nfunction computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, depthwise = false, dataFormat = 'channelsLast') {\n    let [batchSize, inHeight, inWidth, inChannels] = [-1, -1, -1, -1];\n    if (dataFormat === 'channelsLast') {\n        [batchSize, inHeight, inWidth, inChannels] = inShape;\n    }\n    else if (dataFormat === 'channelsFirst') {\n        [batchSize, inChannels, inHeight, inWidth] = inShape;\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    const [filterHeight, filterWidth, , filterChannels] = filterShape;\n    const [strideHeight, strideWidth] = parseTupleParam(strides);\n    const [dilationHeight, dilationWidth] = parseTupleParam(dilations);\n    const effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);\n    const effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);\n    const { padInfo, outHeight, outWidth } = getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, effectiveFilterHeight, effectiveFilterWidth, roundingMode, dataFormat);\n    const outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n    let outShape;\n    if (dataFormat === 'channelsFirst') {\n        outShape = [batchSize, outChannels, outHeight, outWidth];\n    }\n    else if (dataFormat === 'channelsLast') {\n        outShape = [batchSize, outHeight, outWidth, outChannels];\n    }\n    return {\n        batchSize,\n        dataFormat,\n        inHeight,\n        inWidth,\n        inChannels,\n        outHeight,\n        outWidth,\n        outChannels,\n        padInfo,\n        strideHeight,\n        strideWidth,\n        filterHeight,\n        filterWidth,\n        effectiveFilterHeight,\n        effectiveFilterWidth,\n        dilationHeight,\n        dilationWidth,\n        inShape,\n        outShape,\n        filterShape\n    };\n}\n/**\n * Computes the information for a forward pass of a 3D convolution/pooling\n * operation.\n */\nfunction computeConv3DInfo(inShape, filterShape, strides, dilations, pad, depthwise = false, dataFormat = 'channelsLast', roundingMode) {\n    let [batchSize, inDepth, inHeight, inWidth, inChannels] = [-1, -1, -1, -1, -1];\n    if (dataFormat === 'channelsLast') {\n        [batchSize, inDepth, inHeight, inWidth, inChannels] = inShape;\n    }\n    else if (dataFormat === 'channelsFirst') {\n        [batchSize, inChannels, inDepth, inHeight, inWidth] = inShape;\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    const [filterDepth, filterHeight, filterWidth, , filterChannels] = filterShape;\n    const [strideDepth, strideHeight, strideWidth] = parse3TupleParam(strides);\n    const [dilationDepth, dilationHeight, dilationWidth] = parse3TupleParam(dilations);\n    const effectiveFilterDepth = getEffectiveFilterSize(filterDepth, dilationDepth);\n    const effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);\n    const effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);\n    const { padInfo, outDepth, outHeight, outWidth } = get3DPadAndOutInfo(pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth, effectiveFilterDepth, effectiveFilterHeight, effectiveFilterWidth, roundingMode);\n    const outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n    let outShape;\n    if (dataFormat === 'channelsFirst') {\n        outShape = [batchSize, outChannels, outDepth, outHeight, outWidth];\n    }\n    else if (dataFormat === 'channelsLast') {\n        outShape = [batchSize, outDepth, outHeight, outWidth, outChannels];\n    }\n    return {\n        batchSize,\n        dataFormat,\n        inDepth,\n        inHeight,\n        inWidth,\n        inChannels,\n        outDepth,\n        outHeight,\n        outWidth,\n        outChannels,\n        padInfo,\n        strideDepth,\n        strideHeight,\n        strideWidth,\n        filterDepth,\n        filterHeight,\n        filterWidth,\n        effectiveFilterDepth,\n        effectiveFilterHeight,\n        effectiveFilterWidth,\n        dilationDepth,\n        dilationHeight,\n        dilationWidth,\n        inShape,\n        outShape,\n        filterShape\n    };\n}\nfunction computeOutputShape2D(inShape, fieldSize, stride, zeroPad, roundingMode) {\n    if (zeroPad == null) {\n        zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n    }\n    const inputRows = inShape[0];\n    const inputCols = inShape[1];\n    const outputRows = round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    const outputCols = round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    return [outputRows, outputCols];\n}\nfunction computeOutputShape4D(inShape, fieldSize, outChannels, stride, zeroPad, roundingMode) {\n    if (zeroPad == null) {\n        zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n    }\n    const inputDepth = inShape[0];\n    const inputRows = inShape[1];\n    const inputCols = inShape[2];\n    const outputDepths = round((inputDepth - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    const outputRows = round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    const outputCols = round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    return [outputDepths, outputRows, outputCols, outChannels];\n}\nfunction computeDefaultPad(inputShape, fieldSize, stride, dilation = 1) {\n    const effectiveFieldSize = getEffectiveFilterSize(fieldSize, dilation);\n    return Math.floor((inputShape[0] * (stride - 1) - stride + effectiveFieldSize) / 2);\n}\nfunction parseTupleParam(param) {\n    if (typeof param === 'number') {\n        return [param, param, param];\n    }\n    if (param.length === 2) {\n        return [param[0], param[1], 1];\n    }\n    return param;\n}\nfunction parse3TupleParam(param) {\n    return typeof param === 'number' ? [param, param, param] : param;\n}\n/* See https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d\n * Atrous convolution is equivalent to standard convolution with upsampled\n * filters with effective_filter_height =\n * filter_height + (filter_height - 1) * (dilation - 1)\n * and effective_filter_width =\n * filter_width + (filter_width - 1) * (dilation - 1),\n * produced by inserting dilation - 1 zeros along consecutive elements across\n * the filters' spatial dimensions.\n * When there is a dilation, this converts a filter dimension to the\n * effective filter dimension, so it can be used in a standard convolution.\n */\nfunction getEffectiveFilterSize(filterSize, dilation) {\n    if (dilation <= 1) {\n        return filterSize;\n    }\n    return filterSize + (filterSize - 1) * (dilation - 1);\n}\nfunction getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, filterHeight, filterWidth, roundingMode, dataFormat) {\n    let padInfo;\n    let outHeight;\n    let outWidth;\n    if (typeof pad === 'number') {\n        const padType = (pad === 0) ? 'VALID' : 'NUMBER';\n        padInfo = { top: pad, bottom: pad, left: pad, right: pad, type: padType };\n        const outShape = computeOutputShape2D([inHeight, inWidth], filterHeight, strideHeight, pad, roundingMode);\n        outHeight = outShape[0];\n        outWidth = outShape[1];\n    }\n    else if (pad === 'same') {\n        outHeight = Math.ceil(inHeight / strideHeight);\n        outWidth = Math.ceil(inWidth / strideWidth);\n        const padAlongHeight = Math.max(0, (outHeight - 1) * strideHeight + filterHeight - inHeight);\n        const padAlongWidth = Math.max(0, (outWidth - 1) * strideWidth + filterWidth - inWidth);\n        const top = Math.floor(padAlongHeight / 2);\n        const bottom = padAlongHeight - top;\n        const left = Math.floor(padAlongWidth / 2);\n        const right = padAlongWidth - left;\n        padInfo = { top, bottom, left, right, type: 'SAME' };\n    }\n    else if (pad === 'valid') {\n        padInfo = { top: 0, bottom: 0, left: 0, right: 0, type: 'VALID' };\n        outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n        outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n    }\n    else if (typeof pad === 'object') {\n        const top = dataFormat === 'channelsLast' ? pad[1][0] : pad[2][0];\n        const bottom = dataFormat === 'channelsLast' ? pad[1][1] : pad[2][1];\n        const left = dataFormat === 'channelsLast' ? pad[2][0] : pad[3][0];\n        const right = dataFormat === 'channelsLast' ? pad[2][1] : pad[3][1];\n        const padType = (top === 0 && bottom === 0 && left === 0 && right === 0) ?\n            'VALID' :\n            'EXPLICIT';\n        padInfo = { top, bottom, left, right, type: padType };\n        outHeight = round((inHeight - filterHeight + top + bottom) / strideHeight + 1, roundingMode);\n        outWidth = round((inWidth - filterWidth + left + right) / strideWidth + 1, roundingMode);\n    }\n    else {\n        throw Error(`Unknown padding parameter: ${pad}`);\n    }\n    return { padInfo, outHeight, outWidth };\n}\nfunction get3DPadAndOutInfo(pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth, filterDepth, filterHeight, filterWidth, roundingMode) {\n    let padInfo;\n    let outDepth;\n    let outHeight;\n    let outWidth;\n    if (typeof pad === 'number') {\n        const padType = (pad === 0) ? 'VALID' : 'NUMBER';\n        padInfo = {\n            top: pad,\n            bottom: pad,\n            left: pad,\n            right: pad,\n            front: pad,\n            back: pad,\n            type: padType\n        };\n        const outShape = computeOutputShape4D([inDepth, inHeight, inWidth, 1], filterDepth, 1, strideDepth, pad, roundingMode);\n        outDepth = outShape[0];\n        outHeight = outShape[1];\n        outWidth = outShape[2];\n    }\n    else if (pad === 'same') {\n        outDepth = Math.ceil(inDepth / strideDepth);\n        outHeight = Math.ceil(inHeight / strideHeight);\n        outWidth = Math.ceil(inWidth / strideWidth);\n        const padAlongDepth = (outDepth - 1) * strideDepth + filterDepth - inDepth;\n        const padAlongHeight = (outHeight - 1) * strideHeight + filterHeight - inHeight;\n        const padAlongWidth = (outWidth - 1) * strideWidth + filterWidth - inWidth;\n        const front = Math.floor(padAlongDepth / 2);\n        const back = padAlongDepth - front;\n        const top = Math.floor(padAlongHeight / 2);\n        const bottom = padAlongHeight - top;\n        const left = Math.floor(padAlongWidth / 2);\n        const right = padAlongWidth - left;\n        padInfo = { top, bottom, left, right, front, back, type: 'SAME' };\n    }\n    else if (pad === 'valid') {\n        padInfo = {\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            front: 0,\n            back: 0,\n            type: 'VALID'\n        };\n        outDepth = Math.ceil((inDepth - filterDepth + 1) / strideDepth);\n        outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n        outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n    }\n    else {\n        throw Error(`Unknown padding parameter: ${pad}`);\n    }\n    return { padInfo, outDepth, outHeight, outWidth };\n}\n/**\n * Rounds a value depending on the rounding mode\n * @param value\n * @param roundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction round(value, roundingMode) {\n    if (!roundingMode) {\n        return Math.trunc(value);\n    }\n    switch (roundingMode) {\n        case 'round':\n            // used for Caffe Conv\n            return Math.round(value);\n        case 'ceil':\n            // used for Caffe Pool\n            return Math.ceil(value);\n        case 'floor':\n            return Math.floor(value);\n        default:\n            throw new Error(`Unknown roundingMode ${roundingMode}`);\n    }\n}\nfunction tupleValuesAreOne(param) {\n    const [dimA, dimB, dimC] = parseTupleParam(param);\n    return dimA === 1 && dimB === 1 && dimC === 1;\n}\nfunction eitherStridesOrDilationsAreOne(strides, dilations) {\n    return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);\n}\n/**\n * Convert Conv2D dataFormat from 'NHWC'|'NCHW' to\n *    'channelsLast'|'channelsFirst'\n * @param dataFormat in 'NHWC'|'NCHW' mode\n * @return dataFormat in 'channelsLast'|'channelsFirst' mode\n * @throws unknown dataFormat\n */\nfunction convertConv2DDataFormat(dataFormat) {\n    if (dataFormat === 'NHWC') {\n        return 'channelsLast';\n    }\n    else if (dataFormat === 'NCHW') {\n        return 'channelsFirst';\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n}\n//# sourceMappingURL=conv_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/cos.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/cos.js ***!
  \************************************************************/
/*! namespace exports */
/*! export cos [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cos\": () => /* binding */ cos\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes cos of the input `tf.Tensor` element-wise: `cos(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.cos().print();  // or tf.cos(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction cos_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'cos');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Cos, inputs);\n}\nconst cos = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ cos_ });\n//# sourceMappingURL=cos.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/cos.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/cosh.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/cosh.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export cosh [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cosh\": () => /* binding */ cosh\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes hyperbolic cos of the input `tf.Tensor` element-wise: `cosh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.cosh().print();  // or tf.cosh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction cosh_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'cosh');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Cosh, inputs);\n}\nconst cosh = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ cosh_ });\n//# sourceMappingURL=cosh.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/cosh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/cumsum.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/cumsum.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export cumsum [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cumsum\": () => /* binding */ cumsum\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes the cumulative sum of a `tf.Tensor` along `axis`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4]);\n * x.cumsum().print();\n * ```\n * ```js\n * const x = tf.tensor([[1, 2], [3, 4]]);\n * x.cumsum().print();\n * ```\n *\n * @param x The input tensor to be summed.\n * @param axis The axis along which to sum. Optional. Defaults to 0.\n * @param exclusive Whether to perform exclusive cumulative sum. Optional.\n *     Defaults to false. If set to true then the sum of each tensor entry\n *     does not include its own value, but only the values previous to it\n *     along the specified axis.\n * @param reverse Whether to sum in the opposite direction. Optional.\n *     Defaults to false.\n *\n * @doc {heading: 'Operations', subheading: 'Scan'}\n */\nfunction cumsum_(x, axis = 0, exclusive = false, reverse = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'cumsum');\n    const inputs = { x: $x };\n    const attrs = { axis, exclusive, reverse };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Cumsum, inputs, attrs);\n}\nconst cumsum = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ cumsum_ });\n//# sourceMappingURL=cumsum.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/cumsum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/dense_bincount.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/dense_bincount.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export denseBincount [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"denseBincount\": () => /* binding */ denseBincount\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Outputs a vector with length `size` and the same dtype as `weights`.\n *\n * If `weights` are empty, then index `i` stores the number of times the value\n * `i` is counted in `x`. If `weights` are non-empty, then index `i` stores the\n * sum of the value in `weights` at each index where the corresponding value in\n * `x` is `i`.\n *\n * Values in `x` outside of the range [0, size) are ignored.\n *\n * @param x The input int tensor, rank 1 or rank 2.\n * @param weights The weights tensor, must have the same shape as x, or a\n *     length-0 Tensor, in which case it acts as all weights equal to 1.\n * @param size Non-negative integer.\n * @param binaryOutput Optional. Whether the kernel should count the appearance\n *     or number of occurrences. Defaults to False.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction denseBincount_(x, weights, size, binaryOutput = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'denseBincount');\n    const $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'denseBincount');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.dtype === 'int32', () => `Error in denseBincount: input ` +\n        `dtype must be int32, but got ${$x.dtype}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank <= 2, () => `Error in denseBincount: input must be at most rank 2, but got ` +\n        `rank ${$x.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(size >= 0, () => `size must be non-negative, but got ${size}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($weights.size === $x.size || $weights.size === 0, () => `Error in denseBincount: weights must have the same shape as x or ` +\n        `0-length, but got x shape: ${$x.shape}, weights shape: ` +\n        `${$weights.shape}.`);\n    const inputs = { x: $x, weights: $weights };\n    const attrs = { size, binaryOutput };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.DenseBincount, inputs, attrs);\n}\nconst denseBincount = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ denseBincount_ });\n//# sourceMappingURL=dense_bincount.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/dense_bincount.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/depth_to_space.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/depth_to_space.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export depthToSpace [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthToSpace\": () => /* binding */ depthToSpace\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Rearranges data from depth into blocks of spatial data. More specifically,\n * this op outputs a copy of the input tensor where values from the `depth`\n * dimension are moved in spatial blocks to the `height` and `width` dimensions.\n * The attr `blockSize` indicates the input block size and how the data is\n * moved.\n *\n *  - Chunks of data of size `blockSize * blockSize` from depth are rearranged\n * into non-overlapping blocks of size `blockSize x blockSize`\n *\n *  - The width the output tensor is `inputWidth * blockSize`, whereas the\n * height is `inputHeight * blockSize`\n *\n *  - The Y, X coordinates within each block of the output image are determined\n * by the high order component of the input channel index\n *\n *  - The depth of the input tensor must be divisible by `blockSize *\n * blockSize`\n *\n * The `dataFormat` attr specifies the layout of the input and output tensors\n * with the following options: \"NHWC\": [ `batch, height, width, channels` ]\n * \"NCHW\": [ `batch, channels, height, width` ]\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 1, 1, 4]);\n * const blockSize = 2;\n * const dataFormat = \"NHWC\";\n *\n * tf.depthToSpace(x, blockSize, dataFormat).print();\n * ```\n *\n * @param x The input tensor of rank 4\n * @param blockSIze  An `int` that is `>= 2`. The size of the spatial block\n * @param dataFormat An optional string from: \"NHWC\", \"NCHW\". Defaults to \"NHWC\"\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction depthToSpace_(x, blockSize, dataFormat = 'NHWC') {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'depthToSpace');\n    const inputHeight = (dataFormat === 'NHWC') ? $x.shape[1] : $x.shape[2];\n    const inputWidth = (dataFormat === 'NHWC') ? $x.shape[2] : $x.shape[3];\n    const inputDepth = (dataFormat === 'NHWC') ? $x.shape[3] : $x.shape[1];\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(inputHeight * blockSize >= 0, () => `Negative dimension size caused by overflow when multiplying\n    ${inputHeight} and ${blockSize}  for depthToSpace with input shape\n    ${$x.shape}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(inputWidth * blockSize >= 0, () => `Negative dimension size caused by overflow when multiplying\n    ${inputWidth} and ${blockSize} for depthToSpace with input shape\n        ${$x.shape}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert((inputDepth % (blockSize * blockSize) === 0), () => `Dimension size must be evenly divisible by ${blockSize * blockSize} but is ${inputDepth} for depthToSpace with input shape ${$x.shape}`);\n    const inputs = { x: $x };\n    const attrs = { blockSize, dataFormat };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.DepthToSpace, inputs, attrs);\n}\nconst depthToSpace = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ depthToSpace_ });\n//# sourceMappingURL=depth_to_space.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/depth_to_space.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export depthwiseConv2d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthwiseConv2d\": () => /* binding */ depthwiseConv2d\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Depthwise 2D convolution.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction depthwiseConv2d_(x, filter, strides, pad, dataFormat = 'NHWC', dilations = [1, 1], dimRoundingMode) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'depthwiseConv2d');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(filter, 'filter', 'depthwiseConv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x4D.rank === 4, () => `Error in depthwiseConv2d: input must be rank 4, but got ` +\n        `rank ${x4D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert($filter.rank === 4, () => `Error in depthwiseConv2d: filter must be rank 4, but got rank ` +\n        `${$filter.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x4D.shape[3] === $filter.shape[2], () => `Error in depthwiseConv2d: number of input channels ` +\n        `(${x4D.shape[3]}) must match the inChannels dimension in ` +\n        `filter ${$filter.shape[2]}.`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_3__.assert(_util__WEBPACK_IMPORTED_MODULE_3__.isInt(pad), () => `Error in depthwiseConv2d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x4D, filter: $filter };\n    const attrs = { strides, pad, dataFormat, dilations, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.DepthwiseConv2dNative, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst depthwiseConv2d = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ depthwiseConv2d_ });\n//# sourceMappingURL=depthwise_conv2d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_filter.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_filter.js ***!
  \************************************************************************************************/
/*! namespace exports */
/*! export depthwiseConv2dNativeBackpropFilter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthwiseConv2dNativeBackpropFilter\": () => /* binding */ depthwiseConv2dNativeBackpropFilter\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction depthwiseConv2dNativeBackpropFilter_(x, dy, filterShape, strides, pad, dilations = [1, 1], dimRoundingMode) {\n    let x4D = x;\n    if (x.rank === 3) {\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n    }\n    let dy4D = dy;\n    if (dy4D.rank === 3) {\n        dy4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n    }\n    const inputs = { x: x4D, dy: dy4D };\n    const attrs = { strides, pad, dimRoundingMode, dilations, filterShape };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.DepthwiseConv2dNativeBackpropFilter, inputs, attrs);\n}\nconst depthwiseConv2dNativeBackpropFilter = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ depthwiseConv2dNativeBackpropFilter_ });\n//# sourceMappingURL=depthwise_conv2d_native_backprop_filter.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_filter.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_input.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_input.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export depthwiseConv2dNativeBackpropInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthwiseConv2dNativeBackpropInput\": () => /* binding */ depthwiseConv2dNativeBackpropInput\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction depthwiseConv2dNativeBackpropInput_(xShape, dy, filter, strides, pad, dilations = [1, 1], dimRoundingMode) {\n    let dy4D = dy;\n    let reshapedTo4D = false;\n    if (dy.rank === 3) {\n        reshapedTo4D = true;\n        dy4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n    }\n    const inputs = { dy: dy4D, filter };\n    const attrs = { strides, pad, dimRoundingMode, dilations, inputShape: xShape };\n    const res = \n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.DepthwiseConv2dNativeBackpropInput, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst depthwiseConv2dNativeBackpropInput = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ depthwiseConv2dNativeBackpropInput_ });\n//# sourceMappingURL=depthwise_conv2d_native_backprop_input.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_input.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/diag.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/diag.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export diag [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"diag\": () => /* binding */ diag\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Returns a diagonal tensor with a given diagonal values.\n *\n * Given a diagonal, this operation returns a tensor with the diagonal and\n * everything else padded with zeros.\n *\n * Assume the input has dimensions `[D1,..., Dk]`, then the output is a tensor\n * of rank 2k with dimensions `[D1,..., Dk, D1,..., Dk]`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * tf.diag(x).print()\n * ```\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4, 5, 6, 6, 8], [4, 2])\n *\n * tf.diag(x).print()\n * ```\n * @param x The input tensor.\n */\nfunction diag_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'diag');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Diag, inputs);\n}\nconst diag = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ diag_ });\n//# sourceMappingURL=diag.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/diag.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/dilation2d.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/dilation2d.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export dilation2d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dilation2d\": () => /* binding */ dilation2d\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Computes the grayscale dilation over the input `x`.\n *\n * @param x The input tensor, rank 3 or rank 4 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter tensor, rank 3, of shape\n *     `[filterHeight, filterWidth, depth]`.\n * @param strides The strides of the sliding window for each dimension of the\n *     input tensor: `[strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat Specify the data format of the input and output data.\n *      Defaults to 'NHWC'. Only 'NHWC' is currently supported. With the\n *      default format \"NHWC\", the data is stored in the order of: [batch,\n *      height, width, channels].\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     for atrous morphological dilation. Defaults to `[1, 1]`. If `dilations`\n *     is a single number, then `dilationHeight == dilationWidth`. If it is\n *     greater than 1, then all values of `strides` must be 1.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction dilation2d_(x, filter, strides, pad, dilations = [1, 1], dataFormat = 'NHWC') {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'dilation2d');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(filter, 'filter', 'dilation2d');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank === 3 || $x.rank === 4, () => `Error in dilation2d: input must be rank 3 or 4, but got rank ` +\n        `${$x.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($filter.rank === 3, () => `Error in dilation2d: filter must be rank 3, but got rank ` +\n        `${$filter.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(dataFormat === 'NHWC', () => `Error in dilation2d: Only NHWC is currently supported, ` +\n        `but got dataFormat of ${dataFormat}`);\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n        reshapedTo4D = true;\n    }\n    const inputs = { x: x4D, filter: $filter };\n    const attrs = { strides, pad, dilations };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Dilation2D, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst dilation2d = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ dilation2d_ });\n//# sourceMappingURL=dilation2d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/dilation2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/div.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/div.js ***!
  \************************************************************/
/*! namespace exports */
/*! export div [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"div\": () => /* binding */ div\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _floorDiv__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./floorDiv */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction div_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'div');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'div');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    if ($a.dtype === 'int32' && $b.dtype === 'int32') {\n        return (0,_floorDiv__WEBPACK_IMPORTED_MODULE_3__.floorDiv)($a, $b);\n    }\n    const inputs = { a: $a, b: $b };\n    const attrs = {};\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.RealDiv, inputs, attrs);\n}\nconst div = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ div_ });\n//# sourceMappingURL=div.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/div.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/div_no_nan.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/div_no_nan.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export divNoNan [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"divNoNan\": () => /* binding */ divNoNan\n/* harmony export */ });\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _equal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _where__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./where */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where.js\");\n/* harmony import */ var _zeros_like__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting. Return 0\n * if denominator is 0.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n * const c = tf.tensor1d([0, 0, 0, 0]);\n *\n * a.divNoNan(b).print();  // or tf.divNoNan(a, b)\n * a.divNoNan(c).print();  // or tf.divNoNan(a, c)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n * const c = tf.scalar(0);\n *\n * a.divNoNan(b).print();  // or tf.divNoNan(a, b)\n * a.divNoNan(c).print();  // or tf.divNoNan(a, c)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction divNoNan_(a, b) {\n    // TODO: Make this into its own kernel.\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(a, 'a', 'div');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(b, 'b', 'div');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_1__.makeTypesMatch)($a, $b);\n    const divResult = (0,_div__WEBPACK_IMPORTED_MODULE_2__.div)($a, $b);\n    const zeros = (0,_zeros_like__WEBPACK_IMPORTED_MODULE_3__.zerosLike)(divResult);\n    const bEqualsZero = (0,_equal__WEBPACK_IMPORTED_MODULE_4__.equal)($b, zeros);\n    return (0,_where__WEBPACK_IMPORTED_MODULE_5__.where)(bEqualsZero, zeros, divResult);\n}\nconst divNoNan = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ divNoNan_ });\n//# sourceMappingURL=div_no_nan.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/div_no_nan.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/dot.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/dot.js ***!
  \************************************************************/
/*! namespace exports */
/*! export dot [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dot\": () => /* binding */ dot\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Computes the dot product of two matrices and/or vectors, `t1` and `t2`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor2d([[1, 2], [3, 4]]);\n * const c = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);\n *\n * a.dot(b).print();  // or tf.dot(a, b)\n * b.dot(a).print();\n * b.dot(c).print();\n * ```\n * @param t1 The first tensor in the dot operation.\n * @param t2 The second tensor in the dot operation.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction dot_(t1, t2) {\n    const $t1 = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(t1, 't1', 'dot');\n    const $t2 = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(t2, 't2', 'dot');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(($t1.rank === 1 || $t1.rank === 2) && ($t2.rank === 1 || $t2.rank === 2), () => `Error in dot: inputs must all be rank 1 or 2, but got ranks ` +\n        `${$t1.rank} and ${$t2.rank}.`);\n    const t1Inner = ($t1.rank === 1 ? $t1.size : $t1.shape[1]);\n    const t2Inner = ($t2.rank === 1 ? $t2.size : $t2.shape[0]);\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(t1Inner === t2Inner, () => `Error in dot: inner dimensions of inputs must match, but got ` +\n        `${t1Inner} and ${t2Inner}.`);\n    if ($t1.rank === 1 && $t2.rank === 1) {\n        const t12D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($t1, [1, -1]);\n        const t22D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($t2, [-1, 1]);\n        const t1t2 = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_3__.matMul)(t12D, t22D);\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(t1t2, []);\n    }\n    else if ($t1.rank === 1 && $t2.rank === 2) {\n        const t12D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($t1, [1, -1]);\n        const t22D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($t2, [$t2.shape[0], $t2.shape[1]]);\n        const t1t2 = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_3__.matMul)(t12D, t22D);\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(t1t2, [t1t2.size]);\n    }\n    else if ($t1.rank === 2 && $t2.rank === 1) {\n        const t22D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($t2, [-1, 1]);\n        const t1t2 = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_3__.matMul)($t1, t22D);\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(t1t2, [t1t2.size]);\n    }\n    else {\n        const t22D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($t2, [$t2.shape[0], $t2.shape[1]]);\n        const t1t2 = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_3__.matMul)($t1, t22D);\n        return t1t2;\n    }\n}\nconst dot = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ dot_ });\n//# sourceMappingURL=dot.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/dot.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/dropout.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/dropout.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export dropout [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dropout\": () => /* binding */ dropout\n/* harmony export */ });\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _dropout_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dropout_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/dropout_util.js\");\n/* harmony import */ var _floor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./floor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _random_uniform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./random_uniform */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n/**\n * Computes dropout.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 2, 1]);\n * const rate = 0.75;\n * const output = tf.dropout(x, rate);\n * output.print();\n * ```\n *\n * @param x A floating point Tensor or TensorLike.\n * @param rate A float in the range [0, 1). The probability that each element\n *   of x is discarded.\n * @param noiseShape An array of numbers of type int32, representing the\n * shape for randomly generated keep/drop flags. If the noiseShape has null\n * value, it will be automatically replaced with the x's relative dimension\n * size. Optional.\n * @param seed Used to create random seeds. Optional.\n * @returns A Tensor of the same shape of x.\n *\n * @doc {heading: 'Operations', subheading: 'Dropout'}\n */\nfunction dropout_(x, rate, noiseShape, seed) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'dropout');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.dtype === 'float32', () => `x has to be a floating point tensor since it's going to be ` +\n        `scaled, but got a ${$x.dtype} tensor instead.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(rate >= 0 && rate < 1, () => `rate must be a float in the range [0, 1), but got ${rate}.`);\n    if (rate === 0) {\n        return x instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor ? $x.clone() : $x;\n    }\n    const $noiseShape = (0,_dropout_util__WEBPACK_IMPORTED_MODULE_3__.getNoiseShape)($x, noiseShape);\n    const keepProb = 1 - rate;\n    const multiplier = (0,_div__WEBPACK_IMPORTED_MODULE_4__.div)((0,_floor__WEBPACK_IMPORTED_MODULE_5__.floor)((0,_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_random_uniform__WEBPACK_IMPORTED_MODULE_7__.randomUniform)($noiseShape, 0, 1, 'float32', seed), keepProb)), keepProb);\n    return (0,_mul__WEBPACK_IMPORTED_MODULE_8__.mul)($x, multiplier);\n}\nconst dropout = (0,_operation__WEBPACK_IMPORTED_MODULE_9__.op)({ dropout_ });\n//# sourceMappingURL=dropout.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/dropout.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/dropout_util.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/dropout_util.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export getNoiseShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getNoiseShape\": () => /* binding */ getNoiseShape\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n/**\n * Normalize noise shape based on provided tensor and noise shape.\n *\n * @param x Tensor.\n * @param noiseShape The shape for the randomly generated keep/drop flags, as\n *   an array of numbers. Optional.\n * @returns Normalized noise shape.\n */\nfunction getNoiseShape(x, noiseShape) {\n    if (noiseShape == null) {\n        return x.shape.slice();\n    }\n    if (_util__WEBPACK_IMPORTED_MODULE_0__.arraysEqual(x.shape, noiseShape)) {\n        return noiseShape;\n    }\n    if (x.shape.length === noiseShape.length) {\n        const newDimension = [];\n        for (let i = 0; i < x.shape.length; i++) {\n            if (noiseShape[i] == null && x.shape[i] != null) {\n                newDimension.push(x.shape[i]);\n            }\n            else {\n                newDimension.push(noiseShape[i]);\n            }\n        }\n        return newDimension;\n    }\n    return noiseShape;\n}\n//# sourceMappingURL=dropout_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/dropout_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js ***!
  \************************************************************/
/*! namespace exports */
/*! export elu [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"elu\": () => /* binding */ elu\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes exponential linear element-wise: `x > 0 ? e ^ x - 1 : 0`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 1, -3, 2]);\n *\n * x.elu().print();  // or tf.elu(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction elu_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'elu');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Elu, inputs);\n}\nconst elu = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ elu_ });\n//# sourceMappingURL=elu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export equal [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"equal\": () => /* binding */ equal\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Returns the truth value of (a == b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.equal(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction equal_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'equal');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'equal');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_3__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Equal, inputs);\n}\nconst equal = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ equal_ });\n//# sourceMappingURL=equal.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/erf.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/erf.js ***!
  \************************************************************/
/*! namespace exports */
/*! export erf [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"erf\": () => /* binding */ erf\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Computes gause error function of the input `tf.Tensor` element-wise:\n * `erf(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, .1, -.1, .7]);\n *\n * x.erf().print(); // or tf.erf(x);\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction erf_(x) {\n    let $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'erf');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.dtype === 'int32' || $x.dtype === 'float32', () => 'Input dtype must be `int32` or `float32`.');\n    if ($x.dtype === 'int32') {\n        $x = (0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)($x, 'float32');\n    }\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Erf, inputs);\n}\nconst erf = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ erf_ });\n//# sourceMappingURL=erf.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/erf.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export ERF_A1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ERF_A2 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ERF_A3 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ERF_A4 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ERF_A5 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ERF_P [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ERF_P\": () => /* binding */ ERF_P,\n/* harmony export */   \"ERF_A1\": () => /* binding */ ERF_A1,\n/* harmony export */   \"ERF_A2\": () => /* binding */ ERF_A2,\n/* harmony export */   \"ERF_A3\": () => /* binding */ ERF_A3,\n/* harmony export */   \"ERF_A4\": () => /* binding */ ERF_A4,\n/* harmony export */   \"ERF_A5\": () => /* binding */ ERF_A5\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst ERF_P = 0.3275911;\nconst ERF_A1 = 0.254829592;\nconst ERF_A2 = -0.284496736;\nconst ERF_A3 = 1.421413741;\nconst ERF_A4 = -1.453152027;\nconst ERF_A5 = 1.061405429;\n//# sourceMappingURL=erf_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/erf_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js ***!
  \************************************************************/
/*! namespace exports */
/*! export exp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"exp\": () => /* binding */ exp\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes exponential of the input `tf.Tensor` element-wise. `e ^ x`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.exp().print();  // or tf.exp(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction exp_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'exp');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Exp, inputs);\n}\nconst exp = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ exp_ });\n//# sourceMappingURL=exp.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export expandDims [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"expandDims\": () => /* binding */ expandDims\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Returns a `tf.Tensor` that has expanded rank, by inserting a dimension\n * into the tensor's shape.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const axis = 1;\n * x.expandDims(axis).print();\n * ```\n *\n * @param x The input tensor whose dimensions to be expanded.\n * @param axis The dimension index at which to insert shape of `1`. Defaults\n *     to 0 (the first dimension).\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction expandDims_(x, axis = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'expandDims', 'string_or_numeric');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(axis <= $x.rank, () => 'Axis must be <= rank of the tensor');\n    const inputs = { input: $x };\n    const attrs = { dim: axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.ExpandDims, inputs, attrs);\n}\nconst expandDims = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ expandDims_ });\n//# sourceMappingURL=expand_dims.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/expm1.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/expm1.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export expm1 [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"expm1\": () => /* binding */ expm1\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes exponential of the input `tf.Tensor` minus one element-wise.\n * `e ^ x - 1`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.expm1().print();  // or tf.expm1(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction expm1_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'expm1');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Expm1, inputs);\n}\nconst expm1 = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ expm1_ });\n//# sourceMappingURL=expm1.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/expm1.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/eye.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/eye.js ***!
  \************************************************************/
/*! namespace exports */
/*! export eye [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eye\": () => /* binding */ eye\n/* harmony export */ });\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/* harmony import */ var _expand_dims__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./expand_dims */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _tile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tile */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Create an identity matrix.\n *\n * @param numRows Number of rows.\n * @param numColumns Number of columns. Defaults to `numRows`.\n * @param batchShape If provided, will add the batch shape to the beginning\n *   of the shape of the returned `tf.Tensor` by repeating the identity\n *   matrix.\n * @param dtype Data type.\n * @returns Identity matrix of the specified size and data type, possibly\n *   with batch repetition if `batchShape` is specified.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction eye_(numRows, numColumns, batchShape, dtype = 'float32') {\n    if (numColumns == null) {\n        numColumns = numRows;\n    }\n    const buff = (0,_buffer__WEBPACK_IMPORTED_MODULE_0__.buffer)([numRows, numColumns], dtype);\n    const n = numRows <= numColumns ? numRows : numColumns;\n    for (let i = 0; i < n; ++i) {\n        buff.set(1, i, i);\n    }\n    const out = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(buff.toTensor(), [numRows, numColumns]);\n    if (batchShape == null) {\n        return out;\n    }\n    else {\n        if (batchShape.length === 1) {\n            return (0,_tile__WEBPACK_IMPORTED_MODULE_2__.tile)((0,_expand_dims__WEBPACK_IMPORTED_MODULE_3__.expandDims)(out, 0), [batchShape[0], 1, 1]);\n        }\n        else if (batchShape.length === 2) {\n            // tslint:disable-next-line:no-unnecessary-type-assertion\n            return (0,_tile__WEBPACK_IMPORTED_MODULE_2__.tile)((0,_expand_dims__WEBPACK_IMPORTED_MODULE_3__.expandDims)((0,_expand_dims__WEBPACK_IMPORTED_MODULE_3__.expandDims)(out, 0), 0), [batchShape[0], batchShape[1], 1, 1]);\n        }\n        else if (batchShape.length === 3) {\n            // tslint:disable-next-line:no-unnecessary-type-assertion\n            return (0,_tile__WEBPACK_IMPORTED_MODULE_2__.tile)((0,_expand_dims__WEBPACK_IMPORTED_MODULE_3__.expandDims)((0,_expand_dims__WEBPACK_IMPORTED_MODULE_3__.expandDims)((0,_expand_dims__WEBPACK_IMPORTED_MODULE_3__.expandDims)(out, 0), 0), 0), [\n                batchShape[0], batchShape[1], batchShape[2], 1, 1\n            ]);\n        }\n        else {\n            throw new Error(`eye() currently supports only 1D and 2D ` +\n                // tslint:disable-next-line:no-any\n                `batchShapes, but received ${batchShape.length}D.`);\n        }\n    }\n}\nconst eye = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ eye_ });\n//# sourceMappingURL=eye.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/eye.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export fill [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fill\": () => /* binding */ fill\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * Creates a `tf.Tensor` filled with a scalar value.\n *\n * ```js\n * tf.fill([2, 2], 4).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param value The scalar value to fill the tensor with.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n * 'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction fill(shape, value, dtype) {\n    const attrs = { shape, value, dtype };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_1__.Fill, {}, attrs);\n}\n\n//# sourceMappingURL=fill.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export floor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"floor\": () => /* binding */ floor\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes floor of input `tf.Tensor` element-wise: `floor(x)`.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.floor().print();  // or tf.floor(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction floor_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'floor');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Floor, inputs);\n}\nconst floor = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ floor_ });\n//# sourceMappingURL=floor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export floorDiv [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"floorDiv\": () => /* binding */ floorDiv\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n * The result is rounded with floor function.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.floorDiv(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.floorDiv(b).print();  // or tf.floorDiv(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction floorDiv_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'floorDiv');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'floorDiv');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.FloorDiv, inputs);\n}\nconst floorDiv = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ floorDiv_ });\n//# sourceMappingURL=floorDiv.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/fused/conv2d.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/conv2d.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export conv2d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2d\": () => /* binding */ conv2d\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _conv2d__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js\");\n/* harmony import */ var _conv2d_backprop_filter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../conv2d_backprop_filter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_filter.js\");\n/* harmony import */ var _conv2d_backprop_input__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../conv2d_backprop_input */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_backprop_input.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _fused_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fused_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes a 2D convolution over the input x, optionally fused with adding a\n * bias and applying an activation.\n *\n * ```js\n * const inputDepth = 2;\n * const inShape = [2, 2, 2, inputDepth];\n * const outputDepth = 2;\n * const fSize = 1;\n * const pad = 0;\n * const strides = 1;\n *\n * const x = tf.tensor4d( [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n * 16], inShape);\n * const w = tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth,\n * outputDepth]);\n *\n * tf.fused.conv2d({ x, filter: w, strides, pad, dataFormat: 'NHWC',\n * dilations: [1, 1], bias: tf.scalar(5), activation: 'relu' }).print();\n * ```\n *\n * @param obj An object with the following properties:\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid` output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param bias Tensor to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`) to be\n *     applied\n *      after biasAdd.\n * @param preluActivationWeights Tensor of prelu weights to be applied as part\n *     of a `prelu` activation, typically the same shape as `x`.\n * @param leakyreluAlpha Optional. Alpha to be applied as part of a `leakyrelu`\n *     activation.\n */\nfunction fusedConv2d_({ x, filter, strides, pad, dataFormat = 'NHWC', dilations = [1, 1], dimRoundingMode, bias, activation = 'linear', preluActivationWeights, leakyreluAlpha }) {\n    activation = activation || 'linear';\n    if ((0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.shouldFuse)(_engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.state.gradientDepth, activation) === false) {\n        let result = (0,_conv2d__WEBPACK_IMPORTED_MODULE_2__.conv2d)(x, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n        if (bias != null) {\n            result = (0,_add__WEBPACK_IMPORTED_MODULE_3__.add)(result, bias);\n        }\n        return (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.applyActivation)(result, activation, preluActivationWeights, leakyreluAlpha);\n    }\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(x, 'x', 'conv2d');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(filter, 'filter', 'conv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(x4D.rank === 4, () => `Error in fused conv2d: input must be rank 4, but got rank ` +\n        `${x4D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert($filter.rank === 4, () => `Error in fused conv2d: filter must be rank 4, but got rank ` +\n        `${$filter.rank}.`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_6__.assert(_util__WEBPACK_IMPORTED_MODULE_6__.isInt(pad), () => `Error in fused conv2d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(x4D.shape[3] === $filter.shape[2], () => `Error in conv2d: depth of input (${x4D.shape[3]}) must match ` +\n        `input depth for filter ${$filter.shape[2]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_7__.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in conv2D: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(dataFormat === 'NHWC', () => `Error in conv2d: got dataFormat of ${dataFormat} but only NHWC is currently supported.`);\n    const convInfo = _conv_util__WEBPACK_IMPORTED_MODULE_7__.computeConv2DInfo(x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode);\n    let $bias;\n    if (bias != null) {\n        $bias = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(bias, 'bias', 'fused conv2d');\n        [$bias] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_8__.makeTypesMatch)($bias, $x);\n        _broadcast_util__WEBPACK_IMPORTED_MODULE_9__.assertAndGetBroadcastShape(convInfo.outShape, $bias.shape);\n    }\n    let $preluActivationWeights;\n    if (preluActivationWeights != null) {\n        $preluActivationWeights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(preluActivationWeights, 'prelu weights', 'fused conv2d');\n    }\n    const grad = (dy, saved) => {\n        const [$filter, x4D, y, $bias] = saved;\n        const dyActivation = (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.getFusedDyActivation)(dy, y, activation);\n        _util__WEBPACK_IMPORTED_MODULE_6__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_7__.tupleValuesAreOne(dilations), () => 'Error in gradient of fused conv2D: ' +\n            `dilation rates greater than 1 ` +\n            `are not yet supported in gradients. Got dilations '${dilations}'`);\n        const xDer = (0,_conv2d_backprop_input__WEBPACK_IMPORTED_MODULE_10__.conv2DBackpropInput)(x4D.shape, dyActivation, $filter, strides, pad);\n        const filterDer = (0,_conv2d_backprop_filter__WEBPACK_IMPORTED_MODULE_11__.conv2DBackpropFilter)(x4D, dyActivation, $filter.shape, strides, pad);\n        const der = [xDer, filterDer];\n        if ($bias != null) {\n            const biasDer = (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.getFusedBiasGradient)($bias, dyActivation);\n            der.push(biasDer);\n        }\n        return der;\n    };\n    const inputs = {\n        x: x4D,\n        filter: $filter,\n        bias: $bias,\n        preluActivationWeights: $preluActivationWeights\n    };\n    const attrs = {\n        strides,\n        pad,\n        dataFormat,\n        dilations,\n        dimRoundingMode,\n        activation,\n        leakyreluAlpha\n    };\n    // Depending on the the params passed in we will have different number of\n    // inputs and thus a a different number of elements in the gradient.\n    if (bias == null) {\n        const customOp = (0,_gradients__WEBPACK_IMPORTED_MODULE_12__.customGrad)((x4D, filter, save) => {\n            let res = \n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_13__.FusedConv2D, inputs, attrs);\n            save([filter, x4D, res]);\n            if (reshapedTo4D) {\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                res = (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n            }\n            return { value: res, gradFunc: grad };\n        });\n        return customOp(x4D, $filter);\n    }\n    else {\n        const customOpWithBias = (0,_gradients__WEBPACK_IMPORTED_MODULE_12__.customGrad)((x4D, filter, bias, save) => {\n            let res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_13__.FusedConv2D, inputs, attrs);\n            save([filter, x4D, res, bias]);\n            if (reshapedTo4D) {\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                res = (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n            }\n            return { value: res, gradFunc: grad };\n        });\n        return customOpWithBias(x4D, $filter, $bias);\n    }\n}\nconst conv2d = (0,_operation__WEBPACK_IMPORTED_MODULE_14__.op)({ fusedConv2d_ });\n//# sourceMappingURL=conv2d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/fused/conv2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/fused/depthwise_conv2d.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/depthwise_conv2d.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export depthwiseConv2d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"depthwiseConv2d\": () => /* binding */ depthwiseConv2d\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _depthwise_conv2d__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../depthwise_conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js\");\n/* harmony import */ var _depthwise_conv2d_native_backprop_filter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../depthwise_conv2d_native_backprop_filter */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_filter.js\");\n/* harmony import */ var _depthwise_conv2d_native_backprop_input__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../depthwise_conv2d_native_backprop_input */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_input.js\");\n/* harmony import */ var _fused_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fused_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes depthwise 2D convolution, optionally fused with adding a\n * bias and applying an activation.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param obj An object with the following properties:\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param bias Tensor to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`).\n * @param preluActivationWeights Tensor of prelu weights to be applied as part\n *     of a `prelu` activation, typically the same shape as `x`.\n * @param leakyreluAlpha Optional. Alpha to be applied as part of a `leakyrelu`\n *     activation.\n */\nfunction fusedDepthwiseConv2d_({ x, filter, strides, pad, dataFormat = 'NHWC', dilations = [1, 1], dimRoundingMode, bias, activation = 'linear', preluActivationWeights, leakyreluAlpha }) {\n    if ((0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.shouldFuse)(_engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.state.gradientDepth, activation) === false) {\n        let result = (0,_depthwise_conv2d__WEBPACK_IMPORTED_MODULE_2__.depthwiseConv2d)(x, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n        if (bias != null) {\n            result = (0,_add__WEBPACK_IMPORTED_MODULE_3__.add)(result, bias);\n        }\n        return (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.applyActivation)(result, activation, preluActivationWeights, leakyreluAlpha);\n    }\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(x, 'x', 'depthwiseConv2d');\n    const $filter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(filter, 'filter', 'depthwiseConv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(x4D.rank === 4, () => `Error in fused depthwiseConv2d: input must be rank 4, but got ` +\n        `rank ${x4D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert($filter.rank === 4, () => `Error in fused depthwiseConv2d: filter must be rank 4, ` +\n        `but got rank ${$filter.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(x4D.shape[3] === $filter.shape[2], () => `Error in fused depthwiseConv2d: number of input channels ` +\n        `(${x4D.shape[3]}) must match the inChannels dimension in ` +\n        `filter ${$filter.shape[2]}.`);\n    if (dilations == null) {\n        dilations = [1, 1];\n    }\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_7__.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in fused depthwiseConv2d: Either strides or dilations must ' +\n        `be 1. Got strides ${strides} and dilations '${dilations}'`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_6__.assert(_util__WEBPACK_IMPORTED_MODULE_6__.isInt(pad), () => `Error in fused depthwiseConv2d: pad must be an integer when ` +\n            `using dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const convInfo = _conv_util__WEBPACK_IMPORTED_MODULE_7__.computeConv2DInfo(x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n    let $bias;\n    if (bias != null) {\n        $bias = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(bias, 'bias', 'fused conv2d');\n        [$bias] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_8__.makeTypesMatch)($bias, $x);\n        _broadcast_util__WEBPACK_IMPORTED_MODULE_9__.assertAndGetBroadcastShape(convInfo.outShape, $bias.shape);\n    }\n    let $preluActivationWeights;\n    if (preluActivationWeights != null) {\n        $preluActivationWeights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(preluActivationWeights, 'prelu weights', 'fused depthwiseConv2d');\n    }\n    const grad = (dy, saved) => {\n        _util__WEBPACK_IMPORTED_MODULE_6__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_7__.tupleValuesAreOne(dilations), () => 'Error in gradient of fused depthwiseConv2d: dilation rates ' +\n            `greater than 1 are not yet supported. Got dilations ` +\n            `'${dilations}'`);\n        const [$filter, x4D, y, bias] = saved;\n        const dyActivation = (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.getFusedDyActivation)(dy, y, activation);\n        const xDer = (0,_depthwise_conv2d_native_backprop_input__WEBPACK_IMPORTED_MODULE_10__.depthwiseConv2dNativeBackpropInput)(x4D.shape, dyActivation, $filter, strides, pad, dilations, dimRoundingMode);\n        const filterDer = (0,_depthwise_conv2d_native_backprop_filter__WEBPACK_IMPORTED_MODULE_11__.depthwiseConv2dNativeBackpropFilter)(x4D, dyActivation, $filter.shape, strides, pad, dilations, dimRoundingMode);\n        if (bias != null) {\n            const biasDer = (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.getFusedBiasGradient)($bias, dyActivation);\n            return [xDer, filterDer, biasDer];\n        }\n        return [xDer, filterDer];\n    };\n    const inputs = {\n        x: x4D,\n        filter: $filter,\n        bias: $bias,\n        preluActivationWeights: $preluActivationWeights\n    };\n    const attrs = {\n        strides,\n        pad,\n        dataFormat,\n        dilations,\n        dimRoundingMode,\n        activation,\n        leakyreluAlpha\n    };\n    // Depending on the the params passed in we will have different number of\n    // inputs and thus a a different number of elements in the gradient.\n    if (bias == null) {\n        const customOp = (0,_gradients__WEBPACK_IMPORTED_MODULE_12__.customGrad)((x4D, filter, save) => {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            let res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_13__.FusedDepthwiseConv2D, inputs, attrs);\n            save([filter, x4D, res]);\n            if (reshapedTo4D) {\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                res = (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n            }\n            return { value: res, gradFunc: grad };\n        });\n        return customOp(x4D, $filter);\n    }\n    else {\n        const customOpWithBias = (0,_gradients__WEBPACK_IMPORTED_MODULE_12__.customGrad)((x4D, filter, bias, save) => {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            let res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_13__.FusedDepthwiseConv2D, inputs, attrs);\n            save([filter, x4D, res, bias]);\n            if (reshapedTo4D) {\n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                res = (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n            }\n            return { value: res, gradFunc: grad };\n        });\n        return customOpWithBias(x4D, $filter, $bias);\n    }\n}\nconst depthwiseConv2d = (0,_operation__WEBPACK_IMPORTED_MODULE_14__.op)({ fusedDepthwiseConv2d_ });\n//# sourceMappingURL=depthwise_conv2d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/fused/depthwise_conv2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/fused/mat_mul.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/mat_mul.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export matMul [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"matMul\": () => /* binding */ matMul\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _fused_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fused_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js\");\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes the dot product of two matrices with optional activation and bias.\n *\n * ```js\n * const a = tf.tensor2d([-1, -2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const bias = tf.tensor2d([1, 2], [1, 2]);\n *\n * tf.fused.matMul({a, b, bias, activation: 'relu'}).print();\n * ```\n *\n * @param obj An object with the following properties:\n * - `a` First matrix in dot product operation.\n * - `b` Second matrix in dot product operation.\n * - `transposeA` If true, `a` is transposed before multiplication.\n * - `transposeB` If true, `b` is transposed before multiplication.\n * - `bias` Matrix to be added to the result.\n * - `activation` Name of activation kernel (defaults to `linear`).\n * - `preluActivationWeights` Tensor of prelu weights.\n * - `leakyreluAlpha` Alpha of leakyrelu.\n */\nfunction fusedMatMul_({ a, b, transposeA = false, transposeB = false, bias, activation = 'linear', preluActivationWeights, leakyreluAlpha, }) {\n    if ((0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.shouldFuse)(_engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.state.gradientDepth, activation) === false) {\n        let result = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(a, b, transposeA, transposeB);\n        if (bias != null) {\n            result = (0,_add__WEBPACK_IMPORTED_MODULE_3__.add)(result, bias);\n        }\n        return (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.applyActivation)(result, activation, preluActivationWeights, leakyreluAlpha);\n    }\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(a, 'a', 'fused matMul');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(b, 'b', 'fused matMul');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_5__.makeTypesMatch)($a, $b);\n    const innerShapeA = transposeA ? $a.shape[$a.rank - 2] : $a.shape[$a.rank - 1];\n    const innerShapeB = transposeB ? $b.shape[$b.rank - 1] : $b.shape[$b.rank - 2];\n    const outerShapeA = transposeA ? $a.shape[$a.rank - 1] : $a.shape[$a.rank - 2];\n    const outerShapeB = transposeB ? $b.shape[$b.rank - 2] : $b.shape[$b.rank - 1];\n    const outerDimsA = $a.shape.slice(0, -2);\n    const outerDimsB = $b.shape.slice(0, -2);\n    const batchDimA = _util__WEBPACK_IMPORTED_MODULE_6__.sizeFromShape(outerDimsA);\n    const batchDimB = _util__WEBPACK_IMPORTED_MODULE_6__.sizeFromShape(outerDimsB);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert($a.rank >= 2 && $b.rank >= 2 && $a.rank === $b.rank, () => `Error in fused matMul: inputs must have the same rank of at ` +\n        `least 2, got ranks ${$a.rank} and ${$b.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(_util__WEBPACK_IMPORTED_MODULE_6__.arraysEqual(outerDimsA, outerDimsB), () => `Error in fused matMul: outer dimensions (${outerDimsA}) and (` +\n        `${outerDimsB}) of Tensors with shapes ${$a.shape} and ` +\n        `${$b.shape} must match.`);\n    _util__WEBPACK_IMPORTED_MODULE_6__.assert(innerShapeA === innerShapeB, () => `Error in fused matMul: inner shapes (${innerShapeA}) and (` +\n        `${innerShapeB}) of Tensors with shapes ${$a.shape} and ` +\n        `${$b.shape} and transposeA=${transposeA}` +\n        ` and transposeB=${transposeB} must match.`);\n    const outShape = $a.shape.slice(0, -2).concat([outerShapeA, outerShapeB]);\n    const a3D = transposeA ?\n        (0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)($a, [batchDimA, innerShapeA, outerShapeA]) :\n        (0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)($a, [batchDimA, outerShapeA, innerShapeA]);\n    const b3D = transposeB ?\n        (0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)($b, [batchDimB, outerShapeB, innerShapeB]) :\n        (0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)($b, [batchDimB, innerShapeB, outerShapeB]);\n    let $bias;\n    if (bias != null) {\n        $bias = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(bias, 'bias', 'fused matMul');\n        [$bias] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_5__.makeTypesMatch)($bias, $a);\n        _broadcast_util__WEBPACK_IMPORTED_MODULE_8__.assertAndGetBroadcastShape(outShape, $bias.shape);\n    }\n    let $preluActivationWeights;\n    if (preluActivationWeights != null) {\n        $preluActivationWeights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_4__.convertToTensor)(preluActivationWeights, 'prelu weights', 'fused matMul');\n    }\n    const grad = (dy, saved) => {\n        const [a3D, b3D, y, $bias] = saved;\n        // we reshape dy because the result of the forward is not\n        // necessarily going to be a 3d tensor due to a reshape done at the end of\n        // the customOp.\n        const dyActivation = (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.getFusedDyActivation)((0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)(dy, y.shape), y, activation);\n        let aDer;\n        let bDer;\n        if (!transposeA && !transposeB) {\n            aDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(dyActivation, b3D, false, true);\n            bDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(a3D, dyActivation, true, false);\n        }\n        else if (!transposeA && transposeB) {\n            aDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(dyActivation, b3D, false, false);\n            bDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(dyActivation, a3D, true, false);\n        }\n        else if (transposeA && !transposeB) {\n            aDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(b3D, dyActivation, false, true);\n            bDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(a3D, dyActivation, false, false);\n        }\n        else {\n            aDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(b3D, dyActivation, true, true);\n            bDer = (0,_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul)(dyActivation, a3D, true, true);\n        }\n        if (bias != null) {\n            const biasDer = (0,_fused_util__WEBPACK_IMPORTED_MODULE_1__.getFusedBiasGradient)($bias, dyActivation);\n            return [aDer, bDer, biasDer];\n        }\n        else {\n            return [aDer, bDer];\n        }\n    };\n    const inputs = {\n        a: a3D,\n        b: b3D,\n        bias: $bias,\n        preluActivationWeights: $preluActivationWeights\n    };\n    const attrs = { transposeA, transposeB, activation, leakyreluAlpha };\n    // Depending on the the params passed in we will have different number of\n    // inputs and thus a a different number of elements in the gradient.\n    if (bias == null) {\n        const customOp = (0,_gradients__WEBPACK_IMPORTED_MODULE_9__.customGrad)((a3D, b3D, save) => {\n            const res = \n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_10__._FusedMatMul, inputs, attrs);\n            save([a3D, b3D, res]);\n            return { value: (0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)(res, outShape), gradFunc: grad };\n        });\n        return customOp(a3D, b3D);\n    }\n    else {\n        const customOpWithBias = (0,_gradients__WEBPACK_IMPORTED_MODULE_9__.customGrad)((a3D, b3D, $bias, save) => {\n            const res = \n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_10__._FusedMatMul, inputs, attrs);\n            save([a3D, b3D, res, $bias]);\n            return { value: (0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)(res, outShape), gradFunc: grad };\n        });\n        return customOpWithBias(a3D, b3D, $bias);\n    }\n}\nconst matMul = (0,_operation__WEBPACK_IMPORTED_MODULE_11__.op)({ fusedMatMul_ });\n//# sourceMappingURL=mat_mul.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/fused/mat_mul.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/fused_ops.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_ops.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export conv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/conv2d.js .conv2d */
/*! export depthwiseConv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/depthwise_conv2d.js .depthwiseConv2d */
/*! export matMul [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/mat_mul.js .matMul */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conv2d\": () => /* reexport safe */ _fused_conv2d__WEBPACK_IMPORTED_MODULE_0__.conv2d,\n/* harmony export */   \"depthwiseConv2d\": () => /* reexport safe */ _fused_depthwise_conv2d__WEBPACK_IMPORTED_MODULE_1__.depthwiseConv2d,\n/* harmony export */   \"matMul\": () => /* reexport safe */ _fused_mat_mul__WEBPACK_IMPORTED_MODULE_2__.matMul\n/* harmony export */ });\n/* harmony import */ var _fused_conv2d__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fused/conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused/conv2d.js\");\n/* harmony import */ var _fused_depthwise_conv2d__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fused/depthwise_conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused/depthwise_conv2d.js\");\n/* harmony import */ var _fused_mat_mul__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fused/mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused/mat_mul.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n//# sourceMappingURL=fused_ops.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/fused_ops.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export applyActivation [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getFusedBiasGradient [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getFusedDyActivation [provided] [no usage info] [missing usage info prevents renaming] */
/*! export shouldFuse [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getFusedDyActivation\": () => /* binding */ getFusedDyActivation,\n/* harmony export */   \"getFusedBiasGradient\": () => /* binding */ getFusedBiasGradient,\n/* harmony export */   \"applyActivation\": () => /* binding */ applyActivation,\n/* harmony export */   \"shouldFuse\": () => /* binding */ shouldFuse\n/* harmony export */ });\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _elu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./elu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js\");\n/* harmony import */ var _leaky_relu__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./leaky_relu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _prelu__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./prelu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js\");\n/* harmony import */ var _relu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./relu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js\");\n/* harmony import */ var _relu6__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./relu6 */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _step__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./step */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/step.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n// Returns gradient for fused activation.\nfunction getFusedDyActivation(dy, y, activation) {\n    if (activation == null || activation === 'linear') {\n        return dy;\n    }\n    if (activation === 'relu') {\n        return (0,_mul__WEBPACK_IMPORTED_MODULE_0__.mul)(dy, (0,_step__WEBPACK_IMPORTED_MODULE_1__.step)(y));\n    }\n    throw new Error(`Cannot compute gradient for fused activation ${activation}.`);\n}\n// Returns gradient for fused bias.\nfunction getFusedBiasGradient(bias, dyActivation) {\n    let res = dyActivation;\n    const reduceAxes = _broadcast_util__WEBPACK_IMPORTED_MODULE_2__.getReductionAxes(bias.shape, dyActivation.shape);\n    if (reduceAxes.length > 0) {\n        res = (0,_sum__WEBPACK_IMPORTED_MODULE_3__.sum)(res, reduceAxes);\n    }\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_4__.reshape)(res, bias.shape);\n}\nfunction applyActivation(x, activation, preluActivationWeights, leakyreluAlpha) {\n    if (activation === 'linear') {\n        return x;\n    }\n    else if (activation === 'relu') {\n        return (0,_relu__WEBPACK_IMPORTED_MODULE_5__.relu)(x);\n    }\n    else if (activation === 'elu') {\n        return (0,_elu__WEBPACK_IMPORTED_MODULE_6__.elu)(x);\n    }\n    else if (activation === 'relu6') {\n        return (0,_relu6__WEBPACK_IMPORTED_MODULE_7__.relu6)(x);\n    }\n    else if (activation === 'prelu') {\n        return (0,_prelu__WEBPACK_IMPORTED_MODULE_8__.prelu)(x, preluActivationWeights);\n    }\n    else if (activation === 'leakyrelu') {\n        return (0,_leaky_relu__WEBPACK_IMPORTED_MODULE_9__.leakyRelu)(x, leakyreluAlpha);\n    }\n    throw new Error(`Unknown fused activation ${activation}.`);\n}\n// Whether we should call fused ops.\nconst shouldFuse = (gradientDepth, activation) => {\n    const gradientMode = gradientDepth > 0;\n    return !gradientMode || activation === 'linear';\n};\n//# sourceMappingURL=fused_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/fused_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export gather [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gather\": () => /* binding */ gather\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Gather slices from tensor `x`'s axis `axis` according to `indices`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const indices = tf.tensor1d([1, 3, 3], 'int32');\n *\n * x.gather(indices).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const indices = tf.tensor1d([1, 1, 0], 'int32');\n *\n * x.gather(indices).print();\n * ```\n * @param x The input tensor whose slices to be gathered.\n * @param indices The indices of the values to extract.\n * @param axis The axis over which to select values. Defaults to 0.\n * @param batchDims Optional. The number of batch dimensions. It must be less\n *     than or equal to rank(indices). Defaults to 0.\n *     The output tensor will have shape of\n *     `x.shape[:axis] + indices.shape[batchDims:] + x.shape[axis + 1:]`\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction gather_(x, indices, axis = 0, batchDims = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'gather');\n    const $indices = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(indices, 'indices', 'gather', 'int32');\n    const inputs = { x: $x, indices: $indices };\n    const attrs = { axis, batchDims };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.GatherV2, inputs, attrs);\n}\nconst gather = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ gather_ });\n//# sourceMappingURL=gather.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export gatherND [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gatherND\": () => /* binding */ gatherND\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Gather slices from input tensor into a Tensor with shape specified by\n * `indices`.\n *\n * `indices` is an K-dimensional integer tensor, best thought of as a\n * (K-1)-dimensional tensor of indices into input, where each element defines a\n * slice of input:\n * output[\\\\(i_0, ..., i_{K-2}\\\\)] = input[indices[\\\\(i_0, ..., i_{K-2}\\\\)]]\n *\n * Whereas in `tf.gather`, `indices` defines slices into the first dimension of\n * input, in `tf.gatherND`, `indices` defines slices into the first N dimensions\n * of input, where N = indices.shape[-1].\n *\n * The last dimension of indices can be at most the rank of input:\n * indices.shape[-1] <= input.rank\n *\n * The last dimension of `indices` corresponds to elements\n * (if indices.shape[-1] == input.rank) or slices\n * (if indices.shape[-1] < input.rank) along dimension indices.shape[-1] of\n * input.\n * The output tensor has shape\n * indices.shape[:-1] + input.shape[indices.shape[-1]:]\n *\n * Note that on CPU, if an out of bound index is found, an error is returned. On\n * GPU, if an out of bound index is found, a 0 is stored in the corresponding\n * output value.\n *\n * ```js\n * const indices = tf.tensor2d([0, 1, 1, 0], [2,2], 'int32');\n * const input = tf.tensor2d([9, 10, 11, 12], [2, 2]);\n * tf.gatherND(input, indices).print() // [10, 11]\n * ```\n *\n * @param x The tensor from which to gather values.\n * @param indices Index tensor, must be of type int32.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction gatherND_(x, indices) {\n    const $indices = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(indices, 'indices', 'gatherND', 'int32');\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'gatherND');\n    const inputs = { params: $x, indices: $indices };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.GatherNd, inputs);\n}\nconst gatherND = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ gatherND_ });\n//# sourceMappingURL=gather_nd.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export prepareAndValidate [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prepareAndValidate\": () => /* binding */ prepareAndValidate\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n;\n/**\n * Validate gather nd inputs.\n *\n * @param tensor The tensor contains the source values.\n * @param indices The tensor contains the indices to slice the source.\n *\n * @returns [resultShape, numUpdates, sliceSize, strides]\n */\nfunction prepareAndValidate(tensor, indices) {\n    const tensorRank = tensor.shape.length;\n    const indicesRank = indices.shape.length;\n    if (tensorRank < 1) {\n        throw new Error('tf.gatherND() expects the input to be rank 1 or higher,' +\n            ` but the rank was ${tensorRank}.`);\n    }\n    if (indicesRank < 1) {\n        throw new Error('tf.gatherND() expects the indices to be rank 1 or higher,' +\n            ` but the rank was ${indicesRank}.`);\n    }\n    if (indices.dtype !== 'int32') {\n        throw new Error('tf.gatherND() expects the indices to be int32 type,' +\n            ` but the dtype was ${indices.dtype}.`);\n    }\n    if (indices.shape[indicesRank - 1] > tensorRank) {\n        throw new Error('index innermost dimension length must be <= tensor rank; saw: ' +\n            `${indices.shape[indicesRank - 1]} vs. ${tensorRank}`);\n    }\n    if ((0,_util__WEBPACK_IMPORTED_MODULE_0__.sizeFromShape)(tensor.shape) === 0) {\n        throw new Error('Requested more than 0 entries, but input is empty.' +\n            ` Input shape: ${tensor.shape}.`);\n    }\n    const indicesShape = indices.shape;\n    const sliceRank = indicesShape[indicesShape.length - 1];\n    // The result shape is\n    //   indices.shape[:-1] + params.shape[indices.shape[-1]:]\n    let nResult = 1;\n    for (let i = 0; i < indicesShape.length - 1; ++i) {\n        nResult *= indicesShape[i];\n    }\n    const inputShape = tensor.shape;\n    const resultShape = indicesShape.slice();\n    resultShape.pop();\n    let sliceSize = 1;\n    for (let i = sliceRank; i < tensorRank; ++i) {\n        sliceSize *= inputShape[i];\n        resultShape.push(inputShape[i]);\n    }\n    const strides = [...(0,_util__WEBPACK_IMPORTED_MODULE_0__.computeStrides)(tensor.shape).map(stride => stride / sliceSize),\n        1].slice(0, sliceRank);\n    return [resultShape, nResult, sliceSize, strides];\n}\n//# sourceMappingURL=gather_nd_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export greater [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"greater\": () => /* binding */ greater\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Returns the truth value of (a > b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greater(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction greater_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'greater');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'greater');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_3__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Greater, inputs);\n}\nconst greater = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ greater_ });\n//# sourceMappingURL=greater.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export greaterEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"greaterEqual\": () => /* binding */ greaterEqual\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Returns the truth value of (a >= b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greaterEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction greaterEqual_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'greaterEqual');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'greaterEqual');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_3__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.GreaterEqual, inputs);\n}\nconst greaterEqual = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ greaterEqual_ });\n//# sourceMappingURL=greater_equal.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export imag [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"imag\": () => /* binding */ imag\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Returns the imaginary part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the imaginary part of each element in input considered as a complex number.\n * If input is real, a tensor of all zeros is returned.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.imag(x).print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction imag_(input) {\n    const $input = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(input, 'input', 'imag');\n    const inputs = { input: $input };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Imag, inputs);\n}\nconst imag = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ imag_ });\n//# sourceMappingURL=imag.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/crop_and_resize.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/crop_and_resize.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export cropAndResize [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cropAndResize\": () => /* binding */ cropAndResize\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Extracts crops from the input image tensor and resizes them using bilinear\n * sampling or nearest neighbor sampling (possibly with aspect ratio change)\n * to a common output size specified by cropSize.\n *\n * @param image 4d tensor of shape `[batch,imageHeight,imageWidth, depth]`,\n *     where imageHeight and imageWidth must be positive, specifying the\n *     batch of images from which to take crops\n * @param boxes 2d float32 tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the normalized\n *     coordinates of the box in the boxInd[i]'th image in the batch\n * @param boxInd 1d int32 tensor of shape `[numBoxes]` with values in range\n *     `[0, batch)` that specifies the image that the `i`-th box refers to.\n * @param cropSize 1d int32 tensor of 2 elements `[cropHeigh, cropWidth]`\n *     specifying the size to which all crops are resized to.\n * @param method Optional string from `'bilinear' | 'nearest'`,\n *     defaults to bilinear, which specifies the sampling method for resizing\n * @param extrapolationValue A threshold for deciding when to remove boxes based\n *     on score. Defaults to 0.\n * @return A 4D tensor of the shape `[numBoxes,cropHeight,cropWidth,depth]`\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction cropAndResize_(image, boxes, boxInd, cropSize, method = 'bilinear', extrapolationValue = 0) {\n    const $image = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(image, 'image', 'cropAndResize');\n    const $boxes = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(boxes, 'boxes', 'cropAndResize', 'float32');\n    const $boxInd = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(boxInd, 'boxInd', 'cropAndResize', 'int32');\n    const numBoxes = $boxes.shape[0];\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($image.rank === 4, () => 'Error in cropAndResize: image must be rank 4,' +\n        `but got rank ${$image.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($boxes.rank === 2 && $boxes.shape[1] === 4, () => `Error in cropAndResize: boxes must be have size [${numBoxes},4] ` +\n        `but had shape ${$boxes.shape}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($boxInd.rank === 1 && $boxInd.shape[0] === numBoxes, () => `Error in cropAndResize: boxInd must be have size [${numBoxes}] ` +\n        `but had shape ${$boxes.shape}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(cropSize.length === 2, () => `Error in cropAndResize: cropSize must be of length 2, but got ` +\n        `length ${cropSize.length}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(cropSize[0] >= 1 && cropSize[1] >= 1, () => `cropSize must be atleast [1,1], but was ${cropSize}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(method === 'bilinear' || method === 'nearest', () => `method must be bilinear or nearest, but was ${method}`);\n    const inputs = { image: $image, boxes: $boxes, boxInd: $boxInd };\n    const attrs = { method, extrapolationValue, cropSize };\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.CropAndResize, inputs, attrs);\n    return res;\n}\nconst cropAndResize = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ cropAndResize_ });\n//# sourceMappingURL=crop_and_resize.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/image/crop_and_resize.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/flip_left_right.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/flip_left_right.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export flipLeftRight [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"flipLeftRight\": () => /* binding */ flipLeftRight\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Flips the image left to right. Currently available in the CPU, WebGL, and\n * WASM backends.\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n */\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\nfunction flipLeftRight_(image) {\n    const $image = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(image, 'image', 'flipLeftRight', 'float32');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($image.rank === 4, () => 'Error in flipLeftRight: image must be rank 4,' +\n        `but got rank ${$image.rank}.`);\n    const inputs = { image: $image };\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.FlipLeftRight, inputs, {});\n    return res;\n}\nconst flipLeftRight = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ flipLeftRight_ });\n//# sourceMappingURL=flip_left_right.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/image/flip_left_right.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export nonMaxSuppression [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppression\": () => /* binding */ nonMaxSuppression\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _nonmax_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nonmax_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppression_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY) {\n    const $boxes = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(boxes, 'boxes', 'nonMaxSuppression');\n    const $scores = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(scores, 'scores', 'nonMaxSuppression');\n    const inputs = (0,_nonmax_util__WEBPACK_IMPORTED_MODULE_2__.nonMaxSuppSanityCheck)($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n    maxOutputSize = inputs.maxOutputSize;\n    iouThreshold = inputs.iouThreshold;\n    scoreThreshold = inputs.scoreThreshold;\n    const attrs = { maxOutputSize, iouThreshold, scoreThreshold };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.NonMaxSuppressionV3, { boxes: $boxes, scores: $scores }, attrs);\n}\nconst nonMaxSuppression = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ nonMaxSuppression_ });\n//# sourceMappingURL=non_max_suppression.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_async.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_async.js ***!
  \****************************************************************************************/
/*! namespace exports */
/*! export nonMaxSuppressionAsync [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionAsync\": () => /* binding */ nonMaxSuppressionAsync\n/* harmony export */ });\n/* harmony import */ var _backends_non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../backends/non_max_suppression_impl */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _nonmax_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nonmax_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js\");\n/* harmony import */ var _tensor1d__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tensor1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This is the async version of `nonMaxSuppression`\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionAsync_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY) {\n    const $boxes = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(boxes, 'boxes', 'nonMaxSuppressionAsync');\n    const $scores = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(scores, 'scores', 'nonMaxSuppressionAsync');\n    const inputs = (0,_nonmax_util__WEBPACK_IMPORTED_MODULE_1__.nonMaxSuppSanityCheck)($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n    maxOutputSize = inputs.maxOutputSize;\n    iouThreshold = inputs.iouThreshold;\n    scoreThreshold = inputs.scoreThreshold;\n    const boxesAndScores = await Promise.all([$boxes.data(), $scores.data()]);\n    const boxesVals = boxesAndScores[0];\n    const scoresVals = boxesAndScores[1];\n    // We call a cpu based impl directly with the typedarray data  here rather\n    // than a kernel because all kernels are synchronous (and thus cannot await\n    // .data()).\n    const { selectedIndices } = (0,_backends_non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_2__.nonMaxSuppressionV3Impl)(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n    if ($boxes !== boxes) {\n        $boxes.dispose();\n    }\n    if ($scores !== scores) {\n        $scores.dispose();\n    }\n    return (0,_tensor1d__WEBPACK_IMPORTED_MODULE_3__.tensor1d)(selectedIndices, 'int32');\n}\nconst nonMaxSuppressionAsync = nonMaxSuppressionAsync_;\n//# sourceMappingURL=non_max_suppression_async.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_async.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded.js ***!
  \*****************************************************************************************/
/*! namespace exports */
/*! export nonMaxSuppressionPadded [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionPadded\": () => /* binding */ nonMaxSuppressionPadded\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _nonmax_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nonmax_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union), with an option to pad results.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param padToMaxOutputSize Defalts to false. If true, size of output\n *     `selectedIndices` is padded to maxOutputSize.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\n *       are valid. Valid elements occur first, then padding.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppressionPadded_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, padToMaxOutputSize = false) {\n    const $boxes = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(boxes, 'boxes', 'nonMaxSuppression');\n    const $scores = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(scores, 'scores', 'nonMaxSuppression');\n    const params = (0,_nonmax_util__WEBPACK_IMPORTED_MODULE_2__.nonMaxSuppSanityCheck)($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, null /* softNmsSigma */);\n    const $maxOutputSize = params.maxOutputSize;\n    const $iouThreshold = params.iouThreshold;\n    const $scoreThreshold = params.scoreThreshold;\n    const inputs = { boxes: $boxes, scores: $scores };\n    const attrs = {\n        maxOutputSize: $maxOutputSize,\n        iouThreshold: $iouThreshold,\n        scoreThreshold: $scoreThreshold,\n        padToMaxOutputSize\n    };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const result = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.NonMaxSuppressionV4, inputs, attrs);\n    return { selectedIndices: result[0], validOutputs: result[1] };\n}\nconst nonMaxSuppressionPadded = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ nonMaxSuppressionPadded_ });\n//# sourceMappingURL=non_max_suppression_padded.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded_async.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded_async.js ***!
  \***********************************************************************************************/
/*! namespace exports */
/*! export nonMaxSuppressionPaddedAsync [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionPaddedAsync\": () => /* binding */ nonMaxSuppressionPaddedAsync\n/* harmony export */ });\n/* harmony import */ var _backends_non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../backends/non_max_suppression_impl */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _nonmax_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nonmax_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _tensor1d__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tensor1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union), with an option to pad results.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param padToMaxOutputSize Defalts to false. If true, size of output\n *     `selectedIndices` is padded to maxOutputSize.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\n *       are valid. Valid elements occur first, then padding.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionPaddedAsync_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, padToMaxOutputSize = false) {\n    const $boxes = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(boxes, 'boxes', 'nonMaxSuppressionAsync');\n    const $scores = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(scores, 'scores', 'nonMaxSuppressionAsync');\n    const params = (0,_nonmax_util__WEBPACK_IMPORTED_MODULE_1__.nonMaxSuppSanityCheck)($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, null /* softNmsSigma */);\n    const $maxOutputSize = params.maxOutputSize;\n    const $iouThreshold = params.iouThreshold;\n    const $scoreThreshold = params.scoreThreshold;\n    const [boxesVals, scoresVals] = await Promise.all([$boxes.data(), $scores.data()]);\n    // We call a cpu based impl directly with the typedarray data here rather\n    // than a kernel because all kernels are synchronous (and thus cannot await\n    // .data()).\n    const { selectedIndices, validOutputs } = (0,_backends_non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_2__.nonMaxSuppressionV4Impl)(boxesVals, scoresVals, $maxOutputSize, $iouThreshold, $scoreThreshold, padToMaxOutputSize);\n    if ($boxes !== boxes) {\n        $boxes.dispose();\n    }\n    if ($scores !== scores) {\n        $scores.dispose();\n    }\n    return {\n        selectedIndices: (0,_tensor1d__WEBPACK_IMPORTED_MODULE_3__.tensor1d)(selectedIndices, 'int32'),\n        validOutputs: (0,_scalar__WEBPACK_IMPORTED_MODULE_4__.scalar)(validOutputs, 'int32')\n    };\n}\nconst nonMaxSuppressionPaddedAsync = nonMaxSuppressionPaddedAsync_;\n//# sourceMappingURL=non_max_suppression_padded_async.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded_async.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score.js ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export nonMaxSuppressionWithScore [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionWithScore\": () => /* binding */ nonMaxSuppressionWithScore\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _nonmax_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nonmax_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This op also supports a Soft-NMS mode (c.f.\n * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score\n * of other overlapping boxes, therefore favoring different regions of the image\n * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`\n * parameter to be larger than 0.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param softNmsSigma A float representing the sigma parameter for Soft NMS.\n *     When sigma is 0, it falls back to nonMaxSuppression.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - selectedScores: A 1D tensor with the corresponding scores for each\n *       selected box.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppressionWithScore_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, softNmsSigma = 0.0) {\n    const $boxes = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(boxes, 'boxes', 'nonMaxSuppression');\n    const $scores = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(scores, 'scores', 'nonMaxSuppression');\n    const params = (0,_nonmax_util__WEBPACK_IMPORTED_MODULE_2__.nonMaxSuppSanityCheck)($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    maxOutputSize = params.maxOutputSize;\n    iouThreshold = params.iouThreshold;\n    scoreThreshold = params.scoreThreshold;\n    softNmsSigma = params.softNmsSigma;\n    const inputs = { boxes: $boxes, scores: $scores };\n    const attrs = { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const result = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.NonMaxSuppressionV5, inputs, attrs);\n    return { selectedIndices: result[0], selectedScores: result[1] };\n}\nconst nonMaxSuppressionWithScore = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ nonMaxSuppressionWithScore_ });\n//# sourceMappingURL=non_max_suppression_with_score.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score_async.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score_async.js ***!
  \***************************************************************************************************/
/*! namespace exports */
/*! export nonMaxSuppressionWithScoreAsync [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppressionWithScoreAsync\": () => /* binding */ nonMaxSuppressionWithScoreAsync\n/* harmony export */ });\n/* harmony import */ var _backends_non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../backends/non_max_suppression_impl */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _nonmax_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../nonmax_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js\");\n/* harmony import */ var _tensor1d__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tensor1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This op also supports a Soft-NMS mode (c.f.\n * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score\n * of other overlapping boxes, therefore favoring different regions of the image\n * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`\n * parameter to be larger than 0.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param softNmsSigma A float representing the sigma parameter for Soft NMS.\n *     When sigma is 0, it falls back to nonMaxSuppression.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - selectedScores: A 1D tensor with the corresponding scores for each\n *       selected box.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionWithScoreAsync_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, softNmsSigma = 0.0) {\n    const $boxes = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(boxes, 'boxes', 'nonMaxSuppressionAsync');\n    const $scores = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(scores, 'scores', 'nonMaxSuppressionAsync');\n    const params = (0,_nonmax_util__WEBPACK_IMPORTED_MODULE_1__.nonMaxSuppSanityCheck)($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    maxOutputSize = params.maxOutputSize;\n    iouThreshold = params.iouThreshold;\n    scoreThreshold = params.scoreThreshold;\n    softNmsSigma = params.softNmsSigma;\n    const boxesAndScores = await Promise.all([$boxes.data(), $scores.data()]);\n    const boxesVals = boxesAndScores[0];\n    const scoresVals = boxesAndScores[1];\n    // We call a cpu based impl directly with the typedarray data  here rather\n    // than a kernel because all kernels are synchronous (and thus cannot await\n    // .data()).\n    const { selectedIndices, selectedScores } = (0,_backends_non_max_suppression_impl__WEBPACK_IMPORTED_MODULE_2__.nonMaxSuppressionV5Impl)(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    if ($boxes !== boxes) {\n        $boxes.dispose();\n    }\n    if ($scores !== scores) {\n        $scores.dispose();\n    }\n    return {\n        selectedIndices: (0,_tensor1d__WEBPACK_IMPORTED_MODULE_3__.tensor1d)(selectedIndices, 'int32'),\n        selectedScores: (0,_tensor1d__WEBPACK_IMPORTED_MODULE_3__.tensor1d)(selectedScores)\n    };\n}\nconst nonMaxSuppressionWithScoreAsync = nonMaxSuppressionWithScoreAsync_;\n//# sourceMappingURL=non_max_suppression_with_score_async.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score_async.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_bilinear.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_bilinear.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export resizeBilinear [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resizeBilinear\": () => /* binding */ resizeBilinear\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Bilinear resize a single 3D image or a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to `false`. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n * @param halfPixelCenters Defaults to `false`. Whether to assume pixel centers\n *     are at 0.5, which would make the floating point coordinates of the top\n *     left pixel 0.5, 0.5.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction resizeBilinear_(images, size, alignCorners = false, halfPixelCenters = false) {\n    const $images = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(images, 'images', 'resizeBilinear');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($images.rank === 3 || $images.rank === 4, () => `Error in resizeBilinear: x must be rank 3 or 4, but got ` +\n        `rank ${$images.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(size.length === 2, () => `Error in resizeBilinear: new shape must 2D, but got shape ` +\n        `${size}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(halfPixelCenters === false || alignCorners === false, () => `Error in resizeBilinear: If halfPixelCenters is true, ` +\n        `alignCorners must be false.`);\n    let batchImages = $images;\n    let reshapedTo4D = false;\n    if ($images.rank === 3) {\n        reshapedTo4D = true;\n        batchImages = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)($images, [1, $images.shape[0], $images.shape[1], $images.shape[2]]);\n    }\n    const [] = size;\n    const inputs = { images: batchImages };\n    const attrs = { alignCorners, halfPixelCenters, size };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.ResizeBilinear, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst resizeBilinear = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ resizeBilinear_ });\n//# sourceMappingURL=resize_bilinear.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_bilinear.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_nearest_neighbor.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_nearest_neighbor.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export resizeNearestNeighbor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"resizeNearestNeighbor\": () => /* binding */ resizeNearestNeighbor\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * NearestNeighbor resize a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to False. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n * @param halfPixelCenters Defaults to `false`. Whether to assumes pixels are of\n *      half the actual dimensions, and yields more accurate resizes. This flag\n *      would also make the floating point coordinates of the top left pixel\n *      0.5, 0.5.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction resizeNearestNeighbor_(images, size, alignCorners = false, halfPixelCenters = false) {\n    const $images = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(images, 'images', 'resizeNearestNeighbor');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($images.rank === 3 || $images.rank === 4, () => `Error in resizeNearestNeighbor: x must be rank 3 or 4, but got ` +\n        `rank ${$images.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(size.length === 2, () => `Error in resizeNearestNeighbor: new shape must 2D, but got shape ` +\n        `${size}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($images.dtype === 'float32' || $images.dtype === 'int32', () => '`images` must have `int32` or `float32` as dtype');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(halfPixelCenters === false || alignCorners === false, () => `Error in resizeNearestNeighbor: If halfPixelCenters is true, ` +\n        `alignCorners must be false.`);\n    let batchImages = $images;\n    let reshapedTo4D = false;\n    if ($images.rank === 3) {\n        reshapedTo4D = true;\n        batchImages = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)($images, [1, $images.shape[0], $images.shape[1], $images.shape[2]]);\n    }\n    const [] = size;\n    const inputs = { images: batchImages };\n    const attrs = { alignCorners, halfPixelCenters, size };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.ResizeNearestNeighbor, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst resizeNearestNeighbor = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ resizeNearestNeighbor_ });\n//# sourceMappingURL=resize_nearest_neighbor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_nearest_neighbor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/image/rotate_with_offset.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/image/rotate_with_offset.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export rotateWithOffset [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rotateWithOffset\": () => /* binding */ rotateWithOffset\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Rotates the input image tensor counter-clockwise with an optional offset\n * center of rotation. Currently available in the CPU, WebGL, and WASM backends.\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n * @param radians The amount of rotation.\n * @param fillValue The value to fill in the empty space leftover\n *     after rotation. Can be either a single grayscale value (0-255), or an\n *     array of three numbers `[red, green, blue]` specifying the red, green,\n *     and blue channels. Defaults to `0` (black).\n * @param center The center of rotation. Can be either a single value (0-1), or\n *     an array of two numbers `[centerX, centerY]`. Defaults to `0.5` (rotates\n *     the image around its center).\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction rotateWithOffset_(image, radians, fillValue = 0, center = 0.5) {\n    const $image = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(image, 'image', 'rotateWithOffset', 'float32');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($image.rank === 4, () => 'Error in rotateWithOffset: image must be rank 4,' +\n        `but got rank ${$image.rank}.`);\n    const inputs = { image: $image };\n    const attrs = { radians, fillValue, center };\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.RotateWithOffset, inputs, attrs);\n    return res;\n}\nconst rotateWithOffset = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ rotateWithOffset_ });\n//# sourceMappingURL=rotate_with_offset.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/image/rotate_with_offset.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export inTopKAsync [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"inTopKAsync\": () => /* binding */ inTopKAsync\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Returns whether the targets are in the top K predictions.\n *\n * ```js\n * const predictions = tf.tensor2d([[20, 10, 40, 30], [30, 50, -20, 10]]);\n * const targets = tf.tensor1d([2, 0]);\n * const precision = await tf.inTopKAsync(predictions, targets);\n * precision.print();\n * ```\n * @param predictions 2-D or higher `tf.Tensor` with last dimension being\n *     at least `k`.\n * @param targets 1-D or higher `tf.Tensor`.\n * @param k Optional Number of top elements to look at for computing precision,\n *     default to 1.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nasync function inTopKAsync_(predictions, targets, k = 1) {\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(predictions, 'predictions', 'inTopK');\n    const $targets = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(targets, 'targets', 'inTopK');\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)($predictions.rank > 1, () => 'inTopK() expects the predictions to be of rank 2 or higher, ' +\n        `but got ${$predictions.rank}`);\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)($predictions.rank - 1 === $targets.rank, () => `predictions rank should be 1 larger than ` +\n        `targets rank, but got predictions rank ` +\n        `${$predictions.rank} and targets rank ${$targets.rank}`);\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatch)($predictions.shape.slice(0, $predictions.shape.length - 1), $targets.shape, `predictions's shape should be align with the targets' shape, ` +\n        'except the last dimension.');\n    const lastDim = $predictions.shape[$predictions.shape.length - 1];\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(k > 0 && k <= lastDim, () => `'k' passed to inTopK() must be > 0 && <= the predictions last ` +\n        `dimension (${lastDim}), but got ${k}`);\n    const predictionsVals = await $predictions.data();\n    const targetsVals = await $targets.data();\n    // Reshape predictionsVals into a 2d tensor [batch, lastDim]\n    // and look up topK along lastDim.\n    const [batch, size] = [predictionsVals.length / lastDim, lastDim];\n    const precision = (0,_util__WEBPACK_IMPORTED_MODULE_1__.getTypedArrayFromDType)('bool', batch);\n    for (let b = 0; b < batch; b++) {\n        const offset = b * size;\n        const vals = predictionsVals.subarray(offset, offset + size);\n        const valAndInd = [];\n        for (let i = 0; i < vals.length; i++) {\n            valAndInd.push({ value: vals[i], index: i });\n        }\n        valAndInd.sort((a, b) => b.value - a.value);\n        precision[b] = 0;\n        for (let i = 0; i < k; i++) {\n            if (valAndInd[i].index === targetsVals[b]) {\n                precision[b] = 1;\n                break;\n            }\n        }\n    }\n    if (predictions !== $predictions) {\n        $predictions.dispose();\n    }\n    if (targets !== $targets) {\n        $targets.dispose();\n    }\n    // Output precision has the same shape as targets.\n    return (0,_tensor__WEBPACK_IMPORTED_MODULE_2__.tensor)(precision, $targets.shape, 'bool');\n}\nconst inTopKAsync = inTopKAsync_;\n//# sourceMappingURL=in_top_k.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/is_finite.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/is_finite.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export isFinite [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isFinite\": () => /* binding */ isFinite\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Returns which elements of x are finite.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isFinite().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction isFinite_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'isFinite');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.IsFinite, inputs);\n}\nconst isFinite = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ isFinite_ });\n//# sourceMappingURL=is_finite.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/is_finite.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/is_inf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/is_inf.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export isInf [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isInf\": () => /* binding */ isInf\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Returns which elements of x are Infinity or -Infinity.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isInf().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction isInf_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'isInf');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.IsInf, inputs);\n}\nconst isInf = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ isInf_ });\n//# sourceMappingURL=is_inf.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/is_inf.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/is_nan.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/is_nan.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export isNaN [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isNaN\": () => /* binding */ isNaN\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * RReturns which elements of x are NaN.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isNaN().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction isNaN_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'isNaN');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.IsNan, inputs);\n}\nconst isNaN = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ isNaN_ });\n//# sourceMappingURL=is_nan.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/is_nan.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export leakyRelu [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"leakyRelu\": () => /* binding */ leakyRelu\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes leaky rectified linear element-wise.\n *\n * See\n * [http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf](\n *     http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf)\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.leakyRelu(0.1).print();  // or tf.leakyRelu(x, 0.1)\n * ```\n * @param x The input tensor.\n * @param alpha The scaling factor for negative values, defaults to 0.2.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction leakyRelu_(x, alpha = 0.2) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'leakyRelu');\n    const inputs = { x: $x };\n    const attrs = { alpha };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.LeakyRelu, inputs, attrs);\n}\nconst leakyRelu = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ leakyRelu_ });\n//# sourceMappingURL=leaky_relu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/less.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/less.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export less [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"less\": () => /* binding */ less\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Returns the truth value of (a < b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.less(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction less_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'less');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'less');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_3__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.Less, inputs);\n}\nconst less = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ less_ });\n//# sourceMappingURL=less.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/less.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export lessEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lessEqual\": () => /* binding */ lessEqual\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Returns the truth value of (a <= b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.lessEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction lessEqual_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'lessEqual');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'lessEqual');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_3__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.LessEqual, inputs);\n}\nconst lessEqual = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ lessEqual_ });\n//# sourceMappingURL=less_equal.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/band_part.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/band_part.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export bandPart [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bandPart\": () => /* binding */ bandPart\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _greater_equal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../greater_equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js\");\n/* harmony import */ var _less_equal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../less_equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js\");\n/* harmony import */ var _logical_and__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../logical_and */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../range */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/range.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../stack */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _unstack__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../unstack */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js\");\n/* harmony import */ var _where__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../where */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where.js\");\n/* harmony import */ var _zeros__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../zeros */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Copy a tensor setting everything outside a central band in each innermost\n * matrix to zero.\n *\n * The band part is computed as follows: Assume input has `k` dimensions\n * `[I, J, K, ..., M, N]`, then the output is a tensor with the same shape where\n * `band[i, j, k, ..., m, n] = in_band(m, n) * input[i, j, k, ..., m, n]`.\n * The indicator function\n * `in_band(m, n) = (num_lower < 0 || (m-n) <= num_lower))`\n * `&& (num_upper < 0 || (n-m) <= num_upper)`\n *\n * ```js\n * const x = tf.tensor2d([[ 0,  1,  2, 3],\n *                        [-1,  0,  1, 2],\n *                        [-2, -1,  0, 1],\n *                        [-3, -2, -1, 0]]);\n * let y = tf.linalg.bandPart(x, 1, -1);\n * y.print(); // [[ 0,  1,  2, 3],\n *            //  [-1,  0,  1, 2],\n *            //  [ 0, -1,  0, 1],\n *            //  [ 0, 0 , -1, 0]]\n * let z = tf.linalg.bandPart(x, 2, 1);\n * z.print(); // [[ 0,  1,  0, 0],\n *            //  [-1,  0,  1, 0],\n *            //  [-2, -1,  0, 1],\n *            //  [ 0, -2, -1, 0]]\n * ```\n *\n * @param x Rank `k` tensor\n * @param numLower Number of subdiagonals to keep.\n *   If negative, keep entire lower triangle.\n * @param numUpper Number of subdiagonals to keep.\n *   If negative, keep entire upper triangle.\n * @returns Rank `k` tensor of the same shape as input.\n *   The extracted banded tensor.\n *\n * @doc {heading:'Operations', subheading:'Linear Algebra', namespace:'linalg'}\n */\nfunction bandPart_(a, numLower, numUpper) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(numLower % 1 === 0, () => `bandPart(): numLower must be an integer, got ${numLower}.`);\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(numUpper % 1 === 0, () => `bandPart(): numUpper must be an integer, got ${numUpper}.`);\n    const $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'bandPart');\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)($a.rank >= 2, () => `bandPart(): Rank must be at least 2, got ${$a.rank}.`);\n    const shape = $a.shape;\n    const [M, N] = $a.shape.slice(-2);\n    if (!(numLower <= M)) {\n        throw new Error(`bandPart(): numLower (${numLower})` +\n            ` must not be greater than the number of rows (${M}).`);\n    }\n    if (!(numUpper <= N)) {\n        throw new Error(`bandPart(): numUpper (${numUpper})` +\n            ` must not be greater than the number of columns (${N}).`);\n    }\n    if (numLower < 0) {\n        numLower = M;\n    }\n    if (numUpper < 0) {\n        numUpper = N;\n    }\n    const i = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)((0,_range__WEBPACK_IMPORTED_MODULE_3__.range)(0, M, 1, 'int32'), [-1, 1]);\n    const j = (0,_range__WEBPACK_IMPORTED_MODULE_3__.range)(0, N, 1, 'int32');\n    const ij = (0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(i, j);\n    const inBand = (0,_logical_and__WEBPACK_IMPORTED_MODULE_5__.logicalAnd)((0,_less_equal__WEBPACK_IMPORTED_MODULE_6__.lessEqual)(ij, (0,_scalar__WEBPACK_IMPORTED_MODULE_7__.scalar)(+numLower, 'int32')), (0,_greater_equal__WEBPACK_IMPORTED_MODULE_8__.greaterEqual)(ij, (0,_scalar__WEBPACK_IMPORTED_MODULE_7__.scalar)(-numUpper, 'int32')));\n    const zero = (0,_zeros__WEBPACK_IMPORTED_MODULE_9__.zeros)([M, N], $a.dtype);\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)((0,_stack__WEBPACK_IMPORTED_MODULE_10__.stack)((0,_unstack__WEBPACK_IMPORTED_MODULE_11__.unstack)((0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($a, [-1, M, N]))\n        .map(mat => (0,_where__WEBPACK_IMPORTED_MODULE_12__.where)(inBand, mat, zero))), shape);\n}\nconst bandPart = (0,_operation__WEBPACK_IMPORTED_MODULE_13__.op)({ bandPart_ });\n//# sourceMappingURL=band_part.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/band_part.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/gram_schmidt.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/gram_schmidt.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export gramSchmidt [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gramSchmidt\": () => /* binding */ gramSchmidt\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _norm__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../norm */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../split */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/split.js\");\n/* harmony import */ var _squeeze__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../squeeze */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js\");\n/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../stack */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n/**\n * Gram-Schmidt orthogonalization.\n *\n * ```js\n * const x = tf.tensor2d([[1, 2], [3, 4]]);\n * let y = tf.linalg.gramSchmidt(x);\n * y.print();\n * console.log('Othogonalized:');\n * y.dot(y.transpose()).print();  // should be nearly the identity matrix.\n * console.log('First row direction maintained:');\n * const data = await y.array();\n * console.log(data[0][1] / data[0][0]);  // should be nearly 2.\n * ```\n *\n * @param xs The vectors to be orthogonalized, in one of the two following\n *   formats:\n *   - An Array of `tf.Tensor1D`.\n *   - A `tf.Tensor2D`, i.e., a matrix, in which case the vectors are the rows\n *     of `xs`.\n *   In each case, all the vectors must have the same length and the length\n *   must be greater than or equal to the number of vectors.\n * @returns The orthogonalized and normalized vectors or matrix.\n *   Orthogonalization means that the vectors or the rows of the matrix\n *   are orthogonal (zero inner products). Normalization means that each\n *   vector or each row of the matrix has an L2 norm that equals `1`.\n *\n * @doc {heading:'Operations', subheading:'Linear Algebra', namespace:'linalg'}\n */\nfunction gramSchmidt_(xs) {\n    let inputIsTensor2D;\n    if (Array.isArray(xs)) {\n        inputIsTensor2D = false;\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(xs != null && xs.length > 0, () => 'Gram-Schmidt process: input must not be null, undefined, or ' +\n            'empty');\n        const dim = xs[0].shape[0];\n        for (let i = 1; i < xs.length; ++i) {\n            (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(xs[i].shape[0] === dim, () => 'Gram-Schmidt: Non-unique lengths found in the input vectors: ' +\n                `(${xs[i].shape[0]} vs. ${dim})`);\n        }\n    }\n    else {\n        inputIsTensor2D = true;\n        xs = (0,_split__WEBPACK_IMPORTED_MODULE_2__.split)(xs, xs.shape[0], 0).map(x => (0,_squeeze__WEBPACK_IMPORTED_MODULE_3__.squeeze)(x, [0]));\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(xs.length <= xs[0].shape[0], () => `Gram-Schmidt: Number of vectors (${xs.length}) exceeds ` +\n        `number of dimensions (${xs[0].shape[0]}).`);\n    const ys = [];\n    const xs1d = xs;\n    for (let i = 0; i < xs.length; ++i) {\n        ys.push(_engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.tidy(() => {\n            let x = xs1d[i];\n            if (i > 0) {\n                for (let j = 0; j < i; ++j) {\n                    const proj = (0,_mul__WEBPACK_IMPORTED_MODULE_4__.mul)((0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_mul__WEBPACK_IMPORTED_MODULE_4__.mul)(ys[j], x)), ys[j]);\n                    x = (0,_sub__WEBPACK_IMPORTED_MODULE_6__.sub)(x, proj);\n                }\n            }\n            return (0,_div__WEBPACK_IMPORTED_MODULE_7__.div)(x, (0,_norm__WEBPACK_IMPORTED_MODULE_8__.norm)(x, 'euclidean'));\n        }));\n    }\n    if (inputIsTensor2D) {\n        return (0,_stack__WEBPACK_IMPORTED_MODULE_9__.stack)(ys, 0);\n    }\n    else {\n        return ys;\n    }\n}\nconst gramSchmidt = (0,_operation__WEBPACK_IMPORTED_MODULE_10__.op)({ gramSchmidt_ });\n//# sourceMappingURL=gram_schmidt.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/gram_schmidt.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/qr.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/qr.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export qr [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"qr\": () => /* binding */ qr\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _clone__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../clone */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js\");\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _eye__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../eye */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/eye.js\");\n/* harmony import */ var _greater__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../greater */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js\");\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _neg__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../neg */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js\");\n/* harmony import */ var _norm__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../norm */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../stack */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _tensor2d__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../tensor2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js\");\n/* harmony import */ var _transpose__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../transpose */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js\");\n/* harmony import */ var _unstack__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../unstack */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js\");\n/* harmony import */ var _where__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../where */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Compute QR decomposition of m-by-n matrix using Householder transformation.\n *\n * Implementation based on\n *   [http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf]\n * (http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf)\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [3, 4]]);\n * let [q, r] = tf.linalg.qr(a);\n * console.log('Q');\n * q.print();\n * console.log('R');\n * r.print();\n * console.log('Orthogonalized');\n * q.dot(q.transpose()).print()  // should be nearly the identity matrix.\n * console.log('Reconstructed');\n * q.dot(r).print(); // should be nearly [[1, 2], [3, 4]];\n * ```\n *\n * @param x The `tf.Tensor` to be QR-decomposed. Must have rank >= 2. Suppose\n *   it has the shape `[..., M, N]`.\n * @param fullMatrices An optional boolean parameter. Defaults to `false`.\n *   If `true`, compute full-sized `Q`. If `false` (the default),\n *   compute only the leading N columns of `Q` and `R`.\n * @returns An `Array` of two `tf.Tensor`s: `[Q, R]`. `Q` is a unitary matrix,\n *   i.e., its columns all have unit norm and are mutually orthogonal.\n *   If `M >= N`,\n *     If `fullMatrices` is `false` (default),\n *       - `Q` has a shape of `[..., M, N]`,\n *       - `R` has a shape of `[..., N, N]`.\n *     If `fullMatrices` is `true` (default),\n *       - `Q` has a shape of `[..., M, M]`,\n *       - `R` has a shape of `[..., M, N]`.\n *   If `M < N`,\n *     - `Q` has a shape of `[..., M, M]`,\n *     - `R` has a shape of `[..., M, N]`.\n * @throws If the rank of `x` is less than 2.\n *\n * @doc {heading:'Operations',\n *       subheading:'Linear Algebra',\n *       namespace:'linalg'}\n */\nfunction qr_(x, fullMatrices = false) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(x.rank >= 2, () => `qr() requires input tensor to have a rank >= 2, but got rank ${x.rank}`);\n    if (x.rank === 2) {\n        return qr2d(x, fullMatrices);\n    }\n    else {\n        // Rank > 2.\n        // TODO(cais): Below we split the input into individual 2D tensors,\n        //   perform QR decomposition on them and then stack the results back\n        //   together. We should explore whether this can be parallelized.\n        const outerDimsProd = x.shape.slice(0, x.shape.length - 2)\n            .reduce((value, prev) => value * prev);\n        const x2ds = (0,_unstack__WEBPACK_IMPORTED_MODULE_2__.unstack)((0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)(x, [\n            outerDimsProd, x.shape[x.shape.length - 2],\n            x.shape[x.shape.length - 1]\n        ]), 0);\n        const q2ds = [];\n        const r2ds = [];\n        x2ds.forEach(x2d => {\n            const [q2d, r2d] = qr2d(x2d, fullMatrices);\n            q2ds.push(q2d);\n            r2ds.push(r2d);\n        });\n        const q = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)((0,_stack__WEBPACK_IMPORTED_MODULE_4__.stack)(q2ds, 0), x.shape);\n        const r = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)((0,_stack__WEBPACK_IMPORTED_MODULE_4__.stack)(r2ds, 0), x.shape);\n        return [q, r];\n    }\n}\nfunction qr2d(x, fullMatrices = false) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.tidy(() => {\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(x.shape.length === 2, () => `qr2d() requires a 2D Tensor, but got a ${x.shape.length}D Tensor.`);\n        const m = x.shape[0];\n        const n = x.shape[1];\n        let q = (0,_eye__WEBPACK_IMPORTED_MODULE_5__.eye)(m); // Orthogonal transform so far.\n        let r = (0,_clone__WEBPACK_IMPORTED_MODULE_6__.clone)(x); // Transformed matrix so far.\n        const one2D = (0,_tensor2d__WEBPACK_IMPORTED_MODULE_7__.tensor2d)([[1]], [1, 1]);\n        let w = (0,_clone__WEBPACK_IMPORTED_MODULE_6__.clone)(one2D);\n        const iters = m >= n ? n : m;\n        for (let j = 0; j < iters; ++j) {\n            // This tidy within the for-loop ensures we clean up temporary\n            // tensors as soon as they are no longer needed.\n            const rTemp = r;\n            const wTemp = w;\n            const qTemp = q;\n            [w, r, q] = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.tidy(() => {\n                // Find H = I - tau * w * w', to put zeros below R(j, j).\n                const rjEnd1 = (0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(r, [j, j], [m - j, 1]);\n                const normX = (0,_norm__WEBPACK_IMPORTED_MODULE_9__.norm)(rjEnd1);\n                const rjj = (0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(r, [j, j], [1, 1]);\n                // The sign() function returns 0 on 0, which causes division by zero.\n                const s = (0,_where__WEBPACK_IMPORTED_MODULE_10__.where)((0,_greater__WEBPACK_IMPORTED_MODULE_11__.greater)(rjj, 0), (0,_tensor2d__WEBPACK_IMPORTED_MODULE_7__.tensor2d)([[-1]]), (0,_tensor2d__WEBPACK_IMPORTED_MODULE_7__.tensor2d)([[1]]));\n                const u1 = (0,_sub__WEBPACK_IMPORTED_MODULE_12__.sub)(rjj, (0,_mul__WEBPACK_IMPORTED_MODULE_13__.mul)(s, normX));\n                const wPre = (0,_div__WEBPACK_IMPORTED_MODULE_14__.div)(rjEnd1, u1);\n                if (wPre.shape[0] === 1) {\n                    w = (0,_clone__WEBPACK_IMPORTED_MODULE_6__.clone)(one2D);\n                }\n                else {\n                    w = (0,_concat__WEBPACK_IMPORTED_MODULE_15__.concat)([\n                        one2D,\n                        (0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(wPre, [1, 0], [wPre.shape[0] - 1, wPre.shape[1]])\n                    ], 0);\n                }\n                const tau = (0,_neg__WEBPACK_IMPORTED_MODULE_16__.neg)((0,_div__WEBPACK_IMPORTED_MODULE_14__.div)((0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)(s, u1), normX));\n                // -- R := HR, Q := QH.\n                const rjEndAll = (0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(r, [j, 0], [m - j, n]);\n                const tauTimesW = (0,_mul__WEBPACK_IMPORTED_MODULE_13__.mul)(tau, w);\n                const wT = (0,_transpose__WEBPACK_IMPORTED_MODULE_18__.transpose)(w);\n                if (j === 0) {\n                    r = (0,_sub__WEBPACK_IMPORTED_MODULE_12__.sub)(rjEndAll, (0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)(tauTimesW, (0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)(wT, rjEndAll)));\n                }\n                else {\n                    const rTimesTau = (0,_sub__WEBPACK_IMPORTED_MODULE_12__.sub)(rjEndAll, (0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)(tauTimesW, (0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)(wT, rjEndAll)));\n                    r = (0,_concat__WEBPACK_IMPORTED_MODULE_15__.concat)([(0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(r, [0, 0], [j, n]), rTimesTau], 0);\n                }\n                const tawTimesWT = (0,_transpose__WEBPACK_IMPORTED_MODULE_18__.transpose)(tauTimesW);\n                const qAllJEnd = (0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(q, [0, j], [m, q.shape[1] - j]);\n                if (j === 0) {\n                    q = (0,_sub__WEBPACK_IMPORTED_MODULE_12__.sub)(qAllJEnd, (0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)((0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)(qAllJEnd, w), tawTimesWT));\n                }\n                else {\n                    const qTimesTau = (0,_sub__WEBPACK_IMPORTED_MODULE_12__.sub)(qAllJEnd, (0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)((0,_mat_mul__WEBPACK_IMPORTED_MODULE_17__.matMul)(qAllJEnd, w), tawTimesWT));\n                    q = (0,_concat__WEBPACK_IMPORTED_MODULE_15__.concat)([(0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(q, [0, 0], [m, j]), qTimesTau], 1);\n                }\n                return [w, r, q];\n            });\n            (0,_globals__WEBPACK_IMPORTED_MODULE_19__.dispose)([rTemp, wTemp, qTemp]);\n        }\n        if (!fullMatrices && m > n) {\n            q = (0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(q, [0, 0], [m, n]);\n            r = (0,_slice__WEBPACK_IMPORTED_MODULE_8__.slice)(r, [0, 0], [n, n]);\n        }\n        return [q, r];\n    });\n}\nconst qr = (0,_operation__WEBPACK_IMPORTED_MODULE_20__.op)({ qr_ });\n//# sourceMappingURL=qr.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/qr.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/linspace.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/linspace.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export linspace [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"linspace\": () => /* binding */ linspace\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * Return an evenly spaced sequence of numbers over the given interval.\n *\n * ```js\n * tf.linspace(0, 9, 10).print();\n * ```\n * @param start The start value of the sequence.\n * @param stop The end value of the sequence.\n * @param num The number of values to generate.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction linspace(start, stop, num) {\n    if (num <= 0) {\n        throw new Error('The number of values should be positive.');\n    }\n    const attrs = { start, stop, num };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_1__.LinSpace, {}, attrs);\n}\n//# sourceMappingURL=linspace.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/linspace.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export localResponseNormalization [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"localResponseNormalization\": () => /* binding */ localResponseNormalization\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Normalizes the activation of a local neighborhood across or within\n * channels.\n *\n * @param x The input tensor. The 4-D input tensor is treated as a 3-D array\n *     of 1D vectors (along the last dimension), and each vector is\n *     normalized independently.\n * @param depthRadius The number of adjacent channels in the 1D normalization\n *     window.\n * @param bias A constant bias term for the basis.\n * @param alpha A scale factor, usually positive.\n * @param beta An exponent.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction localResponseNormalization_(x, depthRadius = 5, bias = 1, alpha = 1, beta = 0.5) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'localResponseNormalization');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank === 4 || $x.rank === 3, () => `Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${$x.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.isInt(depthRadius), () => `Error in localResponseNormalization: depthRadius must be an ` +\n        `integer but got depthRadius ${depthRadius}.`);\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    const inputs = { x: x4D };\n    const attrs = { depthRadius, bias, alpha, beta };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.LRN, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    else {\n        return res;\n    }\n}\nconst localResponseNormalization = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ localResponseNormalization_ });\n//# sourceMappingURL=local_response_normalization.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/log.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/log.js ***!
  \************************************************************/
/*! namespace exports */
/*! export log [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"log\": () => /* binding */ log\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes natural logarithm of the input `tf.Tensor` element-wise: `ln(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E]);\n *\n * x.log().print();  // or tf.log(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction log_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'log');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Log, inputs);\n}\nconst log = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ log_ });\n//# sourceMappingURL=log.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/log.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export log1p [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"log1p\": () => /* binding */ log1p\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes natural logarithm of the input `tf.Tensor` plus one\n * element-wise: `ln(1 + x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E - 1]);\n *\n * x.log1p().print();  // or tf.log1p(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction log1p_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'log1p');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Log1p, inputs);\n}\nconst log1p = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ log1p_ });\n//# sourceMappingURL=log1p.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/log_sigmoid.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/log_sigmoid.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export logSigmoid [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logSigmoid\": () => /* binding */ logSigmoid\n/* harmony export */ });\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _neg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./neg */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _sigmoid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sigmoid */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js\");\n/* harmony import */ var _softplus__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./softplus */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n/**\n * Computes log sigmoid of the input `tf.Tensor` element-wise:\n * `logSigmoid(x)`. For numerical stability, we use `-tf.softplus(-x)`.\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.logSigmoid().print();  // or tf.logSigmoid(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction logSigmoid_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'logSigmoid');\n    // Use a custom gradient to maintain previous implementation.\n    // There is no LogSigmoid kernel in TF so we can't use engine.runKernel\n    // directly\n    const customOp = (0,_gradients__WEBPACK_IMPORTED_MODULE_1__.customGrad)((x) => {\n        // TODO(yassogba) we can remove the chained softplus call here only\n        // after backends have modualrized softplus at which point we can call\n        // engine runKernel(..., Sotfplus, ...) directly.\n        const value = (0,_neg__WEBPACK_IMPORTED_MODULE_2__.neg)((0,_softplus__WEBPACK_IMPORTED_MODULE_3__.softplus)((0,_neg__WEBPACK_IMPORTED_MODULE_2__.neg)(x)));\n        const gradFunc = (dy) => {\n            const derX = (0,_mul__WEBPACK_IMPORTED_MODULE_4__.mul)(dy, (0,_sigmoid__WEBPACK_IMPORTED_MODULE_5__.sigmoid)((0,_neg__WEBPACK_IMPORTED_MODULE_2__.neg)(x)));\n            return derX;\n        };\n        return { value, gradFunc };\n    });\n    return customOp($x);\n}\nconst logSigmoid = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ logSigmoid_ });\n//# sourceMappingURL=log_sigmoid.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/log_sigmoid.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/log_softmax.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/log_softmax.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export logSoftmax [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logSoftmax\": () => /* binding */ logSoftmax\n/* harmony export */ });\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _exp__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./exp */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./log */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log.js\");\n/* harmony import */ var _max__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./max */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n/**\n * Computes the log softmax.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param axis The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction logSoftmax_(logits, axis = -1) {\n    const $logits = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(logits, 'logits', 'logSoftmax');\n    if (axis === -1) {\n        axis = $logits.rank - 1;\n    }\n    if (axis !== $logits.rank - 1) {\n        throw Error('Log Softmax along a non-last dimension is not yet supported. ' +\n            `Logits was rank ${$logits.rank} and axis was ${axis}`);\n    }\n    // const forward: ForwardFunc<Tensor> = (backend, save) => {\n    //   const keepDims = true;\n    //   const xMax = max(logits, axis, true);\n    //   const shifted = sub(logits, xMax);\n    //   const value =\n    //       sub(cast(shifted, 'float32'), log(sum(exp(shifted), axis,\n    //       keepDims)));\n    //   save([value]);\n    //   return value;\n    // };\n    // Use a custom gradient for numerical stability.\n    const customOp = (0,_gradients__WEBPACK_IMPORTED_MODULE_1__.customGrad)((logits, save) => {\n        const keepDims = true;\n        const xMax = (0,_max__WEBPACK_IMPORTED_MODULE_2__.max)(logits, axis, true);\n        const shifted = (0,_sub__WEBPACK_IMPORTED_MODULE_3__.sub)(logits, xMax);\n        const value = (0,_sub__WEBPACK_IMPORTED_MODULE_3__.sub)((0,_cast__WEBPACK_IMPORTED_MODULE_4__.cast)(shifted, 'float32'), (0,_log__WEBPACK_IMPORTED_MODULE_5__.log)((0,_sum__WEBPACK_IMPORTED_MODULE_6__.sum)((0,_exp__WEBPACK_IMPORTED_MODULE_7__.exp)(shifted), axis, keepDims)));\n        save([value]);\n        const gradFunc = (dy, saved) => {\n            const [value] = saved;\n            const keepDims = true;\n            const softmax = (0,_exp__WEBPACK_IMPORTED_MODULE_7__.exp)(value);\n            return (0,_sub__WEBPACK_IMPORTED_MODULE_3__.sub)(dy, (0,_mul__WEBPACK_IMPORTED_MODULE_8__.mul)((0,_sum__WEBPACK_IMPORTED_MODULE_6__.sum)(dy, axis, keepDims), softmax));\n        };\n        return { value, gradFunc };\n    });\n    return customOp($logits);\n    // TODO Use Engine.runKernel when CPU/WebGL/WASM backends implement this.\n    // const inputs: LogSoftmaxInputs = {logits: $logits};\n    // const attrs: LogSoftmaxAttrs = {axis};\n    // return ENGINE.runKernel(\n    //            LogSoftmax, inputs as {} as NamedTensorMap,\n    //            attrs as {} as NamedAttrMap);\n}\nconst logSoftmax = (0,_operation__WEBPACK_IMPORTED_MODULE_9__.op)({ logSoftmax_ });\n//# sourceMappingURL=log_softmax.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/log_softmax.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export logSumExp [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logSumExp\": () => /* binding */ logSumExp\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _axis_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./axis_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js\");\n/* harmony import */ var _exp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./exp */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./log */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log.js\");\n/* harmony import */ var _max__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./max */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes the log(sum(exp(elements across the reduction dimensions)).\n *\n * Reduces the input along the dimensions given in `axis`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.logSumExp().print();  // or tf.logSumExp(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.logSumExp(axis).print();  // or tf.logSumExp(a, axis)\n * ```\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. If null (the default),\n *     reduces all dimensions.\n * @param keepDims If true, retains reduced dimensions with length\n *     of 1. Defaults to false.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction logSumExp_(x, axis = null, keepDims = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'logSumExp');\n    const axes = (0,_util__WEBPACK_IMPORTED_MODULE_1__.parseAxisParam)(axis, $x.shape);\n    const xMax = (0,_max__WEBPACK_IMPORTED_MODULE_2__.max)($x, axes, true /* keepDims */);\n    const a = (0,_sub__WEBPACK_IMPORTED_MODULE_3__.sub)($x, xMax);\n    const b = (0,_exp__WEBPACK_IMPORTED_MODULE_4__.exp)(a);\n    const c = (0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)(b, axes);\n    const d = (0,_log__WEBPACK_IMPORTED_MODULE_6__.log)(c);\n    const res = (0,_add__WEBPACK_IMPORTED_MODULE_7__.add)((0,_reshape__WEBPACK_IMPORTED_MODULE_8__.reshape)(xMax, d.shape), d);\n    if (keepDims) {\n        const newShape = (0,_axis_util__WEBPACK_IMPORTED_MODULE_9__.expandShapeToKeepDim)(res.shape, axes);\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_8__.reshape)(res, newShape);\n    }\n    return res;\n}\nconst logSumExp = (0,_operation__WEBPACK_IMPORTED_MODULE_10__.op)({ logSumExp_ });\n//# sourceMappingURL=log_sum_exp.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export logicalAnd [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicalAnd\": () => /* binding */ logicalAnd\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Returns the truth value of `a AND b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalAnd(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalAnd_(a, b) {\n    const $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'logicalAnd', 'bool');\n    const $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'logicalAnd', 'bool');\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_2__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.LogicalAnd, inputs);\n}\nconst logicalAnd = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ logicalAnd_ });\n//# sourceMappingURL=logical_and.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export logicalNot [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicalNot\": () => /* binding */ logicalNot\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Returns the truth value of `NOT x` element-wise.\n *\n * ```js\n * const a = tf.tensor1d([false, true], 'bool');\n *\n * a.logicalNot().print();\n * ```\n *\n * @param x The input tensor. Must be of dtype 'bool'.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalNot_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'logicalNot', 'bool');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.LogicalNot, inputs);\n}\nconst logicalNot = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ logicalNot_ });\n//# sourceMappingURL=logical_not.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export logicalOr [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicalOr\": () => /* binding */ logicalOr\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Returns the truth value of `a OR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalOr(b).print();\n * ```\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalOr_(a, b) {\n    const $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'logicalOr', 'bool');\n    const $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'logicalOr', 'bool');\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_2__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.LogicalOr, inputs);\n}\nconst logicalOr = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ logicalOr_ });\n//# sourceMappingURL=logical_or.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export logicalXor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicalXor\": () => /* binding */ logicalXor\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _logical_and__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logical_and */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js\");\n/* harmony import */ var _logical_not__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logical_not */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js\");\n/* harmony import */ var _logical_or__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logical_or */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Returns the truth value of `a XOR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalXor(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction logicalXor_(a, b) {\n    const $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(a, 'a', 'logicalXor', 'bool');\n    const $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(b, 'b', 'logicalXor', 'bool');\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_1__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    // x ^ y = (x | y) & ~(x & y)\n    return (0,_logical_and__WEBPACK_IMPORTED_MODULE_2__.logicalAnd)((0,_logical_or__WEBPACK_IMPORTED_MODULE_3__.logicalOr)(a, b), (0,_logical_not__WEBPACK_IMPORTED_MODULE_4__.logicalNot)((0,_logical_and__WEBPACK_IMPORTED_MODULE_2__.logicalAnd)(a, b)));\n}\nconst logicalXor = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ logicalXor_ });\n//# sourceMappingURL=logical_xor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export Reduction [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Reduction\": () => /* binding */ Reduction\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar Reduction;\n(function (Reduction) {\n    Reduction[Reduction[\"NONE\"] = 0] = \"NONE\";\n    Reduction[Reduction[\"MEAN\"] = 1] = \"MEAN\";\n    Reduction[Reduction[\"SUM\"] = 2] = \"SUM\";\n    Reduction[Reduction[\"SUM_BY_NONZERO_WEIGHTS\"] = 3] = \"SUM_BY_NONZERO_WEIGHTS\";\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=loss_ops_utils.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/absolute_difference.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/absolute_difference.js ***!
  \***********************************************************************************/
/*! namespace exports */
/*! export absoluteDifference [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"absoluteDifference\": () => /* binding */ absoluteDifference\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _abs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../abs */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n/**\n * Computes the absolute difference loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction absoluteDifference_(labels, predictions, weights, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(labels, 'labels', 'absoluteDifference');\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(predictions, 'predictions', 'absoluteDifference');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'absoluteDifference');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch)($labels.shape, $predictions.shape, 'Error in absoluteDifference: ');\n    const losses = (0,_abs__WEBPACK_IMPORTED_MODULE_3__.abs)((0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)($labels, $predictions));\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_5__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst absoluteDifference = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ absoluteDifference_ });\n//# sourceMappingURL=absolute_difference.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/absolute_difference.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export computeWeightedLoss [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"computeWeightedLoss\": () => /* binding */ computeWeightedLoss\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _mean__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../mean */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _not_equal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../not_equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js\");\n/* harmony import */ var _ones__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ones */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n;\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes the weighted loss between two tensors.\n *\n * @param losses Tensor of shape `[batch_size, d1, ... dN]`.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `losses`, and must be broadcastable to `losses` (i.e., all\n *    dimensions must be either `1`, or the same as the corresponding\n *    `losses` dimension).\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction computeWeightedLoss_(losses, weights, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $losses = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(losses, 'losses', 'computeWeightedLoss');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'computeWeightedLoss');\n    }\n    const weightedLoss = ($weights == null) ? $losses : (0,_mul__WEBPACK_IMPORTED_MODULE_2__.mul)($losses, $weights);\n    if (reduction === _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.NONE) {\n        return weightedLoss;\n    }\n    if (reduction === _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM) {\n        return (0,_sum__WEBPACK_IMPORTED_MODULE_3__.sum)(weightedLoss);\n    }\n    if (reduction === _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.MEAN) {\n        if ($weights == null) {\n            return (0,_mean__WEBPACK_IMPORTED_MODULE_4__.mean)(weightedLoss);\n        }\n        else {\n            const broadcastFactor = $losses.size / $weights.size;\n            const result = (0,_div__WEBPACK_IMPORTED_MODULE_5__.div)((0,_sum__WEBPACK_IMPORTED_MODULE_3__.sum)(weightedLoss), (0,_sum__WEBPACK_IMPORTED_MODULE_3__.sum)($weights));\n            return broadcastFactor > 1 ? (0,_div__WEBPACK_IMPORTED_MODULE_5__.div)(result, (0,_scalar__WEBPACK_IMPORTED_MODULE_6__.scalar)(broadcastFactor)) :\n                result;\n        }\n    }\n    if (reduction === _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n        if ($weights == null) {\n            return (0,_div__WEBPACK_IMPORTED_MODULE_5__.div)((0,_sum__WEBPACK_IMPORTED_MODULE_3__.sum)(weightedLoss), (0,_scalar__WEBPACK_IMPORTED_MODULE_6__.scalar)($losses.size));\n        }\n        else {\n            const broadcastedWeights = (0,_mul__WEBPACK_IMPORTED_MODULE_2__.mul)($weights, (0,_ones__WEBPACK_IMPORTED_MODULE_7__.ones)($losses.shape));\n            const numNonZeros = (0,_cast__WEBPACK_IMPORTED_MODULE_8__.cast)((0,_sum__WEBPACK_IMPORTED_MODULE_3__.sum)((0,_not_equal__WEBPACK_IMPORTED_MODULE_9__.notEqual)(broadcastedWeights, (0,_scalar__WEBPACK_IMPORTED_MODULE_6__.scalar)(0))), 'float32');\n            return (0,_div__WEBPACK_IMPORTED_MODULE_5__.div)((0,_sum__WEBPACK_IMPORTED_MODULE_3__.sum)(weightedLoss), numNonZeros);\n        }\n    }\n    throw Error(`Unknown reduction: ${reduction}`);\n}\nconst computeWeightedLoss = (0,_operation__WEBPACK_IMPORTED_MODULE_10__.op)({ computeWeightedLoss_ });\n//# sourceMappingURL=compute_weighted_loss.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/cosine_distance.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/cosine_distance.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export cosineDistance [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cosineDistance\": () => /* binding */ cosineDistance\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n;\n\n\n\n\n\n\n\n\n/**\n * Computes the cosine distance loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param axis The dimension along which the cosine distance is computed.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction cosineDistance_(labels, predictions, axis, weights, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(labels, 'labels', 'cosineDistance');\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(predictions, 'predictions', 'cosineDistance');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'cosineDistance');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch)($labels.shape, $predictions.shape, 'Error in cosineDistance: ');\n    const one = (0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(1);\n    const losses = (0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(one, (0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_mul__WEBPACK_IMPORTED_MODULE_6__.mul)($labels, $predictions), axis, true));\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_7__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst cosineDistance = (0,_operation__WEBPACK_IMPORTED_MODULE_8__.op)({ cosineDistance_ });\n//# sourceMappingURL=cosine_distance.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/cosine_distance.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/hinge_loss.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/hinge_loss.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export hingeLoss [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hingeLoss\": () => /* binding */ hingeLoss\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _relu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../relu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n;\n\n\n\n\n\n\n\n\n/**\n * Computes the Hinge loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction hingeLoss_(labels, predictions, weights, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    let $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(labels, 'labels', 'hingeLoss');\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(predictions, 'predictions', 'hingeLoss');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'hingeLoss');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch)($labels.shape, $predictions.shape, 'Error in hingeLoss: ');\n    const one = (0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(1);\n    // Convert binary labels to (-1, 1)\n    $labels = (0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)((0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(2), $labels), one);\n    const losses = (0,_relu__WEBPACK_IMPORTED_MODULE_6__.relu)((0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(one, (0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)($labels, $predictions)));\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_7__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst hingeLoss = (0,_operation__WEBPACK_IMPORTED_MODULE_8__.op)({ hingeLoss_ });\n//# sourceMappingURL=hinge_loss.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/hinge_loss.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/huber_loss.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/huber_loss.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export huberLoss [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"huberLoss\": () => /* binding */ huberLoss\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _abs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../abs */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _minimum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../minimum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _square__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes the huber loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param delta Point where huber loss changes from quadratic to linear.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`.\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction huberLoss_(labels, predictions, weights, delta = 1.0, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(labels, 'labels', 'huberLoss');\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(predictions, 'predictions', 'huberLoss');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'huberLoss');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch)($labels.shape, $predictions.shape, 'Error in huberLoss: ');\n    const deltaScalar = (0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(delta);\n    const error = (0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)((0,_sub__WEBPACK_IMPORTED_MODULE_5__.sub)($predictions, $labels));\n    const quadratic = (0,_minimum__WEBPACK_IMPORTED_MODULE_6__.minimum)(error, deltaScalar);\n    const linear = (0,_sub__WEBPACK_IMPORTED_MODULE_5__.sub)(error, quadratic);\n    const losses = (0,_add__WEBPACK_IMPORTED_MODULE_7__.add)((0,_mul__WEBPACK_IMPORTED_MODULE_8__.mul)((0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(0.5), (0,_square__WEBPACK_IMPORTED_MODULE_9__.square)(quadratic)), (0,_mul__WEBPACK_IMPORTED_MODULE_8__.mul)(deltaScalar, linear));\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_10__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst huberLoss = (0,_operation__WEBPACK_IMPORTED_MODULE_11__.op)({ huberLoss_ });\n//# sourceMappingURL=huber_loss.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/huber_loss.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/log_loss.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/log_loss.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export logLoss [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logLoss\": () => /* binding */ logLoss\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../log */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _neg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../neg */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes the log loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param epsilon A small increment to avoid taking log of zero\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction logLoss_(labels, predictions, weights, epsilon = 1e-7, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(labels, 'labels', 'logLoss');\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(predictions, 'predictions', 'logLoss');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'logLoss');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch)($labels.shape, $predictions.shape, 'Error in logLoss: ');\n    const one = (0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(1);\n    const epsilonScalar = (0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(epsilon);\n    const l1 = (0,_neg__WEBPACK_IMPORTED_MODULE_4__.neg)((0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)($labels, (0,_log__WEBPACK_IMPORTED_MODULE_6__.log)((0,_add__WEBPACK_IMPORTED_MODULE_7__.add)($predictions, epsilonScalar))));\n    const l2 = (0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_sub__WEBPACK_IMPORTED_MODULE_8__.sub)(one, $labels), (0,_log__WEBPACK_IMPORTED_MODULE_6__.log)((0,_add__WEBPACK_IMPORTED_MODULE_7__.add)((0,_sub__WEBPACK_IMPORTED_MODULE_8__.sub)(one, $predictions), epsilonScalar)));\n    const losses = (0,_sub__WEBPACK_IMPORTED_MODULE_8__.sub)(l1, l2);\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_9__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst logLoss = (0,_operation__WEBPACK_IMPORTED_MODULE_10__.op)({ logLoss_ });\n//# sourceMappingURL=log_loss.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/log_loss.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/mean_squared_error.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/mean_squared_error.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export meanSquaredError [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"meanSquaredError\": () => /* binding */ meanSquaredError\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _squared_difference__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../squared_difference */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Computes the mean squared error between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}\n */\nfunction meanSquaredError_(labels, predictions, weights, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_0__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    const $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(labels, 'labels', 'meanSquaredError');\n    const $predictions = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(predictions, 'predictions', 'meanSquaredError');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(weights, 'weights', 'meanSquaredError');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assertShapesMatch)($labels.shape, $predictions.shape, 'Error in meanSquaredError: ');\n    const losses = (0,_squared_difference__WEBPACK_IMPORTED_MODULE_3__.squaredDifference)($labels, $predictions);\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_4__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst meanSquaredError = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ meanSquaredError_ });\n//# sourceMappingURL=mean_squared_error.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/mean_squared_error.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/sigmoid_cross_entropy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/sigmoid_cross_entropy.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export sigmoidCrossEntropy [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sigmoidCrossEntropy\": () => /* binding */ sigmoidCrossEntropy\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _abs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../abs */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _exp__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../exp */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js\");\n/* harmony import */ var _log1p__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../log1p */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _neg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../neg */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _relu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../relu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction sigmoidCrossEntropyWithLogits_(labels, logits) {\n    const $labels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(labels, 'labels', 'sigmoidCrossEntropyWithLogits');\n    const $logits = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(logits, 'logits', 'sigmoidCrossEntropyWithLogits');\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatch)($labels.shape, $logits.shape, 'Error in sigmoidCrossEntropyWithLogits: ');\n    /**\n     * Implementation Details:\n     *\n     * For brevity, let `x = logits`, `z = labels`.  The logistic loss is\n     *     z * -log(sigmoid(x)) + (1 - z) * -log(1 - sigmoid(x))\n     *   = z * -log(1 / (1 + exp(-x))) + (1 - z) * -log(exp(-x) / (1 + exp(-x)))\n     *   = z * log(1 + exp(-x)) + (1 - z) * (-log(exp(-x)) + log(1 + exp(-x)))\n     *   = z * log(1 + exp(-x)) + (1 - z) * (x + log(1 + exp(-x))\n     *   = (1 - z) * x + log(1 + exp(-x))\n     *   = x - x * z + log(1 + exp(-x))\n     *\n     *   For x < 0, to avoid overflow in exp(-x), we reformulate the above\n     *     x - x * z + log(1 + exp(-x))\n     *   = log(exp(x)) - x * z + log(1 + exp(-x))\n     *   = - x * z + log(1 + exp(x))\n     *\n     * Hence, to ensure stability and avoid overflow, the implementation uses\n     * this equivalent formulation:\n     *     max(x, 0) - x * z + log(1 + exp(-abs(x)))\n     */\n    const maxOutput = (0,_relu__WEBPACK_IMPORTED_MODULE_2__.relu)($logits);\n    const outputXTarget = (0,_mul__WEBPACK_IMPORTED_MODULE_3__.mul)($logits, $labels);\n    const sigmoidOutput = (0,_log1p__WEBPACK_IMPORTED_MODULE_4__.log1p)((0,_exp__WEBPACK_IMPORTED_MODULE_5__.exp)((0,_neg__WEBPACK_IMPORTED_MODULE_6__.neg)((0,_abs__WEBPACK_IMPORTED_MODULE_7__.abs)($logits))));\n    return (0,_add__WEBPACK_IMPORTED_MODULE_8__.add)((0,_sub__WEBPACK_IMPORTED_MODULE_9__.sub)(maxOutput, outputXTarget), sigmoidOutput);\n}\n/**\n * Computes the sigmoid cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newMulticlassLabels = multiclassLabels * (1 - labelSmoothing)\n *                         + 0.5 * labelSmoothing\n *\n * @param multiClassLabels The ground truth output tensor of shape\n * [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' }\n */\nfunction sigmoidCrossEntropy_(multiClassLabels, logits, weights, labelSmoothing = 0, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_10__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    let $multiClassLabels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(multiClassLabels, 'multiClassLabels', 'sigmoidCrossEntropy');\n    const $logits = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(logits, 'logits', 'sigmoidCrossEntropy');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(weights, 'weights', 'sigmoidCrossEntropy');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assertShapesMatch)($multiClassLabels.shape, $logits.shape, 'Error in sigmoidCrossEntropy: ');\n    if (labelSmoothing > 0) {\n        const labelSmoothingScalar = (0,_scalar__WEBPACK_IMPORTED_MODULE_11__.scalar)(labelSmoothing);\n        const one = (0,_scalar__WEBPACK_IMPORTED_MODULE_11__.scalar)(1);\n        const half = (0,_scalar__WEBPACK_IMPORTED_MODULE_11__.scalar)(0.5);\n        $multiClassLabels =\n            (0,_add__WEBPACK_IMPORTED_MODULE_8__.add)((0,_mul__WEBPACK_IMPORTED_MODULE_3__.mul)($multiClassLabels, (0,_sub__WEBPACK_IMPORTED_MODULE_9__.sub)(one, labelSmoothingScalar)), (0,_mul__WEBPACK_IMPORTED_MODULE_3__.mul)(half, labelSmoothingScalar));\n    }\n    const losses = sigmoidCrossEntropyWithLogits_($multiClassLabels, $logits);\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_12__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst sigmoidCrossEntropy = (0,_operation__WEBPACK_IMPORTED_MODULE_13__.op)({ sigmoidCrossEntropy_ });\n//# sourceMappingURL=sigmoid_cross_entropy.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/sigmoid_cross_entropy.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/losses/softmax_cross_entropy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/losses/softmax_cross_entropy.js ***!
  \*************************************************************************************/
/*! namespace exports */
/*! export softmaxCrossEntropy [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"softmaxCrossEntropy\": () => /* binding */ softmaxCrossEntropy\n/* harmony export */ });\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _axis_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axis_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _exp__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../exp */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js\");\n/* harmony import */ var _log_sum_exp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log_sum_exp */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js\");\n/* harmony import */ var _loss_ops_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../loss_ops_utils */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/loss_ops_utils.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _neg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../neg */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/* harmony import */ var _compute_weighted_loss__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes softmax cross entropy between logits and labels.\n *\n * Measures the probability error in discrete classification tasks in which\n * the classes are mutually exclusive (each entry is in exactly one class).\n * For example, each CIFAR-10 image is labeled with one and only one label: an\n * image can be a dog or a truck, but not both.\n *\n * `NOTE`: While the classes are mutually exclusive, their probabilities need\n * not be. All that is required is that each row of labels is a valid\n * probability distribution. If they are not, the computation of the gradient\n * will be incorrect.\n *\n * `WARNING`: This op expects unscaled logits, since it performs a softmax on\n * logits internally for efficiency. Do not call this op with the output of\n * softmax, as it will produce incorrect results.\n *\n * logits and labels must have the same shape, e.g. [batch_size, num_classes]\n * and the same dtype.\n * @param labels The labels array.\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n */\nfunction softmaxCrossEntropyWithLogits_(labels, logits, dim = -1) {\n    if (dim === -1) {\n        dim = logits.rank - 1;\n    }\n    if (dim !== logits.rank - 1) {\n        throw Error(`Softmax cross entropy along a non-last dimension is not yet ` +\n            `supported. Labels / logits was rank ${logits.rank} ` +\n            `and dim was ${dim}`);\n    }\n    // Use a custom gradient for numerical stability.\n    const customOp = (0,_gradients__WEBPACK_IMPORTED_MODULE_0__.customGrad)((labels, logits, save) => {\n        // Reference:\n        //   1. http://cs231n.github.io/linear-classify/#softmax\n        //   2. https://blog.feedly.com/tricks-of-the-trade-logsumexp/\n        const keepDims = true;\n        const lse = (0,_log_sum_exp__WEBPACK_IMPORTED_MODULE_1__.logSumExp)(logits, [dim], keepDims);\n        const logResult = (0,_sub__WEBPACK_IMPORTED_MODULE_2__.sub)((0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)(logits, 'float32'), lse);\n        save([labels, logResult]);\n        const costVector = (0,_neg__WEBPACK_IMPORTED_MODULE_4__.neg)((0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(logResult, labels));\n        const value = (0,_sum__WEBPACK_IMPORTED_MODULE_6__.sum)(costVector, [dim]);\n        const gradFunc = (dy, saved) => {\n            const [labels, logResult] = saved;\n            const dyShape = (0,_axis_util__WEBPACK_IMPORTED_MODULE_7__.expandShapeToKeepDim)(dy.shape, [dim]);\n            return [\n                (0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_reshape__WEBPACK_IMPORTED_MODULE_8__.reshape)(dy, dyShape), (0,_sub__WEBPACK_IMPORTED_MODULE_2__.sub)((0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)(labels, 'float32'), (0,_exp__WEBPACK_IMPORTED_MODULE_9__.exp)(logResult))),\n                (0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_reshape__WEBPACK_IMPORTED_MODULE_8__.reshape)(dy, dyShape), (0,_sub__WEBPACK_IMPORTED_MODULE_2__.sub)((0,_exp__WEBPACK_IMPORTED_MODULE_9__.exp)(logResult), (0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)(labels, 'float32'))),\n            ];\n        };\n        return { value, gradFunc };\n    });\n    return customOp(labels, logits);\n}\n/**\n * Computes the softmax cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newOnehotLabels = onehotLabels * (1 - labelSmoothing)\n *                         + labelSmoothing / numClasses\n *\n * @param onehotLabels One hot encoded labels\n *    [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or 1, and must be\n *    broadcastable to `loss`  of shape [batch_size]\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n *\n * @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' }\n */\nfunction softmaxCrossEntropy_(onehotLabels, logits, weights, labelSmoothing = 0, reduction = _loss_ops_utils__WEBPACK_IMPORTED_MODULE_10__.Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    let $onehotLabels = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_11__.convertToTensor)(onehotLabels, 'onehotLabels', 'softmaxCrossEntropy');\n    const $logits = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_11__.convertToTensor)(logits, 'logits', 'softmaxCrossEntropy');\n    let $weights = null;\n    if (weights != null) {\n        $weights = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_11__.convertToTensor)(weights, 'weights', 'softmaxCrossEntropy');\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_12__.assertShapesMatch)($onehotLabels.shape, $logits.shape, 'Error in softmaxCrossEntropy: ');\n    if (labelSmoothing > 0) {\n        const labelSmoothingScalar = (0,_scalar__WEBPACK_IMPORTED_MODULE_13__.scalar)(labelSmoothing);\n        const one = (0,_scalar__WEBPACK_IMPORTED_MODULE_13__.scalar)(1);\n        const numClasses = (0,_scalar__WEBPACK_IMPORTED_MODULE_13__.scalar)($onehotLabels.shape[1]);\n        $onehotLabels =\n            (0,_add__WEBPACK_IMPORTED_MODULE_14__.add)((0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)($onehotLabels, (0,_sub__WEBPACK_IMPORTED_MODULE_2__.sub)(one, labelSmoothingScalar)), (0,_div__WEBPACK_IMPORTED_MODULE_15__.div)(labelSmoothingScalar, numClasses));\n    }\n    const losses = softmaxCrossEntropyWithLogits_($onehotLabels, $logits);\n    return (0,_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_16__.computeWeightedLoss)(losses, $weights, reduction);\n}\nconst softmaxCrossEntropy = (0,_operation__WEBPACK_IMPORTED_MODULE_17__.op)({ softmaxCrossEntropy_ });\n//# sourceMappingURL=softmax_cross_entropy.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/losses/softmax_cross_entropy.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export matMul [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"matMul\": () => /* binding */ matMul\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Computes the dot product of two matrices, A * B. These must be matrices.\n *\n * ```js\n * const a = tf.tensor2d([1, 2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.matMul(b).print();  // or tf.matMul(a, b)\n * ```\n * @param a First matrix in dot product operation.\n * @param b Second matrix in dot product operation.\n * @param transposeA If true, `a` is transposed before multiplication.\n * @param transposeB If true, `b` is transposed before multiplication.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction matMul_(a, b, transposeA = false, transposeB = false) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'matMul');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'matMul');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    const inputs = { a: $a, b: $b };\n    const attrs = { transposeA, transposeB };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.BatchMatMul, inputs, attrs);\n}\nconst matMul = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ matMul_ });\n//# sourceMappingURL=mat_mul.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/max.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/max.js ***!
  \************************************************************/
/*! namespace exports */
/*! export max [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"max\": () => /* binding */ max\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes the maximum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.max().print();  // or tf.max(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.max(axis).print();  // or tf.max(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction max_(x, axis = null, keepDims = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'max');\n    const inputs = { x: $x };\n    const attrs = { reductionIndices: axis, keepDims };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Max, inputs, attrs);\n}\nconst max = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ max_ });\n//# sourceMappingURL=max.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/max.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export maxPool [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPool\": () => /* binding */ maxPool\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n/**\n * Computes the 2D max pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction maxPool_(x, filterSize, strides, pad, dimRoundingMode) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'maxPool');\n    const dilations = 1;\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x4D.rank === 4, () => `Error in maxPool: input must be rank 4 but got rank ${x4D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_4__.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_3__.assert(_util__WEBPACK_IMPORTED_MODULE_3__.isInt(pad), () => `Error in maxPool: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x4D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_5__.MaxPool, inputs, attrs);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst maxPool = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ maxPool_ });\n//# sourceMappingURL=max_pool.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export maxPool3d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPool3d\": () => /* binding */ maxPool3d\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Computes the 3D max pooling.\n *\n * ```js\n * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);\n * const result = tf.maxPool3d(x, 2, 1, 'valid');\n * result.print();\n * ```\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     `[batch, depth, height, width, inChannels]`.\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     If `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideDepth == strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction maxPool3d_(x, filterSize = [1, 1, 1], strides, pad, dimRoundingMode, dataFormat = 'NDHWC') {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'maxPool3d');\n    let x5D = $x;\n    let reshapedTo5D = false;\n    if ($x.rank === 4) {\n        reshapedTo5D = true;\n        x5D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(x5D.rank === 5, () => `Error in maxPool3d: x must be rank 5 but got rank ${x5D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_3__.assert(dataFormat === 'NDHWC', () => `Error in maxPool3d: Only NDHWC is currently supported, ` +\n        `but got dataFormat of ${dataFormat}`);\n    if (dimRoundingMode != null) {\n        _util__WEBPACK_IMPORTED_MODULE_3__.assert(_util__WEBPACK_IMPORTED_MODULE_3__.isInt(pad), () => `Error in maxPool3d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n    }\n    const inputs = { x: x5D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode, dataFormat };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.MaxPool3D, inputs, attrs);\n    if (reshapedTo5D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n    }\n    return res;\n}\nconst maxPool3d = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ maxPool3d_ });\n//# sourceMappingURL=max_pool_3d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_with_argmax.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_with_argmax.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export maxPoolWithArgmax [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maxPoolWithArgmax\": () => /* binding */ maxPoolWithArgmax\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes the 2D max pooling of an image with Argmax index.\n * The indices in argmax are flattened, so that a maximum value at position `[b,\n * y, x, c]` becomes flattened index: `(y * width + x) * channels + c` if\n * include_batch_in_index is False; `((b * height + y) * width + x) * channels\n * +c` if include_batch_in_index is True.\n *\n * The indices returned are always in `[0, height) x [0, width)` before\n * flattening.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dataFormat An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param includeBatchIndex Defaults to False. Whether to include batch\n *    dimension in flattened index of argmax.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction maxPoolWithArgmax_(x, filterSize, strides, pad, includeBatchInIndex = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'maxPoolWithArgmax');\n    const inputs = { x: $x };\n    const attrs = { filterSize, strides, pad, includeBatchInIndex };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const result = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.MaxPoolWithArgmax, inputs, attrs);\n    return { result: result[0], indexes: result[1] };\n}\nconst maxPoolWithArgmax = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ maxPoolWithArgmax_ });\n//# sourceMappingURL=max_pool_with_argmax.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_with_argmax.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export maximum [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"maximum\": () => /* binding */ maximum\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n/**\n * Returns the max of a and b (`a > b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `tf.maximumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * ```js\n * // Broadcast maximum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction maximum_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'maximum');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'maximum');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    if ($a.dtype === 'bool') {\n        $a = (0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)($a, 'int32');\n        $b = (0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)($b, 'int32');\n    }\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_4__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_5__.Maximum, inputs);\n}\nconst maximum = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ maximum_ });\n//# sourceMappingURL=maximum.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export mean [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mean\": () => /* binding */ mean\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes the mean of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces `x` along the dimensions given in `axis`. Unless `keepDims` is\n * true, the rank of the `tf.Tensor` is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and a `tf.Tensor` with\n * a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.mean().print();  // or tf.mean(a)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.mean(axis).print();  // or tf.mean(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction mean_(x, axis = null, keepDims = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'mean');\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Mean, inputs, attrs);\n}\nconst mean = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ mean_ });\n//# sourceMappingURL=mean.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/min.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/min.js ***!
  \************************************************************/
/*! namespace exports */
/*! export min [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"min\": () => /* binding */ min\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes the minimum value from the input.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axes`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axes` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.min().print();  // or tf.min(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.min(axis).print();  // or tf.min(x, axis)\n * ```\n *\n * @param x The input Tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction min_(x, axis = null, keepDims = false) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'min');\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Min, inputs, attrs);\n}\nconst min = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ min_ });\n//# sourceMappingURL=min.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/min.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export minimum [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"minimum\": () => /* binding */ minimum\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n/**\n * Returns the min of a and b (`a < b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `minimumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * ```js\n * // Broadcast minimum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction minimum_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'minimum');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'minimum');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    if ($a.dtype === 'bool') {\n        $a = (0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)($a, 'int32');\n        $b = (0,_cast__WEBPACK_IMPORTED_MODULE_3__.cast)($b, 'int32');\n    }\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_4__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_5__.Minimum, inputs);\n}\nconst minimum = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ minimum_ });\n//# sourceMappingURL=minimum.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export mirrorPad [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mirrorPad\": () => /* binding */ mirrorPad\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Pads a `tf.Tensor` using mirror padding.\n *\n * This operation implements the `REFLECT` and `SYMMETRIC` modes of pad.\n *\n * ```js\n * const x = tf.range(0, 9).reshape([1, 1, 3, 3]);\n * x.mirrorPad([[0, 0], [0, 0], [2, 2], [2, 2]], 'reflect').print();\n * ```\n * @param x The tensor to pad.\n * @param paddings An array of length `R` (the rank of the tensor), where\n * each element is a length-2 tuple of ints `[padBefore, padAfter]`,\n * specifying how much to pad along each dimension of the tensor.\n * In \"reflect\" mode, the padded regions do not include the borders,\n * while in \"symmetric\" mode the padded regions do include the borders.\n * For example, if the input is `[1, 2, 3]` and paddings is `[0, 2]`,\n * then the output is `[1, 2, 3, 2, 1]` in \"reflect\" mode, and\n * `[1, 2, 3, 3, 2]` in \"symmetric\" mode.\n * If `mode` is \"reflect\" then both `paddings[D, 0]` and `paddings[D, 1]`\n * must be no greater than `x.shape[D] - 1`. If mode is \"symmetric\"\n * then both `paddings[D, 0]` and `paddings[D, 1]` must be no greater than\n * `x.shape[D]`\n * @param mode String to specify padding mode. Can be `'reflect' | 'symmetric'`\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction mirrorPad_(x, paddings, mode) {\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(mode === 'reflect' || mode === 'symmetric', () => `Invalid mode. Mode must be either reflect or symmetric. ` +\n        `Got ${mode}.`);\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_2__.convertToTensor)(x, 'x', 'mirrorPad');\n    if ($x.rank === 0) {\n        throw new Error('mirrorPad(scalar) is not defined. ' +\n            'Pass non-scalar to mirrorPad');\n    }\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert(paddings.length === $x.rank, () => `Padding doesn't match input. Must be ${$x.rank}. ` +\n        `Got ${paddings.length}.`);\n    const shapeOffset = mode === 'reflect' ? 1 : 0;\n    for (let i = 0; i < $x.rank; i++) {\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert(paddings[i].length === 2, () => `Invalid number of paddings. Must be length of 2 each.`);\n        _util__WEBPACK_IMPORTED_MODULE_1__.assert(paddings[i][0] >= 0 && paddings[i][0] <= $x.shape[i] - shapeOffset &&\n            paddings[i][1] >= 0 && paddings[i][1] <= $x.shape[i] - shapeOffset, () => `Padding in dimension ${i} cannot be greater than or equal ` +\n            `to ${$x.shape[i] - shapeOffset} or less than 0 for input of ` +\n            `shape ${$x.shape}`);\n    }\n    const attrs = { paddings, mode };\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.MirrorPad, inputs, attrs);\n}\nconst mirrorPad = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ mirrorPad_ });\n//# sourceMappingURL=mirror_pad.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/mod.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/mod.js ***!
  \************************************************************/
/*! namespace exports */
/*! export mod [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mod\": () => /* binding */ mod\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Returns the mod of a and b element-wise.\n * `floor(x / y) * y + mod(x, y) = x`\n * Supports broadcasting.\n *\n * We also expose `tf.modStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.mod(b).print();  // or tf.mod(a, b)\n * ```\n *\n * ```js\n * // Broadcast a mod b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.mod(b).print();  // or tf.mod(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction mod_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'mod');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'mod');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Mod, inputs);\n}\nconst mod = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ mod_ });\n//# sourceMappingURL=mod.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/mod.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/moments.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/moments.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export moments [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"moments\": () => /* binding */ moments\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _axis_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./axis_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _mean__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mean */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _square__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n/**\n * Calculates the mean and variance of `x`. The mean and variance are\n * calculated by aggregating the contents of `x` across `axes`. If `x` is\n * 1-D and `axes = [0]` this is just the mean and variance of a vector.\n *\n * @param x The input tensor.\n * @param axis The dimension(s) along with to compute mean and\n *     variance. By default it reduces all dimensions.\n * @param keepDims If true, the moments have the same dimensionality as the\n *     input.\n * @return An object with two keys: `mean` and `variance`.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction moments_(x, axis = null, keepDims = false) {\n    x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'moments');\n    const axes = (0,_util__WEBPACK_IMPORTED_MODULE_1__.parseAxisParam)(axis, x.shape);\n    const xMean = (0,_mean__WEBPACK_IMPORTED_MODULE_2__.mean)(x, axes, keepDims);\n    let keepDimsShape = xMean.shape;\n    if (!keepDims) {\n        keepDimsShape = (0,_axis_util__WEBPACK_IMPORTED_MODULE_3__.expandShapeToKeepDim)(xMean.shape, axes);\n    }\n    const devSquared = (0,_square__WEBPACK_IMPORTED_MODULE_4__.square)((0,_sub__WEBPACK_IMPORTED_MODULE_5__.sub)((0,_cast__WEBPACK_IMPORTED_MODULE_6__.cast)(x, 'float32'), (0,_reshape__WEBPACK_IMPORTED_MODULE_7__.reshape)(xMean, keepDimsShape)));\n    const variance = (0,_mean__WEBPACK_IMPORTED_MODULE_2__.mean)(devSquared, axes, keepDims);\n    return { mean: xMean, variance };\n}\nconst moments = (0,_operation__WEBPACK_IMPORTED_MODULE_8__.op)({ moments_ });\n//# sourceMappingURL=moments.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/moments.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/moving_average.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/moving_average.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export movingAverage [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"movingAverage\": () => /* binding */ movingAverage\n/* harmony export */ });\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pow */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n/**\n * Compute the moving average of a variable.\n *\n * Without zeroDebias, the moving average operation is defined by:\n *   `v += delta`\n * where\n *   `delta = (1 - decay) * (x - v)`\n *\n * With zeroDebias (default), the `delta` term is scaled to debias the\n * effect of the (assumed) zero-initialization of `v`.\n *   `delta /= (1 - decay ^ step)`\n *\n * For more details on the zero-debiasing algorithm, see:\n *   https://arxiv.org/abs/1412.6980\n *\n * Note that this function is completely stateless and does not keep track of\n * step count. The step count needs to be maintained by the caller and passed\n * in as `step`.\n *\n * @param v The current moving average value.\n * @param x New input value, must have the same shape and dtype as `v`.\n * @param decay The decay factor. Typical values are 0.95 and 0.99.\n * @param step Step count.\n * @param zeroDebias: Whether zeroDebias is to be performed (default: `true`).\n * @returns The new moving average value.\n *\n * @doc {heading: 'Operations', subheading: 'Moving Average'}\n */\nfunction movingAverage_(v, x, decay, step, zeroDebias = true) {\n    const $v = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(v, 'v', 'movingAverage');\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'movingAverage');\n    const $decay = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(decay, 'decay', 'movingAverage');\n    (0,_tensor_util__WEBPACK_IMPORTED_MODULE_1__.assertTypesMatch)($v, $x);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_util__WEBPACK_IMPORTED_MODULE_2__.arraysEqual($v.shape, $x.shape), () => 'Shape mismatch in v and x');\n    const one = (0,_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(1);\n    const oneMinusDecay = (0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(one, $decay);\n    let update = (0,_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)($x, $v), oneMinusDecay);\n    if (zeroDebias) {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(step != null, () => 'When using zeroDebias: true, step is required.');\n        const $step = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(step, 'step', 'movingAverage');\n        update = (0,_div__WEBPACK_IMPORTED_MODULE_6__.div)(update, (0,_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(one, (0,_pow__WEBPACK_IMPORTED_MODULE_7__.pow)($decay, $step)));\n    }\n    return (0,_add__WEBPACK_IMPORTED_MODULE_8__.add)($v, update);\n}\nconst movingAverage = (0,_operation__WEBPACK_IMPORTED_MODULE_9__.op)({ movingAverage_ });\n//# sourceMappingURL=moving_average.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/moving_average.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js ***!
  \************************************************************/
/*! namespace exports */
/*! export mul [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mul\": () => /* binding */ mul\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Multiplies two `tf.Tensor`s element-wise, A * B. Supports broadcasting.\n *\n * We also expose `tf.mulStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([2, 3, 4, 5]);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n *\n * ```js\n * // Broadcast mul a with b.\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.scalar(5);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n * @param a The first tensor to multiply.\n * @param b The second tensor to multiply. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction mul_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'mul');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'mul');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Multiply, inputs);\n}\nconst mul = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ mul_ });\n//# sourceMappingURL=mul.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/multi_rnn_cell.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/multi_rnn_cell.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export multiRNNCell [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"multiRNNCell\": () => /* binding */ multiRNNCell\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n;\n\n/**\n * Computes the next states and outputs of a stack of LSTMCells.\n *\n * Each cell output is used as input to the next cell.\n *\n * Returns `[cellState, cellOutput]`.\n *\n * Derived from tf.contrib.rn.MultiRNNCell.\n *\n * @param lstmCells Array of LSTMCell functions.\n * @param data The input to the cell.\n * @param c Array of previous cell states.\n * @param h Array of previous cell outputs.\n *\n * @doc {heading: 'Operations', subheading: 'RNN'}\n */\nfunction multiRNNCell_(lstmCells, data, c, h) {\n    const $data = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(data, 'data', 'multiRNNCell');\n    const $c = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensorArray)(c, 'c', 'multiRNNCell');\n    const $h = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensorArray)(h, 'h', 'multiRNNCell');\n    let input = $data;\n    const newStates = [];\n    for (let i = 0; i < lstmCells.length; i++) {\n        const output = lstmCells[i](input, $c[i], $h[i]);\n        newStates.push(output[0]);\n        newStates.push(output[1]);\n        input = output[1];\n    }\n    const newC = [];\n    const newH = [];\n    for (let i = 0; i < newStates.length; i += 2) {\n        newC.push(newStates[i]);\n        newH.push(newStates[i + 1]);\n    }\n    return [newC, newH];\n}\nconst multiRNNCell = (0,_operation__WEBPACK_IMPORTED_MODULE_1__.op)({ multiRNNCell_ });\n//# sourceMappingURL=multi_rnn_cell.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/multi_rnn_cell.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/multinomial.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/multinomial.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export multinomial [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"multinomial\": () => /* binding */ multinomial\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Creates a `tf.Tensor` with values drawn from a multinomial distribution.\n *\n * ```js\n * const probs = tf.tensor([.75, .25]);\n * tf.multinomial(probs, 3).print();\n * ```\n *\n * @param logits 1D array with unnormalized log-probabilities, or\n *     2D array of shape `[batchSize, numOutcomes]`. See the `normalized`\n *     parameter.\n * @param numSamples Number of samples to draw for each row slice.\n * @param seed The seed number.\n * @param normalized Whether the provided `logits` are normalized true\n *     probabilities (sum to 1). Defaults to false.\n * @return 1D array of shape `[numSamples]`, or 2D array of shape\n *     `[batchSize, numSamples]`, depending on the rank of the input.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction multinomial_(logits, numSamples, seed, normalized = false) {\n    const $logits = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(logits, 'logits', 'multinomial');\n    const numOutcomes = $logits.size;\n    const origRank = $logits.rank;\n    if (numOutcomes < 2) {\n        throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ` +\n            `${numOutcomes}.`);\n    }\n    if (origRank > 2) {\n        throw new Error(`Rank of probabilities must be 1 or 2, but is ${origRank}`);\n    }\n    // TODO(lina128): Investigate correct seed behavior. The code seems not allow\n    // setting see to 0.\n    seed = seed || Math.random();\n    // The kernel only accepts (and returns) rank 2 tensors.\n    const logits2D = origRank === 1 ? (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($logits, [1, -1]) : $logits;\n    const inputs = { logits: logits2D };\n    const attrs = { numSamples, seed, normalized };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Multinomial, inputs, attrs);\n    // tslint:disable-next-line:no-unnecessary-type-assertion\n    return origRank === 1 ? (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)(res, [res.size]) : res;\n}\nconst multinomial = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ multinomial_ });\n//# sourceMappingURL=multinomial.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/multinomial.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js ***!
  \************************************************************/
/*! namespace exports */
/*! export neg [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"neg\": () => /* binding */ neg\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes `-1 * x` element-wise.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, -2, 0], [2, 2]);\n *\n * x.neg().print();  // or tf.neg(x)\n * ```\n *\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction neg_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'neg');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Neg, inputs);\n}\nconst neg = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ neg_ });\n//# sourceMappingURL=neg.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export nonMaxSuppSanityCheck [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nonMaxSuppSanityCheck\": () => /* binding */ nonMaxSuppSanityCheck\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction nonMaxSuppSanityCheck(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma) {\n    if (iouThreshold == null) {\n        iouThreshold = 0.5;\n    }\n    if (scoreThreshold == null) {\n        scoreThreshold = Number.NEGATIVE_INFINITY;\n    }\n    if (softNmsSigma == null) {\n        softNmsSigma = 0.0;\n    }\n    const numBoxes = boxes.shape[0];\n    maxOutputSize = Math.min(maxOutputSize, numBoxes);\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(0 <= iouThreshold && iouThreshold <= 1, () => `iouThreshold must be in [0, 1], but was '${iouThreshold}'`);\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(boxes.rank === 2, () => `boxes must be a 2D tensor, but was of rank '${boxes.rank}'`);\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(boxes.shape[1] === 4, () => `boxes must have 4 columns, but 2nd dimension was ${boxes.shape[1]}`);\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(scores.rank === 1, () => 'scores must be a 1D tensor');\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(scores.shape[0] === numBoxes, () => `scores has incompatible shape with boxes. Expected ${numBoxes}, ` +\n        `but was ${scores.shape[0]}`);\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(0 <= softNmsSigma && softNmsSigma <= 1, () => `softNmsSigma must be in [0, 1], but was '${softNmsSigma}'`);\n    return { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma };\n}\n\n//# sourceMappingURL=nonmax_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export norm [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"norm\": () => /* binding */ norm\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _abs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./abs */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js\");\n/* harmony import */ var _axis_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./axis_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/axis_util.js\");\n/* harmony import */ var _max__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./max */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max.js\");\n/* harmony import */ var _min__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./min */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/min.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pow */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _sqrt__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./sqrt */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js\");\n/* harmony import */ var _square__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes the norm of scalar, vectors, and matrices.\n * This function can compute several different vector norms (the 1-norm, the\n * Euclidean or 2-norm, the inf-norm, and in general the p-norm for p > 0)\n * and matrix norms (Frobenius, 1-norm, and inf-norm).\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.norm().print();  // or tf.norm(x)\n * ```\n *\n * @param x The input array.\n * @param ord Optional. Order of the norm. Supported norm types are\n * following:\n *\n *  | ord        | norm for matrices         | norm for vectors\n *  |------------|---------------------------|---------------------\n *  |'euclidean' |Frobenius norm             |2-norm\n *  |'fro'       |Frobenius norm\t           |\n *  |Infinity    |max(sum(abs(x), axis=1))   |max(abs(x))\n *  |-Infinity   |min(sum(abs(x), axis=1))   |min(abs(x))\n *  |1           |max(sum(abs(x), axis=0))   |sum(abs(x))\n *  |2           |                           |sum(abs(x)^2)^1/2*\n *\n * @param axis Optional. If axis is null (the default), the input is\n * considered a vector and a single vector norm is computed over the entire\n * set of values in the Tensor, i.e. norm(x, ord) is equivalent\n * to norm(x.reshape([-1]), ord). If axis is a integer, the input\n * is considered a batch of vectors, and axis determines the axis in x\n * over which to compute vector norms. If axis is a 2-tuple of integer it is\n * considered a batch of matrices and axis determines the axes in NDArray\n * over which to compute a matrix norm.\n * @param keepDims Optional. If true, the norm have the same dimensionality\n * as the input.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction norm_(x, ord = 'euclidean', axis = null, keepDims = false) {\n    x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'norm');\n    const norm = normImpl(x, ord, axis);\n    let keepDimsShape = norm.shape;\n    if (keepDims) {\n        const axes = (0,_util__WEBPACK_IMPORTED_MODULE_1__.parseAxisParam)(axis, x.shape);\n        keepDimsShape = _axis_util__WEBPACK_IMPORTED_MODULE_2__.expandShapeToKeepDim(norm.shape, axes);\n    }\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)(norm, keepDimsShape);\n}\nfunction normImpl(x, p, axis = null) {\n    if (x.rank === 0) {\n        return (0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x);\n    }\n    // consider vector when no axis is specified\n    if (x.rank !== 1 && axis === null) {\n        return normImpl((0,_reshape__WEBPACK_IMPORTED_MODULE_3__.reshape)(x, [-1]), p, axis);\n    }\n    // vector\n    if (x.rank === 1 || typeof axis === 'number' ||\n        Array.isArray(axis) && axis.length === 1) {\n        if (p === 1) {\n            return (0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x), axis);\n        }\n        if (p === Infinity) {\n            return (0,_max__WEBPACK_IMPORTED_MODULE_6__.max)((0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x), axis);\n        }\n        if (p === -Infinity) {\n            return (0,_min__WEBPACK_IMPORTED_MODULE_7__.min)((0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x), axis);\n        }\n        if (p === 'euclidean' || p === 2) {\n            // norm(x, 2) = sum(abs(xi) ^ 2) ^ 1/2\n            return (0,_sqrt__WEBPACK_IMPORTED_MODULE_8__.sqrt)((0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_pow__WEBPACK_IMPORTED_MODULE_9__.pow)((0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x), (0,_scalar__WEBPACK_IMPORTED_MODULE_10__.scalar)(2, 'int32')), axis));\n        }\n        throw new Error(`Error in norm: invalid ord value: ${p}`);\n    }\n    // matrix (assumption axis[0] < axis[1])\n    if (Array.isArray(axis) && axis.length === 2) {\n        if (p === 1) {\n            return (0,_max__WEBPACK_IMPORTED_MODULE_6__.max)((0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x), axis[0]), axis[1] - 1);\n        }\n        if (p === Infinity) {\n            return (0,_max__WEBPACK_IMPORTED_MODULE_6__.max)((0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x), axis[1]), axis[0]);\n        }\n        if (p === -Infinity) {\n            return (0,_min__WEBPACK_IMPORTED_MODULE_7__.min)((0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_abs__WEBPACK_IMPORTED_MODULE_4__.abs)(x), axis[1]), axis[0]);\n        }\n        if (p === 'fro' || p === 'euclidean') {\n            // norm(x) = sqrt(sum(pow(x, 2)))\n            return (0,_sqrt__WEBPACK_IMPORTED_MODULE_8__.sqrt)((0,_sum__WEBPACK_IMPORTED_MODULE_5__.sum)((0,_square__WEBPACK_IMPORTED_MODULE_11__.square)(x), axis));\n        }\n        throw new Error(`Error in norm: invalid ord value: ${p}`);\n    }\n    throw new Error(`Error in norm: invalid axis: ${axis}`);\n}\nconst norm = (0,_operation__WEBPACK_IMPORTED_MODULE_12__.op)({ norm_ });\n//# sourceMappingURL=norm.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export notEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"notEqual\": () => /* binding */ notEqual\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Returns the truth value of (a != b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([0, 2, 3]);\n *\n * a.notEqual(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction notEqual_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'notEqual');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'notEqual');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_3__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.NotEqual, inputs);\n}\nconst notEqual = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ notEqual_ });\n//# sourceMappingURL=not_equal.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export oneHot [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"oneHot\": () => /* binding */ oneHot\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Creates a one-hot `tf.Tensor`. The locations represented by `indices` take\n * value `onValue` (defaults to 1), while all other locations take value\n * `offValue` (defaults to 0). If `indices` is rank `R`, the output has rank\n * `R+1` with the last axis of size `depth`.\n *\n * ```js\n * tf.oneHot(tf.tensor1d([0, 1], 'int32'), 3).print();\n * ```\n *\n * @param indices `tf.Tensor` of indices with dtype `int32`.\n * @param depth The depth of the one hot dimension.\n * @param onValue A number used to fill in the output when the index matches\n * the location.\n * @param offValue A number used to fill in the output when the index does\n *     not match the location.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction oneHot_(indices, depth, onValue = 1, offValue = 0) {\n    if (depth < 2) {\n        throw new Error(`Error in oneHot: depth must be >=2, but it is ${depth}`);\n    }\n    const $indices = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(indices, 'indices', 'oneHot', 'int32');\n    const inputs = { indices: $indices };\n    const attrs = { depth, onValue, offValue };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.OneHot, inputs, attrs);\n}\nconst oneHot = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ oneHot_ });\n//# sourceMappingURL=one_hot.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export ones [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ones\": () => /* binding */ ones\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _complex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./complex */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js\");\n/* harmony import */ var _zeros__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./zeros */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Creates a `tf.Tensor` with all elements set to 1.\n *\n * ```js\n * tf.ones([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n *     'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction ones(shape, dtype = 'float32') {\n    if (dtype === 'complex64') {\n        const real = ones(shape, 'float32');\n        const imag = (0,_zeros__WEBPACK_IMPORTED_MODULE_1__.zeros)(shape, 'float32');\n        return (0,_complex__WEBPACK_IMPORTED_MODULE_2__.complex)(real, imag);\n    }\n    const values = (0,_util__WEBPACK_IMPORTED_MODULE_3__.makeOnesTypedArray)((0,_util__WEBPACK_IMPORTED_MODULE_3__.sizeFromShape)(shape), dtype);\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.makeTensor(values, shape, dtype);\n}\n//# sourceMappingURL=ones.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/ones_like.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/ones_like.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export onesLike [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onesLike\": () => /* binding */ onesLike\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Creates a `tf.Tensor` with all elements set to 1 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.onesLike(x).print();\n * ```\n * @param x A tensor.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction onesLike_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'onesLike');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.OnesLike, inputs);\n}\nconst onesLike = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ onesLike_ });\n//# sourceMappingURL=ones_like.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/ones_like.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export OP_SCOPE_SUFFIX [provided] [no usage info] [missing usage info prevents renaming] */
/*! export op [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OP_SCOPE_SUFFIX\": () => /* binding */ OP_SCOPE_SUFFIX,\n/* harmony export */   \"op\": () => /* binding */ op\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nconst OP_SCOPE_SUFFIX = '__op';\n/**\n * Used for wrapping functions that perform math operations on\n * Tensors. The function will be wrapped in a named scope that cleans all\n * memory usage after the function is done.\n */\nfunction op(f) {\n    const keys = Object.keys(f);\n    if (keys.length !== 1) {\n        throw new Error(`Please provide an object with a single key ` +\n            `(operation name) mapping to a function. Got an object with ` +\n            `${keys.length} keys.`);\n    }\n    let opName = keys[0];\n    const fn = f[opName];\n    // Strip the underscore from the end of the function name.\n    if (opName.endsWith('_')) {\n        opName = opName.substring(0, opName.length - 1);\n    }\n    // add an __op suffix to distinguish ops from kernels in tf.profile\n    opName = opName + OP_SCOPE_SUFFIX;\n    // tslint:disable-next-line:no-any\n    const f2 = (...args) => {\n        _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.startScope(opName);\n        try {\n            const result = fn(...args);\n            if ((0,_util__WEBPACK_IMPORTED_MODULE_1__.isPromise)(result)) {\n                console.error('Cannot return a Promise inside of tidy.');\n            }\n            _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.endScope(result);\n            return result;\n        }\n        catch (ex) {\n            _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.endScope(null);\n            throw ex;\n        }\n    };\n    Object.defineProperty(f2, 'name', { value: opName, configurable: true });\n    // tslint:disable-next-line:no-any\n    return f2;\n}\n//# sourceMappingURL=operation.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js ***!
  \************************************************************/
/*! namespace exports */
/*! export OP_SCOPE_SUFFIX [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js .OP_SCOPE_SUFFIX */
/*! export abs [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js .abs */
/*! export acos [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/acos.js .acos */
/*! export acosh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/acosh.js .acosh */
/*! export add [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/add.js .add */
/*! export addN [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js .addN */
/*! export all [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/all.js .all */
/*! export any [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/any.js .any */
/*! export argMax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/arg_max.js .argMax */
/*! export argMin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/arg_min.js .argMin */
/*! export asin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/asin.js .asin */
/*! export asinh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/asinh.js .asinh */
/*! export atan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/atan.js .atan */
/*! export atan2 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js .atan2 */
/*! export atanh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/atanh.js .atanh */
/*! export avgPool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js .avgPool */
/*! export avgPool3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d.js .avgPool3d */
/*! export basicLSTMCell [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/basic_lstm_cell.js .basicLSTMCell */
/*! export batchNorm [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js .batchNorm */
/*! export batchNorm2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm2d.js .batchNorm2d */
/*! export batchNorm3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm3d.js .batchNorm3d */
/*! export batchNorm4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm4d.js .batchNorm4d */
/*! export batchToSpaceND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js .batchToSpaceND */
/*! export bincount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js .bincount */
/*! export booleanMaskAsync [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js .booleanMaskAsync */
/*! export broadcastTo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js .broadcastTo */
/*! export buffer [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js .buffer */
/*! export cast [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js .cast */
/*! export ceil [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ceil.js .ceil */
/*! export clipByValue [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js .clipByValue */
/*! export clone [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js .clone */
/*! export complex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js .complex */
/*! export concat [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js .concat */
/*! export concat1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_1d.js .concat1d */
/*! export concat2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_2d.js .concat2d */
/*! export concat3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_3d.js .concat3d */
/*! export concat4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/concat_4d.js .concat4d */
/*! export conv1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv1d.js .conv1d */
/*! export conv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js .conv2d */
/*! export conv2dTranspose [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js .conv2dTranspose */
/*! export conv3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d.js .conv3d */
/*! export conv3dTranspose [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_transpose.js .conv3dTranspose */
/*! export cos [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/cos.js .cos */
/*! export cosh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/cosh.js .cosh */
/*! export cosineWindow [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js .cosineWindow */
/*! export cumsum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/cumsum.js .cumsum */
/*! export denseBincount [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/dense_bincount.js .denseBincount */
/*! export depthToSpace [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/depth_to_space.js .depthToSpace */
/*! export depthwiseConv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js .depthwiseConv2d */
/*! export diag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/diag.js .diag */
/*! export dilation2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/dilation2d.js .dilation2d */
/*! export div [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/div.js .div */
/*! export divNoNan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/div_no_nan.js .divNoNan */
/*! export dot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/dot.js .dot */
/*! export dropout [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/dropout.js .dropout */
/*! export elu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js .elu */
/*! export enclosingPowerOfTwo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js .enclosingPowerOfTwo */
/*! export equal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js .equal */
/*! export erf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/erf.js .erf */
/*! export exp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js .exp */
/*! export expandDims [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js .expandDims */
/*! export expm1 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/expm1.js .expm1 */
/*! export eye [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/eye.js .eye */
/*! export fft [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js .fft */
/*! export fill [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js .fill */
/*! export floor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js .floor */
/*! export floorDiv [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js .floorDiv */
/*! export fused [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused_ops.js */
/*!   export conv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/conv2d.js .conv2d */
/*!   export depthwiseConv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/depthwise_conv2d.js .depthwiseConv2d */
/*!   export matMul [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/fused/mat_mul.js .matMul */
/*!   other exports [not provided] [no usage info] */
/*! export gather [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js .gather */
/*! export gatherND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js .gatherND */
/*! export greater [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js .greater */
/*! export greaterEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js .greaterEqual */
/*! export ifft [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js .ifft */
/*! export imag [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js .imag */
/*! export image [provided] [no usage info] [missing usage info prevents renaming] */
/*! export inTopKAsync [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js .inTopKAsync */
/*! export irfft [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/irfft.js .irfft */
/*! export isFinite [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/is_finite.js .isFinite */
/*! export isInf [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/is_inf.js .isInf */
/*! export isNaN [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/is_nan.js .isNaN */
/*! export leakyRelu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js .leakyRelu */
/*! export less [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/less.js .less */
/*! export lessEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js .lessEqual */
/*! export linalg [provided] [no usage info] [missing usage info prevents renaming] */
/*! export linspace [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/linspace.js .linspace */
/*! export localResponseNormalization [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization.js .localResponseNormalization */
/*! export log [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log.js .log */
/*! export log1p [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js .log1p */
/*! export logSigmoid [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log_sigmoid.js .logSigmoid */
/*! export logSoftmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log_softmax.js .logSoftmax */
/*! export logSumExp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js .logSumExp */
/*! export logicalAnd [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js .logicalAnd */
/*! export logicalNot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js .logicalNot */
/*! export logicalOr [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js .logicalOr */
/*! export logicalXor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js .logicalXor */
/*! export losses [provided] [no usage info] [missing usage info prevents renaming] */
/*! export matMul [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js .matMul */
/*! export max [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/max.js .max */
/*! export maxPool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js .maxPool */
/*! export maxPool3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d.js .maxPool3d */
/*! export maxPoolWithArgmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_with_argmax.js .maxPoolWithArgmax */
/*! export maximum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js .maximum */
/*! export mean [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js .mean */
/*! export min [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/min.js .min */
/*! export minimum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js .minimum */
/*! export mirrorPad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js .mirrorPad */
/*! export mod [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mod.js .mod */
/*! export moments [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/moments.js .moments */
/*! export movingAverage [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/moving_average.js .movingAverage */
/*! export mul [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js .mul */
/*! export multiRNNCell [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/multi_rnn_cell.js .multiRNNCell */
/*! export multinomial [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/multinomial.js .multinomial */
/*! export neg [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js .neg */
/*! export norm [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js .norm */
/*! export notEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js .notEqual */
/*! export oneHot [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js .oneHot */
/*! export ones [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js .ones */
/*! export onesLike [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/ones_like.js .onesLike */
/*! export op [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js .op */
/*! export outerProduct [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/outer_product.js .outerProduct */
/*! export pad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js .pad */
/*! export pad1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad1d.js .pad1d */
/*! export pad2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad2d.js .pad2d */
/*! export pad3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad3d.js .pad3d */
/*! export pad4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pad4d.js .pad4d */
/*! export pool [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pool.js .pool */
/*! export pow [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js .pow */
/*! export prelu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js .prelu */
/*! export print [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/print.js .print */
/*! export prod [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/prod.js .prod */
/*! export rand [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/rand.js .rand */
/*! export randomGamma [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/random_gamma.js .randomGamma */
/*! export randomNormal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/random_normal.js .randomNormal */
/*! export randomUniform [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js .randomUniform */
/*! export range [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/range.js .range */
/*! export real [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/real.js .real */
/*! export reciprocal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reciprocal.js .reciprocal */
/*! export relu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js .relu */
/*! export relu6 [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js .relu6 */
/*! export reshape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js .reshape */
/*! export reverse [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js .reverse */
/*! export reverse1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_1d.js .reverse1d */
/*! export reverse2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_2d.js .reverse2d */
/*! export reverse3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_3d.js .reverse3d */
/*! export reverse4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_4d.js .reverse4d */
/*! export rfft [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js .rfft */
/*! export round [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/round.js .round */
/*! export rsqrt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/rsqrt.js .rsqrt */
/*! export scalar [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js .scalar */
/*! export scatterND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js .scatterND */
/*! export selu [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/selu.js .selu */
/*! export separableConv2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/separable_conv2d.js .separableConv2d */
/*! export setdiff1dAsync [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js .setdiff1dAsync */
/*! export sigmoid [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js .sigmoid */
/*! export sign [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sign.js .sign */
/*! export signal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sin [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sin.js .sin */
/*! export sinh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sinh.js .sinh */
/*! export slice [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js .slice */
/*! export slice1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice1d.js .slice1d */
/*! export slice2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice2d.js .slice2d */
/*! export slice3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice3d.js .slice3d */
/*! export slice4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/slice4d.js .slice4d */
/*! export softmax [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js .softmax */
/*! export softplus [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js .softplus */
/*! export spaceToBatchND [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js .spaceToBatchND */
/*! export sparseToDense [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js .sparseToDense */
/*! export spectral [provided] [no usage info] [missing usage info prevents renaming] */
/*! export split [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/split.js .split */
/*! export sqrt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js .sqrt */
/*! export square [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/square.js .square */
/*! export squaredDifference [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js .squaredDifference */
/*! export squeeze [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js .squeeze */
/*! export stack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js .stack */
/*! export step [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/step.js .step */
/*! export stridedSlice [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/strided_slice.js .stridedSlice */
/*! export sub [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js .sub */
/*! export sum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js .sum */
/*! export tan [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tan.js .tan */
/*! export tanh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js .tanh */
/*! export tensor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js .tensor */
/*! export tensor1d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js .tensor1d */
/*! export tensor2d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js .tensor2d */
/*! export tensor3d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js .tensor3d */
/*! export tensor4d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor4d.js .tensor4d */
/*! export tensor5d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor5d.js .tensor5d */
/*! export tensor6d [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor6d.js .tensor6d */
/*! export tile [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js .tile */
/*! export topk [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/topk.js .topk */
/*! export transpose [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js .transpose */
/*! export truncatedNormal [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/truncated_normal.js .truncatedNormal */
/*! export unique [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/unique.js .unique */
/*! export unsortedSegmentSum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/unsorted_segment_sum.js .unsortedSegmentSum */
/*! export unstack [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js .unstack */
/*! export variable [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/variable.js .variable */
/*! export where [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/where.js .where */
/*! export whereAsync [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js .whereAsync */
/*! export zeros [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js .zeros */
/*! export zerosLike [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js .zerosLike */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"abs\": () => /* reexport safe */ _abs__WEBPACK_IMPORTED_MODULE_0__.abs,\n/* harmony export */   \"acos\": () => /* reexport safe */ _acos__WEBPACK_IMPORTED_MODULE_1__.acos,\n/* harmony export */   \"acosh\": () => /* reexport safe */ _acosh__WEBPACK_IMPORTED_MODULE_2__.acosh,\n/* harmony export */   \"add\": () => /* reexport safe */ _add__WEBPACK_IMPORTED_MODULE_3__.add,\n/* harmony export */   \"addN\": () => /* reexport safe */ _add_n__WEBPACK_IMPORTED_MODULE_4__.addN,\n/* harmony export */   \"all\": () => /* reexport safe */ _all__WEBPACK_IMPORTED_MODULE_5__.all,\n/* harmony export */   \"any\": () => /* reexport safe */ _any__WEBPACK_IMPORTED_MODULE_6__.any,\n/* harmony export */   \"argMax\": () => /* reexport safe */ _arg_max__WEBPACK_IMPORTED_MODULE_7__.argMax,\n/* harmony export */   \"argMin\": () => /* reexport safe */ _arg_min__WEBPACK_IMPORTED_MODULE_8__.argMin,\n/* harmony export */   \"asin\": () => /* reexport safe */ _asin__WEBPACK_IMPORTED_MODULE_9__.asin,\n/* harmony export */   \"asinh\": () => /* reexport safe */ _asinh__WEBPACK_IMPORTED_MODULE_10__.asinh,\n/* harmony export */   \"atan\": () => /* reexport safe */ _atan__WEBPACK_IMPORTED_MODULE_11__.atan,\n/* harmony export */   \"atan2\": () => /* reexport safe */ _atan2__WEBPACK_IMPORTED_MODULE_12__.atan2,\n/* harmony export */   \"atanh\": () => /* reexport safe */ _atanh__WEBPACK_IMPORTED_MODULE_13__.atanh,\n/* harmony export */   \"avgPool\": () => /* reexport safe */ _avg_pool__WEBPACK_IMPORTED_MODULE_14__.avgPool,\n/* harmony export */   \"avgPool3d\": () => /* reexport safe */ _avg_pool_3d__WEBPACK_IMPORTED_MODULE_15__.avgPool3d,\n/* harmony export */   \"basicLSTMCell\": () => /* reexport safe */ _basic_lstm_cell__WEBPACK_IMPORTED_MODULE_16__.basicLSTMCell,\n/* harmony export */   \"batchToSpaceND\": () => /* reexport safe */ _batch_to_space_nd__WEBPACK_IMPORTED_MODULE_17__.batchToSpaceND,\n/* harmony export */   \"batchNorm\": () => /* reexport safe */ _batchnorm__WEBPACK_IMPORTED_MODULE_18__.batchNorm,\n/* harmony export */   \"batchNorm2d\": () => /* reexport safe */ _batchnorm2d__WEBPACK_IMPORTED_MODULE_19__.batchNorm2d,\n/* harmony export */   \"batchNorm3d\": () => /* reexport safe */ _batchnorm3d__WEBPACK_IMPORTED_MODULE_20__.batchNorm3d,\n/* harmony export */   \"batchNorm4d\": () => /* reexport safe */ _batchnorm4d__WEBPACK_IMPORTED_MODULE_21__.batchNorm4d,\n/* harmony export */   \"bincount\": () => /* reexport safe */ _bincount__WEBPACK_IMPORTED_MODULE_22__.bincount,\n/* harmony export */   \"broadcastTo\": () => /* reexport safe */ _broadcast_to__WEBPACK_IMPORTED_MODULE_23__.broadcastTo,\n/* harmony export */   \"buffer\": () => /* reexport safe */ _buffer__WEBPACK_IMPORTED_MODULE_24__.buffer,\n/* harmony export */   \"cast\": () => /* reexport safe */ _cast__WEBPACK_IMPORTED_MODULE_25__.cast,\n/* harmony export */   \"ceil\": () => /* reexport safe */ _ceil__WEBPACK_IMPORTED_MODULE_26__.ceil,\n/* harmony export */   \"clipByValue\": () => /* reexport safe */ _clip_by_value__WEBPACK_IMPORTED_MODULE_27__.clipByValue,\n/* harmony export */   \"clone\": () => /* reexport safe */ _clone__WEBPACK_IMPORTED_MODULE_28__.clone,\n/* harmony export */   \"complex\": () => /* reexport safe */ _complex__WEBPACK_IMPORTED_MODULE_29__.complex,\n/* harmony export */   \"concat\": () => /* reexport safe */ _concat__WEBPACK_IMPORTED_MODULE_30__.concat,\n/* harmony export */   \"concat1d\": () => /* reexport safe */ _concat_1d__WEBPACK_IMPORTED_MODULE_31__.concat1d,\n/* harmony export */   \"concat2d\": () => /* reexport safe */ _concat_2d__WEBPACK_IMPORTED_MODULE_32__.concat2d,\n/* harmony export */   \"concat3d\": () => /* reexport safe */ _concat_3d__WEBPACK_IMPORTED_MODULE_33__.concat3d,\n/* harmony export */   \"concat4d\": () => /* reexport safe */ _concat_4d__WEBPACK_IMPORTED_MODULE_34__.concat4d,\n/* harmony export */   \"conv1d\": () => /* reexport safe */ _conv1d__WEBPACK_IMPORTED_MODULE_35__.conv1d,\n/* harmony export */   \"conv2d\": () => /* reexport safe */ _conv2d__WEBPACK_IMPORTED_MODULE_36__.conv2d,\n/* harmony export */   \"conv2dTranspose\": () => /* reexport safe */ _conv2d_transpose__WEBPACK_IMPORTED_MODULE_37__.conv2dTranspose,\n/* harmony export */   \"conv3d\": () => /* reexport safe */ _conv3d__WEBPACK_IMPORTED_MODULE_38__.conv3d,\n/* harmony export */   \"conv3dTranspose\": () => /* reexport safe */ _conv3d_transpose__WEBPACK_IMPORTED_MODULE_39__.conv3dTranspose,\n/* harmony export */   \"cos\": () => /* reexport safe */ _cos__WEBPACK_IMPORTED_MODULE_40__.cos,\n/* harmony export */   \"cosh\": () => /* reexport safe */ _cosh__WEBPACK_IMPORTED_MODULE_41__.cosh,\n/* harmony export */   \"cumsum\": () => /* reexport safe */ _cumsum__WEBPACK_IMPORTED_MODULE_42__.cumsum,\n/* harmony export */   \"denseBincount\": () => /* reexport safe */ _dense_bincount__WEBPACK_IMPORTED_MODULE_43__.denseBincount,\n/* harmony export */   \"depthToSpace\": () => /* reexport safe */ _depth_to_space__WEBPACK_IMPORTED_MODULE_44__.depthToSpace,\n/* harmony export */   \"depthwiseConv2d\": () => /* reexport safe */ _depthwise_conv2d__WEBPACK_IMPORTED_MODULE_45__.depthwiseConv2d,\n/* harmony export */   \"diag\": () => /* reexport safe */ _diag__WEBPACK_IMPORTED_MODULE_46__.diag,\n/* harmony export */   \"dilation2d\": () => /* reexport safe */ _dilation2d__WEBPACK_IMPORTED_MODULE_47__.dilation2d,\n/* harmony export */   \"div\": () => /* reexport safe */ _div__WEBPACK_IMPORTED_MODULE_48__.div,\n/* harmony export */   \"divNoNan\": () => /* reexport safe */ _div_no_nan__WEBPACK_IMPORTED_MODULE_49__.divNoNan,\n/* harmony export */   \"dot\": () => /* reexport safe */ _dot__WEBPACK_IMPORTED_MODULE_50__.dot,\n/* harmony export */   \"elu\": () => /* reexport safe */ _elu__WEBPACK_IMPORTED_MODULE_51__.elu,\n/* harmony export */   \"equal\": () => /* reexport safe */ _equal__WEBPACK_IMPORTED_MODULE_52__.equal,\n/* harmony export */   \"erf\": () => /* reexport safe */ _erf__WEBPACK_IMPORTED_MODULE_53__.erf,\n/* harmony export */   \"exp\": () => /* reexport safe */ _exp__WEBPACK_IMPORTED_MODULE_54__.exp,\n/* harmony export */   \"expandDims\": () => /* reexport safe */ _expand_dims__WEBPACK_IMPORTED_MODULE_55__.expandDims,\n/* harmony export */   \"expm1\": () => /* reexport safe */ _expm1__WEBPACK_IMPORTED_MODULE_56__.expm1,\n/* harmony export */   \"eye\": () => /* reexport safe */ _eye__WEBPACK_IMPORTED_MODULE_57__.eye,\n/* harmony export */   \"fill\": () => /* reexport safe */ _fill__WEBPACK_IMPORTED_MODULE_58__.fill,\n/* harmony export */   \"floor\": () => /* reexport safe */ _floor__WEBPACK_IMPORTED_MODULE_59__.floor,\n/* harmony export */   \"floorDiv\": () => /* reexport safe */ _floorDiv__WEBPACK_IMPORTED_MODULE_60__.floorDiv,\n/* harmony export */   \"gather\": () => /* reexport safe */ _gather__WEBPACK_IMPORTED_MODULE_61__.gather,\n/* harmony export */   \"greater\": () => /* reexport safe */ _greater__WEBPACK_IMPORTED_MODULE_62__.greater,\n/* harmony export */   \"greaterEqual\": () => /* reexport safe */ _greater_equal__WEBPACK_IMPORTED_MODULE_63__.greaterEqual,\n/* harmony export */   \"imag\": () => /* reexport safe */ _imag__WEBPACK_IMPORTED_MODULE_64__.imag,\n/* harmony export */   \"isFinite\": () => /* reexport safe */ _is_finite__WEBPACK_IMPORTED_MODULE_65__.isFinite,\n/* harmony export */   \"isInf\": () => /* reexport safe */ _is_inf__WEBPACK_IMPORTED_MODULE_66__.isInf,\n/* harmony export */   \"isNaN\": () => /* reexport safe */ _is_nan__WEBPACK_IMPORTED_MODULE_67__.isNaN,\n/* harmony export */   \"leakyRelu\": () => /* reexport safe */ _leaky_relu__WEBPACK_IMPORTED_MODULE_68__.leakyRelu,\n/* harmony export */   \"less\": () => /* reexport safe */ _less__WEBPACK_IMPORTED_MODULE_69__.less,\n/* harmony export */   \"lessEqual\": () => /* reexport safe */ _less_equal__WEBPACK_IMPORTED_MODULE_70__.lessEqual,\n/* harmony export */   \"linspace\": () => /* reexport safe */ _linspace__WEBPACK_IMPORTED_MODULE_71__.linspace,\n/* harmony export */   \"localResponseNormalization\": () => /* reexport safe */ _local_response_normalization__WEBPACK_IMPORTED_MODULE_72__.localResponseNormalization,\n/* harmony export */   \"log\": () => /* reexport safe */ _log__WEBPACK_IMPORTED_MODULE_73__.log,\n/* harmony export */   \"log1p\": () => /* reexport safe */ _log1p__WEBPACK_IMPORTED_MODULE_74__.log1p,\n/* harmony export */   \"logSigmoid\": () => /* reexport safe */ _log_sigmoid__WEBPACK_IMPORTED_MODULE_75__.logSigmoid,\n/* harmony export */   \"logSoftmax\": () => /* reexport safe */ _log_softmax__WEBPACK_IMPORTED_MODULE_76__.logSoftmax,\n/* harmony export */   \"logSumExp\": () => /* reexport safe */ _log_sum_exp__WEBPACK_IMPORTED_MODULE_77__.logSumExp,\n/* harmony export */   \"logicalAnd\": () => /* reexport safe */ _logical_and__WEBPACK_IMPORTED_MODULE_78__.logicalAnd,\n/* harmony export */   \"logicalNot\": () => /* reexport safe */ _logical_not__WEBPACK_IMPORTED_MODULE_79__.logicalNot,\n/* harmony export */   \"logicalOr\": () => /* reexport safe */ _logical_or__WEBPACK_IMPORTED_MODULE_80__.logicalOr,\n/* harmony export */   \"logicalXor\": () => /* reexport safe */ _logical_xor__WEBPACK_IMPORTED_MODULE_81__.logicalXor,\n/* harmony export */   \"matMul\": () => /* reexport safe */ _mat_mul__WEBPACK_IMPORTED_MODULE_82__.matMul,\n/* harmony export */   \"max\": () => /* reexport safe */ _max__WEBPACK_IMPORTED_MODULE_83__.max,\n/* harmony export */   \"maxPool\": () => /* reexport safe */ _max_pool__WEBPACK_IMPORTED_MODULE_84__.maxPool,\n/* harmony export */   \"maxPool3d\": () => /* reexport safe */ _max_pool_3d__WEBPACK_IMPORTED_MODULE_85__.maxPool3d,\n/* harmony export */   \"maxPoolWithArgmax\": () => /* reexport safe */ _max_pool_with_argmax__WEBPACK_IMPORTED_MODULE_86__.maxPoolWithArgmax,\n/* harmony export */   \"maximum\": () => /* reexport safe */ _maximum__WEBPACK_IMPORTED_MODULE_87__.maximum,\n/* harmony export */   \"mean\": () => /* reexport safe */ _mean__WEBPACK_IMPORTED_MODULE_88__.mean,\n/* harmony export */   \"min\": () => /* reexport safe */ _min__WEBPACK_IMPORTED_MODULE_89__.min,\n/* harmony export */   \"minimum\": () => /* reexport safe */ _minimum__WEBPACK_IMPORTED_MODULE_90__.minimum,\n/* harmony export */   \"mirrorPad\": () => /* reexport safe */ _mirror_pad__WEBPACK_IMPORTED_MODULE_91__.mirrorPad,\n/* harmony export */   \"mod\": () => /* reexport safe */ _mod__WEBPACK_IMPORTED_MODULE_92__.mod,\n/* harmony export */   \"moments\": () => /* reexport safe */ _moments__WEBPACK_IMPORTED_MODULE_93__.moments,\n/* harmony export */   \"mul\": () => /* reexport safe */ _mul__WEBPACK_IMPORTED_MODULE_94__.mul,\n/* harmony export */   \"multiRNNCell\": () => /* reexport safe */ _multi_rnn_cell__WEBPACK_IMPORTED_MODULE_95__.multiRNNCell,\n/* harmony export */   \"multinomial\": () => /* reexport safe */ _multinomial__WEBPACK_IMPORTED_MODULE_96__.multinomial,\n/* harmony export */   \"neg\": () => /* reexport safe */ _neg__WEBPACK_IMPORTED_MODULE_97__.neg,\n/* harmony export */   \"notEqual\": () => /* reexport safe */ _not_equal__WEBPACK_IMPORTED_MODULE_98__.notEqual,\n/* harmony export */   \"oneHot\": () => /* reexport safe */ _one_hot__WEBPACK_IMPORTED_MODULE_99__.oneHot,\n/* harmony export */   \"ones\": () => /* reexport safe */ _ones__WEBPACK_IMPORTED_MODULE_100__.ones,\n/* harmony export */   \"onesLike\": () => /* reexport safe */ _ones_like__WEBPACK_IMPORTED_MODULE_101__.onesLike,\n/* harmony export */   \"outerProduct\": () => /* reexport safe */ _outer_product__WEBPACK_IMPORTED_MODULE_102__.outerProduct,\n/* harmony export */   \"pad\": () => /* reexport safe */ _pad__WEBPACK_IMPORTED_MODULE_103__.pad,\n/* harmony export */   \"pad1d\": () => /* reexport safe */ _pad1d__WEBPACK_IMPORTED_MODULE_104__.pad1d,\n/* harmony export */   \"pad2d\": () => /* reexport safe */ _pad2d__WEBPACK_IMPORTED_MODULE_105__.pad2d,\n/* harmony export */   \"pad3d\": () => /* reexport safe */ _pad3d__WEBPACK_IMPORTED_MODULE_106__.pad3d,\n/* harmony export */   \"pad4d\": () => /* reexport safe */ _pad4d__WEBPACK_IMPORTED_MODULE_107__.pad4d,\n/* harmony export */   \"pool\": () => /* reexport safe */ _pool__WEBPACK_IMPORTED_MODULE_108__.pool,\n/* harmony export */   \"pow\": () => /* reexport safe */ _pow__WEBPACK_IMPORTED_MODULE_109__.pow,\n/* harmony export */   \"prelu\": () => /* reexport safe */ _prelu__WEBPACK_IMPORTED_MODULE_110__.prelu,\n/* harmony export */   \"print\": () => /* reexport safe */ _print__WEBPACK_IMPORTED_MODULE_111__.print,\n/* harmony export */   \"prod\": () => /* reexport safe */ _prod__WEBPACK_IMPORTED_MODULE_112__.prod,\n/* harmony export */   \"rand\": () => /* reexport safe */ _rand__WEBPACK_IMPORTED_MODULE_113__.rand,\n/* harmony export */   \"randomGamma\": () => /* reexport safe */ _random_gamma__WEBPACK_IMPORTED_MODULE_114__.randomGamma,\n/* harmony export */   \"randomNormal\": () => /* reexport safe */ _random_normal__WEBPACK_IMPORTED_MODULE_115__.randomNormal,\n/* harmony export */   \"randomUniform\": () => /* reexport safe */ _random_uniform__WEBPACK_IMPORTED_MODULE_116__.randomUniform,\n/* harmony export */   \"range\": () => /* reexport safe */ _range__WEBPACK_IMPORTED_MODULE_117__.range,\n/* harmony export */   \"real\": () => /* reexport safe */ _real__WEBPACK_IMPORTED_MODULE_118__.real,\n/* harmony export */   \"reciprocal\": () => /* reexport safe */ _reciprocal__WEBPACK_IMPORTED_MODULE_119__.reciprocal,\n/* harmony export */   \"relu\": () => /* reexport safe */ _relu__WEBPACK_IMPORTED_MODULE_120__.relu,\n/* harmony export */   \"relu6\": () => /* reexport safe */ _relu6__WEBPACK_IMPORTED_MODULE_121__.relu6,\n/* harmony export */   \"reshape\": () => /* reexport safe */ _reshape__WEBPACK_IMPORTED_MODULE_122__.reshape,\n/* harmony export */   \"reverse\": () => /* reexport safe */ _reverse__WEBPACK_IMPORTED_MODULE_123__.reverse,\n/* harmony export */   \"reverse1d\": () => /* reexport safe */ _reverse_1d__WEBPACK_IMPORTED_MODULE_124__.reverse1d,\n/* harmony export */   \"reverse2d\": () => /* reexport safe */ _reverse_2d__WEBPACK_IMPORTED_MODULE_125__.reverse2d,\n/* harmony export */   \"reverse3d\": () => /* reexport safe */ _reverse_3d__WEBPACK_IMPORTED_MODULE_126__.reverse3d,\n/* harmony export */   \"reverse4d\": () => /* reexport safe */ _reverse_4d__WEBPACK_IMPORTED_MODULE_127__.reverse4d,\n/* harmony export */   \"round\": () => /* reexport safe */ _round__WEBPACK_IMPORTED_MODULE_128__.round,\n/* harmony export */   \"rsqrt\": () => /* reexport safe */ _rsqrt__WEBPACK_IMPORTED_MODULE_129__.rsqrt,\n/* harmony export */   \"scalar\": () => /* reexport safe */ _scalar__WEBPACK_IMPORTED_MODULE_130__.scalar,\n/* harmony export */   \"selu\": () => /* reexport safe */ _selu__WEBPACK_IMPORTED_MODULE_131__.selu,\n/* harmony export */   \"separableConv2d\": () => /* reexport safe */ _separable_conv2d__WEBPACK_IMPORTED_MODULE_132__.separableConv2d,\n/* harmony export */   \"setdiff1dAsync\": () => /* reexport safe */ _setdiff1d_async__WEBPACK_IMPORTED_MODULE_133__.setdiff1dAsync,\n/* harmony export */   \"sigmoid\": () => /* reexport safe */ _sigmoid__WEBPACK_IMPORTED_MODULE_134__.sigmoid,\n/* harmony export */   \"sign\": () => /* reexport safe */ _sign__WEBPACK_IMPORTED_MODULE_135__.sign,\n/* harmony export */   \"sin\": () => /* reexport safe */ _sin__WEBPACK_IMPORTED_MODULE_136__.sin,\n/* harmony export */   \"sinh\": () => /* reexport safe */ _sinh__WEBPACK_IMPORTED_MODULE_137__.sinh,\n/* harmony export */   \"slice\": () => /* reexport safe */ _slice__WEBPACK_IMPORTED_MODULE_138__.slice,\n/* harmony export */   \"slice1d\": () => /* reexport safe */ _slice1d__WEBPACK_IMPORTED_MODULE_139__.slice1d,\n/* harmony export */   \"slice2d\": () => /* reexport safe */ _slice2d__WEBPACK_IMPORTED_MODULE_140__.slice2d,\n/* harmony export */   \"slice3d\": () => /* reexport safe */ _slice3d__WEBPACK_IMPORTED_MODULE_141__.slice3d,\n/* harmony export */   \"slice4d\": () => /* reexport safe */ _slice4d__WEBPACK_IMPORTED_MODULE_142__.slice4d,\n/* harmony export */   \"softmax\": () => /* reexport safe */ _softmax__WEBPACK_IMPORTED_MODULE_143__.softmax,\n/* harmony export */   \"softplus\": () => /* reexport safe */ _softplus__WEBPACK_IMPORTED_MODULE_144__.softplus,\n/* harmony export */   \"spaceToBatchND\": () => /* reexport safe */ _space_to_batch_nd__WEBPACK_IMPORTED_MODULE_145__.spaceToBatchND,\n/* harmony export */   \"fft\": () => /* reexport safe */ _spectral_fft__WEBPACK_IMPORTED_MODULE_146__.fft,\n/* harmony export */   \"ifft\": () => /* reexport safe */ _spectral_ifft__WEBPACK_IMPORTED_MODULE_147__.ifft,\n/* harmony export */   \"irfft\": () => /* reexport safe */ _spectral_irfft__WEBPACK_IMPORTED_MODULE_148__.irfft,\n/* harmony export */   \"rfft\": () => /* reexport safe */ _spectral_rfft__WEBPACK_IMPORTED_MODULE_149__.rfft,\n/* harmony export */   \"split\": () => /* reexport safe */ _split__WEBPACK_IMPORTED_MODULE_150__.split,\n/* harmony export */   \"sqrt\": () => /* reexport safe */ _sqrt__WEBPACK_IMPORTED_MODULE_151__.sqrt,\n/* harmony export */   \"square\": () => /* reexport safe */ _square__WEBPACK_IMPORTED_MODULE_152__.square,\n/* harmony export */   \"squaredDifference\": () => /* reexport safe */ _squared_difference__WEBPACK_IMPORTED_MODULE_153__.squaredDifference,\n/* harmony export */   \"squeeze\": () => /* reexport safe */ _squeeze__WEBPACK_IMPORTED_MODULE_154__.squeeze,\n/* harmony export */   \"stack\": () => /* reexport safe */ _stack__WEBPACK_IMPORTED_MODULE_155__.stack,\n/* harmony export */   \"step\": () => /* reexport safe */ _step__WEBPACK_IMPORTED_MODULE_156__.step,\n/* harmony export */   \"stridedSlice\": () => /* reexport safe */ _strided_slice__WEBPACK_IMPORTED_MODULE_157__.stridedSlice,\n/* harmony export */   \"sub\": () => /* reexport safe */ _sub__WEBPACK_IMPORTED_MODULE_158__.sub,\n/* harmony export */   \"sum\": () => /* reexport safe */ _sum__WEBPACK_IMPORTED_MODULE_159__.sum,\n/* harmony export */   \"tan\": () => /* reexport safe */ _tan__WEBPACK_IMPORTED_MODULE_160__.tan,\n/* harmony export */   \"tanh\": () => /* reexport safe */ _tanh__WEBPACK_IMPORTED_MODULE_161__.tanh,\n/* harmony export */   \"tensor\": () => /* reexport safe */ _tensor__WEBPACK_IMPORTED_MODULE_162__.tensor,\n/* harmony export */   \"tensor1d\": () => /* reexport safe */ _tensor1d__WEBPACK_IMPORTED_MODULE_163__.tensor1d,\n/* harmony export */   \"tensor2d\": () => /* reexport safe */ _tensor2d__WEBPACK_IMPORTED_MODULE_164__.tensor2d,\n/* harmony export */   \"tensor3d\": () => /* reexport safe */ _tensor3d__WEBPACK_IMPORTED_MODULE_165__.tensor3d,\n/* harmony export */   \"tensor4d\": () => /* reexport safe */ _tensor4d__WEBPACK_IMPORTED_MODULE_166__.tensor4d,\n/* harmony export */   \"tensor5d\": () => /* reexport safe */ _tensor5d__WEBPACK_IMPORTED_MODULE_167__.tensor5d,\n/* harmony export */   \"tensor6d\": () => /* reexport safe */ _tensor6d__WEBPACK_IMPORTED_MODULE_168__.tensor6d,\n/* harmony export */   \"tile\": () => /* reexport safe */ _tile__WEBPACK_IMPORTED_MODULE_169__.tile,\n/* harmony export */   \"topk\": () => /* reexport safe */ _topk__WEBPACK_IMPORTED_MODULE_170__.topk,\n/* harmony export */   \"truncatedNormal\": () => /* reexport safe */ _truncated_normal__WEBPACK_IMPORTED_MODULE_171__.truncatedNormal,\n/* harmony export */   \"unique\": () => /* reexport safe */ _unique__WEBPACK_IMPORTED_MODULE_172__.unique,\n/* harmony export */   \"unsortedSegmentSum\": () => /* reexport safe */ _unsorted_segment_sum__WEBPACK_IMPORTED_MODULE_173__.unsortedSegmentSum,\n/* harmony export */   \"unstack\": () => /* reexport safe */ _unstack__WEBPACK_IMPORTED_MODULE_174__.unstack,\n/* harmony export */   \"variable\": () => /* reexport safe */ _variable__WEBPACK_IMPORTED_MODULE_175__.variable,\n/* harmony export */   \"where\": () => /* reexport safe */ _where__WEBPACK_IMPORTED_MODULE_176__.where,\n/* harmony export */   \"whereAsync\": () => /* reexport safe */ _where_async__WEBPACK_IMPORTED_MODULE_177__.whereAsync,\n/* harmony export */   \"zeros\": () => /* reexport safe */ _zeros__WEBPACK_IMPORTED_MODULE_178__.zeros,\n/* harmony export */   \"zerosLike\": () => /* reexport safe */ _zeros_like__WEBPACK_IMPORTED_MODULE_179__.zerosLike,\n/* harmony export */   \"booleanMaskAsync\": () => /* reexport safe */ _boolean_mask__WEBPACK_IMPORTED_MODULE_180__.booleanMaskAsync,\n/* harmony export */   \"transpose\": () => /* reexport safe */ _transpose__WEBPACK_IMPORTED_MODULE_181__.transpose,\n/* harmony export */   \"norm\": () => /* reexport safe */ _norm__WEBPACK_IMPORTED_MODULE_182__.norm,\n/* harmony export */   \"movingAverage\": () => /* reexport safe */ _moving_average__WEBPACK_IMPORTED_MODULE_183__.movingAverage,\n/* harmony export */   \"scatterND\": () => /* reexport safe */ _scatter_nd__WEBPACK_IMPORTED_MODULE_184__.scatterND,\n/* harmony export */   \"sparseToDense\": () => /* reexport safe */ _sparse_to_dense__WEBPACK_IMPORTED_MODULE_185__.sparseToDense,\n/* harmony export */   \"gatherND\": () => /* reexport safe */ _gather_nd__WEBPACK_IMPORTED_MODULE_186__.gatherND,\n/* harmony export */   \"dropout\": () => /* reexport safe */ _dropout__WEBPACK_IMPORTED_MODULE_187__.dropout,\n/* harmony export */   \"cosineWindow\": () => /* reexport safe */ _signal_ops_util__WEBPACK_IMPORTED_MODULE_188__.cosineWindow,\n/* harmony export */   \"enclosingPowerOfTwo\": () => /* reexport safe */ _signal_ops_util__WEBPACK_IMPORTED_MODULE_188__.enclosingPowerOfTwo,\n/* harmony export */   \"inTopKAsync\": () => /* reexport safe */ _in_top_k__WEBPACK_IMPORTED_MODULE_189__.inTopKAsync,\n/* harmony export */   \"op\": () => /* reexport safe */ _operation__WEBPACK_IMPORTED_MODULE_190__.op,\n/* harmony export */   \"OP_SCOPE_SUFFIX\": () => /* reexport safe */ _operation__WEBPACK_IMPORTED_MODULE_190__.OP_SCOPE_SUFFIX,\n/* harmony export */   \"image\": () => /* binding */ image,\n/* harmony export */   \"linalg\": () => /* binding */ linalg,\n/* harmony export */   \"losses\": () => /* binding */ losses,\n/* harmony export */   \"spectral\": () => /* binding */ spectral,\n/* harmony export */   \"fused\": () => /* reexport module object */ _fused_ops__WEBPACK_IMPORTED_MODULE_218__,\n/* harmony export */   \"signal\": () => /* binding */ signal\n/* harmony export */ });\n/* harmony import */ var _abs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abs */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js\");\n/* harmony import */ var _acos__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./acos */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/acos.js\");\n/* harmony import */ var _acosh__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./acosh */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/acosh.js\");\n/* harmony import */ var _add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _add_n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./add_n */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add_n.js\");\n/* harmony import */ var _all__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./all */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/all.js\");\n/* harmony import */ var _any__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./any */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/any.js\");\n/* harmony import */ var _arg_max__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./arg_max */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/arg_max.js\");\n/* harmony import */ var _arg_min__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./arg_min */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/arg_min.js\");\n/* harmony import */ var _asin__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./asin */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/asin.js\");\n/* harmony import */ var _asinh__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./asinh */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/asinh.js\");\n/* harmony import */ var _atan__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./atan */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/atan.js\");\n/* harmony import */ var _atan2__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./atan2 */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/atan2.js\");\n/* harmony import */ var _atanh__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./atanh */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/atanh.js\");\n/* harmony import */ var _avg_pool__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./avg_pool */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js\");\n/* harmony import */ var _avg_pool_3d__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./avg_pool_3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool_3d.js\");\n/* harmony import */ var _basic_lstm_cell__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./basic_lstm_cell */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/basic_lstm_cell.js\");\n/* harmony import */ var _batch_to_space_nd__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./batch_to_space_nd */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js\");\n/* harmony import */ var _batchnorm__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./batchnorm */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js\");\n/* harmony import */ var _batchnorm2d__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./batchnorm2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm2d.js\");\n/* harmony import */ var _batchnorm3d__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./batchnorm3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm3d.js\");\n/* harmony import */ var _batchnorm4d__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./batchnorm4d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm4d.js\");\n/* harmony import */ var _bincount__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./bincount */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js\");\n/* harmony import */ var _broadcast_to__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./broadcast_to */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js\");\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _ceil__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./ceil */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ceil.js\");\n/* harmony import */ var _clip_by_value__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./clip_by_value */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js\");\n/* harmony import */ var _clone__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./clone */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/clone.js\");\n/* harmony import */ var _complex__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./complex */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js\");\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _concat_1d__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./concat_1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat_1d.js\");\n/* harmony import */ var _concat_2d__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./concat_2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat_2d.js\");\n/* harmony import */ var _concat_3d__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./concat_3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat_3d.js\");\n/* harmony import */ var _concat_4d__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./concat_4d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat_4d.js\");\n/* harmony import */ var _conv1d__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./conv1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv1d.js\");\n/* harmony import */ var _conv2d__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js\");\n/* harmony import */ var _conv2d_transpose__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./conv2d_transpose */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d_transpose.js\");\n/* harmony import */ var _conv3d__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./conv3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d.js\");\n/* harmony import */ var _conv3d_transpose__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./conv3d_transpose */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv3d_transpose.js\");\n/* harmony import */ var _cos__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./cos */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cos.js\");\n/* harmony import */ var _cosh__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./cosh */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cosh.js\");\n/* harmony import */ var _cumsum__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./cumsum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cumsum.js\");\n/* harmony import */ var _dense_bincount__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./dense_bincount */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/dense_bincount.js\");\n/* harmony import */ var _depth_to_space__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./depth_to_space */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/depth_to_space.js\");\n/* harmony import */ var _depthwise_conv2d__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./depthwise_conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js\");\n/* harmony import */ var _diag__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./diag */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/diag.js\");\n/* harmony import */ var _dilation2d__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./dilation2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/dilation2d.js\");\n/* harmony import */ var _div__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _div_no_nan__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./div_no_nan */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div_no_nan.js\");\n/* harmony import */ var _dot__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./dot */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/dot.js\");\n/* harmony import */ var _elu__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./elu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/elu.js\");\n/* harmony import */ var _equal__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/equal.js\");\n/* harmony import */ var _erf__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./erf */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/erf.js\");\n/* harmony import */ var _exp__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./exp */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/exp.js\");\n/* harmony import */ var _expand_dims__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./expand_dims */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js\");\n/* harmony import */ var _expm1__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./expm1 */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/expm1.js\");\n/* harmony import */ var _eye__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./eye */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/eye.js\");\n/* harmony import */ var _fill__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./fill */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js\");\n/* harmony import */ var _floor__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./floor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/floor.js\");\n/* harmony import */ var _floorDiv__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./floorDiv */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js\");\n/* harmony import */ var _gather__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./gather */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/gather.js\");\n/* harmony import */ var _greater__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./greater */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/greater.js\");\n/* harmony import */ var _greater_equal__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./greater_equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/greater_equal.js\");\n/* harmony import */ var _imag__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./imag */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js\");\n/* harmony import */ var _is_finite__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./is_finite */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/is_finite.js\");\n/* harmony import */ var _is_inf__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./is_inf */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/is_inf.js\");\n/* harmony import */ var _is_nan__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./is_nan */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/is_nan.js\");\n/* harmony import */ var _leaky_relu__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./leaky_relu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/leaky_relu.js\");\n/* harmony import */ var _less__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./less */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/less.js\");\n/* harmony import */ var _less_equal__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./less_equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js\");\n/* harmony import */ var _linspace__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./linspace */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/linspace.js\");\n/* harmony import */ var _local_response_normalization__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./local_response_normalization */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/local_response_normalization.js\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./log */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log.js\");\n/* harmony import */ var _log1p__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./log1p */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log1p.js\");\n/* harmony import */ var _log_sigmoid__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./log_sigmoid */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log_sigmoid.js\");\n/* harmony import */ var _log_softmax__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./log_softmax */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log_softmax.js\");\n/* harmony import */ var _log_sum_exp__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./log_sum_exp */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/log_sum_exp.js\");\n/* harmony import */ var _logical_and__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./logical_and */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_and.js\");\n/* harmony import */ var _logical_not__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./logical_not */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_not.js\");\n/* harmony import */ var _logical_or__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./logical_or */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_or.js\");\n/* harmony import */ var _logical_xor__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./logical_xor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/logical_xor.js\");\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _max__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./max */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max.js\");\n/* harmony import */ var _max_pool__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./max_pool */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js\");\n/* harmony import */ var _max_pool_3d__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./max_pool_3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d.js\");\n/* harmony import */ var _max_pool_with_argmax__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./max_pool_with_argmax */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_with_argmax.js\");\n/* harmony import */ var _maximum__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./maximum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js\");\n/* harmony import */ var _mean__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./mean */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mean.js\");\n/* harmony import */ var _min__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./min */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/min.js\");\n/* harmony import */ var _minimum__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./minimum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/minimum.js\");\n/* harmony import */ var _mirror_pad__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./mirror_pad */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mirror_pad.js\");\n/* harmony import */ var _mod__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./mod */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mod.js\");\n/* harmony import */ var _moments__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./moments */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/moments.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _multi_rnn_cell__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./multi_rnn_cell */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/multi_rnn_cell.js\");\n/* harmony import */ var _multinomial__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./multinomial */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/multinomial.js\");\n/* harmony import */ var _neg__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./neg */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/neg.js\");\n/* harmony import */ var _not_equal__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./not_equal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/not_equal.js\");\n/* harmony import */ var _one_hot__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./one_hot */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/one_hot.js\");\n/* harmony import */ var _ones__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./ones */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ones.js\");\n/* harmony import */ var _ones_like__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./ones_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/ones_like.js\");\n/* harmony import */ var _outer_product__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./outer_product */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/outer_product.js\");\n/* harmony import */ var _pad__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./pad */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js\");\n/* harmony import */ var _pad1d__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./pad1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad1d.js\");\n/* harmony import */ var _pad2d__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./pad2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad2d.js\");\n/* harmony import */ var _pad3d__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./pad3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad3d.js\");\n/* harmony import */ var _pad4d__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./pad4d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad4d.js\");\n/* harmony import */ var _pool__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./pool */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pool.js\");\n/* harmony import */ var _pow__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./pow */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js\");\n/* harmony import */ var _prelu__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./prelu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js\");\n/* harmony import */ var _print__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./print */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/print.js\");\n/* harmony import */ var _prod__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./prod */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/prod.js\");\n/* harmony import */ var _rand__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./rand */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rand.js\");\n/* harmony import */ var _random_gamma__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./random_gamma */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/random_gamma.js\");\n/* harmony import */ var _random_normal__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./random_normal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/random_normal.js\");\n/* harmony import */ var _random_uniform__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./random_uniform */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js\");\n/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./range */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/range.js\");\n/* harmony import */ var _real__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./real */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/real.js\");\n/* harmony import */ var _reciprocal__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./reciprocal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reciprocal.js\");\n/* harmony import */ var _relu__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./relu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js\");\n/* harmony import */ var _relu6__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./relu6 */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./reverse */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js\");\n/* harmony import */ var _reverse_1d__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./reverse_1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_1d.js\");\n/* harmony import */ var _reverse_2d__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./reverse_2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_2d.js\");\n/* harmony import */ var _reverse_3d__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./reverse_3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_3d.js\");\n/* harmony import */ var _reverse_4d__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./reverse_4d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_4d.js\");\n/* harmony import */ var _round__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./round */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/round.js\");\n/* harmony import */ var _rsqrt__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./rsqrt */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rsqrt.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _selu__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./selu */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/selu.js\");\n/* harmony import */ var _separable_conv2d__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./separable_conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/separable_conv2d.js\");\n/* harmony import */ var _setdiff1d_async__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./setdiff1d_async */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js\");\n/* harmony import */ var _sigmoid__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./sigmoid */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js\");\n/* harmony import */ var _sign__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./sign */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sign.js\");\n/* harmony import */ var _sin__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./sin */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sin.js\");\n/* harmony import */ var _sinh__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./sinh */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sinh.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _slice1d__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./slice1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice1d.js\");\n/* harmony import */ var _slice2d__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./slice2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice2d.js\");\n/* harmony import */ var _slice3d__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./slice3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice3d.js\");\n/* harmony import */ var _slice4d__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./slice4d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice4d.js\");\n/* harmony import */ var _softmax__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./softmax */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js\");\n/* harmony import */ var _softplus__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ./softplus */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js\");\n/* harmony import */ var _space_to_batch_nd__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ./space_to_batch_nd */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js\");\n/* harmony import */ var _spectral_fft__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ./spectral/fft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js\");\n/* harmony import */ var _spectral_ifft__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ./spectral/ifft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js\");\n/* harmony import */ var _spectral_irfft__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ./spectral/irfft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/irfft.js\");\n/* harmony import */ var _spectral_rfft__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ./spectral/rfft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js\");\n/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ./split */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/split.js\");\n/* harmony import */ var _sqrt__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ./sqrt */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js\");\n/* harmony import */ var _square__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ./square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _squared_difference__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! ./squared_difference */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js\");\n/* harmony import */ var _squeeze__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! ./squeeze */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js\");\n/* harmony import */ var _stack__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(/*! ./stack */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js\");\n/* harmony import */ var _step__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(/*! ./step */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/step.js\");\n/* harmony import */ var _strided_slice__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(/*! ./strided_slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/strided_slice.js\");\n/* harmony import */ var _sub__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(/*! ./sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _sum__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(/*! ./sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js\");\n/* harmony import */ var _tan__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(/*! ./tan */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tan.js\");\n/* harmony import */ var _tanh__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(/*! ./tanh */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js\");\n/* harmony import */ var _tensor1d__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(/*! ./tensor1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js\");\n/* harmony import */ var _tensor2d__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(/*! ./tensor2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js\");\n/* harmony import */ var _tensor3d__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(/*! ./tensor3d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js\");\n/* harmony import */ var _tensor4d__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(/*! ./tensor4d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor4d.js\");\n/* harmony import */ var _tensor5d__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(/*! ./tensor5d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor5d.js\");\n/* harmony import */ var _tensor6d__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(/*! ./tensor6d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor6d.js\");\n/* harmony import */ var _tile__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(/*! ./tile */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js\");\n/* harmony import */ var _topk__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(/*! ./topk */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/topk.js\");\n/* harmony import */ var _truncated_normal__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(/*! ./truncated_normal */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/truncated_normal.js\");\n/* harmony import */ var _unique__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(/*! ./unique */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/unique.js\");\n/* harmony import */ var _unsorted_segment_sum__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(/*! ./unsorted_segment_sum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/unsorted_segment_sum.js\");\n/* harmony import */ var _unstack__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(/*! ./unstack */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js\");\n/* harmony import */ var _variable__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(/*! ./variable */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/variable.js\");\n/* harmony import */ var _where__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(/*! ./where */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where.js\");\n/* harmony import */ var _where_async__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(/*! ./where_async */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js\");\n/* harmony import */ var _zeros__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(/*! ./zeros */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js\");\n/* harmony import */ var _zeros_like__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(/*! ./zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _boolean_mask__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(/*! ./boolean_mask */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/boolean_mask.js\");\n/* harmony import */ var _transpose__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(/*! ./transpose */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js\");\n/* harmony import */ var _norm__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(/*! ./norm */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/norm.js\");\n/* harmony import */ var _moving_average__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(/*! ./moving_average */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/moving_average.js\");\n/* harmony import */ var _scatter_nd__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(/*! ./scatter_nd */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js\");\n/* harmony import */ var _sparse_to_dense__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(/*! ./sparse_to_dense */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js\");\n/* harmony import */ var _gather_nd__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(/*! ./gather_nd */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/gather_nd.js\");\n/* harmony import */ var _dropout__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(/*! ./dropout */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/dropout.js\");\n/* harmony import */ var _signal_ops_util__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(/*! ./signal_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js\");\n/* harmony import */ var _in_top_k__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(/*! ./in_top_k */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/in_top_k.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _fused_ops__WEBPACK_IMPORTED_MODULE_218__ = __webpack_require__(/*! ./fused_ops */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fused_ops.js\");\n/* harmony import */ var _signal_hamming_window__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(/*! ./signal/hamming_window */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hamming_window.js\");\n/* harmony import */ var _signal_hann_window__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(/*! ./signal/hann_window */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hann_window.js\");\n/* harmony import */ var _signal_frame__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(/*! ./signal/frame */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal/frame.js\");\n/* harmony import */ var _signal_stft__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(/*! ./signal/stft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal/stft.js\");\n/* harmony import */ var _image_crop_and_resize__WEBPACK_IMPORTED_MODULE_199__ = __webpack_require__(/*! ./image/crop_and_resize */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/crop_and_resize.js\");\n/* harmony import */ var _image_flip_left_right__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(/*! ./image/flip_left_right */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/flip_left_right.js\");\n/* harmony import */ var _image_rotate_with_offset__WEBPACK_IMPORTED_MODULE_198__ = __webpack_require__(/*! ./image/rotate_with_offset */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/rotate_with_offset.js\");\n/* harmony import */ var _image_non_max_suppression__WEBPACK_IMPORTED_MODULE_200__ = __webpack_require__(/*! ./image/non_max_suppression */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression.js\");\n/* harmony import */ var _image_non_max_suppression_async__WEBPACK_IMPORTED_MODULE_201__ = __webpack_require__(/*! ./image/non_max_suppression_async */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_async.js\");\n/* harmony import */ var _image_non_max_suppression_with_score__WEBPACK_IMPORTED_MODULE_202__ = __webpack_require__(/*! ./image/non_max_suppression_with_score */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score.js\");\n/* harmony import */ var _image_non_max_suppression_with_score_async__WEBPACK_IMPORTED_MODULE_203__ = __webpack_require__(/*! ./image/non_max_suppression_with_score_async */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score_async.js\");\n/* harmony import */ var _image_non_max_suppression_padded__WEBPACK_IMPORTED_MODULE_204__ = __webpack_require__(/*! ./image/non_max_suppression_padded */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded.js\");\n/* harmony import */ var _image_non_max_suppression_padded_async__WEBPACK_IMPORTED_MODULE_205__ = __webpack_require__(/*! ./image/non_max_suppression_padded_async */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded_async.js\");\n/* harmony import */ var _image_resize_bilinear__WEBPACK_IMPORTED_MODULE_197__ = __webpack_require__(/*! ./image/resize_bilinear */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_bilinear.js\");\n/* harmony import */ var _image_resize_nearest_neighbor__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(/*! ./image/resize_nearest_neighbor */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_nearest_neighbor.js\");\n/* harmony import */ var _linalg_band_part__WEBPACK_IMPORTED_MODULE_206__ = __webpack_require__(/*! ./linalg/band_part */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/band_part.js\");\n/* harmony import */ var _linalg_gram_schmidt__WEBPACK_IMPORTED_MODULE_207__ = __webpack_require__(/*! ./linalg/gram_schmidt */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/gram_schmidt.js\");\n/* harmony import */ var _linalg_qr__WEBPACK_IMPORTED_MODULE_208__ = __webpack_require__(/*! ./linalg/qr */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/linalg/qr.js\");\n/* harmony import */ var _losses_absolute_difference__WEBPACK_IMPORTED_MODULE_209__ = __webpack_require__(/*! ./losses/absolute_difference */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/absolute_difference.js\");\n/* harmony import */ var _losses_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_210__ = __webpack_require__(/*! ./losses/compute_weighted_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/compute_weighted_loss.js\");\n/* harmony import */ var _losses_cosine_distance__WEBPACK_IMPORTED_MODULE_211__ = __webpack_require__(/*! ./losses/cosine_distance */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/cosine_distance.js\");\n/* harmony import */ var _losses_hinge_loss__WEBPACK_IMPORTED_MODULE_212__ = __webpack_require__(/*! ./losses/hinge_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/hinge_loss.js\");\n/* harmony import */ var _losses_huber_loss__WEBPACK_IMPORTED_MODULE_213__ = __webpack_require__(/*! ./losses/huber_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/huber_loss.js\");\n/* harmony import */ var _losses_log_loss__WEBPACK_IMPORTED_MODULE_214__ = __webpack_require__(/*! ./losses/log_loss */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/log_loss.js\");\n/* harmony import */ var _losses_mean_squared_error__WEBPACK_IMPORTED_MODULE_215__ = __webpack_require__(/*! ./losses/mean_squared_error */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/mean_squared_error.js\");\n/* harmony import */ var _losses_sigmoid_cross_entropy__WEBPACK_IMPORTED_MODULE_216__ = __webpack_require__(/*! ./losses/sigmoid_cross_entropy */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/sigmoid_cross_entropy.js\");\n/* harmony import */ var _losses_softmax_cross_entropy__WEBPACK_IMPORTED_MODULE_217__ = __webpack_require__(/*! ./losses/softmax_cross_entropy */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/losses/softmax_cross_entropy.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Modularized ops.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst spectral = {\n    fft: _spectral_fft__WEBPACK_IMPORTED_MODULE_146__.fft,\n    ifft: _spectral_ifft__WEBPACK_IMPORTED_MODULE_147__.ifft,\n    rfft: _spectral_rfft__WEBPACK_IMPORTED_MODULE_149__.rfft,\n    irfft: _spectral_irfft__WEBPACK_IMPORTED_MODULE_148__.irfft\n};\n\n\n\n\n\nconst signal = {\n    hammingWindow: _signal_hamming_window__WEBPACK_IMPORTED_MODULE_191__.hammingWindow,\n    hannWindow: _signal_hann_window__WEBPACK_IMPORTED_MODULE_192__.hannWindow,\n    frame: _signal_frame__WEBPACK_IMPORTED_MODULE_193__.frame,\n    stft: _signal_stft__WEBPACK_IMPORTED_MODULE_194__.stft,\n};\n// Image Ops namespace\n\n\n\n\n\n\n\n\n\n\n\nconst image = {\n    flipLeftRight: _image_flip_left_right__WEBPACK_IMPORTED_MODULE_195__.flipLeftRight,\n    resizeNearestNeighbor: _image_resize_nearest_neighbor__WEBPACK_IMPORTED_MODULE_196__.resizeNearestNeighbor,\n    resizeBilinear: _image_resize_bilinear__WEBPACK_IMPORTED_MODULE_197__.resizeBilinear,\n    rotateWithOffset: _image_rotate_with_offset__WEBPACK_IMPORTED_MODULE_198__.rotateWithOffset,\n    cropAndResize: _image_crop_and_resize__WEBPACK_IMPORTED_MODULE_199__.cropAndResize,\n    nonMaxSuppression: _image_non_max_suppression__WEBPACK_IMPORTED_MODULE_200__.nonMaxSuppression,\n    nonMaxSuppressionAsync: _image_non_max_suppression_async__WEBPACK_IMPORTED_MODULE_201__.nonMaxSuppressionAsync,\n    nonMaxSuppressionWithScore: _image_non_max_suppression_with_score__WEBPACK_IMPORTED_MODULE_202__.nonMaxSuppressionWithScore,\n    nonMaxSuppressionWithScoreAsync: _image_non_max_suppression_with_score_async__WEBPACK_IMPORTED_MODULE_203__.nonMaxSuppressionWithScoreAsync,\n    nonMaxSuppressionPadded: _image_non_max_suppression_padded__WEBPACK_IMPORTED_MODULE_204__.nonMaxSuppressionPadded,\n    nonMaxSuppressionPaddedAsync: _image_non_max_suppression_padded_async__WEBPACK_IMPORTED_MODULE_205__.nonMaxSuppressionPaddedAsync\n};\n// linalg namespace\n\n\n\nconst linalg = {\n    bandPart: _linalg_band_part__WEBPACK_IMPORTED_MODULE_206__.bandPart,\n    gramSchmidt: _linalg_gram_schmidt__WEBPACK_IMPORTED_MODULE_207__.gramSchmidt,\n    qr: _linalg_qr__WEBPACK_IMPORTED_MODULE_208__.qr\n};\n// losses namespace;\n\n\n\n\n\n\n\n\n\nconst losses = {\n    absoluteDifference: _losses_absolute_difference__WEBPACK_IMPORTED_MODULE_209__.absoluteDifference,\n    computeWeightedLoss: _losses_compute_weighted_loss__WEBPACK_IMPORTED_MODULE_210__.computeWeightedLoss,\n    cosineDistance: _losses_cosine_distance__WEBPACK_IMPORTED_MODULE_211__.cosineDistance,\n    hingeLoss: _losses_hinge_loss__WEBPACK_IMPORTED_MODULE_212__.hingeLoss,\n    huberLoss: _losses_huber_loss__WEBPACK_IMPORTED_MODULE_213__.huberLoss,\n    logLoss: _losses_log_loss__WEBPACK_IMPORTED_MODULE_214__.logLoss,\n    meanSquaredError: _losses_mean_squared_error__WEBPACK_IMPORTED_MODULE_215__.meanSquaredError,\n    sigmoidCrossEntropy: _losses_sigmoid_cross_entropy__WEBPACK_IMPORTED_MODULE_216__.sigmoidCrossEntropy,\n    softmaxCrossEntropy: _losses_softmax_cross_entropy__WEBPACK_IMPORTED_MODULE_217__.softmaxCrossEntropy\n};\n// Second level exports.\n\n//# sourceMappingURL=ops.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/ops.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/outer_product.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/outer_product.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export outerProduct [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"outerProduct\": () => /* binding */ outerProduct\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _mat_mul__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mat_mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n;\n\n\n\n\n/**\n * Computes the outer product of two vectors, `v1` and `v2`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([3, 4, 5]);\n *\n * tf.outerProduct(a, b).print();\n * ```\n * @param v1 The first vector in the outer product operation.\n * @param v2 The second vector in the outer product operation.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction outerProduct_(v1, v2) {\n    const $v1 = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(v1, 'v1', 'outerProduct');\n    const $v2 = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(v2, 'v2', 'outerProduct');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($v1.rank === 1 && $v2.rank === 1, () => `Error in outerProduct: inputs must be rank 1, but got ranks ` +\n        `${$v1.rank} and ${$v2.rank}.`);\n    const v12D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($v1, [-1, 1]);\n    const v22D = (0,_reshape__WEBPACK_IMPORTED_MODULE_2__.reshape)($v2, [1, -1]);\n    return (0,_mat_mul__WEBPACK_IMPORTED_MODULE_3__.matMul)(v12D, v22D);\n}\nconst outerProduct = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ outerProduct_ });\n//# sourceMappingURL=outer_product.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/outer_product.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js ***!
  \************************************************************/
/*! namespace exports */
/*! export pad [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pad\": () => /* binding */ pad\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Pads a `tf.Tensor` with a given value and paddings.\n *\n * This operation implements `CONSTANT` mode. For `REFLECT` and `SYMMETRIC`,\n * refer to `tf.mirrorPad`\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `paddings` is of given length.\n *   - `tf.pad1d`\n *   - `tf.pad2d`\n *   - `tf.pad3d`\n *   - `tf.pad4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.pad([[1, 2]]).print();\n * ```\n * @param x The tensor to pad.\n * @param paddings An array of length `R` (the rank of the tensor), where\n * each element is a length-2 tuple of ints `[padBefore, padAfter]`,\n * specifying how much to pad along each dimension of the tensor.\n * @param constantValue The pad value to use. Defaults to 0.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction pad_(x, paddings, constantValue = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'pad');\n    if ($x.rank === 0) {\n        throw new Error('pad(scalar) is not defined. Pass non-scalar to pad');\n    }\n    const attrs = { paddings, constantValue };\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.PadV2, inputs, attrs);\n}\nconst pad = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ pad_ });\n//# sourceMappingURL=pad.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/pad1d.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/pad1d.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export pad1d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pad1d\": () => /* binding */ pad1d\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _pad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pad */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js\");\n;\n\n\n/**\n * Pads a `tf.Tensor1D` with a given value and paddings. See `pad` for details.\n */\nfunction pad1d_(x, paddings, constantValue = 0) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(paddings.length === 2, () => 'Invalid number of paddings. Must be length of 2.');\n    return (0,_pad__WEBPACK_IMPORTED_MODULE_1__.pad)(x, [paddings], constantValue);\n}\nconst pad1d = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ pad1d_ });\n//# sourceMappingURL=pad1d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/pad1d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/pad2d.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/pad2d.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export pad2d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pad2d\": () => /* binding */ pad2d\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _pad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pad */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js\");\n;\n\n\n/**\n * Pads a `tf.Tensor2D` with a given value and paddings. See `pad` for details.\n */\nfunction pad2d_(x, paddings, constantValue = 0) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(paddings.length === 2 && paddings[0].length === 2 &&\n        paddings[1].length === 2, () => 'Invalid number of paddings. Must be length of 2 each.');\n    return (0,_pad__WEBPACK_IMPORTED_MODULE_1__.pad)(x, paddings, constantValue);\n}\nconst pad2d = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ pad2d_ });\n//# sourceMappingURL=pad2d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/pad2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/pad3d.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/pad3d.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export pad3d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pad3d\": () => /* binding */ pad3d\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _pad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pad */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js\");\n;\n\n\n/**\n * Pads a `tf.Tensor3D` with a given value and paddings. See `pad` for details.\n */\nfunction pad3d_(x, paddings, constantValue = 0) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(paddings.length === 3 && paddings[0].length === 2 &&\n        paddings[1].length === 2 && paddings[2].length === 2, () => 'Invalid number of paddings. Must be length of 2 each.');\n    return (0,_pad__WEBPACK_IMPORTED_MODULE_1__.pad)(x, paddings, constantValue);\n}\nconst pad3d = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ pad3d_ });\n//# sourceMappingURL=pad3d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/pad3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/pad4d.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/pad4d.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export pad4d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pad4d\": () => /* binding */ pad4d\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _pad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pad */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pad.js\");\n;\n\n\n/**\n * Pads a `tf.Tensor4D` with a given value and paddings. See `pad` for details.\n */\nfunction pad4d_(x, paddings, constantValue = 0) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(paddings.length === 4 && paddings[0].length === 2 &&\n        paddings[1].length === 2 && paddings[2].length === 2 &&\n        paddings[3].length === 2, () => 'Invalid number of paddings. Must be length of 2 each.');\n    return (0,_pad__WEBPACK_IMPORTED_MODULE_1__.pad)(x, paddings, constantValue);\n}\nconst pad4d = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ pad4d_ });\n//# sourceMappingURL=pad4d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/pad4d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/pool.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/pool.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export pool [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pool\": () => /* binding */ pool\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _avg_pool__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./avg_pool */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js\");\n/* harmony import */ var _batch_to_space_nd__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./batch_to_space_nd */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/batch_to_space_nd.js\");\n/* harmony import */ var _conv_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./conv_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js\");\n/* harmony import */ var _max_pool__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./max_pool */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _space_to_batch_nd__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./space_to_batch_nd */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n/**\n * Performs an N-D pooling operation\n *\n * @param input The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param windowShape The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param poolingType The type of pooling, either 'max' or 'avg'.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *         https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilationRate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction pool_(input, windowShape, poolingType, pad, dilations, strides) {\n    if (dilations == null) {\n        dilations = [1, 1];\n    }\n    if (strides == null) {\n        strides = 1;\n    }\n    if (pad === 0) {\n        pad = 'valid';\n    }\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(input, 'x', 'maxPool');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(_conv_util__WEBPACK_IMPORTED_MODULE_3__.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in pool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const convInfo = _conv_util__WEBPACK_IMPORTED_MODULE_3__.computePool2DInfo(x4D.shape, windowShape, strides, dilations, pad);\n    const dilation = [convInfo.dilationHeight, convInfo.dilationWidth];\n    // The following implementation does batchToSpace(pool(spaceToBatch(x)))\n    // whenever dilation > 1 since the TF kernels do not support dilation > 1.\n    // tslint:disable-next-line:max-line-length\n    // https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L1037\n    let basePadding;\n    if (pad === 'same') {\n        basePadding = withSpaceToBatchBasePaddings([convInfo.filterHeight, convInfo.filterWidth], dilation);\n    }\n    else {\n        basePadding = [[0, 0], [0, 0]];\n    }\n    const isDilationOne = dilation[0] === 1 && dilation[1] === 1;\n    const [adjustedPadding, adjustedCrops] = requiredSpaceToBatchPaddings([convInfo.inHeight, convInfo.inWidth], dilation, basePadding);\n    const convertedPad = isDilationOne ? pad : 'valid';\n    const convertedX = isDilationOne ? x4D : (0,_space_to_batch_nd__WEBPACK_IMPORTED_MODULE_4__.spaceToBatchND)(x4D, dilation, adjustedPadding);\n    const forwardOp = poolingType === 'avg' ?\n        () => (0,_avg_pool__WEBPACK_IMPORTED_MODULE_5__.avgPool)(convertedX, windowShape, strides, convertedPad) :\n        () => (0,_max_pool__WEBPACK_IMPORTED_MODULE_6__.maxPool)(convertedX, windowShape, strides, convertedPad);\n    const y = forwardOp();\n    const res = isDilationOne ? y : (0,_batch_to_space_nd__WEBPACK_IMPORTED_MODULE_7__.batchToSpaceND)(y, dilation, adjustedCrops);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\n// Helper function to compute crops and paddings for pool with dilation > 1.\n// tslint:disable-next-line:max-line-length\n// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/array_ops.py#L2184\nfunction requiredSpaceToBatchPaddings(inputShape, blockShape, basePadding) {\n    const padStart = basePadding.map(b => b[0]);\n    const origPadEnd = basePadding.map(b => b[1]);\n    const fullInputShape = inputShape.concat(padStart, origPadEnd);\n    const padEndExtra = blockShape.map((b, i) => (b - fullInputShape[i] % b) % b);\n    const padEnd = origPadEnd.map((s, i) => s + padEndExtra[i]);\n    const paddings = blockShape.map((_, i) => [padStart[i], padEnd[i]]);\n    const crops = blockShape.map((_, i) => [0, padEndExtra[i]]);\n    return [paddings, crops];\n}\n// Helper function to compute base paddings for pool with dilation > 1.\n// tslint:disable-next-line:max-line-length\n// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L524\nfunction withSpaceToBatchBasePaddings(filterShape, dilation) {\n    // Spatial dimensions of the filters and the upsampled filters in which we\n    // introduce (rate - 1) zeros between consecutive filter values.\n    const dilatedFilterShape = filterShape.map((s, i) => {\n        return s + (s - 1) * (dilation[i] - 1);\n    });\n    const padExtraShape = dilatedFilterShape.map(s => s - 1);\n    // When padding is odd, we pad more at end, following the same\n    // convention as conv2d.\n    const padExtraStart = padExtraShape.map(s => Math.floor(s / 2));\n    const padExtraEnd = padExtraShape.map((s, i) => s - padExtraStart[i]);\n    return padExtraShape.map((_, i) => {\n        return [padExtraStart[i], padExtraEnd[i]];\n    });\n}\nconst pool = (0,_operation__WEBPACK_IMPORTED_MODULE_8__.op)({ pool_ });\n//# sourceMappingURL=pool.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/pool.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js ***!
  \************************************************************/
/*! namespace exports */
/*! export pow [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pow\": () => /* binding */ pow\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Computes the power of one `tf.Tensor` to another. Supports broadcasting.\n *\n * Given a `tf.Tensor` x and a `tf.Tensor` y, this operation computes x^y for\n * corresponding elements in x and y. The result's dtype will be the upcasted\n * type of the `base` and `exp` dtypes.\n *\n * ```js\n * const a = tf.tensor([[2, 3], [4, 5]])\n * const b = tf.tensor([[1, 2], [3, 0]]).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n *\n * ```js\n * const a = tf.tensor([[1, 2], [3, 4]])\n * const b = tf.tensor(2).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n * We also expose `powStrict` which has the same signature as this op and\n * asserts that `base` and `exp` are the same shape (does not broadcast).\n *\n * @param base The base `tf.Tensor` to pow element-wise.\n * @param exp The exponent `tf.Tensor` to pow element-wise.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction pow_(base, exp) {\n    let $base = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(base, 'base', 'pow');\n    let $exp = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(exp, 'exp', 'pow');\n    [$base, $exp] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($base, $exp);\n    const inputs = { a: $base, b: $exp };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Pow, inputs);\n}\nconst pow = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ pow_ });\n//# sourceMappingURL=pow.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export prelu [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prelu\": () => /* binding */ prelu\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes leaky rectified linear element-wise with parametric alphas.\n *\n * `x < 0 ? alpha * x : f(x) = x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n * const alpha = tf.scalar(0.1);\n *\n * x.prelu(alpha).print();  // or tf.prelu(x, alpha)\n * ```\n * @param x The input tensor.\n * @param alpha Scaling factor for negative values.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction prelu_(x, alpha) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'prelu');\n    const $alpha = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(alpha, 'alpha', 'prelu');\n    const inputs = { x: $x, alpha: $alpha };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Prelu, inputs);\n}\nconst prelu = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ prelu_ });\n//# sourceMappingURL=prelu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/prelu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/print.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/print.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export print [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"print\": () => /* binding */ print\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Prints information about the `tf.Tensor` including its data.\n *\n * ```js\n * const verbose = true;\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print(verbose);\n * ```\n * @param x The tensor to be printed.\n * @param verbose Whether to print verbose information about the ` Tensor`,\n * including dtype and size.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction print(x, verbose = false) {\n    console.log(x.toString(verbose));\n}\n//# sourceMappingURL=print.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/print.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/prod.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/prod.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export prod [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prod\": () => /* binding */ prod\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Computes the product of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.prod().print();  // or tf.prod(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.prod(axis).print();  // or tf.prod(x, axis)\n * ```\n *\n * @param x The input tensor to compute the product over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction prod_(x, axis = null, keepDims = false) {\n    let $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'prod');\n    if ($x.dtype === 'bool') {\n        // bool is not an allowed type for the underlying kernel.\n        $x = (0,_cast__WEBPACK_IMPORTED_MODULE_2__.cast)($x, 'int32');\n    }\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Prod, inputs, attrs);\n}\nconst prod = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ prod_ });\n//# sourceMappingURL=prod.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/prod.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/rand.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/rand.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export rand [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rand\": () => /* binding */ rand\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Creates a `tf.Tensor` with values sampled from a random number generator\n * function defined by the user.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param randFunction A random number generator function which is called\n * for each element in the output tensor.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n */\nfunction rand_(shape, randFunction, dtype) {\n    const size = (0,_util__WEBPACK_IMPORTED_MODULE_1__.sizeFromShape)(shape);\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    for (let i = 0; i < size; i++) {\n        values[i] = randFunction();\n    }\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.makeTensor(values, shape, dtype);\n}\nconst rand = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ rand_ });\n//# sourceMappingURL=rand.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/rand.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export MPRandGauss [provided] [no usage info] [missing usage info prevents renaming] */
/*! export RandGamma [provided] [no usage info] [missing usage info prevents renaming] */
/*! export UniformRandom [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expectArrayInMeanStdRange [provided] [no usage info] [missing usage info prevents renaming] */
/*! export jarqueBeraNormalityTest [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MPRandGauss\": () => /* binding */ MPRandGauss,\n/* harmony export */   \"RandGamma\": () => /* binding */ RandGamma,\n/* harmony export */   \"UniformRandom\": () => /* binding */ UniformRandom,\n/* harmony export */   \"jarqueBeraNormalityTest\": () => /* binding */ jarqueBeraNormalityTest,\n/* harmony export */   \"expectArrayInMeanStdRange\": () => /* binding */ expectArrayInMeanStdRange\n/* harmony export */ });\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! seedrandom */ \"./node_modules/seedrandom/index.js\");\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(seedrandom__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _test_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../test_util */ \"./node_modules/@tensorflow/tfjs-core/dist/test_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n// https://en.wikipedia.org/wiki/Marsaglia_polar_method\nclass MPRandGauss {\n    constructor(mean, stdDeviation, dtype, truncated, seed) {\n        this.mean = mean;\n        this.stdDev = stdDeviation;\n        this.dtype = dtype;\n        this.nextVal = NaN;\n        this.truncated = truncated;\n        if (this.truncated) {\n            this.upper = this.mean + this.stdDev * 2;\n            this.lower = this.mean - this.stdDev * 2;\n        }\n        const seedValue = seed ? seed : Math.random();\n        this.random = seedrandom__WEBPACK_IMPORTED_MODULE_0__.alea(seedValue.toString());\n    }\n    /** Returns next sample from a Gaussian distribution. */\n    nextValue() {\n        if (!isNaN(this.nextVal)) {\n            const value = this.nextVal;\n            this.nextVal = NaN;\n            return value;\n        }\n        let resultX, resultY;\n        let isValid = false;\n        while (!isValid) {\n            let v1, v2, s;\n            do {\n                v1 = 2 * this.random() - 1;\n                v2 = 2 * this.random() - 1;\n                s = v1 * v1 + v2 * v2;\n            } while (s >= 1 || s === 0);\n            const mul = Math.sqrt(-2.0 * Math.log(s) / s);\n            resultX = this.mean + this.stdDev * v1 * mul;\n            resultY = this.mean + this.stdDev * v2 * mul;\n            if (!this.truncated || this.isValidTruncated(resultX)) {\n                isValid = true;\n            }\n        }\n        if (!this.truncated || this.isValidTruncated(resultY)) {\n            this.nextVal = this.convertValue(resultY);\n        }\n        return this.convertValue(resultX);\n    }\n    /** Handles proper rounding for non-floating-point numbers. */\n    convertValue(value) {\n        if (this.dtype == null || this.dtype === 'float32') {\n            return value;\n        }\n        return Math.round(value);\n    }\n    /** Returns true if less than 2-standard-deviations from the mean. */\n    isValidTruncated(value) {\n        return value <= this.upper && value >= this.lower;\n    }\n}\n// Marsaglia, George, and Wai Wan Tsang. 2000. \"A Simple Method for Generating\n// Gamma Variables.\"\nclass RandGamma {\n    constructor(alpha, beta, dtype, seed) {\n        this.alpha = alpha;\n        this.beta = 1 / beta; // convert rate to scale parameter\n        this.dtype = dtype;\n        const seedValue = seed ? seed : Math.random();\n        this.randu = seedrandom__WEBPACK_IMPORTED_MODULE_0__.alea(seedValue.toString());\n        this.randn = new MPRandGauss(0, 1, dtype, false, this.randu());\n        if (alpha < 1) {\n            this.d = alpha + (2 / 3);\n        }\n        else {\n            this.d = alpha - (1 / 3);\n        }\n        this.c = 1 / Math.sqrt(9 * this.d);\n    }\n    /** Returns next sample from a gamma distribution. */\n    nextValue() {\n        let x2, v0, v1, x, u, v;\n        while (true) {\n            do {\n                x = this.randn.nextValue();\n                v = 1 + (this.c * x);\n            } while (v <= 0);\n            v *= v * v;\n            x2 = x * x;\n            v0 = 1 - (0.331 * x2 * x2);\n            v1 = (0.5 * x2) + (this.d * (1 - v + Math.log(v)));\n            u = this.randu();\n            if (u < v0 || Math.log(u) < v1) {\n                break;\n            }\n        }\n        v = (1 / this.beta) * this.d * v;\n        if (this.alpha < 1) {\n            v *= Math.pow(this.randu(), 1 / this.alpha);\n        }\n        return this.convertValue(v);\n    }\n    /** Handles proper rounding for non-floating-point numbers. */\n    convertValue(value) {\n        if (this.dtype === 'float32') {\n            return value;\n        }\n        return Math.round(value);\n    }\n}\nclass UniformRandom {\n    constructor(min = 0, max = 1, dtype, seed) {\n        /** Handles proper rounding for non floating point numbers. */\n        this.canReturnFloat = () => (this.dtype == null || this.dtype === 'float32');\n        this.min = min;\n        this.range = max - min;\n        this.dtype = dtype;\n        if (seed == null) {\n            seed = Math.random();\n        }\n        if (typeof seed === 'number') {\n            seed = seed.toString();\n        }\n        if (!this.canReturnFloat() && this.range <= 1) {\n            throw new Error(`The difference between ${min} - ${max} <= 1 and dtype is not float`);\n        }\n        this.random = seedrandom__WEBPACK_IMPORTED_MODULE_0__.alea(seed);\n    }\n    convertValue(value) {\n        if (this.canReturnFloat()) {\n            return value;\n        }\n        return Math.round(value);\n    }\n    nextValue() {\n        return this.convertValue(this.min + this.range * this.random());\n    }\n}\nfunction jarqueBeraNormalityTest(values) {\n    // https://en.wikipedia.org/wiki/Jarque%E2%80%93Bera_test\n    const n = values.length;\n    const s = skewness(values);\n    const k = kurtosis(values);\n    const jb = n / 6 * (Math.pow(s, 2) + 0.25 * Math.pow(k - 3, 2));\n    // JB test requires 2-degress of freedom from Chi-Square @ 0.95:\n    // http://www.itl.nist.gov/div898/handbook/eda/section3/eda3674.htm\n    const CHI_SQUARE_2DEG = 5.991;\n    if (jb > CHI_SQUARE_2DEG) {\n        throw new Error(`Invalid p-value for JB: ${jb}`);\n    }\n}\nfunction expectArrayInMeanStdRange(actual, expectedMean, expectedStdDev, epsilon) {\n    if (epsilon == null) {\n        epsilon = (0,_test_util__WEBPACK_IMPORTED_MODULE_1__.testEpsilon)();\n    }\n    const actualMean = mean(actual);\n    (0,_test_util__WEBPACK_IMPORTED_MODULE_1__.expectNumbersClose)(actualMean, expectedMean, epsilon);\n    (0,_test_util__WEBPACK_IMPORTED_MODULE_1__.expectNumbersClose)(standardDeviation(actual, actualMean), expectedStdDev, epsilon);\n}\nfunction mean(values) {\n    let sum = 0;\n    for (let i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum / values.length;\n}\nfunction standardDeviation(values, mean) {\n    let squareDiffSum = 0;\n    for (let i = 0; i < values.length; i++) {\n        const diff = values[i] - mean;\n        squareDiffSum += diff * diff;\n    }\n    return Math.sqrt(squareDiffSum / values.length);\n}\nfunction kurtosis(values) {\n    // https://en.wikipedia.org/wiki/Kurtosis\n    const valuesMean = mean(values);\n    const n = values.length;\n    let sum2 = 0;\n    let sum4 = 0;\n    for (let i = 0; i < n; i++) {\n        const v = values[i] - valuesMean;\n        sum2 += Math.pow(v, 2);\n        sum4 += Math.pow(v, 4);\n    }\n    return (1 / n) * sum4 / Math.pow((1 / n) * sum2, 2);\n}\nfunction skewness(values) {\n    // https://en.wikipedia.org/wiki/Skewness\n    const valuesMean = mean(values);\n    const n = values.length;\n    let sum2 = 0;\n    let sum3 = 0;\n    for (let i = 0; i < n; i++) {\n        const v = values[i] - valuesMean;\n        sum2 += Math.pow(v, 2);\n        sum3 += Math.pow(v, 3);\n    }\n    return (1 / n) * sum3 / Math.pow((1 / (n - 1)) * sum2, 3 / 2);\n}\n//# sourceMappingURL=rand_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/random_gamma.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/random_gamma.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export randomGamma [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"randomGamma\": () => /* binding */ randomGamma\n/* harmony export */ });\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _rand_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rand_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Creates a `tf.Tensor` with values sampled from a gamma distribution.\n *\n * ```js\n * tf.randomGamma([2, 2], 1).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param alpha The shape parameter of the gamma distribution.\n * @param beta The inverse scale parameter of the gamma distribution. Defaults\n *     to 1.\n * @param dtype The data type of the output. Defaults to float32.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction randomGamma_(shape, alpha, beta = 1, dtype = 'float32', seed) {\n    if (beta == null) {\n        beta = 1;\n    }\n    if (dtype == null) {\n        dtype = 'float32';\n    }\n    if (dtype !== 'float32' && dtype !== 'int32') {\n        throw new Error(`Unsupported data type ${dtype}`);\n    }\n    const rgamma = new _rand_util__WEBPACK_IMPORTED_MODULE_0__.RandGamma(alpha, beta, dtype, seed);\n    const res = (0,_buffer__WEBPACK_IMPORTED_MODULE_1__.buffer)(shape, dtype);\n    for (let i = 0; i < res.values.length; i++) {\n        res.values[i] = rgamma.nextValue();\n    }\n    return res.toTensor();\n}\nconst randomGamma = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ randomGamma_ });\n//# sourceMappingURL=random_gamma.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/random_gamma.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/random_normal.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/random_normal.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export randomNormal [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"randomNormal\": () => /* binding */ randomNormal\n/* harmony export */ });\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _rand_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rand_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Creates a `tf.Tensor` with values sampled from a normal distribution.\n *\n * ```js\n * tf.randomNormal([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction randomNormal_(shape, mean = 0, stdDev = 1, dtype, seed) {\n    if (dtype != null && dtype === 'bool') {\n        throw new Error(`Unsupported data type ${dtype}`);\n    }\n    const randGauss = new _rand_util__WEBPACK_IMPORTED_MODULE_0__.MPRandGauss(mean, stdDev, dtype, false /* truncated */, seed);\n    const res = (0,_buffer__WEBPACK_IMPORTED_MODULE_1__.buffer)(shape, dtype);\n    for (let i = 0; i < res.values.length; i++) {\n        res.values[i] = randGauss.nextValue();\n    }\n    return res.toTensor();\n}\nconst randomNormal = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ randomNormal_ });\n//# sourceMappingURL=random_normal.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/random_normal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export randomUniform [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"randomUniform\": () => /* binding */ randomUniform\n/* harmony export */ });\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _rand_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rand_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Creates a `tf.Tensor` with values sampled from a uniform distribution.\n *\n * The generated values follow a uniform distribution in the range [minval,\n * maxval). The lower bound minval is included in the range, while the upper\n * bound maxval is excluded.\n *\n * ```js\n * tf.randomUniform([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param minval The lower bound on the range of random values to generate.\n *   Defaults to 0.\n * @param maxval The upper bound on the range of random values to generate.\n *   Defaults to 1.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Random'}\n */\nfunction randomUniform_(shape, minval = 0, maxval = 1, dtype = 'float32', seed) {\n    const res = (0,_buffer__WEBPACK_IMPORTED_MODULE_0__.buffer)(shape, dtype);\n    const random = new _rand_util__WEBPACK_IMPORTED_MODULE_1__.UniformRandom(minval, maxval, null, seed);\n    for (let i = 0; i < res.values.length; i++) {\n        res.values[i] = random.nextValue();\n    }\n    return res.toTensor();\n}\nconst randomUniform = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ randomUniform_ });\n//# sourceMappingURL=random_uniform.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/random_uniform.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/range.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/range.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export range [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"range\": () => /* binding */ range\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * Creates a new `tf.Tensor1D` filled with the numbers in the range provided.\n *\n * The tensor is a is half-open interval meaning it includes start, but\n * excludes stop. Decrementing ranges and negative step values are also\n * supported.sv\n *\n *\n * ```js\n * tf.range(0, 9, 2).print();\n * ```\n *\n * @param start An integer start value\n * @param stop An integer stop value\n * @param step An integer increment (will default to 1 or -1)\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction range(start, stop, step = 1, dtype = 'float32') {\n    if (step === 0) {\n        throw new Error('Cannot have a step of zero');\n    }\n    const attrs = { start, stop, step, dtype };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_1__.Range, {} /* inputs */, attrs);\n}\n//# sourceMappingURL=range.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/range.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/real.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/real.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export real [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"real\": () => /* binding */ real\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Returns the real part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the real part of each element in input considered as a complex number.\n *\n * If the input is real, it simply makes a clone.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.real(x).print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction real_(input) {\n    const $input = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(input, 'input', 'real');\n    const inputs = { input: $input };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Real, inputs);\n}\nconst real = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ real_ });\n//# sourceMappingURL=real.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/real.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reciprocal.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reciprocal.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export reciprocal [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reciprocal\": () => /* binding */ reciprocal\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes reciprocal of x element-wise: `1 / x`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, 2]);\n *\n * x.reciprocal().print();  // or tf.reciprocal(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction reciprocal_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'reciprocal');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Reciprocal, inputs);\n}\nconst reciprocal = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ reciprocal_ });\n//# sourceMappingURL=reciprocal.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/reciprocal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export PARALLELIZE_THRESHOLD [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computeOptimalWindowSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PARALLELIZE_THRESHOLD\": () => /* binding */ PARALLELIZE_THRESHOLD,\n/* harmony export */   \"computeOptimalWindowSize\": () => /* binding */ computeOptimalWindowSize\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Inputs of size above this threshold will be parallelized by calling multiple\n * shader programs.\n */\n;\nconst PARALLELIZE_THRESHOLD = 30;\nfunction computeOptimalWindowSize(inSize) {\n    if (inSize <= PARALLELIZE_THRESHOLD) {\n        return inSize;\n    }\n    return (0,_util__WEBPACK_IMPORTED_MODULE_0__.nearestDivisor)(inSize, Math.floor(Math.sqrt(inSize)));\n}\n//# sourceMappingURL=reduce_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export relu [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"relu\": () => /* binding */ relu\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes rectified linear element-wise: `max(x, 0)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.relu().print();  // or tf.relu(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction relu_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'relu');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Relu, inputs);\n}\nconst relu = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ relu_ });\n//# sourceMappingURL=relu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/relu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export relu6 [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"relu6\": () => /* binding */ relu6\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes rectified linear 6 element-wise: `min(max(x, 0), 6)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 8]);\n *\n * x.relu6().print();  // or tf.relu6(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction relu6_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'relu6');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Relu6, inputs);\n}\nconst relu6 = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ relu6_ });\n//# sourceMappingURL=relu6.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/relu6.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export reshape [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reshape\": () => /* binding */ reshape\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Reshapes a `tf.Tensor` to a given shape.\n *\n * Given an input tensor, returns a new tensor with the same values as the\n * input tensor with shape `shape`.\n *\n * If one component of shape is the special value -1, the size of that\n * dimension is computed so that the total size remains constant. In\n * particular, a shape of [-1] flattens into 1-D. At most one component of\n * shape can be -1.\n *\n * If shape is 1-D or higher, then the operation returns a tensor with shape\n * shape filled with the values of tensor. In this case, the number of\n * elements implied by shape must be the same as the number of elements in\n * tensor.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.reshape([2, 2]).print();\n * ```\n *\n * @param x The input tensor to be reshaped.\n * @param shape An array of integers defining the output tensor shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction reshape_(x, shape) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'reshape', 'string_or_numeric');\n    const inputs = { x: $x };\n    const attrs = { shape };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Reshape, inputs, attrs);\n}\nconst reshape = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ reshape_ });\n//# sourceMappingURL=reshape.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export reverse [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reverse\": () => /* binding */ reverse\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Reverses a `tf.Tensor` along a specified axis.\n *\n * Also available are stricter rank-specific methods that assert that `x` is\n * of the given rank:\n *   - `tf.reverse1d`\n *   - `tf.reverse2d`\n *   - `tf.reverse3d`\n *   - `tf.reverse4d`\n *\n * Except `tf.reverse1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.reverse().print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.reverse(axis).print();\n * ```\n * @param x The input tensor to be reversed.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction reverse_(x, axis) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'reverse');\n    const inputs = { x: $x };\n    const attrs = { dims: axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Reverse, inputs, attrs);\n}\nconst reverse = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ reverse_ });\n//# sourceMappingURL=reverse.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_1d.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_1d.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export reverse1d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reverse1d\": () => /* binding */ reverse1d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reverse */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Reverses a `tf.Tensor1D`.\n *\n * @param x The input tensor.\n */\nfunction reverse1d_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'reverse');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 1, () => `Error in reverse1D: x must be rank 1 but got rank ${$x.rank}.`);\n    return (0,_reverse__WEBPACK_IMPORTED_MODULE_2__.reverse)($x, 0);\n}\nconst reverse1d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ reverse1d_ });\n//# sourceMappingURL=reverse_1d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_1d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_2d.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_2d.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export reverse2d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reverse2d\": () => /* binding */ reverse2d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reverse */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Reverses a `tf.Tensor2D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse2d_(x, axis) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'reverse');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 2, () => `Error in reverse2D: x must be rank 2 but got rank ${$x.rank}.`);\n    return (0,_reverse__WEBPACK_IMPORTED_MODULE_2__.reverse)($x, axis);\n}\nconst reverse2d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ reverse2d_ });\n//# sourceMappingURL=reverse_2d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_3d.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_3d.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export reverse3d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reverse3d\": () => /* binding */ reverse3d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reverse */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Reverses a `tf.Tensor3D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse3d_(x, axis) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'reverse');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 3, () => `Error in reverse3D: x must be rank 3 but got rank ${$x.rank}.`);\n    return (0,_reverse__WEBPACK_IMPORTED_MODULE_2__.reverse)($x, axis);\n}\nconst reverse3d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ reverse3d_ });\n//# sourceMappingURL=reverse_3d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_4d.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_4d.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export reverse4d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reverse4d\": () => /* binding */ reverse4d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reverse */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Reverses a `tf.Tensor4D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse4d_(x, axis) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'reverse');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 4, () => `Error in reverse4D: x must be rank 4 but got rank ${$x.rank}.`);\n    return (0,_reverse__WEBPACK_IMPORTED_MODULE_2__.reverse)($x, axis);\n}\nconst reverse4d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ reverse4d_ });\n//# sourceMappingURL=reverse_4d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/reverse_4d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/rotate_util.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/rotate_util.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export getImageCenter [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getImageCenter\": () => /* binding */ getImageCenter\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Returns the image center in pixels.\nfunction getImageCenter(center, imageHeight, imageWidth) {\n    const centerX = imageWidth * (typeof center === 'number' ? center : center[0]);\n    const centerY = imageHeight * (typeof center === 'number' ? center : center[1]);\n    return [centerX, centerY];\n}\n//# sourceMappingURL=rotate_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/rotate_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/round.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/round.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export round [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"round\": () => /* binding */ round\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes round of input `tf.Tensor` element-wise: `round(x)`.\n * It implements banker's rounding.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.round().print();  // or tf.round(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction round_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'round');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Round, inputs);\n}\nconst round = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ round_ });\n//# sourceMappingURL=round.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/round.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/rsqrt.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/rsqrt.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export rsqrt [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rsqrt\": () => /* binding */ rsqrt\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes reciprocal of square root of the input `tf.Tensor` element-wise:\n * `y = 1 / sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.rsqrt().print();  // or tf.rsqrt(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction rsqrt_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'rsqrt');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Rsqrt, inputs);\n}\nconst rsqrt = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ rsqrt_ });\n//# sourceMappingURL=rsqrt.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/rsqrt.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export scalar [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"scalar\": () => /* binding */ scalar\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * Creates rank-0 `tf.Tensor` (scalar) with the provided value and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.scalar` as it makes the code more readable.\n *\n * ```js\n * tf.scalar(3.14).print();\n * ```\n *\n * @param value The value of the scalar.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction scalar(value, dtype) {\n    if ((((0,_util__WEBPACK_IMPORTED_MODULE_0__.isTypedArray)(value) && dtype !== 'string') || Array.isArray(value)) &&\n        dtype !== 'complex64') {\n        throw new Error('Error creating a new Scalar: value must be a primitive ' +\n            '(number|boolean|string)');\n    }\n    if (dtype === 'string' && (0,_util__WEBPACK_IMPORTED_MODULE_0__.isTypedArray)(value) &&\n        !(value instanceof Uint8Array)) {\n        throw new Error('When making a scalar from encoded string, ' +\n            'the value must be `Uint8Array`.');\n    }\n    const shape = [];\n    const inferredShape = [];\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_1__.makeTensor)(value, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=scalar.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export scatterND [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"scatterND\": () => /* binding */ scatterND\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _scatter_nd_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scatter_nd_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Creates a new tensor by applying sparse updates to individual\n * values or slices within a zero tensor of the given shape tensor according to\n * indices. This operator is the inverse of the `tf.gatherND` operator which\n * extracts values or slices from a given tensor.\n *\n * ```js\n * const indices = tf.tensor2d([4, 3, 1, 7], [4, 1], 'int32');\n * const updates = tf.tensor1d([9, 10, 11, 12]);\n * const shape = [8];\n * tf.scatterND(indices, updates, shape).print() //[0, 11, 0, 10, 9, 0, 0, 12]\n * ```\n *\n * @param indices The tensor contains the indices into the output tensor.\n * @param updates The tensor contains the value for the indices.\n * @param shape: The shape of the output tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction scatterND_(indices, updates, shape) {\n    const $indices = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(indices, 'indices', 'scatterND', 'int32');\n    const $updates = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(updates, 'updates', 'scatterND');\n    _scatter_nd_util__WEBPACK_IMPORTED_MODULE_2__.validateInput($updates, $indices, shape);\n    const inputs = { indices: $indices, updates: $updates };\n    const attrs = { shape };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.ScatterNd, inputs, attrs);\n}\nconst scatterND = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ scatterND_ });\n//# sourceMappingURL=scatter_nd.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export calculateShapes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export validateInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! export validateUpdateShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"validateUpdateShape\": () => /* binding */ validateUpdateShape,\n/* harmony export */   \"validateInput\": () => /* binding */ validateInput,\n/* harmony export */   \"calculateShapes\": () => /* binding */ calculateShapes\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n;\n/**\n * Check whether updates.shape = indices.shape[:batchDim] +\n * shape[sliceDim:]\n *\n * @param x The input tensor.\n */\nfunction validateUpdateShape(shape, indices, updates) {\n    const sliceDim = (indices.rank > 1) ? indices.shape[indices.rank - 1] : 1;\n    const batchDim = (indices.rank > 1) ? indices.rank - 1 : 1;\n    const shapeError = 'Must have updates.shape = indices.shape[:batchDim] + ' +\n        `shape[sliceDim:], got updates.shape: ${updates.shape}` +\n        `, indices.shape: ${indices.shape}, shape: ${shape}` +\n        `, sliceDim: ${sliceDim}, and batchDim: ${batchDim}.`;\n    if (updates.rank < batchDim) {\n        throw new Error(shapeError + ` update.rank < ${batchDim}. `);\n    }\n    if (shape.length < sliceDim + (updates.rank - batchDim)) {\n        throw new Error(shapeError +\n            ` Output shape length < ${sliceDim + (updates.rank - batchDim)}`);\n    }\n    if (updates.rank !== batchDim + shape.length - sliceDim) {\n        throw new Error(shapeError + ` update.rank != ${batchDim + shape.length - sliceDim}`);\n    }\n    for (let d = 0; d < batchDim; ++d) {\n        if (updates.shape[d] !== indices.shape[d]) {\n            throw new Error(shapeError +\n                ` updates.shape[${d}] (${updates.shape[d]}) != indices.shape[${d}] (${indices.shape[d]}).`);\n        }\n    }\n    for (let d = 0; d < updates.rank - batchDim; ++d) {\n        if (updates.shape[d + batchDim] !== shape[d + sliceDim]) {\n            throw new Error(shapeError +\n                ` updates.shape[${d + batchDim}] (${updates.shape[d + batchDim]}) != shape[${d + batchDim}] (${shape[d + batchDim]})`);\n        }\n    }\n}\n/**\n * Validate scatter nd inputs.\n *\n * @param update The tensor contains the update values.\n * @param indices The tensor contains the indices for the update values.\n * @param shape The shape of the output tensor.\n */\nfunction validateInput(updates, indices, shape) {\n    if (indices.rank < 1) {\n        throw new Error('tf.scatterND() expects the indices to be rank 1 or higher,' +\n            ` but the rank was ${indices.rank}.`);\n    }\n    if (updates.rank < 1) {\n        throw new Error('tf.scatterND() expects the updates to be rank 1 or higher,' +\n            ` but the rank was ${updates.rank}.`);\n    }\n    if (indices.dtype !== 'int32') {\n        throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${indices.dtype}`);\n    }\n    if (shape.length < 1) {\n        throw new Error(`Output rank must be greater or equal to 1, but got shape: ${shape}`);\n    }\n    if (shape.length === 0) {\n        if (indices.size === 0) {\n            throw new Error(`Indices specified for empty output. indices shape: ${indices.shape}`);\n        }\n        if (updates.size === 0) {\n            throw new Error(`Updates specified for empty output. updates shape: ${updates.shape}`);\n        }\n    }\n    validateUpdateShape(shape, indices, updates);\n}\n/**\n * Calculate the shape information for the output.\n *\n * @param update The tensor contains the update values.\n * @param indices The tensor contains the indices for the update values.\n * @param shape The shape of the output tensor.\n *\n * @returns ScatterShapeInfo\n */\nfunction calculateShapes(updates, indices, shape) {\n    // Calculate the number of dimensions in indices\n    const indicesRank = indices.shape.length;\n    const sliceRank = (indicesRank > 1) ? indices.shape[indicesRank - 1] : 1;\n    // Calculate the number of elements that make up each slice of our updated\n    // tensor. This allows us to work with flattened tensors and copy over whole\n    // slices at a time.\n    const totalNd = shape.length;\n    let sliceSize = 1;\n    for (let i = sliceRank; i < totalNd; ++i) {\n        sliceSize *= shape[i];\n    }\n    const safeSliceDim = (sliceRank < 1) ? 1 : sliceRank;\n    const numUpdates = (0,_util__WEBPACK_IMPORTED_MODULE_0__.sizeFromShape)(indices.shape) / safeSliceDim;\n    const strides = [...(0,_util__WEBPACK_IMPORTED_MODULE_0__.computeStrides)(shape.slice(0, sliceRank)), 1];\n    const outputSize = (0,_util__WEBPACK_IMPORTED_MODULE_0__.sizeFromShape)(shape);\n    return { sliceRank, numUpdates, sliceSize, strides, outputSize };\n}\n//# sourceMappingURL=scatter_nd_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/segment_util.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/segment_util.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export collectGatherOpShapeInfo [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computeOutShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export segOpComputeOptimalWindowSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"segOpComputeOptimalWindowSize\": () => /* binding */ segOpComputeOptimalWindowSize,\n/* harmony export */   \"computeOutShape\": () => /* binding */ computeOutShape,\n/* harmony export */   \"collectGatherOpShapeInfo\": () => /* binding */ collectGatherOpShapeInfo\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _reduce_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reduce_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nfunction segOpComputeOptimalWindowSize(inSize, numSegments) {\n    let done = false;\n    let res;\n    if (inSize <= _reduce_util__WEBPACK_IMPORTED_MODULE_0__.PARALLELIZE_THRESHOLD) {\n        res = inSize;\n        done = true;\n    }\n    else {\n        res = (0,_util__WEBPACK_IMPORTED_MODULE_1__.nearestDivisor)(inSize, Math.floor(Math.sqrt(inSize)));\n    }\n    while (!done) {\n        if (res > numSegments || res === inSize) {\n            done = true;\n        }\n        else {\n            res = (0,_util__WEBPACK_IMPORTED_MODULE_1__.nearestDivisor)(inSize, res + 1);\n        }\n    }\n    return res;\n}\nfunction computeOutShape(aShape, axis, numSegments) {\n    const outShape = [];\n    const rank = aShape.length;\n    for (let dim = 0; dim < rank; dim++) {\n        if (dim !== axis) {\n            outShape.push(aShape[dim]);\n        }\n        else {\n            outShape.push(numSegments);\n        }\n    }\n    return outShape;\n}\nfunction collectGatherOpShapeInfo(x, indices, axis, batchDims) {\n    const indicesRank = indices.shape.length;\n    const xRank = x.shape.length;\n    if (batchDims !== 0) {\n        if (batchDims < -indicesRank || batchDims > indicesRank) {\n            throw new Error(`Expect batchDims in the range of [-${indicesRank}, ${indicesRank}], but got ${batchDims}`);\n        }\n    }\n    if (batchDims < 0) {\n        batchDims += indicesRank;\n    }\n    if (batchDims > xRank) {\n        throw new Error(`batchDims (${batchDims}) must be less than rank(x) (\n    ${xRank}).`);\n    }\n    if (axis < batchDims) {\n        throw new Error(`batchDims (${batchDims}) must be less than or equal to axis (${axis}).`);\n    }\n    for (let i = 0; i < batchDims; ++i) {\n        if (x.shape[i] !== indices.shape[i]) {\n            throw new Error(`x.shape[${i}]: ${x.shape[i]} should be equal to indices.shape[${i}]: ${indices.shape[i]}.`);\n        }\n    }\n    const dimSize = x.shape[axis];\n    const outputShape = [];\n    let batchSize = 1;\n    let outerSize = 1;\n    let sliceSize = 1;\n    for (let i = 0; i < batchDims; ++i) {\n        outputShape.push(x.shape[i]);\n        batchSize *= x.shape[i];\n    }\n    for (let i = batchDims; i < axis; i++) {\n        outputShape.push(x.shape[i]);\n        outerSize *= x.shape[i];\n    }\n    for (let i = batchDims; i < indicesRank; i++) {\n        outputShape.push(indices.shape[i]);\n    }\n    for (let i = axis + 1; i < xRank; i++) {\n        outputShape.push(x.shape[i]);\n        sliceSize *= x.shape[i];\n    }\n    return { batchSize, sliceSize, outerSize, dimSize, outputShape };\n}\n//# sourceMappingURL=segment_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/segment_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/selu.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/selu.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export selu [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"selu\": () => /* binding */ selu\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes scaled exponential linear element-wise.\n *\n * `x < 0 ? scale * alpha * (exp(x) - 1) : x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.selu().print();  // or tf.selu(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction selu_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'selu');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Selu, inputs);\n}\nconst selu = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ selu_ });\n//# sourceMappingURL=selu.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/selu.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export SELU_SCALE [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SELU_SCALEALPHA [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SELU_SCALEALPHA\": () => /* binding */ SELU_SCALEALPHA,\n/* harmony export */   \"SELU_SCALE\": () => /* binding */ SELU_SCALE\n/* harmony export */ });\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nconst SELU_SCALEALPHA = 1.7580993408473768599402175208123;\nconst SELU_SCALE = 1.0507009873554804934193349852946;\n//# sourceMappingURL=selu_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/selu_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/separable_conv2d.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/separable_conv2d.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export separableConv2d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"separableConv2d\": () => /* binding */ separableConv2d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _conv2d__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js\");\n/* harmony import */ var _depthwise_conv2d__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./depthwise_conv2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n;\n\n\n\n\n\n/**\n * 2-D convolution with separable filters.\n *\n * Performs a depthwise convolution that acts separately on channels followed\n * by a pointwise convolution that mixes channels. Note that this is\n * separability between dimensions [1, 2] and 3, not spatial separability\n * between dimensions 1 and 2.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param depthwiseFilter The depthwise filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`. This is\n *     the filter used in the first step.\n * @param pointwiseFilter The pointwise filter tensor, rank 4, of shape\n *     `[1, 1, inChannels * channelMultiplier, outChannels]`. This is\n *     the filter used in the second step.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction separableConv2d_(x, depthwiseFilter, pointwiseFilter, strides, pad, dilation = [1, 1], dataFormat = 'NHWC') {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'separableConv2d');\n    const $depthwiseFilter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(depthwiseFilter, 'depthwiseFilter', 'separableConv2d');\n    const $pointwiseFilter = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(pointwiseFilter, 'pointwiseFilter', 'separableConv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    if (dataFormat === 'NCHW') {\n        throw new Error('separableConv2d currently does not support dataFormat NCHW; only ' +\n            'NHWC is supported');\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(x4D.rank === 4, () => `Error in separableConv2d: input must be rank 4, but got ` +\n        `rank ${x4D.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($depthwiseFilter.rank === 4, () => `Error in separableConv2d: depthwise filter must be rank 4, but ` +\n        `got rank ${$depthwiseFilter.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($pointwiseFilter.rank === 4, () => `Error in separableConv2d: pointwise filter must be rank 4, but ` +\n        `got rank ${$depthwiseFilter.rank}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($pointwiseFilter.shape[0] === 1, () => `Error in separableConv2d: the first dimension of pointwise filter ` +\n        ` must be 1, but got ${$pointwiseFilter.shape[0]}.`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($pointwiseFilter.shape[1] === 1, () => `Error in separableConv2d: the second dimension of pointwise ` +\n        `filter must be 1, but got ${$pointwiseFilter.shape[1]}.`);\n    const inChannels = $depthwiseFilter.shape[2];\n    const channelMultiplier = $depthwiseFilter.shape[3];\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($pointwiseFilter.shape[2] === inChannels * channelMultiplier, () => `Error in separableConv2d: the third dimension of pointwise filter ` +\n        `must be ${inChannels * channelMultiplier}, ` +\n        `but got ${$pointwiseFilter.shape[2]}.`);\n    const depthwise = (0,_depthwise_conv2d__WEBPACK_IMPORTED_MODULE_3__.depthwiseConv2d)(x4D, $depthwiseFilter, strides, pad, dataFormat, dilation);\n    const pointwiseStride = 1;\n    const res = (0,_conv2d__WEBPACK_IMPORTED_MODULE_4__.conv2d)(depthwise, $pointwiseFilter, pointwiseStride, 'valid', dataFormat);\n    if (reshapedTo4D) {\n        return (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nconst separableConv2d = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ separableConv2d_ });\n//# sourceMappingURL=separable_conv2d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/separable_conv2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export setdiff1dAsync [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setdiff1dAsync\": () => /* binding */ setdiff1dAsync\n/* harmony export */ });\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Computes the difference between two lists of numbers.\n *\n * Given a Tensor `x` and a Tensor `y`, this operation returns a Tensor `out`\n * that represents all values that are in `x` but not in `y`. The returned\n * Tensor `out` is sorted in the same order that the numbers appear in `x`\n * (duplicates are preserved). This operation also returns a Tensor indices that\n * represents the position of each out element in `x`. In other words:\n *\n * `out[i] = x[idx[i]] for i in [0, 1, ..., out.length - 1]`\n *\n * ```js\n * const x = [1, 2, 3, 4, 5, 6];\n * const y = [1, 3, 5];\n *\n * const [out, indices] = await tf.setdiff1dAsync(x, y);\n * out.print(); // [2, 4, 6]\n * indices.print(); // [1, 3, 5]\n * ```\n *\n * @param x 1-D Tensor. Values to keep.\n * @param y 1-D Tensor. Must have the same type as x. Values to exclude in the\n *     output.\n * @returns Promise of Tensor tuple [out, indices].\n *  out: Tensor with the same type as x.\n *  indices: A Tensor of type int32.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nasync function setdiff1dAsync_(x, y) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'setdiff1d');\n    const $y = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(y, 'y', 'setdiff1d');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.dtype === $y.dtype, () => `x and y should have the same dtype, but got x (${$x.dtype}) and y (${$y.dtype}).`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank === 1, () => `x should be 1D tensor, but got x (${$x.shape}).`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($y.rank === 1, () => `y should be 1D tensor, but got y (${$y.shape}).`);\n    const xVals = await $x.data();\n    const yVals = await $y.data();\n    const ySet = new Set(yVals);\n    let outputSize = 0;\n    for (let i = 0; i < xVals.length; i++) {\n        if (!ySet.has(xVals[i])) {\n            outputSize++;\n        }\n    }\n    const buffer = new _tensor__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer([outputSize], $x.dtype);\n    const indices = new _tensor__WEBPACK_IMPORTED_MODULE_0__.TensorBuffer([outputSize], 'int32');\n    for (let i = 0, p = 0; i < xVals.length; i++) {\n        if (!ySet.has(xVals[i])) {\n            buffer.values[p] = xVals[i];\n            indices.values[p] = i;\n            p++;\n        }\n    }\n    return [buffer.toTensor(), indices.toTensor()];\n}\nconst setdiff1dAsync = setdiff1dAsync_;\n//# sourceMappingURL=setdiff1d_async.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/setdiff1d_async.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export sigmoid [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sigmoid\": () => /* binding */ sigmoid\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes sigmoid element-wise, `1 / (1 + exp(-x))`\n *\n * ```js\n * const x = tf.tensor1d([0, -1, 2, -3]);\n *\n * x.sigmoid().print();  // or tf.sigmoid(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sigmoid_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'sigmoid');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Sigmoid, inputs);\n}\nconst sigmoid = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ sigmoid_ });\n//# sourceMappingURL=sigmoid.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sign.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sign.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export sign [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sign\": () => /* binding */ sign\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Returns an element-wise indication of the sign of a number.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3, NaN, 0]);\n *\n * x.sign().print();  // or tf.sign(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sign_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'sign');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Sign, inputs);\n}\nconst sign = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ sign_ });\n//# sourceMappingURL=sign.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/sign.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/signal/frame.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/signal/frame.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export frame [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"frame\": () => /* binding */ frame\n/* harmony export */ });\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _fill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../fill */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _tensor2d__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tensor2d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Expands input into frames of frameLength.\n * Slides a window size with frameStep.\n *\n * ```js\n * tf.signal.frame([1, 2, 3], 2, 1).print();\n * ```\n * @param signal The input tensor to be expanded\n * @param frameLength Length of each frame\n * @param frameStep The frame hop size in samples.\n * @param padEnd Whether to pad the end of signal with padValue.\n * @param padValue An number to use where the input signal does\n *     not exist when padEnd is True.\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction frame_(signal, frameLength, frameStep, padEnd = false, padValue = 0) {\n    let start = 0;\n    const output = [];\n    while (start + frameLength <= signal.size) {\n        output.push((0,_slice__WEBPACK_IMPORTED_MODULE_0__.slice)(signal, start, frameLength));\n        start += frameStep;\n    }\n    if (padEnd) {\n        while (start < signal.size) {\n            const padLen = (start + frameLength) - signal.size;\n            const pad = (0,_concat__WEBPACK_IMPORTED_MODULE_1__.concat)([\n                (0,_slice__WEBPACK_IMPORTED_MODULE_0__.slice)(signal, start, frameLength - padLen), (0,_fill__WEBPACK_IMPORTED_MODULE_2__.fill)([padLen], padValue)\n            ]);\n            output.push(pad);\n            start += frameStep;\n        }\n    }\n    if (output.length === 0) {\n        return (0,_tensor2d__WEBPACK_IMPORTED_MODULE_3__.tensor2d)([], [0, frameLength]);\n    }\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_4__.reshape)((0,_concat__WEBPACK_IMPORTED_MODULE_1__.concat)(output), [output.length, frameLength]);\n}\nconst frame = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ frame_ });\n//# sourceMappingURL=frame.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/signal/frame.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hamming_window.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hamming_window.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export hammingWindow [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hammingWindow\": () => /* binding */ hammingWindow\n/* harmony export */ });\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _signal_ops_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../signal_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * Generate a hamming window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hammingWindow(10).print();\n * ```\n * @param The length of window\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction hammingWindow_(windowLength) {\n    return (0,_signal_ops_util__WEBPACK_IMPORTED_MODULE_0__.cosineWindow)(windowLength, 0.54, 0.46);\n}\nconst hammingWindow = (0,_operation__WEBPACK_IMPORTED_MODULE_1__.op)({ hammingWindow_ });\n//# sourceMappingURL=hamming_window.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hamming_window.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hann_window.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hann_window.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export hannWindow [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hannWindow\": () => /* binding */ hannWindow\n/* harmony export */ });\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _signal_ops_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../signal_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * Generate a Hann window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hannWindow(10).print();\n * ```\n * @param The length of window\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction hannWindow_(windowLength) {\n    return (0,_signal_ops_util__WEBPACK_IMPORTED_MODULE_0__.cosineWindow)(windowLength, 0.5, 0.5);\n}\nconst hannWindow = (0,_operation__WEBPACK_IMPORTED_MODULE_1__.op)({ hannWindow_ });\n//# sourceMappingURL=hann_window.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hann_window.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/signal/stft.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/signal/stft.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export stft [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stft\": () => /* binding */ stft\n/* harmony export */ });\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _signal_ops_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../signal_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _spectral_rfft__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../spectral/rfft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js\");\n/* harmony import */ var _frame__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./frame */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal/frame.js\");\n/* harmony import */ var _hann_window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hann_window */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/signal/hann_window.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n/**\n * Computes the Short-time Fourier Transform of signals\n * See: https://en.wikipedia.org/wiki/Short-time_Fourier_transform\n *\n * ```js\n * const input = tf.tensor1d([1, 1, 1, 1, 1])\n * tf.signal.stft(input, 3, 1).print();\n * ```\n * @param signal 1-dimensional real value tensor.\n * @param frameLength The window length of samples.\n * @param frameStep The number of samples to step.\n * @param fftLength The size of the FFT to apply.\n * @param windowFn A callable that takes a window length and returns 1-d tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction stft_(signal, frameLength, frameStep, fftLength, windowFn = _hann_window__WEBPACK_IMPORTED_MODULE_0__.hannWindow) {\n    if (fftLength == null) {\n        fftLength = (0,_signal_ops_util__WEBPACK_IMPORTED_MODULE_1__.enclosingPowerOfTwo)(frameLength);\n    }\n    const framedSignal = (0,_frame__WEBPACK_IMPORTED_MODULE_2__.frame)(signal, frameLength, frameStep);\n    const windowedSignal = (0,_mul__WEBPACK_IMPORTED_MODULE_3__.mul)(framedSignal, windowFn(frameLength));\n    const output = [];\n    for (let i = 0; i < framedSignal.shape[0]; i++) {\n        output.push((0,_spectral_rfft__WEBPACK_IMPORTED_MODULE_4__.rfft)((0,_slice__WEBPACK_IMPORTED_MODULE_5__.slice)(windowedSignal, [i, 0], [1, frameLength]), fftLength));\n    }\n    return (0,_concat__WEBPACK_IMPORTED_MODULE_6__.concat)(output);\n}\nconst stft = (0,_operation__WEBPACK_IMPORTED_MODULE_7__.op)({ stft_ });\n//# sourceMappingURL=stft.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/signal/stft.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export cosineWindow [provided] [no usage info] [missing usage info prevents renaming] */
/*! export enclosingPowerOfTwo [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"enclosingPowerOfTwo\": () => /* binding */ enclosingPowerOfTwo,\n/* harmony export */   \"cosineWindow\": () => /* binding */ cosineWindow\n/* harmony export */ });\n/* harmony import */ var _tensor1d__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tensor1d */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction enclosingPowerOfTwo(value) {\n    // Return 2**N for integer N such that 2**N >= value.\n    return Math.floor(Math.pow(2, Math.ceil(Math.log(value) / Math.log(2.0))));\n}\nfunction cosineWindow(windowLength, a, b) {\n    const even = 1 - windowLength % 2;\n    const newValues = new Float32Array(windowLength);\n    for (let i = 0; i < windowLength; ++i) {\n        const cosArg = (2.0 * Math.PI * i) / (windowLength + even - 1);\n        newValues[i] = a - b * Math.cos(cosArg);\n    }\n    return (0,_tensor1d__WEBPACK_IMPORTED_MODULE_0__.tensor1d)(newValues, 'float32');\n}\n//# sourceMappingURL=signal_ops_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/signal_ops_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sin.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sin.js ***!
  \************************************************************/
/*! namespace exports */
/*! export sin [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sin\": () => /* binding */ sin\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes sin of the input Tensor element-wise: `sin(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.sin().print();  // or tf.sin(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sin_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'sin');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Sin, inputs);\n}\nconst sin = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ sin_ });\n//# sourceMappingURL=sin.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/sin.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sinh.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sinh.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export sinh [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sinh\": () => /* binding */ sinh\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes hyperbolic sin of the input `tf.Tensor` element-wise: `sinh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.sinh().print();  // or tf.sinh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sinh_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'sinh');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Sinh, inputs);\n}\nconst sinh = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ sinh_ });\n//# sourceMappingURL=sinh.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/sinh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export slice [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"slice\": () => /* binding */ slice\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Extracts a slice from a `tf.Tensor` starting at coordinates `begin`\n * and is of size `size`.\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `x` is of the given rank:\n *   - `tf.slice1d`\n *   - `tf.slice2d`\n *   - `tf.slice3d`\n *   - `tf.slice4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.slice([1], [2]).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * x.slice([1, 0], [1, 2]).print();\n * ```\n * @param x The input `tf.Tensor` to slice from.\n * @param begin The coordinates to start the slice from. The length can be\n *     less than the rank of x - the rest of the axes will have implicit 0 as\n *     start. Can also be a single number, in which case it specifies the\n *     first axis.\n * @param size The size of the slice. The length can be less than the rank of\n *     x - the rest of the axes will have implicit -1. A value of -1 requests\n *     the rest of the dimensions in the axis. Can also be a single number,\n *     in which case it specifies the size of the first axis.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction slice_(x, begin, size) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'slice', 'string_or_numeric');\n    if ($x.rank === 0) {\n        throw new Error('Slicing scalar is not possible');\n    }\n    const inputs = { x: $x };\n    const attrs = { begin, size };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Slice, inputs, attrs);\n}\nconst slice = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ slice_ });\n//# sourceMappingURL=slice.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/slice1d.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/slice1d.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export slice1d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"slice1d\": () => /* binding */ slice1d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Extracts a 1D slice from 1D array starting at coordinates `begin` and is\n * of length `size`. See `slice` for details.\n */\nfunction slice1d_(x, begin, size) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'slice1d');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 1, () => `slice1d expects a rank-1 tensor, but got a rank-${$x.rank} tensor`);\n    return (0,_slice__WEBPACK_IMPORTED_MODULE_2__.slice)($x, [begin], [size]);\n}\nconst slice1d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ slice1d_ });\n//# sourceMappingURL=slice1d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/slice1d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/slice2d.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/slice2d.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export slice2d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"slice2d\": () => /* binding */ slice2d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Extracts a 2D slice from a 2D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice2d_(x, begin, size) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'slice2d');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 2, () => `slice2d expects a rank-2 tensor, but got a rank-${$x.rank} tensor`);\n    return (0,_slice__WEBPACK_IMPORTED_MODULE_2__.slice)($x, begin, size);\n}\nconst slice2d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ slice2d_ });\n//# sourceMappingURL=slice2d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/slice2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/slice3d.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/slice3d.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export slice3d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"slice3d\": () => /* binding */ slice3d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Extracts a 3D slice from a 3D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice3d_(x, begin, size) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'slice3d');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 3, () => `slice3d expects a rank-3 tensor, but got a rank-${$x.rank} tensor`);\n    return (0,_slice__WEBPACK_IMPORTED_MODULE_2__.slice)($x, begin, size);\n}\nconst slice3d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ slice3d_ });\n//# sourceMappingURL=slice3d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/slice3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/slice4d.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/slice4d.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export slice4d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"slice4d\": () => /* binding */ slice4d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Extracts a 4D slice from a 4D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice4d_(x, begin, size) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'slice4d');\n    _util__WEBPACK_IMPORTED_MODULE_1__.assert($x.rank === 4, () => `slice4d expects a rank-4 tensor, but got a rank-${$x.rank} tensor`);\n    return (0,_slice__WEBPACK_IMPORTED_MODULE_2__.slice)($x, begin, size);\n}\nconst slice4d = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ slice4d_ });\n//# sourceMappingURL=slice4d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/slice4d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export assertParamsValid [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computeFlatOffset [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computeOutShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getNormalizedAxes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isSliceContinous [provided] [no usage info] [missing usage info prevents renaming] */
/*! export maskToAxes [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseSliceParams [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sliceInfo [provided] [no usage info] [missing usage info prevents renaming] */
/*! export startForAxis [provided] [no usage info] [missing usage info prevents renaming] */
/*! export startIndicesWithElidedDims [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stopForAxis [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stopIndicesWithElidedDims [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stridesForAxis [provided] [no usage info] [missing usage info prevents renaming] */
/*! export stridesWithElidedDims [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"assertParamsValid\": () => /* binding */ assertParamsValid,\n/* harmony export */   \"maskToAxes\": () => /* binding */ maskToAxes,\n/* harmony export */   \"computeOutShape\": () => /* binding */ computeOutShape,\n/* harmony export */   \"stridesWithElidedDims\": () => /* binding */ stridesWithElidedDims,\n/* harmony export */   \"getNormalizedAxes\": () => /* binding */ getNormalizedAxes,\n/* harmony export */   \"startIndicesWithElidedDims\": () => /* binding */ startIndicesWithElidedDims,\n/* harmony export */   \"stopIndicesWithElidedDims\": () => /* binding */ stopIndicesWithElidedDims,\n/* harmony export */   \"stridesForAxis\": () => /* binding */ stridesForAxis,\n/* harmony export */   \"startForAxis\": () => /* binding */ startForAxis,\n/* harmony export */   \"stopForAxis\": () => /* binding */ stopForAxis,\n/* harmony export */   \"isSliceContinous\": () => /* binding */ isSliceContinous,\n/* harmony export */   \"computeFlatOffset\": () => /* binding */ computeFlatOffset,\n/* harmony export */   \"parseSliceParams\": () => /* binding */ parseSliceParams,\n/* harmony export */   \"sliceInfo\": () => /* binding */ sliceInfo\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\nfunction assertParamsValid(input, begin, size) {\n    const inputRank = input.shape.length;\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(inputRank === begin.length, () => `Error in slice${inputRank}D: Length of begin ${begin} must ` +\n        `match the rank of the array (${inputRank}).`);\n    _util__WEBPACK_IMPORTED_MODULE_0__.assert(inputRank === size.length, () => `Error in slice${inputRank}D: Length of size ${size} must ` +\n        `match the rank of the array (${inputRank}).`);\n    for (let i = 0; i < inputRank; ++i) {\n        _util__WEBPACK_IMPORTED_MODULE_0__.assert(begin[i] + size[i] <= input.shape[i], () => `Error in slice${inputRank}D: begin[${i}] + size[${i}] ` +\n            `(${begin[i] + size[i]}) would overflow input.shape[${i}] (${input.shape[i]})`);\n    }\n}\n/** Converts a binary mask to an array of axes. Used in stridedSlice(). */\nfunction maskToAxes(mask) {\n    const axes = [];\n    let axis = 0;\n    while (mask > 0) {\n        if (mask & 1) {\n            axes.push(axis);\n        }\n        mask /= 2;\n        axis++;\n    }\n    return axes;\n}\n/** Computes the output shape given the strided slice params. */\nfunction computeOutShape(begin, end, strides) {\n    const size = [];\n    for (let axis = 0; axis < begin.length; axis++) {\n        size[axis] = Math.ceil((end[axis] - begin[axis]) / strides[axis]);\n    }\n    return size;\n}\n// Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current stride value. Otherwise, insert.\nfunction stridesWithElidedDims(strides, ellipsisInsertionIndex, numElidedAxes, inputShape) {\n    const newStrides = [...strides];\n    for (let i = newStrides.length; i < inputShape.length; i++) {\n        newStrides.push(1);\n    }\n    for (let i = 0; i < numElidedAxes; i++) {\n        if (i === 0) {\n            newStrides[ellipsisInsertionIndex] = 1;\n        }\n        else {\n            newStrides.splice(ellipsisInsertionIndex, 0 /* num elements to delete */, 1 /* element to add */);\n            newStrides.pop();\n        }\n    }\n    return newStrides;\n}\nfunction unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, normalizedAxis) {\n    if (normalizedAxis <= ellipsisInsertionIndex) {\n        return normalizedAxis;\n    }\n    return normalizedAxis - (numElidedAxes - 1);\n}\nfunction getElidedAxes(numElidedAxes, ellipsisInsertionIndex) {\n    const elidedAxes = [];\n    for (let i = 0; i < numElidedAxes; i++) {\n        elidedAxes.push(ellipsisInsertionIndex + i);\n    }\n    return elidedAxes;\n}\n// Normalize the start, end and strides.\nfunction getNormalizedAxes(inputShape, ellipsisAxes, numInterpolatedAxes, begin, end, strides, beginMask, endMask, ellipsisMask) {\n    const inputRank = inputShape.length;\n    let normalizedBegin = new Array(inputRank), normalizedEnd = new Array(inputRank), normalizedStrides = new Array(inputRank);\n    if (ellipsisAxes.length && numInterpolatedAxes > 0) {\n        const fullIndex = ellipsisAxes[0];\n        // The ellipsis applies to the masked index as well as any dimensions\n        // that are interpolated.\n        const numElidedAxes = numInterpolatedAxes + 1;\n        normalizedBegin = startIndicesWithElidedDims(beginMask, fullIndex, numElidedAxes, begin, inputShape);\n        normalizedEnd = stopIndicesWithElidedDims(endMask, fullIndex, numElidedAxes, end, inputShape);\n        normalizedStrides =\n            stridesWithElidedDims(strides, fullIndex, numElidedAxes, inputShape);\n    }\n    else {\n        for (let axis = 0; axis < inputRank; axis++) {\n            normalizedBegin[axis] = startForAxis(beginMask, begin, strides, inputShape, axis, ellipsisMask);\n            normalizedEnd[axis] =\n                stopForAxis(endMask, end, strides, inputShape, axis, ellipsisMask);\n            normalizedStrides[axis] = stridesForAxis(strides, axis, ellipsisMask);\n        }\n    }\n    return {\n        begin: normalizedBegin,\n        end: normalizedEnd,\n        strides: normalizedStrides\n    };\n}\n// Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current start value. Otherwise, insert.\nfunction startIndicesWithElidedDims(beginMask, ellipsisInsertionIndex, numElidedAxes, originalBegin, inputShape) {\n    const newIndices = [...inputShape];\n    const elidedAxes = getElidedAxes(numElidedAxes, ellipsisInsertionIndex);\n    for (let axis = 0; axis < newIndices.length; axis++) {\n        if (elidedAxes.indexOf(axis) > -1) {\n            newIndices[axis] = 0;\n        }\n        else {\n            const originalAxis = unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, axis);\n            let originalValue = originalBegin[originalAxis];\n            if (beginMask & 1 << originalAxis) {\n                originalValue = 0;\n            }\n            newIndices[axis] = originalValue;\n        }\n    }\n    return newIndices;\n}\n// Creates full selection at the elided dimensions. If the dimension matches\n// the ellipsis mask, override the current stop value. Otherwise, insert.\nfunction stopIndicesWithElidedDims(endMask, ellipsisInsertionIndex, numElidedAxes, originalEnd, inputShape) {\n    const newIndices = [...inputShape];\n    const elidedAxes = getElidedAxes(numElidedAxes, ellipsisInsertionIndex);\n    for (let axis = 0; axis < newIndices.length; axis++) {\n        if (elidedAxes.indexOf(axis) > -1) {\n            newIndices[axis] = Number.MAX_SAFE_INTEGER;\n        }\n        else {\n            const originalAxis = unnormalizeAxis(ellipsisInsertionIndex, numElidedAxes, axis);\n            let originalValue = originalEnd[originalAxis];\n            if (endMask & 1 << originalAxis) {\n                originalValue = Number.MAX_SAFE_INTEGER;\n            }\n            newIndices[axis] = originalValue;\n        }\n    }\n    for (let i = 0; i < newIndices.length; i++) {\n        // Handle negative indices\n        const axisSize = inputShape[i];\n        if (newIndices[i] < 0) {\n            newIndices[i] += axisSize;\n        }\n        newIndices[i] = _util__WEBPACK_IMPORTED_MODULE_0__.clamp(0, newIndices[i], inputShape[i]);\n    }\n    return newIndices;\n}\nfunction stridesForAxis(strides, axis, ellipsisMask) {\n    let stride = strides[axis];\n    if (ellipsisMask & (1 << axis) || stride == null) {\n        stride = 1;\n    }\n    return stride;\n}\nfunction startForAxis(beginMask, startIndices, strides, inputShape, axis, ellipsisMask) {\n    // Begin with the specified index\n    let start = startIndices[axis];\n    const stride = strides[axis] || 1;\n    // Check the axis bit from right of masked axes, or the begin index is not set\n    // for the axis.\n    if (beginMask & 1 << axis || ellipsisMask & 1 << axis || start == null) {\n        if (stride > 0) {\n            // Forward iteration - use the first element. These values will get\n            // clamped below (Note: We could have set them to 0 and axis_size-1, but\n            // use lowest() and max() to maintain symmetry with StopForAxis())\n            start = Number.MIN_SAFE_INTEGER;\n        }\n        else {\n            // Backward iteration - use the last element.\n            start = Number.MAX_SAFE_INTEGER;\n        }\n    }\n    // Handle negative indices\n    const axisSize = inputShape[axis];\n    if (start < 0) {\n        start += axisSize;\n    }\n    // Clamping\n    start = _util__WEBPACK_IMPORTED_MODULE_0__.clamp(0, start, axisSize - 1);\n    return start;\n}\nfunction stopForAxis(endMask, stopIndices, strides, inputShape, axis, ellipsisMask) {\n    // Begin with the specified index\n    let stop = stopIndices[axis];\n    const stride = strides[axis] || 1;\n    // Check the axis bit from right of masked axes, or if the stop index is not\n    // set for this axis.\n    if (endMask & (1 << axis) || ellipsisMask & (1 << axis) || stop == null) {\n        if (stride > 0) {\n            // Forward iteration - use the last element. These values will get\n            // clamped below\n            stop = Number.MAX_SAFE_INTEGER;\n        }\n        else {\n            // Backward iteration - use the first element.\n            stop = Number.MIN_SAFE_INTEGER;\n        }\n    }\n    // Handle negative indices\n    const axisSize = inputShape[axis];\n    if (stop < 0) {\n        stop += axisSize;\n    }\n    // Clamping\n    // Because the end index points one past the last element, we need slightly\n    // different clamping ranges depending on the direction.\n    if (stride > 0) {\n        // Forward iteration\n        stop = _util__WEBPACK_IMPORTED_MODULE_0__.clamp(0, stop, axisSize);\n    }\n    else {\n        // Backward iteration\n        stop = _util__WEBPACK_IMPORTED_MODULE_0__.clamp(-1, stop, axisSize - 1);\n    }\n    return stop;\n}\n/**\n * Returns true if the slice occupies a continous set of elements in the\n * 'flat' space.\n */\nfunction isSliceContinous(shape, begin, size) {\n    // Index of the first axis that has size > 1.\n    let firstNonOneAxis = size.length;\n    for (let i = 0; i < size.length; i++) {\n        if (size[i] > 1) {\n            firstNonOneAxis = i;\n            break;\n        }\n    }\n    for (let i = firstNonOneAxis + 1; i < size.length; i++) {\n        if (begin[i] > 0 || size[i] !== shape[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction computeFlatOffset(begin, strides) {\n    let flatOffset = begin.length > 0 ? begin[begin.length - 1] : 1;\n    for (let i = 0; i < begin.length - 1; i++) {\n        flatOffset += begin[i] * strides[i];\n    }\n    return flatOffset;\n}\nfunction parseSliceParams(x, begin, size) {\n    // The following logic allows for more ergonomic calls.\n    let begin_;\n    const xRank = x.shape.length;\n    if (typeof begin === 'number') {\n        begin_ = [begin, ...new Array(xRank - 1).fill(0)];\n    }\n    else if (begin.length < xRank) {\n        begin_ = begin.concat(new Array(xRank - begin.length).fill(0));\n    }\n    else {\n        begin_ = begin.slice();\n    }\n    begin_.forEach(d => {\n        _util__WEBPACK_IMPORTED_MODULE_0__.assert(d !== -1, () => 'slice() does not support negative begin indexing.');\n    });\n    let size_;\n    if (size == null) {\n        size_ = new Array(xRank).fill(-1);\n    }\n    else if (typeof size === 'number') {\n        size_ = [size, ...new Array(xRank - 1).fill(-1)];\n    }\n    else if (size.length < xRank) {\n        size_ = size.concat(new Array(xRank - size.length).fill(-1));\n    }\n    else {\n        size_ = size;\n    }\n    size_ = size_.map((d, i) => {\n        if (d >= 0) {\n            return d;\n        }\n        else {\n            _util__WEBPACK_IMPORTED_MODULE_0__.assert(d === -1, () => `Negative size values should be exactly -1 but got ` +\n                `${d} for the slice() size at index ${i}.`);\n            return x.shape[i] - begin_[i];\n        }\n    });\n    return [begin_, size_];\n}\nfunction sliceInfo(xShape, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask) {\n    // make a copy because it may be modified further down.\n    let $begin = begin.slice();\n    let $end = end.slice();\n    let $strides = strides;\n    if (strides == null) {\n        $strides = new Array($begin.length);\n    }\n    const ellipsisAxes = maskToAxes(ellipsisMask);\n    if (ellipsisAxes.length > 1) {\n        throw new Error('Multiple ellipses in slice is not allowed.');\n    }\n    if (ellipsisMask !== 0 && newAxisMask !== 0) {\n        throw new Error('Using both ellipsisMask and newAxisMask is not yet supported.');\n    }\n    if (ellipsisMask !== 0 && shrinkAxisMask !== 0) {\n        throw new Error('Using both ellipsisMask and shrinkAxisMask is not yet supported.');\n    }\n    const numInterpolatedAxes = xShape.length - $begin.length;\n    // Expand the dims of x based on the newAxisMask.\n    const expandAxes = maskToAxes(newAxisMask);\n    const newShape = xShape.slice();\n    expandAxes.forEach(axis => {\n        $begin[axis] = 0;\n        $end[axis] = 1;\n        newShape.splice(axis, 0, 1);\n    });\n    const { begin: normalizedBegin, end: normalizedEnd, strides: normalizedStrides } = getNormalizedAxes(newShape, ellipsisAxes, numInterpolatedAxes, $begin, $end, $strides, beginMask, endMask, ellipsisMask);\n    $begin = normalizedBegin;\n    $end = normalizedEnd;\n    $strides = normalizedStrides;\n    const shrinkAxes = maskToAxes(shrinkAxisMask);\n    // Adjust the ends based on the shrink mask.\n    shrinkAxes.forEach(axis => {\n        $end[axis] = $begin[axis] + 1;\n        $strides[axis] = 1;\n    });\n    // Figure out the output shape.\n    const size = computeOutShape($begin, $end, $strides);\n    // Remove the axes based on shrinkMask.\n    const outShape = size.filter((_, axis) => shrinkAxes.indexOf(axis) === -1);\n    const nonStrided = $strides.every(v => v === 1);\n    return { nonStrided, $begin, $end, $strides, size, newShape, outShape };\n}\n//# sourceMappingURL=slice_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/slice_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export softmax [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"softmax\": () => /* binding */ softmax\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes the softmax normalized vector given the logits.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction softmax_(logits, dim = -1) {\n    const $logits = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(logits, 'logits', 'softmax', 'float32');\n    if (dim === -1) {\n        dim = $logits.rank - 1;\n    }\n    if (dim !== $logits.rank - 1) {\n        throw Error('Softmax along a non-last dimension is not yet supported. ' +\n            `Logits was rank ${$logits.rank} and dim was ${dim}`);\n    }\n    const inputs = { logits: $logits };\n    const attrs = { dim };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Softmax, inputs, attrs);\n}\nconst softmax = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ softmax_ });\n//# sourceMappingURL=softmax.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export softplus [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"softplus\": () => /* binding */ softplus\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes softplus of the input `tf.Tensor` element-wise: `log(exp(x) + 1)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.softplus().print();  // or tf.softplus(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction softplus_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'softplus');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Softplus, inputs);\n}\nconst softplus = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ softplus_ });\n//# sourceMappingURL=softplus.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/softplus.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js ***!
  \**************************************************************************/
/*! namespace exports */
/*! export spaceToBatchND [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"spaceToBatchND\": () => /* binding */ spaceToBatchND\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * This operation divides \"spatial\" dimensions `[1, ..., M]` of the input into\n * a grid of blocks of shape `blockShape`, and interleaves these blocks with\n * the \"batch\" dimension (0) such that in the output, the spatial\n * dimensions `[1, ..., M]` correspond to the position within the grid,\n * and the batch dimension combines both the position within a spatial block\n * and the original batch position. Prior to division into blocks,\n * the spatial dimensions of the input are optionally zero padded\n * according to `paddings`. See below for a precise description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]);\n * const blockShape = [2, 2];\n * const paddings = [[0, 0], [0, 0]];\n *\n * x.spaceToBatchND(blockShape, paddings).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param paddings A 2-D array. Must have shape `[M, 2]`, all values must be >=\n *     0. `paddings[i] = [padStart, padEnd]` specifies the amount to zero-pad\n * from input dimension `i + 1`, which corresponds to spatial dimension `i`. It\n * is required that\n * `(inputShape[i + 1] + padStart + padEnd) % blockShape[i] === 0`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Zero-pad the start and end of dimensions `[1, ..., M]` of the input\n * according to `paddings` to produce `padded` of shape paddedShape.\n *\n * 2. Reshape `padded` to `reshapedPadded` of shape:\n * `[batch] + [paddedShape[1] / blockShape[0], blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1], blockShape[M-1]] + remainingShape`\n *\n * 3. Permute dimensions of `reshapedPadded` to produce `permutedReshapedPadded`\n * of shape: `blockShape + [batch] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n *\n * 4. Reshape `permutedReshapedPadded` to flatten `blockShape` into the\n * batch dimension, producing an output tensor of shape:\n * `[batch * prod(blockShape)] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction spaceToBatchND_(x, blockShape, paddings) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'spaceToBatchND');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank >= 1 + blockShape.length, () => `input rank ${$x.rank} should be > than [blockShape] ${blockShape.length}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(paddings.length === blockShape.length, () => `paddings.shape[0] ${paddings.length} must be equal to [blockShape] ${blockShape.length}`);\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.shape.reduce((a, b, i) => {\n        if (i > 0 && i <= blockShape.length) {\n            return a &&\n                ((b + paddings[i - 1][0] + paddings[i - 1][1]) %\n                    blockShape[i - 1] ===\n                    0);\n        }\n        return a;\n    }, true), () => `input spatial dimensions ${$x.shape.slice(1)} with paddings ${paddings.toString()} must be divisible by blockShapes ${blockShape.toString()}`);\n    const inputs = { x: $x };\n    const attrs = { blockShape, paddings };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.SpaceToBatchND, inputs, attrs);\n}\nconst spaceToBatchND = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ spaceToBatchND_ });\n//# sourceMappingURL=space_to_batch_nd.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/space_to_batch_nd.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export sparseToDense [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sparseToDense\": () => /* binding */ sparseToDense\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _ops_sparse_to_dense_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ops/sparse_to_dense_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Converts a sparse representation into a dense tensor.\n *\n * Builds an array dense with shape outputShape such that:\n *\n * // If sparseIndices is scalar\n * dense[i] = (i == sparseIndices ? sparseValues : defaultValue)\n *\n * // If sparseIndices is a vector, then for each i\n * dense[sparseIndices[i]] = sparseValues[i]\n *\n * // If sparseIndices is an n by d matrix, then for each i in [0, n)\n * dense[sparseIndices[i][0], ..., sparseIndices[i][d-1]] = sparseValues[i]\n * All other values in dense are set to defaultValue. If sparseValues is a\n * scalar, all sparse indices are set to this single value.\n *\n * If indices are repeated the final value is summed over all values for those\n * indices.\n *\n * ```js\n * const indices = tf.tensor1d([4, 5, 6, 1, 2, 3], 'int32');\n * const values = tf.tensor1d([10, 11, 12, 13, 14, 15], 'float32');\n * const shape = [8];\n * tf.sparseToDense(indices, values, shape).print();\n * ```\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape Shape of the dense output tensor. the type is inferred.\n * @param defaultValue Scalar. Value to set for indices not specified in\n * sparseIndices. Defaults to zero.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction sparseToDense_(sparseIndices, sparseValues, outputShape, defaultValue = 0) {\n    const $sparseIndices = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(sparseIndices, 'sparseIndices', 'sparseToDense', 'int32');\n    const $sparseValues = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(sparseValues, 'sparseValues', 'sparseToDense');\n    const $defaultValue = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(defaultValue, 'defaultValue', 'sparseToDense', $sparseValues.dtype);\n    _ops_sparse_to_dense_util__WEBPACK_IMPORTED_MODULE_2__.validateInput($sparseIndices, $sparseValues, outputShape, $defaultValue);\n    const inputs = {\n        sparseIndices: $sparseIndices,\n        sparseValues: $sparseValues,\n        defaultValue: $defaultValue\n    };\n    const attrs = { outputShape };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.SparseToDense, inputs, attrs);\n}\nconst sparseToDense = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ sparseToDense_ });\n//# sourceMappingURL=sparse_to_dense.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense_util.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense_util.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export validateInput [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"validateInput\": () => /* binding */ validateInput\n/* harmony export */ });\n/**\n * Validate sparseToDense inputs.\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape number[]. Shape of the dense output tensor.\n * @param validateIndices boolean. indice validation is not supported, error\n * will be thrown if it is set.\n */\nfunction validateInput(sparseIndices, sparseValues, outputShape, defaultValues) {\n    if (sparseIndices.dtype !== 'int32') {\n        throw new Error('tf.sparseToDense() expects the indices to be int32 type,' +\n            ` but the dtype was ${sparseIndices.dtype}.`);\n    }\n    if (sparseIndices.rank > 2) {\n        throw new Error('sparseIndices should be a scalar, vector, or matrix,' +\n            ` but got shape ${sparseIndices.shape}.`);\n    }\n    const numElems = sparseIndices.rank > 0 ? sparseIndices.shape[0] : 1;\n    const numDims = sparseIndices.rank > 1 ? sparseIndices.shape[1] : 1;\n    if (outputShape.length !== numDims) {\n        throw new Error('outputShape has incorrect number of elements:,' +\n            ` ${outputShape.length}, should be: ${numDims}.`);\n    }\n    const numValues = sparseValues.size;\n    if (!(sparseValues.rank === 0 ||\n        sparseValues.rank === 1 && numValues === numElems)) {\n        throw new Error('sparseValues has incorrect shape ' +\n            `${sparseValues.shape}, should be [] or [${numElems}]`);\n    }\n    if (sparseValues.dtype !== defaultValues.dtype) {\n        throw new Error('sparseValues.dtype must match defaultValues.dtype');\n    }\n}\n//# sourceMappingURL=sparse_to_dense_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/sparse_to_dense_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js ***!
  \*********************************************************************/
/*! namespace exports */
/*! export fft [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fft\": () => /* binding */ fft\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the inner-most\n * dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.fft().print();  // tf.spectral.fft(x).print();\n * ```\n * @param input The complex input to compute an fft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction fft_(input) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(input.dtype === 'complex64', () => `The dtype for tf.spectral.fft() must be complex64 ` +\n        `but got ${input.dtype}.`);\n    const inputs = { input };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.FFT, inputs);\n}\nconst fft = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ fft_ });\n//# sourceMappingURL=fft.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export ifft [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ifft\": () => /* binding */ ifft\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Inverse fast Fourier transform.\n *\n * Computes the inverse 1-dimensional discrete Fourier transform over the\n * inner-most dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.ifft().print();  // tf.spectral.ifft(x).print();\n * ```\n * @param input The complex input to compute an ifft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction ifft_(input) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(input.dtype === 'complex64', () => `The dtype for tf.spectral.ifft() must be complex64 ` +\n        `but got ${input.dtype}.`);\n    const inputs = { input };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.IFFT, inputs);\n}\nconst ifft = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ ifft_ });\n//# sourceMappingURL=ifft.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/irfft.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/irfft.js ***!
  \***********************************************************************/
/*! namespace exports */
/*! export irfft [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"irfft\": () => /* binding */ irfft\n/* harmony export */ });\n/* harmony import */ var _complex__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../complex */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js\");\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _imag__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../imag */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js\");\n/* harmony import */ var _mul__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _real__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../real */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/real.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../reverse */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reverse.js\");\n/* harmony import */ var _scalar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _ifft__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ifft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/ifft.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n/**\n * Inversed real value input fast Fourier transform.\n *\n * Computes the 1-dimensional inversed discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([0, 0, 0]);\n * const x = tf.complex(real, imag);\n *\n * x.irfft().print();\n * ```\n * @param input The real value input to compute an irfft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction irfft_(input) {\n    const innerDimensionSize = input.shape[input.shape.length - 1];\n    const batch = input.size / innerDimensionSize;\n    let ret;\n    if (innerDimensionSize <= 2) {\n        const complexInput = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)(input, [batch, innerDimensionSize]);\n        ret = (0,_ifft__WEBPACK_IMPORTED_MODULE_1__.ifft)(complexInput);\n    }\n    else {\n        // The length of unique components of the DFT of a real-valued signal\n        // is 2 * (input_len - 1)\n        const outputShape = [batch, 2 * (innerDimensionSize - 1)];\n        const realInput = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)((0,_real__WEBPACK_IMPORTED_MODULE_2__.real)(input), [batch, innerDimensionSize]);\n        const imagInput = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)((0,_imag__WEBPACK_IMPORTED_MODULE_3__.imag)(input), [batch, innerDimensionSize]);\n        const realConjugate = (0,_reverse__WEBPACK_IMPORTED_MODULE_4__.reverse)((0,_slice__WEBPACK_IMPORTED_MODULE_5__.slice)(realInput, [0, 1], [batch, innerDimensionSize - 2]), 1);\n        const imagConjugate = (0,_mul__WEBPACK_IMPORTED_MODULE_6__.mul)((0,_reverse__WEBPACK_IMPORTED_MODULE_4__.reverse)((0,_slice__WEBPACK_IMPORTED_MODULE_5__.slice)(imagInput, [0, 1], [batch, innerDimensionSize - 2]), 1), (0,_scalar__WEBPACK_IMPORTED_MODULE_7__.scalar)(-1));\n        const r = (0,_concat__WEBPACK_IMPORTED_MODULE_8__.concat)([realInput, realConjugate], 1);\n        const i = (0,_concat__WEBPACK_IMPORTED_MODULE_8__.concat)([imagInput, imagConjugate], 1);\n        const complexInput = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)((0,_complex__WEBPACK_IMPORTED_MODULE_9__.complex)(r, i), [outputShape[0], outputShape[1]]);\n        ret = (0,_ifft__WEBPACK_IMPORTED_MODULE_1__.ifft)(complexInput);\n    }\n    ret = (0,_real__WEBPACK_IMPORTED_MODULE_2__.real)(ret);\n    // reshape the result if the input is 3D tensor.\n    if (input.rank === 3 && input.shape[0] !== 0) {\n        const temp = ret;\n        const batch = input.shape[0];\n        ret = (0,_reshape__WEBPACK_IMPORTED_MODULE_0__.reshape)(ret, [batch, ret.shape[0] / batch, ret.shape[1]]);\n        temp.dispose();\n    }\n    return ret;\n}\nconst irfft = (0,_operation__WEBPACK_IMPORTED_MODULE_10__.op)({ irfft_ });\n//# sourceMappingURL=irfft.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/irfft.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export rfft [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rfft\": () => /* binding */ rfft\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _complex__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../complex */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js\");\n/* harmony import */ var _concat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../concat */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/concat.js\");\n/* harmony import */ var _imag__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../imag */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/imag.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _real__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../real */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/real.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/* harmony import */ var _slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../slice */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/slice.js\");\n/* harmony import */ var _split__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../split */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/split.js\");\n/* harmony import */ var _zeros__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../zeros */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js\");\n/* harmony import */ var _zeros_like__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _fft__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./fft */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/fft.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Real value input fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n *\n * real.rfft().print();\n * ```\n * @param input The real value input to compute an rfft over.\n *\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction rfft_(input, fftLength) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(input.dtype === 'float32', () => `The dtype for rfft() must be real value but got ${input.dtype}`);\n    let innerDimensionSize = input.shape[input.shape.length - 1];\n    const batch = input.size / innerDimensionSize;\n    let adjustedInput;\n    if (fftLength != null && fftLength < innerDimensionSize) {\n        // Need to crop\n        const begin = input.shape.map(v => 0);\n        const size = input.shape.map(v => v);\n        size[input.shape.length - 1] = fftLength;\n        adjustedInput = (0,_slice__WEBPACK_IMPORTED_MODULE_1__.slice)(input, begin, size);\n        innerDimensionSize = fftLength;\n    }\n    else if (fftLength != null && fftLength > innerDimensionSize) {\n        // Need to pad with zeros\n        const zerosShape = input.shape.map(v => v);\n        zerosShape[input.shape.length - 1] = fftLength - innerDimensionSize;\n        adjustedInput = (0,_concat__WEBPACK_IMPORTED_MODULE_2__.concat)([input, (0,_zeros__WEBPACK_IMPORTED_MODULE_3__.zeros)(zerosShape)], input.shape.length - 1);\n        innerDimensionSize = fftLength;\n    }\n    else {\n        adjustedInput = input;\n    }\n    // Complement the input with zero imaginary numbers.\n    const zerosInput = (0,_zeros_like__WEBPACK_IMPORTED_MODULE_4__.zerosLike)(adjustedInput);\n    const complexInput = (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)((0,_complex__WEBPACK_IMPORTED_MODULE_6__.complex)(adjustedInput, zerosInput), [batch, innerDimensionSize]);\n    const ret = (0,_fft__WEBPACK_IMPORTED_MODULE_7__.fft)(complexInput);\n    // Exclude complex conjugations. These conjugations are put symmetrically.\n    const half = Math.floor(innerDimensionSize / 2) + 1;\n    const realValues = (0,_real__WEBPACK_IMPORTED_MODULE_8__.real)(ret);\n    const imagValues = (0,_imag__WEBPACK_IMPORTED_MODULE_9__.imag)(ret);\n    const realComplexConjugate = (0,_split__WEBPACK_IMPORTED_MODULE_10__.split)(realValues, [half, innerDimensionSize - half], realValues.shape.length - 1);\n    const imagComplexConjugate = (0,_split__WEBPACK_IMPORTED_MODULE_10__.split)(imagValues, [half, innerDimensionSize - half], imagValues.shape.length - 1);\n    const outputShape = adjustedInput.shape.slice();\n    outputShape[adjustedInput.shape.length - 1] = half;\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_5__.reshape)((0,_complex__WEBPACK_IMPORTED_MODULE_6__.complex)(realComplexConjugate[0], imagComplexConjugate[0]), outputShape);\n}\nconst rfft = (0,_operation__WEBPACK_IMPORTED_MODULE_11__.op)({ rfft_ });\n//# sourceMappingURL=rfft.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/spectral/rfft.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/split.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/split.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export split [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"split\": () => /* binding */ split\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Splits a `tf.Tensor` into sub tensors.\n *\n * If `numOrSizeSplits` is a number, splits `x` along dimension `axis`\n * into `numOrSizeSplits` smaller tensors.\n * Requires that `numOrSizeSplits` evenly divides `x.shape[axis]`.\n *\n * If `numOrSizeSplits` is a number array, splits `x` into\n * `numOrSizeSplits.length` pieces. The shape of the `i`-th piece has the\n * same size as `x` except along dimension `axis` where the size is\n * `numOrSizeSplits[i]`.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8], [2, 4]);\n * const [a, b] = tf.split(x, 2, 1);\n * a.print();\n * b.print();\n *\n * const [c, d, e] = tf.split(x, [1, 2, 1], 1);\n * c.print();\n * d.print();\n * e.print();\n * ```\n *\n * @param x The input tensor to split.\n * @param numOrSizeSplits Either an integer indicating the number of\n * splits along the axis or an array of integers containing the sizes of\n * each output tensor along the axis. If a number then it must evenly divide\n * `x.shape[axis]`; otherwise the sum of sizes must match `x.shape[axis]`.\n * Can contain one -1 indicating that dimension is to be inferred.\n * @param axis The dimension along which to split. Defaults to 0 (the first\n * dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction split_(x, numOrSizeSplits, axis = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'split');\n    const inputs = { x: $x };\n    const attr = { numOrSizeSplits, axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.SplitV, inputs, attr);\n}\nconst split = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ split_ });\n//# sourceMappingURL=split.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/split.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/split_util.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/split_util.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export prepareSplitSize [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prepareSplitSize\": () => /* binding */ prepareSplitSize\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n;\n/**\n * Prepare the split size array. When the input is a number, the axis is evenly\n * divided among the split size. When the input contains the negative value, the\n * rest of the axis is allocated toward that.\n */\nfunction prepareSplitSize(x, numOrSizeSplits, axis = 0) {\n    let splitSizes = [];\n    if (typeof (numOrSizeSplits) === 'number') {\n        (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(x.shape[axis] % numOrSizeSplits === 0, () => 'Number of splits must evenly divide the axis.');\n        splitSizes =\n            new Array(numOrSizeSplits).fill(x.shape[axis] / numOrSizeSplits);\n    }\n    else {\n        const numOfNegs = numOrSizeSplits.reduce((count, value) => {\n            if (value === -1) {\n                count += 1;\n            }\n            return count;\n        }, 0);\n        (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(numOfNegs <= 1, () => 'There should be only one negative value in split array.');\n        const negIndex = numOrSizeSplits.indexOf(-1);\n        // Allow the number of split array to be -1, which indicates the rest\n        // of dimension is allocated to that split.\n        if (negIndex !== -1) {\n            const total = numOrSizeSplits.reduce((a, b) => b > 0 ? a + b : a);\n            numOrSizeSplits[negIndex] = x.shape[axis] - total;\n        }\n        (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(x.shape[axis] === numOrSizeSplits.reduce((a, b) => a + b), () => 'The sum of sizes must match the size of the axis dimension.');\n        splitSizes = numOrSizeSplits;\n    }\n    return splitSizes;\n}\n//# sourceMappingURL=split_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/split_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export sqrt [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sqrt\": () => /* binding */ sqrt\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes square root of the input `tf.Tensor` element-wise: `y = sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.sqrt().print();  // or tf.sqrt(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sqrt_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'sqrt');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Sqrt, inputs);\n}\nconst sqrt = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ sqrt_ });\n//# sourceMappingURL=sqrt.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/square.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/square.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export square [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"square\": () => /* binding */ square\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Computes square of `x` element-wise: `x ^ 2`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.sqrt(2), -1]);\n *\n * x.square().print();  // or tf.square(x)\n * ```\n * @param x The input Tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction square_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'square');\n    const attrs = {};\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel('Square', { x: $x }, attrs);\n}\nconst square = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ square_ });\n//# sourceMappingURL=square.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/square.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js ***!
  \***************************************************************************/
/*! namespace exports */
/*! export squaredDifference [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"squaredDifference\": () => /* binding */ squaredDifference\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n/**\n * Returns (a - b) * (a - b) element-wise.\n * Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * ```js\n * // Broadcast squared difference  a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction squaredDifference_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'squaredDifference');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'squaredDifference');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_3__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    const attrs = {};\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_4__.SquaredDifference, inputs, attrs);\n}\nconst squaredDifference = (0,_operation__WEBPACK_IMPORTED_MODULE_5__.op)({ squaredDifference_ });\n//# sourceMappingURL=squared_difference.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/squared_difference.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export squeeze [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"squeeze\": () => /* binding */ squeeze\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _reshape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reshape */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Removes dimensions of size 1 from the shape of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4], [1, 1, 4]);\n * x.squeeze().print();\n * ```\n *\n * @param x The input tensor to be squeezed.\n * @param axis An optional list of numbers. If specified, only\n *     squeezes the dimensions listed. The dimension index starts at 0. It\n * is an error to squeeze a dimension that is not 1.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction squeeze_(x, axis) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(x, 'x', 'squeeze');\n    return (0,_reshape__WEBPACK_IMPORTED_MODULE_1__.reshape)($x, (0,_util__WEBPACK_IMPORTED_MODULE_2__.squeezeShape)($x.shape, axis).newShape);\n}\nconst squeeze = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ squeeze_ });\n//# sourceMappingURL=squeeze.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/squeeze.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export stack [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stack\": () => /* binding */ stack\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Stacks a list of rank-`R` `tf.Tensor`s into one rank-`(R+1)` `tf.Tensor`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.stack([a, b, c]).print();\n * ```\n *\n * @param tensors A list of tensor objects with the same shape and dtype.\n * @param axis The axis to stack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction stack_(tensors, axis = 0) {\n    const $tensors = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensorArray)(tensors, 'tensors', 'stack', 'string_or_numeric');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($tensors.length >= 1, () => 'Pass at least one tensor to tf.stack');\n    if ($tensors.length > 0) {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(axis <= $tensors[0].rank, () => 'Axis must be <= rank of the tensor');\n    }\n    const inputs = $tensors;\n    const attrs = { axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Pack, inputs, attrs);\n}\nconst stack = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ stack_ });\n//# sourceMappingURL=stack.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/stack.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/step.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/step.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export step [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"step\": () => /* binding */ step\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes step of the input `tf.Tensor` element-wise: `x > 0 ? 1 : alpha * x`\n *\n * ```js\n * const x = tf.tensor1d([0, 2, -1, -3]);\n *\n * x.step(.5).print();  // or tf.step(x, .5)\n * ```\n * @param x The input tensor.\n * @param alpha The gradient when input is negative.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction step_(x, alpha = 0.0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'step');\n    const inputs = { x: $x };\n    const attrs = { alpha };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Step, inputs, attrs);\n}\nconst step = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ step_ });\n//# sourceMappingURL=step.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/step.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/strided_slice.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/strided_slice.js ***!
  \**********************************************************************/
/*! namespace exports */
/*! export stridedSlice [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stridedSlice\": () => /* binding */ stridedSlice\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Extracts a strided slice of a tensor.\n *\n * Roughly speaking, this op extracts a slice of size (end-begin)/stride from\n * the given input tensor (x). Starting at the location specified by begin the\n * slice continues by adding stride to the index until all dimensions are not\n * less than end. Note that a stride can be negative, which causes a reverse\n * slice.\n *\n * ```js\n * const t = tf.tensor3d([1, 1, 1 ,2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6],\n *    [3, 2, 3]);\n * t.stridedSlice([1, 0, 0], [2, 1, 3], [1, 1, 1]).print()  // [[[3, 3, 3]]]\n * t.stridedSlice([1, 0, 0], [2, 2, 3], [1, 1, 1]).print()  // [[[3, 3, 3],\n *                                                     // [4, 4, 4]]]\n * t.stridedSlice([1, -1, 0], [2, -3, 3], [1, -1, 1]).print() // [[[4, 4, 4],\n *                                                     // [3, 3, 3]]]\n * ```\n *\n * @param x The tensor to stride slice.\n * @param begin The coordinates to start the slice from.\n * @param end: The coordinates to end the slice at.\n * @param strides: The size of the slice.\n * @param beginMask: If the ith bit of beginMask is set, begin[i] is ignored\n *      and the fullest possible range in that dimension is used instead.\n * @param endMask: If the ith bit of endMask is set, end[i] is ignored\n *      and the fullest possible range in that dimension is used instead.\n * @param shrinkAxisMask: a bitmask where bit i implies that\n * the ith specification should shrink the dimensionality. begin and end must\n * imply a slice of size 1 in the dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\n */\nfunction stridedSlice_(x, begin, end, strides, beginMask = 0, endMask = 0, ellipsisMask = 0, newAxisMask = 0, shrinkAxisMask = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'stridedSlice');\n    const inputs = { x: $x };\n    const attrs = {\n        begin,\n        end,\n        strides,\n        beginMask,\n        endMask,\n        ellipsisMask,\n        newAxisMask,\n        shrinkAxisMask\n    };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.StridedSlice, inputs, attrs);\n}\nconst stridedSlice = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ stridedSlice_ });\n//# sourceMappingURL=strided_slice.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/strided_slice.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js ***!
  \************************************************************/
/*! namespace exports */
/*! export sub [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sub\": () => /* binding */ sub\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tensor_util */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Subtracts two `tf.Tensor`s element-wise, A - B. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n *\n * ```js\n * // Broadcast subtract a with b.\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.scalar(5);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n * @param a The first `tf.Tensor` to subtract from.\n * @param b The second `tf.Tensor` to be subtracted. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction sub_(a, b) {\n    let $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'sub');\n    let $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'sub');\n    [$a, $b] = (0,_tensor_util__WEBPACK_IMPORTED_MODULE_2__.makeTypesMatch)($a, $b);\n    const inputs = { a: $a, b: $b };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Sub, inputs);\n}\nconst sub = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ sub_ });\n//# sourceMappingURL=sub.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js ***!
  \************************************************************/
/*! namespace exports */
/*! export sum [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sum\": () => /* binding */ sum\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cast */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/cast.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Computes the sum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If axes has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.sum().print();  // or tf.sum(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.sum(axis).print();  // or tf.sum(x, axis)\n * ```\n *\n * @param x The input tensor to compute the sum over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction sum_(x, axis = null, keepDims = false) {\n    let $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'sum');\n    if ($x.dtype === 'bool') {\n        $x = (0,_cast__WEBPACK_IMPORTED_MODULE_2__.cast)($x, 'int32');\n    }\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Sum, inputs, attrs);\n}\nconst sum = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ sum_ });\n//# sourceMappingURL=sum.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/sum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tan.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tan.js ***!
  \************************************************************/
/*! namespace exports */
/*! export tan [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tan\": () => /* binding */ tan\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes tan of the input `tf.Tensor` element-wise, `tan(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.tan().print();  // or tf.tan(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction tan_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'tan');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Tan, inputs);\n}\nconst tan = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ tan_ });\n//# sourceMappingURL=tan.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/tan.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export tanh [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tanh\": () => /* binding */ tanh\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Computes hyperbolic tangent of the input `tf.Tensor` element-wise: `tanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, 70]);\n *\n * x.tanh().print();  // or tf.tanh(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction tanh_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'tanh');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.Tanh, inputs);\n}\nconst tanh = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ tanh_ });\n//# sourceMappingURL=tanh.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/tanh.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export tensor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensor\": () => /* binding */ tensor\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * Creates a `tf.Tensor` with the provided values, shape and dtype.\n *\n * ```js\n * // Pass an array of values to create a vector.\n * tf.tensor([1, 2, 3, 4]).print();\n * ```\n *\n * ```js\n * // Pass a nested array of values to make a matrix or a higher\n * // dimensional tensor.\n * tf.tensor([[1, 2], [3, 4]]).print();\n * ```\n *\n * ```js\n * // Pass a flat array and specify a shape yourself.\n * tf.tensor([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`. If the values are strings,\n *     they will be encoded as utf-8 and kept as `Uint8Array[]`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor(values, shape, dtype) {\n    const inferredShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.inferShape)(values, dtype);\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_1__.makeTensor)(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export tensor1d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensor1d\": () => /* binding */ tensor1d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Creates rank-1 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor1d` as it makes the code more readable.\n *\n * ```js\n * tf.tensor1d([1, 2, 3]).print();\n * ```\n *\n * @param values The values of the tensor. Can be array of numbers,\n *     or a `TypedArray`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor1d(values, dtype) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assertNonNull)(values);\n    const inferredShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.inferShape)(values, dtype);\n    if (inferredShape.length !== 1) {\n        throw new Error('tensor1d() requires values to be a flat/TypedArray');\n    }\n    const shape = null;\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__.makeTensor)(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor1d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export tensor2d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensor2d\": () => /* binding */ tensor2d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Creates rank-2 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor2d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor2d([[1, 2], [3, 4]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided, it is inferred from\n *     `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor2d(values, shape, dtype) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assertNonNull)(values);\n    if (shape != null && shape.length !== 2) {\n        throw new Error('tensor2d() requires shape to have two numbers');\n    }\n    const inferredShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.inferShape)(values, dtype);\n    if (inferredShape.length !== 2 && inferredShape.length !== 1) {\n        throw new Error('tensor2d() requires values to be number[][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor2d() requires shape to be provided when `values` ' +\n            'are a flat/TypedArray');\n    }\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__.makeTensor)(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor2d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export tensor3d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensor3d\": () => /* binding */ tensor3d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Creates rank-3 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor3d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor3d([[[1], [2]], [[3], [4]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor3d([1, 2, 3, 4], [2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided,  it is inferred from\n *     `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor3d(values, shape, dtype) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assertNonNull)(values);\n    if (shape != null && shape.length !== 3) {\n        throw new Error('tensor3d() requires shape to have three numbers');\n    }\n    const inferredShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.inferShape)(values, dtype);\n    if (inferredShape.length !== 3 && inferredShape.length !== 1) {\n        throw new Error('tensor3d() requires values to be number[][][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor3d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__.makeTensor)(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor3d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor4d.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor4d.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export tensor4d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensor4d\": () => /* binding */ tensor4d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Creates rank-4 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor4d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor4d([[[[1], [2]], [[3], [4]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor4d(values, shape, dtype) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assertNonNull)(values);\n    if (shape != null && shape.length !== 4) {\n        throw new Error('tensor4d() requires shape to have four numbers');\n    }\n    const inferredShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.inferShape)(values, dtype);\n    if (inferredShape.length !== 4 && inferredShape.length !== 1) {\n        throw new Error('tensor4d() requires values to be number[][][][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor4d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__.makeTensor)(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor4d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor4d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor5d.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor5d.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export tensor5d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensor5d\": () => /* binding */ tensor5d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Creates rank-5 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor5d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor5d([[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor5d(values, shape, dtype) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assertNonNull)(values);\n    if (shape != null && shape.length !== 5) {\n        throw new Error('tensor5d() requires shape to have five numbers');\n    }\n    const inferredShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.inferShape)(values, dtype);\n    if (inferredShape.length !== 5 && inferredShape.length !== 1) {\n        throw new Error('tensor5d() requires values to be ' +\n            'number[][][][][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor5d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__.makeTensor)(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor5d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor5d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor6d.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor6d.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export tensor6d [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensor6d\": () => /* binding */ tensor6d\n/* harmony export */ });\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_ops_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Creates rank-6 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor6d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor6d([[[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor6d([1, 2, 3, 4, 5, 6, 7, 8], [1, 1, 2, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction tensor6d(values, shape, dtype) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assertNonNull)(values);\n    if (shape != null && shape.length !== 6) {\n        throw new Error('tensor6d() requires shape to have six numbers');\n    }\n    const inferredShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.inferShape)(values, dtype);\n    if (inferredShape.length !== 6 && inferredShape.length !== 1) {\n        throw new Error('tensor6d() requires values to be number[][][][][][] or ' +\n            'flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor6d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    shape = shape ||\n        inferredShape;\n    return (0,_tensor_ops_util__WEBPACK_IMPORTED_MODULE_2__.makeTensor)(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=tensor6d.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor6d.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js ***!
  \************************************************************************/
/*! namespace exports */
/*! export makeTensor [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeTensor\": () => /* binding */ makeTensor\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/** This is shared code across all tensor creation methods. */\nfunction makeTensor(values, shape, inferredShape, dtype) {\n    if (dtype == null) {\n        dtype = (0,_util__WEBPACK_IMPORTED_MODULE_1__.inferDtype)(values);\n    }\n    if (dtype === 'complex64') {\n        throw new Error(`Cannot construct a complex64 tensor directly. ` +\n            `Please use tf.complex(real, imag).`);\n    }\n    if (!(0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(values) && !Array.isArray(values) &&\n        typeof values !== 'number' && typeof values !== 'boolean' &&\n        typeof values !== 'string') {\n        throw new Error('values passed to tensor(values) must be a number/boolean/string or ' +\n            'an array of numbers/booleans/strings, or a TypedArray');\n    }\n    if (shape != null) {\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.assertNonNegativeIntegerDimensions)(shape);\n        const providedSize = (0,_util__WEBPACK_IMPORTED_MODULE_1__.sizeFromShape)(shape);\n        const inferredSize = (0,_util__WEBPACK_IMPORTED_MODULE_1__.sizeFromShape)(inferredShape);\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(providedSize === inferredSize, () => `Based on the provided shape, [${shape}], the tensor should have ` +\n            `${providedSize} values but has ${inferredSize}`);\n        for (let i = 0; i < inferredShape.length; ++i) {\n            const inferred = inferredShape[i];\n            const flatDimsDontMatch = i === inferredShape.length - 1 ?\n                inferred !== (0,_util__WEBPACK_IMPORTED_MODULE_1__.sizeFromShape)(shape.slice(i)) :\n                true;\n            (0,_util__WEBPACK_IMPORTED_MODULE_1__.assert)(inferredShape[i] === shape[i] || !flatDimsDontMatch, () => `Error creating a new Tensor. Inferred shape ` +\n                `(${inferredShape}) does not match the provided ` +\n                `shape (${shape}). `);\n        }\n    }\n    if (!(0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(values) && !Array.isArray(values)) {\n        values = [values];\n    }\n    shape = shape || inferredShape;\n    values = dtype !== 'string' ?\n        (0,_util__WEBPACK_IMPORTED_MODULE_2__.toTypedArray)(values, dtype) :\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.flatten)(values, [], true);\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.makeTensor(values, shape, dtype);\n}\n//# sourceMappingURL=tensor_ops_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export tile [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tile\": () => /* binding */ tile\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Construct a tensor by repeating it the number of times given by reps.\n *\n * This operation creates a new tensor by replicating `input` `reps`\n * times. The output tensor's i'th dimension has `input.shape[i] *\n * reps[i]` elements, and the values of `input` are replicated\n * `reps[i]` times along the i'th dimension. For example, tiling\n * `[a, b, c, d]` by `[2]` produces `[a, b, c, d, a, b, c, d]`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n *\n * a.tile([2]).print();    // or a.tile([2])\n * ```\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.tile([1, 2]).print();  // or a.tile([1, 2])\n * ```\n * @param x The tensor to tile.\n * @param reps Determines the number of replications per dimension.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction tile_(x, reps) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'tile', 'string_or_numeric');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank === reps.length, () => `Error in transpose: rank of input ${$x.rank} ` +\n        `must match length of reps ${reps}.`);\n    const inputs = { x: $x };\n    const attrs = { reps };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Tile, inputs, attrs);\n}\nconst tile = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ tile_ });\n//# sourceMappingURL=tile.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/tile.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/topk.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/topk.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export topk [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"topk\": () => /* binding */ topk\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Finds the values and indices of the `k` largest entries along the last\n * dimension.\n *\n * If the input is a vector (rank=1), finds the k largest entries in the vector\n * and outputs their values and indices as vectors. Thus values[j] is the j-th\n * largest entry in input, and its index is indices[j].\n * For higher rank inputs, computes the top k entries along the last dimension.\n *\n * If two elements are equal, the lower-index element appears first.\n *\n * ```js\n * const a = tf.tensor2d([[1, 5], [4, 3]]);\n * const {values, indices} = tf.topk(a);\n * values.print();\n * indices.print();\n * ```\n * @param x 1-D or higher `tf.Tensor` with last dimension being at least `k`.\n * @param k Number of top elements to look for along the last dimension.\n * @param sorted If true, the resulting `k` elements will be sorted by the\n *     values in descending order.\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nfunction topk_(x, k = 1, sorted = true) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'topk');\n    if ($x.rank === 0) {\n        throw new Error('topk() expects the input to be of rank 1 or higher');\n    }\n    const lastDim = $x.shape[$x.shape.length - 1];\n    if (k > lastDim) {\n        throw new Error(`'k' passed to topk() must be <= the last dimension (${lastDim}) ` +\n            `but got ${k}`);\n    }\n    const inputs = { x: $x };\n    const attrs = { k, sorted };\n    const [values, indices] = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.TopK, inputs, attrs);\n    return { values, indices };\n}\nconst topk = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ topk_ });\n//# sourceMappingURL=topk.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/topk.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export transpose [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"transpose\": () => /* binding */ transpose\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Transposes the `tf.Tensor`. Permutes the dimensions according to `perm`.\n *\n * The returned `tf.Tensor`'s dimension `i` will correspond to the input\n * dimension `perm[i]`. If `perm` is not given, it is set to `[n-1...0]`,\n * where `n` is the rank of the input `tf.Tensor`. Hence by default, this\n * operation performs a regular matrix transpose on 2-D input `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n *\n * a.transpose().print();  // or tf.transpose(a)\n * ```\n *\n * @param x The tensor to transpose.\n * @param perm The permutation of the dimensions of a.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction transpose_(x, perm) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'transpose');\n    if (perm == null) {\n        perm = $x.shape.map((s, i) => i).reverse();\n    }\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert($x.rank === perm.length, () => `Error in transpose: rank of input ${$x.rank} ` +\n        `must match length of perm ${perm}.`);\n    perm.forEach(axis => {\n        _util__WEBPACK_IMPORTED_MODULE_2__.assert(axis >= 0 && axis < $x.rank, () => `All entries in 'perm' must be between 0 and ${$x.rank - 1}` +\n            ` but got ${perm}`);\n    });\n    if ($x.rank <= 1) {\n        return $x.clone();\n    }\n    const inputs = { x: $x };\n    const attrs = { perm };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Transpose, inputs, attrs);\n}\nconst transpose = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ transpose_ });\n//# sourceMappingURL=transpose.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/truncated_normal.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/truncated_normal.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export truncatedNormal [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"truncatedNormal\": () => /* binding */ truncatedNormal\n/* harmony export */ });\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/* harmony import */ var _rand_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rand_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/rand_util.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Creates a `tf.Tensor` with values sampled from a truncated normal\n * distribution.\n *\n * ```js\n * tf.truncatedNormal([2, 2]).print();\n * ```\n *\n * The generated values follow a normal distribution with specified mean and\n * standard deviation, except that values whose magnitude is more than 2\n * standard deviations from the mean are dropped and re-picked.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output tensor.\n * @param seed The seed for the random number generator.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction truncatedNormal_(shape, mean = 0, stdDev = 1, dtype, seed) {\n    if (dtype != null && dtype === 'bool') {\n        throw new Error(`Unsupported data type $ { dtype }`);\n    }\n    const randGauss = new _rand_util__WEBPACK_IMPORTED_MODULE_0__.MPRandGauss(mean, stdDev, dtype, true /* truncated */, seed);\n    const res = (0,_buffer__WEBPACK_IMPORTED_MODULE_1__.buffer)(shape, dtype);\n    for (let i = 0; i < res.values.length; i++) {\n        res.values[i] = randGauss.nextValue();\n    }\n    return res.toTensor();\n}\nconst truncatedNormal = (0,_operation__WEBPACK_IMPORTED_MODULE_2__.op)({ truncatedNormal_ });\n//# sourceMappingURL=truncated_normal.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/truncated_normal.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/unique.js":
/*!***************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/unique.js ***!
  \***************************************************************/
/*! namespace exports */
/*! export unique [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unique\": () => /* binding */ unique\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Finds unique elements along an axis of a tensor.\n *\n * It returns a tensor `values` containing all of the unique elements along the\n * `axis` of the given tensor `x` in the same order that they occur along the\n * `axis` in `x`; `x` does not need to be sorted. It also returns a tensor\n * `indices` the same size as the number of the elements in `x` along the `axis`\n * dimension. It contains the index in the unique output `values`.\n *\n * ```js\n * // A 1-D tensor\n * const a = tf.tensor1d([1, 1, 2, 4, 4, 4, 7, 8, 8]);\n * const {values, indices} = tf.unique(a);\n * values.print();   // [1, 2, 4, 7, 8,]\n * indices.print();  // [0, 0, 1, 2, 2, 2, 3, 4, 4]\n * ```\n *\n * ```js\n * // A 2-D tensor with axis=0\n * //\n * // 'a' is: [[1, 0, 0],\n * //          [1, 0, 0],\n * //          [2, 0, 0]]\n * const a = tf.tensor2d([[1, 0, 0], [1, 0, 0], [2, 0, 0]]);\n * const {values, indices} = tf.unique(a, 0)\n * values.print();   // [[1, 0, 0],\n *                   //  [2, 0, 0]]\n * indices.print();  // [0, 0, 1]\n * ```\n *\n * ```js\n * // A 2-D tensor with axis=1\n * //\n * // 'a' is: [[1, 0, 0],\n * //          [1, 0, 0],\n * //          [2, 0, 0]]\n * const a = tf.tensor2d([[1, 0, 0], [1, 0, 0], [2, 0, 0]]);\n * const {values, indices} = tf.unique(a, 1)\n * values.print();   // [[1, 0],\n *                   //  [1, 0],\n *                   //  [2, 0]]\n * indices.print();  // [0, 1, 1]\n * ```\n * @param x A tensor (int32, string, bool).\n * @param axis The axis of the tensor to find the unique elements.\n * @returns [uniqueElements, indices] (see above for details)\n *\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nfunction unique_(x, axis = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'unique', 'string_or_numeric');\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assert)($x.rank > 0, () => 'The input tensor must be at least 1D');\n    const inputs = { x: $x };\n    const attrs = { axis };\n    const [values, indices] = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Unique, inputs, attrs);\n    return { values, indices };\n}\nconst unique = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ unique_ });\n//# sourceMappingURL=unique.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/unique.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/unsorted_segment_sum.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/unsorted_segment_sum.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export unsortedSegmentSum [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unsortedSegmentSum\": () => /* binding */ unsortedSegmentSum\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Computes the sum along segments of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const segmentIds = tf.tensor1d([1, 2, 0, 1], 'int32');\n * const numSegments = 3;\n *\n * x.unsortedSegmentSum(segmentIds, numSegments).print()\n * //or tf.unsortedSegmentSum(x, segmentIds, numSegments)\n * ```\n * @param x The `tf.Tensor` that will be summed along its segments.\n * @param segmentIds A `tf.Tensor1D` whose rank is equal to the rank of `x`'s\n * dimension along the `axis`.  Maps each element of `x` to a segment.\n * @param numSegments The number of distinct `segmentIds`.\n *\n * @doc {heading: 'Operations', subheading: 'Segment'}\n */\nfunction unsortedSegmentSum_(x, segmentIds, numSegments) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'unsortedSegmentSum');\n    const $segmentIds = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(segmentIds, 'segmentIds', 'unsortedSegmentSum', 'int32');\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assert)((0,_util__WEBPACK_IMPORTED_MODULE_2__.isInt)(numSegments), () => 'numSegments must be of dtype int');\n    const inputs = { x: $x, segmentIds: $segmentIds };\n    const attrs = { numSegments };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.UnsortedSegmentSum, inputs, attrs);\n}\nconst unsortedSegmentSum = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ unsortedSegmentSum_ });\n//# sourceMappingURL=unsorted_segment_sum.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/unsorted_segment_sum.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export unstack [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unstack\": () => /* binding */ unstack\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n/**\n * Unstacks a `tf.Tensor` of rank-`R` into a list of rank-`(R-1)` `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * tf.unstack(a).forEach(tensor => tensor.print());\n * ```\n *\n * @param x A tensor object.\n * @param axis The axis to unstack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction unstack_(x, axis = 0) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'unstack', 'string_or_numeric');\n    _util__WEBPACK_IMPORTED_MODULE_2__.assert(axis >= -$x.shape.length && axis < $x.shape.length, () => `Axis = ${axis} is not in [-${$x.shape.length}, ${$x.shape.length})`);\n    const inputs = { value: $x };\n    const attrs = { axis };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_3__.Unpack, inputs, attrs);\n}\nconst unstack = (0,_operation__WEBPACK_IMPORTED_MODULE_4__.op)({ unstack_ });\n//# sourceMappingURL=unstack.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/variable.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/variable.js ***!
  \*****************************************************************/
/*! namespace exports */
/*! export variable [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"variable\": () => /* binding */ variable\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n/**\n * Creates a new variable with the provided initial value.\n * ```js\n * const x = tf.variable(tf.tensor([1, 2, 3]));\n * x.assign(tf.tensor([4, 5, 6]));\n *\n * x.print();\n * ```\n *\n * @param initialValue Initial value for the tensor.\n * @param trainable If true, optimizers are allowed to update it.\n * @param name Name of the variable. Defaults to a unique id.\n * @param dtype If set, initialValue will be converted to the given type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction variable(initialValue, trainable = true, name, dtype) {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.makeVariable(initialValue, trainable, name, dtype);\n}\n//# sourceMappingURL=variable.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/variable.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/where.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/where.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export where [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"where\": () => /* binding */ where\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _broadcast_to__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./broadcast_to */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js\");\n/* harmony import */ var _broadcast_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./broadcast_util */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n/**\n * Returns the elements, either `a` or `b` depending on the `condition`.\n *\n * If the condition is true, select from `a`, otherwise select from `b`.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const a = tf.tensor1d([1 , 2, 3]);\n * const b = tf.tensor1d([-1, -2, -3]);\n *\n * a.where(cond, b).print();\n * ```\n *\n * @param condition The input condition. Must be of dtype bool.\n * @param a If `condition` is rank 1, `a` may have a higher rank but\n *     its first dimension must match the size of `condition`.\n * @param b A tensor with the same dtype as `a` and with shape that is\n *     compatible with `a`.\n * @return A tensor with same dtype as `a` and `b`, and shape that is\n *     broadcastable from `a` and `b`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction where_(condition, a, b) {\n    const $a = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(a, 'a', 'where');\n    const $b = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(b, 'b', 'where');\n    const $condition = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(condition, 'condition', 'where', 'bool');\n    // TODO: move this logic to forward function when the broadcastTo op is\n    // implemented in WASM.\n    // Find the broadcastable shape for $a and $b.\n    const broadcastShape = (0,_broadcast_util__WEBPACK_IMPORTED_MODULE_2__.assertAndGetBroadcastShape)($a.shape, $b.shape);\n    const $broadcastedA = (0,_broadcast_to__WEBPACK_IMPORTED_MODULE_3__.broadcastTo)($a, broadcastShape);\n    const $broadcastedB = (0,_broadcast_to__WEBPACK_IMPORTED_MODULE_3__.broadcastTo)($b, broadcastShape);\n    if ($condition.rank === 1) {\n        // If condition rank is 1, then the first dimension must match the size of\n        // condition.\n        (0,_util__WEBPACK_IMPORTED_MODULE_4__.assert)($condition.shape[0] === $a.shape[0], () => 'The first dimension of `a` must match the size of `condition`.');\n    }\n    if ($condition.rank !== 1) {\n        // A must have the same shape as condition.\n        (0,_util__WEBPACK_IMPORTED_MODULE_4__.assertShapesMatch)($condition.shape, $broadcastedB.shape, 'Error in where: ');\n    }\n    const inputs = {\n        condition: $condition,\n        t: $broadcastedA,\n        e: $broadcastedB\n    };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_5__.Select, inputs);\n}\nconst where = (0,_operation__WEBPACK_IMPORTED_MODULE_6__.op)({ where_ });\n//# sourceMappingURL=where.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/where.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export whereAsync [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"whereAsync\": () => /* binding */ whereAsync\n/* harmony export */ });\n/* harmony import */ var _backends_where_impl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../backends/where_impl */ \"./node_modules/@tensorflow/tfjs-core/dist/backends/where_impl.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n/**\n * Returns the coordinates of true elements of condition.\n *\n * The coordinates are returned in a 2-D tensor where the first dimension (rows)\n * represents the number of true elements, and the second dimension (columns)\n * represents the coordinates of the true elements. Keep in mind, the shape of\n * the output tensor can vary depending on how many true values there are in\n * input. Indices are output in row-major order. The resulting tensor has the\n * shape `[numTrueElems, condition.rank]`.\n *\n * This is analogous to calling the python `tf.where(cond)` without an x or y.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const result = await tf.whereAsync(cond);\n * result.print();\n * ```\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nasync function whereAsync_(condition) {\n    const $condition = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_0__.convertToTensor)(condition, 'condition', 'whereAsync', 'bool');\n    const vals = await $condition.data();\n    const res = (0,_backends_where_impl__WEBPACK_IMPORTED_MODULE_1__.whereImpl)($condition.shape, vals);\n    if (condition !== $condition) {\n        $condition.dispose();\n    }\n    return res;\n}\nconst whereAsync = whereAsync_;\n//# sourceMappingURL=where_async.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/where_async.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export zeros [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"zeros\": () => /* binding */ zeros\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _complex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./complex */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/complex.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Creates a `tf.Tensor` with all elements set to 0.\n *\n * ```js\n * tf.zeros([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Can\n *     be 'float32', 'int32' or 'bool'. Defaults to 'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction zeros(shape, dtype = 'float32') {\n    if (dtype === 'complex64') {\n        const real = zeros(shape, 'float32');\n        const imag = zeros(shape, 'float32');\n        return (0,_complex__WEBPACK_IMPORTED_MODULE_1__.complex)(real, imag);\n    }\n    const values = (0,_util__WEBPACK_IMPORTED_MODULE_2__.makeZerosTypedArray)((0,_util__WEBPACK_IMPORTED_MODULE_2__.sizeFromShape)(shape), dtype);\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.makeTensor(values, shape, dtype);\n}\n//# sourceMappingURL=zeros.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js ***!
  \*******************************************************************/
/*! namespace exports */
/*! export zerosLike [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"zerosLike\": () => /* binding */ zerosLike\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _kernel_names__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../kernel_names */ \"./node_modules/@tensorflow/tfjs-core/dist/kernel_names.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _operation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/operation.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * Creates a `tf.Tensor` with all elements set to 0 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.zerosLike(x).print();\n * ```\n *\n * @param x The tensor of required shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction zerosLike_(x) {\n    const $x = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_1__.convertToTensor)(x, 'x', 'zerosLike');\n    const inputs = { x: $x };\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.runKernel(_kernel_names__WEBPACK_IMPORTED_MODULE_2__.ZerosLike, inputs);\n}\nconst zerosLike = (0,_operation__WEBPACK_IMPORTED_MODULE_3__.op)({ zerosLike_ });\n//# sourceMappingURL=zeros_like.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export AdadeltaOptimizer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdadeltaOptimizer\": () => /* binding */ AdadeltaOptimizer\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _ops_add__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _ops_div__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ops/div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _ops_mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _ops_ops__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ops/ops */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js\");\n/* harmony import */ var _ops_square__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ops/square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _ops_zeros_like__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n/** @doclink Optimizer */\nclass AdadeltaOptimizer extends _optimizer__WEBPACK_IMPORTED_MODULE_1__.Optimizer {\n    constructor(learningRate, rho, epsilon = null) {\n        super();\n        this.learningRate = learningRate;\n        this.rho = rho;\n        this.epsilon = epsilon;\n        this.accumulatedGrads = [];\n        this.accumulatedUpdates = [];\n        if (epsilon == null) {\n            this.epsilon = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backend.epsilon();\n        }\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        variableNames.forEach((name, i) => {\n            const value = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[name];\n            const trainable = false;\n            if (this.accumulatedGrads[i] == null) {\n                this.accumulatedGrads[i] = {\n                    originalName: `${name}/accum_grad`,\n                    variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_3__.zerosLike)(value).variable(trainable))\n                };\n            }\n            if (this.accumulatedUpdates[i] == null) {\n                this.accumulatedUpdates[i] = {\n                    originalName: `${name}/accum_var`,\n                    variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_3__.zerosLike)(value).variable(trainable))\n                };\n            }\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            const accumulatedGrad = this.accumulatedGrads[i].variable;\n            const accumulatedUpdate = this.accumulatedUpdates[i].variable;\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n                const newAccumulatedGrad = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(accumulatedGrad, this.rho), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_ops_square__WEBPACK_IMPORTED_MODULE_6__.square)(gradient), 1 - this.rho));\n                const updates = (0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_ops_div__WEBPACK_IMPORTED_MODULE_7__.div)((0,_ops_ops__WEBPACK_IMPORTED_MODULE_8__.sqrt)((0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)(accumulatedUpdate, this.epsilon)), (0,_ops_ops__WEBPACK_IMPORTED_MODULE_8__.sqrt)((0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)(accumulatedGrad, this.epsilon))), gradient);\n                const newAccumulatedUpdate = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(accumulatedUpdate, this.rho), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_ops_square__WEBPACK_IMPORTED_MODULE_6__.square)(updates), 1 - this.rho));\n                accumulatedGrad.assign(newAccumulatedGrad);\n                accumulatedUpdate.assign(newAccumulatedUpdate);\n                const newValue = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(updates, -this.learningRate), value);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        if (this.accumulatedUpdates != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedGrads.map(v => v.variable));\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedUpdates.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        const variables = [...this.accumulatedGrads, ...this.accumulatedUpdates];\n        return [await this.saveIterations()].concat(variables.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        const variableCount = weightValues.length / 2;\n        const trainable = false;\n        this.accumulatedGrads =\n            weightValues.slice(0, variableCount).map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n        this.accumulatedUpdates =\n            weightValues.slice(variableCount, variableCount * 2)\n                .map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'rho': this.rho,\n            'epsilon': this.epsilon\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['rho'], config['epsilon']);\n    }\n}\n/** @nocollapse */\nAdadeltaOptimizer.className = 'Adadelta'; // Name matters for Python compatibility.\n(0,_serialization__WEBPACK_IMPORTED_MODULE_9__.registerClass)(AdadeltaOptimizer);\n//# sourceMappingURL=adadelta_optimizer.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export AdagradOptimizer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdagradOptimizer\": () => /* binding */ AdagradOptimizer\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _ops_add__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _ops_div__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ops/div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _ops_fill__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/fill */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/fill.js\");\n/* harmony import */ var _ops_mul__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ops/mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _ops_sqrt__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ops/sqrt */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js\");\n/* harmony import */ var _ops_square__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n/** @doclink Optimizer */\nclass AdagradOptimizer extends _optimizer__WEBPACK_IMPORTED_MODULE_1__.Optimizer {\n    constructor(learningRate, initialAccumulatorValue = 0.1) {\n        super();\n        this.learningRate = learningRate;\n        this.initialAccumulatorValue = initialAccumulatorValue;\n        this.accumulatedGrads = [];\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        variableNames.forEach((name, i) => {\n            const value = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[name];\n            if (this.accumulatedGrads[i] == null) {\n                const trainable = false;\n                this.accumulatedGrads[i] = {\n                    originalName: `${name}/accumulator`,\n                    variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_fill__WEBPACK_IMPORTED_MODULE_3__.fill)(value.shape, this.initialAccumulatorValue)\n                        .variable(trainable))\n                };\n            }\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            const accumulatedGrad = this.accumulatedGrads[i].variable;\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n                const newAccumulatedGrad = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)(accumulatedGrad, (0,_ops_square__WEBPACK_IMPORTED_MODULE_5__.square)(gradient));\n                accumulatedGrad.assign(newAccumulatedGrad);\n                const newValue = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_6__.mul)((0,_ops_div__WEBPACK_IMPORTED_MODULE_7__.div)(gradient, (0,_ops_sqrt__WEBPACK_IMPORTED_MODULE_8__.sqrt)((0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)(newAccumulatedGrad, _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backend.epsilon()))), -this.learningRate), value);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        if (this.accumulatedGrads != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedGrads.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        return [await this.saveIterations()].concat(this.accumulatedGrads.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        const trainable = false;\n        this.accumulatedGrads = weightValues.map(v => ({ originalName: v.name, variable: v.tensor.variable(trainable) }));\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'initialAccumulatorValue': this.initialAccumulatorValue,\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['initialAccumulatorValue']);\n    }\n}\n/** @nocollapse */\nAdagradOptimizer.className = 'Adagrad'; // Note: Name matters for Python compatibility.\n(0,_serialization__WEBPACK_IMPORTED_MODULE_9__.registerClass)(AdagradOptimizer);\n//# sourceMappingURL=adagrad_optimizer.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js ***!
  \******************************************************************************/
/*! namespace exports */
/*! export AdamOptimizer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdamOptimizer\": () => /* binding */ AdamOptimizer\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _ops_add__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ops/add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _ops_div__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ops/div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _ops_mul__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ops/mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _ops_pow__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../ops/pow */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/pow.js\");\n/* harmony import */ var _ops_scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _ops_sqrt__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ops/sqrt */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js\");\n/* harmony import */ var _ops_square__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ops/square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _ops_sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _ops_zeros_like__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\n\nclass AdamOptimizer extends _optimizer__WEBPACK_IMPORTED_MODULE_1__.Optimizer {\n    constructor(learningRate, beta1, beta2, epsilon = null) {\n        super();\n        this.learningRate = learningRate;\n        this.beta1 = beta1;\n        this.beta2 = beta2;\n        this.epsilon = epsilon;\n        this.accumulatedFirstMoment = [];\n        this.accumulatedSecondMoment = [];\n        (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n            // accB* will be updated by batch.\n            this.accBeta1 = (0,_ops_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(beta1).variable();\n            this.accBeta2 = (0,_ops_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(beta2).variable();\n        });\n        if (epsilon == null) {\n            this.epsilon = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backend.epsilon();\n        }\n    }\n    applyGradients(variableGradients) {\n        const varNames = Array.isArray(variableGradients) ?\n            variableGradients.map(v => v.name) :\n            Object.keys(variableGradients);\n        (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n            const oneMinusAccBeta1 = (0,_ops_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(1, this.accBeta1);\n            const oneMinusAccBeta2 = (0,_ops_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(1, this.accBeta2);\n            varNames.forEach((name, i) => {\n                const value = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[name];\n                const trainable = false;\n                if (this.accumulatedFirstMoment[i] == null) {\n                    this.accumulatedFirstMoment[i] = {\n                        originalName: `${name}/m`,\n                        variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_5__.zerosLike)(value).variable(trainable))\n                    };\n                }\n                if (this.accumulatedSecondMoment[i] == null) {\n                    this.accumulatedSecondMoment[i] = {\n                        originalName: `${name}/v`,\n                        variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_5__.zerosLike)(value).variable(trainable))\n                    };\n                }\n                const gradient = Array.isArray(variableGradients) ?\n                    variableGradients[i].tensor :\n                    variableGradients[name];\n                if (gradient == null) {\n                    return;\n                }\n                const firstMoment = this.accumulatedFirstMoment[i].variable;\n                const secondMoment = this.accumulatedSecondMoment[i].variable;\n                const newFirstMoment = (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(firstMoment, this.beta1), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(gradient, 1 - this.beta1));\n                const newSecondMoment = (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(secondMoment, this.beta2), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)((0,_ops_square__WEBPACK_IMPORTED_MODULE_8__.square)(gradient), 1 - this.beta2));\n                const biasCorrectedFirstMoment = (0,_ops_div__WEBPACK_IMPORTED_MODULE_9__.div)(newFirstMoment, oneMinusAccBeta1);\n                const biasCorrectedSecondMoment = (0,_ops_div__WEBPACK_IMPORTED_MODULE_9__.div)(newSecondMoment, oneMinusAccBeta2);\n                firstMoment.assign(newFirstMoment);\n                secondMoment.assign(newSecondMoment);\n                const newValue = (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)((0,_ops_div__WEBPACK_IMPORTED_MODULE_9__.div)(biasCorrectedFirstMoment, (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_ops_sqrt__WEBPACK_IMPORTED_MODULE_10__.sqrt)(biasCorrectedSecondMoment), this.epsilon)), -this.learningRate), value);\n                value.assign(newValue);\n            });\n            this.accBeta1.assign((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(this.accBeta1, this.beta1));\n            this.accBeta2.assign((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(this.accBeta2, this.beta2));\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        this.accBeta1.dispose();\n        this.accBeta2.dispose();\n        if (this.accumulatedFirstMoment != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedFirstMoment.map(v => v.variable));\n        }\n        if (this.accumulatedSecondMoment != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedSecondMoment.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        const variables = [...this.accumulatedFirstMoment, ...this.accumulatedSecondMoment];\n        return [await this.saveIterations()].concat(variables.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n            this.accBeta1.assign((0,_ops_pow__WEBPACK_IMPORTED_MODULE_11__.pow)(this.beta1, this.iterations_ + 1));\n            this.accBeta2.assign((0,_ops_pow__WEBPACK_IMPORTED_MODULE_11__.pow)(this.beta2, this.iterations_ + 1));\n        });\n        const variableCount = weightValues.length / 2;\n        const trainable = false;\n        this.accumulatedFirstMoment =\n            weightValues.slice(0, variableCount).map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n        this.accumulatedSecondMoment =\n            weightValues.slice(variableCount, variableCount * 2)\n                .map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'beta1': this.beta1,\n            'beta2': this.beta2,\n            'epsilon': this.epsilon,\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['beta1'], config['beta2'], config['epsilon']);\n    }\n}\n/** @nocollapse */\nAdamOptimizer.className = 'Adam'; // Note: Name matters for Python compatibility.\n(0,_serialization__WEBPACK_IMPORTED_MODULE_12__.registerClass)(AdamOptimizer);\n//# sourceMappingURL=adam_optimizer.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js ***!
  \********************************************************************************/
/*! namespace exports */
/*! export AdamaxOptimizer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AdamaxOptimizer\": () => /* binding */ AdamaxOptimizer\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _ops_abs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ops/abs */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/abs.js\");\n/* harmony import */ var _ops_add__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ops/add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _ops_div__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _ops_maximum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ops/maximum */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/maximum.js\");\n/* harmony import */ var _ops_mul__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ops/mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _ops_scalar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _ops_sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _ops_zeros_like__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ops/zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n\nclass AdamaxOptimizer extends _optimizer__WEBPACK_IMPORTED_MODULE_1__.Optimizer {\n    constructor(learningRate, beta1, beta2, epsilon = null, decay = 0.0) {\n        super();\n        this.learningRate = learningRate;\n        this.beta1 = beta1;\n        this.beta2 = beta2;\n        this.epsilon = epsilon;\n        this.decay = decay;\n        this.accumulatedFirstMoment = [];\n        this.accumulatedWeightedInfNorm = [];\n        (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n            this.iteration = (0,_ops_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(0).variable();\n            this.accBeta1 = (0,_ops_scalar__WEBPACK_IMPORTED_MODULE_3__.scalar)(beta1).variable();\n        });\n        if (epsilon == null) {\n            this.epsilon = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backend.epsilon();\n        }\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n            const oneMinusAccBeta1 = (0,_ops_sub__WEBPACK_IMPORTED_MODULE_4__.sub)(1, this.accBeta1);\n            const lr = (0,_ops_div__WEBPACK_IMPORTED_MODULE_5__.div)(-this.learningRate, (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(this.iteration, this.decay), 1));\n            variableNames.forEach((name, i) => {\n                const value = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[name];\n                const trainable = false;\n                if (this.accumulatedFirstMoment[i] == null) {\n                    this.accumulatedFirstMoment[i] = {\n                        originalName: `${name}/m`,\n                        variable: (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_8__.zerosLike)(value).variable(trainable)\n                    };\n                }\n                if (this.accumulatedWeightedInfNorm[i] == null) {\n                    this.accumulatedWeightedInfNorm[i] = {\n                        originalName: `${name}/v`,\n                        variable: (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_8__.zerosLike)(value).variable(trainable)\n                    };\n                }\n                const gradient = Array.isArray(variableGradients) ?\n                    variableGradients[i].tensor :\n                    variableGradients[name];\n                if (gradient == null) {\n                    return;\n                }\n                const firstMoment = this.accumulatedFirstMoment[i].variable;\n                const weightedInfNorm = this.accumulatedWeightedInfNorm[i].variable;\n                const newFirstMoment = (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(firstMoment, this.beta1), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(gradient, 1 - this.beta1));\n                const ut0 = (0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(weightedInfNorm, this.beta2);\n                const ut1 = (0,_ops_abs__WEBPACK_IMPORTED_MODULE_9__.abs)(gradient);\n                const newWeightedInfNorm = (0,_ops_maximum__WEBPACK_IMPORTED_MODULE_10__.maximum)(ut0, ut1);\n                firstMoment.assign(newFirstMoment);\n                weightedInfNorm.assign(newWeightedInfNorm);\n                const newValue = (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)((0,_ops_div__WEBPACK_IMPORTED_MODULE_5__.div)(lr, oneMinusAccBeta1), (0,_ops_div__WEBPACK_IMPORTED_MODULE_5__.div)(newFirstMoment, (0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)(newWeightedInfNorm, this.epsilon))), value);\n                value.assign(newValue);\n            });\n            this.iteration.assign((0,_ops_add__WEBPACK_IMPORTED_MODULE_6__.add)(this.iteration, 1));\n            this.accBeta1.assign((0,_ops_mul__WEBPACK_IMPORTED_MODULE_7__.mul)(this.accBeta1, this.beta1));\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        this.accBeta1.dispose();\n        this.iteration.dispose();\n        if (this.accumulatedFirstMoment != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedFirstMoment.map(v => v.variable));\n        }\n        if (this.accumulatedWeightedInfNorm != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedWeightedInfNorm.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        throw new Error('getWeights() is not implemented for Adamax yet.');\n    }\n    async setWeights(weightValues) {\n        throw new Error('setWeights() is not implemented for Adamax yet.');\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'beta1': this.beta1,\n            'beta2': this.beta2,\n            'epsilon': this.epsilon,\n            'decay': this.decay\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['beta1'], config['beta2'], config['epsilon'], config['decay']);\n    }\n}\n/** @nocollapse */\nAdamaxOptimizer.className = 'Adamax'; // Note: Name matters for Python compatbility.\n(0,_serialization__WEBPACK_IMPORTED_MODULE_11__.registerClass)(AdamaxOptimizer);\n//# sourceMappingURL=adamax_optimizer.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js ***!
  \**********************************************************************************/
/*! namespace exports */
/*! export MomentumOptimizer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MomentumOptimizer\": () => /* binding */ MomentumOptimizer\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _ops_add__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _ops_mul__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ops/mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _ops_scalar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ops/scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _ops_zeros_like__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _sgd_optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sgd_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n/** @doclink Optimizer */\nclass MomentumOptimizer extends _sgd_optimizer__WEBPACK_IMPORTED_MODULE_1__.SGDOptimizer {\n    constructor(learningRate, momentum, useNesterov = false) {\n        super(learningRate);\n        this.learningRate = learningRate;\n        this.momentum = momentum;\n        this.useNesterov = useNesterov;\n        this.accumulations = [];\n        this.m = (0,_ops_scalar__WEBPACK_IMPORTED_MODULE_2__.scalar)(this.momentum);\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        variableNames.forEach((name, i) => {\n            const value = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[name];\n            if (this.accumulations[i] == null) {\n                const trainable = false;\n                this.accumulations[i] = {\n                    originalName: `${name}/momentum`,\n                    variable: (0,_globals__WEBPACK_IMPORTED_MODULE_3__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_4__.zerosLike)(value).variable(trainable))\n                };\n            }\n            const accumulation = this.accumulations[i].variable;\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            (0,_globals__WEBPACK_IMPORTED_MODULE_3__.tidy)(() => {\n                let newValue;\n                const newAccumulation = (0,_ops_add__WEBPACK_IMPORTED_MODULE_5__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_6__.mul)(this.m, accumulation), gradient);\n                if (this.useNesterov) {\n                    newValue = (0,_ops_add__WEBPACK_IMPORTED_MODULE_5__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_6__.mul)(this.c, (0,_ops_add__WEBPACK_IMPORTED_MODULE_5__.add)(gradient, (0,_ops_mul__WEBPACK_IMPORTED_MODULE_6__.mul)(newAccumulation, this.m))), value);\n                }\n                else {\n                    newValue = (0,_ops_add__WEBPACK_IMPORTED_MODULE_5__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_6__.mul)(this.c, newAccumulation), value);\n                }\n                accumulation.assign(newAccumulation);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        this.m.dispose();\n        if (this.accumulations != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_3__.dispose)(this.accumulations.map(v => v.variable));\n        }\n    }\n    /**\n     * Sets the momentum of the optimizer.\n     *\n     * @param momentum\n     */\n    setMomentum(momentum) {\n        this.momentum = momentum;\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        return [await this.saveIterations()].concat(this.accumulations.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        const trainable = false;\n        this.accumulations = weightValues.map(v => ({ originalName: v.name, variable: v.tensor.variable(trainable) }));\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'momentum': this.momentum,\n            'useNesterov': this.useNesterov\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['momentum'], config['useNesterov']);\n    }\n}\n/** @nocollapse */\nMomentumOptimizer.className = 'Momentum'; // Name matters for Python compatibility.\n(0,_serialization__WEBPACK_IMPORTED_MODULE_7__.registerClass)(MomentumOptimizer);\n//# sourceMappingURL=momentum_optimizer.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js ***!
  \*************************************************************************/
/*! namespace exports */
/*! export Optimizer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Optimizer\": () => /* binding */ Optimizer\n/* harmony export */ });\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../gradients */ \"./node_modules/@tensorflow/tfjs-core/dist/gradients.js\");\n/* harmony import */ var _ops_ops__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/ops */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/** @doc {heading: 'Training', subheading: 'Classes', namespace: 'train'} */\nclass Optimizer extends _serialization__WEBPACK_IMPORTED_MODULE_0__.Serializable {\n    /**\n     * Executes `f()` and minimizes the scalar output of `f()` by computing\n     * gradients of y with respect to the list of trainable variables provided by\n     * `varList`. If no list is provided, it defaults to all trainable variables.\n     *\n     * @param f The function to execute and whose output to minimize.\n     * @param returnCost Whether to return the scalar cost value produced by\n     * executing `f()`.\n     * @param varList An optional list of variables to update. If specified, only\n     * the trainable variables in varList will be updated by minimize. Defaults to\n     * all trainable variables.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers'}\n     */\n    minimize(f, returnCost = false, varList) {\n        const { value, grads } = this.computeGradients(f, varList);\n        if (varList != null) {\n            const gradArray = varList.map(v => ({ name: v.name, tensor: grads[v.name] }));\n            this.applyGradients(gradArray);\n        }\n        else {\n            this.applyGradients(grads);\n        }\n        // Dispose gradients.\n        (0,_globals__WEBPACK_IMPORTED_MODULE_1__.dispose)(grads);\n        if (returnCost) {\n            return value;\n        }\n        else {\n            value.dispose();\n            return null;\n        }\n    }\n    /**\n     * The number of iterations that this optimizer instance has been invoked for.\n     */\n    get iterations() {\n        if (this.iterations_ == null) {\n            this.iterations_ = 0;\n        }\n        return this.iterations_;\n    }\n    incrementIterations() {\n        this.iterations_ = this.iterations + 1;\n    }\n    /**\n     * Executes f() and computes the gradient of the scalar output of f() with\n     * respect to the list of trainable variables provided by `varList`. If no\n     * list is provided, it defaults to all trainable variables.\n     *\n     * @param f The function to execute and whose output to use for computing\n     * gradients with respect to variables.\n     * @param varList An optional list of variables to compute gradients with\n     * respect to. If specified, only the trainable variables in varList will have\n     * gradients computed with respect to. Defaults to all trainable variables.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers'}\n     */\n    computeGradients(f, varList) {\n        return (0,_gradients__WEBPACK_IMPORTED_MODULE_2__.variableGrads)(f, varList);\n    }\n    /**\n     * Dispose the variables (if any) owned by this optimizer instance.\n     */\n    dispose() {\n        if (this.iterations_ != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_1__.dispose)(this.iterations_);\n        }\n    }\n    async saveIterations() {\n        if (this.iterations_ == null) {\n            this.iterations_ = 0;\n        }\n        return {\n            name: 'iter',\n            // TODO(cais): Use 'int64' type when available.\n            tensor: (0,_ops_ops__WEBPACK_IMPORTED_MODULE_3__.scalar)(this.iterations_, 'int32')\n        };\n    }\n    async getWeights() {\n        throw new Error('getWeights() is not implemented for this optimizer yet.');\n    }\n    async setWeights(weightValues) {\n        throw new Error(`setWeights() is not implemented for this optimizer class ` +\n            `${this.getClassName()}`);\n    }\n    /**\n     * Extract the first element of the weight values and set it\n     * as the iterations counter variable of this instance of optimizer.\n     *\n     * @param weightValues\n     * @returns Weight values with the first element consumed and excluded.\n     */\n    async extractIterations(weightValues) {\n        this.iterations_ = (await weightValues[0].tensor.data())[0];\n        return weightValues.slice(1);\n    }\n}\nObject.defineProperty(Optimizer, Symbol.hasInstance, {\n    value: (instance) => {\n        return instance.minimize != null && instance.computeGradients != null &&\n            instance.applyGradients != null;\n    }\n});\n//# sourceMappingURL=optimizer.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer_constructors.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer_constructors.js ***!
  \**************************************************************************************/
/*! namespace exports */
/*! export OptimizerConstructors [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OptimizerConstructors\": () => /* binding */ OptimizerConstructors\n/* harmony export */ });\n/* harmony import */ var _adadelta_optimizer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./adadelta_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js\");\n/* harmony import */ var _adagrad_optimizer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./adagrad_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js\");\n/* harmony import */ var _adam_optimizer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./adam_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js\");\n/* harmony import */ var _adamax_optimizer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./adamax_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js\");\n/* harmony import */ var _momentum_optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./momentum_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js\");\n/* harmony import */ var _rmsprop_optimizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rmsprop_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js\");\n/* harmony import */ var _sgd_optimizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sgd_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\nclass OptimizerConstructors {\n    /**\n     * Constructs a `tf.SGDOptimizer` that uses stochastic gradient descent.\n     *\n     * ```js\n     * // Fit a quadratic function by learning the coefficients a, b, c.\n     * const xs = tf.tensor1d([0, 1, 2, 3]);\n     * const ys = tf.tensor1d([1.1, 5.9, 16.8, 33.9]);\n     *\n     * const a = tf.scalar(Math.random()).variable();\n     * const b = tf.scalar(Math.random()).variable();\n     * const c = tf.scalar(Math.random()).variable();\n     *\n     * // y = a * x^2 + b * x + c.\n     * const f = x => a.mul(x.square()).add(b.mul(x)).add(c);\n     * const loss = (pred, label) => pred.sub(label).square().mean();\n     *\n     * const learningRate = 0.01;\n     * const optimizer = tf.train.sgd(learningRate);\n     *\n     * // Train the model.\n     * for (let i = 0; i < 10; i++) {\n     *   optimizer.minimize(() => loss(f(xs), ys));\n     * }\n     *\n     * // Make predictions.\n     * console.log(\n     *     `a: ${a.dataSync()}, b: ${b.dataSync()}, c: ${c.dataSync()}`);\n     * const preds = f(xs).dataSync();\n     * preds.forEach((pred, i) => {\n     *   console.log(`x: ${i}, pred: ${pred}`);\n     * });\n     * ```\n     *\n     * @param learningRate The learning rate to use for the SGD algorithm.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static sgd(learningRate) {\n        return new _sgd_optimizer__WEBPACK_IMPORTED_MODULE_0__.SGDOptimizer(learningRate);\n    }\n    /**\n     * Constructs a `tf.MomentumOptimizer` that uses momentum gradient\n     * descent.\n     *\n     * See\n     * [http://proceedings.mlr.press/v28/sutskever13.pdf](\n     * http://proceedings.mlr.press/v28/sutskever13.pdf)\n     *\n     * @param learningRate The learning rate to use for the Momentum gradient\n     * descent algorithm.\n     * @param momentum The momentum to use for the momentum gradient descent\n     * algorithm.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static momentum(learningRate, momentum, useNesterov = false) {\n        return new _momentum_optimizer__WEBPACK_IMPORTED_MODULE_1__.MomentumOptimizer(learningRate, momentum, useNesterov);\n    }\n    /**\n     * Constructs a `tf.RMSPropOptimizer` that uses RMSProp gradient\n     * descent. This implementation uses plain momentum and is not centered\n     * version of RMSProp.\n     *\n     * See\n     * [http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf](\n     * http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf)\n     *\n     * @param learningRate The learning rate to use for the RMSProp gradient\n     * descent algorithm.\n     * @param decay The discounting factor for the history/coming gradient.\n     * @param momentum The momentum to use for the RMSProp gradient descent\n     * algorithm.\n     * @param epsilon Small value to avoid zero denominator.\n     * @param centered If true, gradients are normalized by the estimated\n     * variance of the gradient.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static rmsprop(learningRate, decay = .9, momentum = 0.0, epsilon = null, centered = false) {\n        return new _rmsprop_optimizer__WEBPACK_IMPORTED_MODULE_2__.RMSPropOptimizer(learningRate, decay, momentum, epsilon, centered);\n    }\n    /**\n     * Constructs a `tf.AdamOptimizer` that uses the Adam algorithm.\n     * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n     *\n     * @param learningRate The learning rate to use for the Adam gradient\n     * descent algorithm.\n     * @param beta1 The exponential decay rate for the 1st moment estimates.\n     * @param beta2 The exponential decay rate for the 2nd moment estimates.\n     * @param epsilon A small constant for numerical stability.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static adam(learningRate = 0.001, beta1 = 0.9, beta2 = 0.999, epsilon = null) {\n        return new _adam_optimizer__WEBPACK_IMPORTED_MODULE_3__.AdamOptimizer(learningRate, beta1, beta2, epsilon);\n    }\n    /**\n     * Constructs a `tf.AdadeltaOptimizer` that uses the Adadelta algorithm.\n     * See [https://arxiv.org/abs/1212.5701](https://arxiv.org/abs/1212.5701)\n     *\n     * @param learningRate The learning rate to use for the Adadelta gradient\n     * descent algorithm.\n     * @param rho The learning rate decay over each update.\n     * @param epsilon A constant epsilon used to better condition the grad\n     * update.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static adadelta(learningRate = .001, rho = .95, epsilon = null) {\n        return new _adadelta_optimizer__WEBPACK_IMPORTED_MODULE_4__.AdadeltaOptimizer(learningRate, rho, epsilon);\n    }\n    /**\n     * Constructs a `tf.AdamaxOptimizer` that uses the Adamax algorithm.\n     * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n     *\n     * @param learningRate The learning rate to use for the Adamax gradient\n     * descent algorithm.\n     * @param beta1 The exponential decay rate for the 1st moment estimates.\n     * @param beta2 The exponential decay rate for the 2nd moment estimates.\n     * @param epsilon A small constant for numerical stability.\n     * @param decay The learning rate decay over each update.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static adamax(learningRate = 0.002, beta1 = 0.9, beta2 = 0.999, epsilon = null, decay = 0.0) {\n        return new _adamax_optimizer__WEBPACK_IMPORTED_MODULE_5__.AdamaxOptimizer(learningRate, beta1, beta2, epsilon, decay);\n    }\n    /**\n     * Constructs a `tf.AdagradOptimizer` that uses the Adagrad algorithm.\n     * See\n     * [http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf](\n     * http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf)\n     * or\n     * [http://ruder.io/optimizing-gradient-descent/index.html#adagrad](\n     * http://ruder.io/optimizing-gradient-descent/index.html#adagrad)\n     *\n     * @param learningRate The learning rate to use for the Adagrad gradient\n     * descent algorithm.\n     * @param initialAccumulatorValue Starting value for the accumulators, must be\n     * positive.\n     *\n     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n     */\n    static adagrad(learningRate, initialAccumulatorValue = 0.1) {\n        return new _adagrad_optimizer__WEBPACK_IMPORTED_MODULE_6__.AdagradOptimizer(learningRate, initialAccumulatorValue);\n    }\n}\n//# sourceMappingURL=optimizer_constructors.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer_constructors.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js ***!
  \*********************************************************************************/
/*! namespace exports */
/*! export RMSPropOptimizer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RMSPropOptimizer\": () => /* binding */ RMSPropOptimizer\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _ops_add__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _ops_div__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ops/div */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/div.js\");\n/* harmony import */ var _ops_mul__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _ops_sqrt__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ops/sqrt */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sqrt.js\");\n/* harmony import */ var _ops_square__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ops/square */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/square.js\");\n/* harmony import */ var _ops_sub__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ops/sub */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/sub.js\");\n/* harmony import */ var _ops_zeros_like__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/zeros_like */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/zeros_like.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n\n\n\n\n/** @doclink Optimizer */\nclass RMSPropOptimizer extends _optimizer__WEBPACK_IMPORTED_MODULE_1__.Optimizer {\n    constructor(learningRate, decay = 0.9, momentum = 0.0, epsilon = null, centered = false) {\n        super();\n        this.learningRate = learningRate;\n        this.decay = decay;\n        this.momentum = momentum;\n        this.epsilon = epsilon;\n        this.accumulatedMeanSquares = [];\n        this.accumulatedMoments = [];\n        this.accumulatedMeanGrads = [];\n        this.centered = centered;\n        if (epsilon == null) {\n            this.epsilon = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backend.epsilon();\n        }\n        if (learningRate == null) {\n            throw new Error(`learningRate for RMSPropOptimizer must be defined.`);\n        }\n    }\n    applyGradients(variableGradients) {\n        const variableNames = Array.isArray(variableGradients) ?\n            variableGradients.map(item => item.name) :\n            Object.keys(variableGradients);\n        variableNames.forEach((name, i) => {\n            const value = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[name];\n            const trainable = false;\n            if (this.accumulatedMeanSquares[i] == null) {\n                this.accumulatedMeanSquares[i] = {\n                    originalName: `${name}/rms`,\n                    variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_3__.zerosLike)(value).variable(trainable))\n                };\n            }\n            if (this.accumulatedMoments[i] == null) {\n                this.accumulatedMoments[i] = {\n                    originalName: `${name}/momentum`,\n                    variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_3__.zerosLike)(value).variable(trainable))\n                };\n            }\n            if (this.accumulatedMeanGrads[i] == null && this.centered) {\n                this.accumulatedMeanGrads[i] = {\n                    originalName: `${name}/mg`,\n                    variable: (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => (0,_ops_zeros_like__WEBPACK_IMPORTED_MODULE_3__.zerosLike)(value).variable(trainable))\n                };\n            }\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            const accumulatedMeanSquare = this.accumulatedMeanSquares[i].variable;\n            const accumulatedMoments = this.accumulatedMoments[i].variable;\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n                const newAccumulatedMeanSquare = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(accumulatedMeanSquare, this.decay), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_ops_square__WEBPACK_IMPORTED_MODULE_6__.square)(gradient), 1 - this.decay));\n                if (this.centered) {\n                    const accumulatedMeanGrad = this.accumulatedMeanGrads[i].variable;\n                    // Centered gradient\n                    const newAccumulatedMeanGrad = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(accumulatedMeanGrad, this.decay), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(gradient, 1 - this.decay));\n                    const gradContribution = (0,_ops_div__WEBPACK_IMPORTED_MODULE_7__.div)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(gradient, this.learningRate), (0,_ops_sqrt__WEBPACK_IMPORTED_MODULE_8__.sqrt)((0,_ops_sub__WEBPACK_IMPORTED_MODULE_9__.sub)(newAccumulatedMeanSquare, (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_square__WEBPACK_IMPORTED_MODULE_6__.square)(newAccumulatedMeanGrad), this.epsilon))));\n                    const newAccumulatedMoments = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(accumulatedMoments, this.momentum), gradContribution);\n                    accumulatedMeanSquare.assign(newAccumulatedMeanSquare);\n                    accumulatedMeanGrad.assign(newAccumulatedMeanGrad);\n                    accumulatedMoments.assign(newAccumulatedMoments);\n                    const newValue = (0,_ops_sub__WEBPACK_IMPORTED_MODULE_9__.sub)(value, newAccumulatedMoments);\n                    value.assign(newValue);\n                }\n                else {\n                    // Plain gradient\n                    const newAccumulatedMeanSquare = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(accumulatedMeanSquare, this.decay), (0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)((0,_ops_square__WEBPACK_IMPORTED_MODULE_6__.square)(gradient), 1 - this.decay));\n                    const newAccumulatedMoments = (0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(accumulatedMoments, this.momentum), (0,_ops_div__WEBPACK_IMPORTED_MODULE_7__.div)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_5__.mul)(gradient, this.learningRate), (0,_ops_sqrt__WEBPACK_IMPORTED_MODULE_8__.sqrt)((0,_ops_add__WEBPACK_IMPORTED_MODULE_4__.add)(newAccumulatedMeanSquare, this.epsilon))));\n                    accumulatedMeanSquare.assign(newAccumulatedMeanSquare);\n                    accumulatedMoments.assign(newAccumulatedMoments);\n                    const newValue = (0,_ops_sub__WEBPACK_IMPORTED_MODULE_9__.sub)(value, newAccumulatedMoments);\n                    value.assign(newValue);\n                }\n            });\n        });\n        this.incrementIterations();\n    }\n    dispose() {\n        if (this.accumulatedMeanSquares != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedMeanSquares.map(v => v.variable));\n        }\n        if (this.accumulatedMeanGrads != null && this.centered) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedMeanGrads.map(v => v.variable));\n        }\n        if (this.accumulatedMoments != null) {\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.dispose)(this.accumulatedMoments.map(v => v.variable));\n        }\n    }\n    async getWeights() {\n        // Order matters for Python compatibility.\n        const variables = [...this.accumulatedMeanSquares, ...this.accumulatedMoments];\n        if (this.centered) {\n            variables.push(...this.accumulatedMeanGrads);\n        }\n        return [await this.saveIterations()].concat(variables.map(v => ({ name: v.originalName, tensor: v.variable })));\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        const variableCount = this.centered ? weightValues.length / 3 : weightValues.length / 2;\n        const trainable = false;\n        this.accumulatedMeanSquares =\n            weightValues.slice(0, variableCount).map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n        this.accumulatedMoments =\n            weightValues.slice(variableCount, variableCount * 2)\n                .map(v => ({\n                originalName: v.name,\n                variable: v.tensor.variable(trainable)\n            }));\n        if (this.centered) {\n            this.accumulatedMeanGrads =\n                weightValues.slice(variableCount * 2, variableCount * 3)\n                    .map(v => ({\n                    originalName: v.name,\n                    variable: v.tensor.variable(trainable)\n                }));\n        }\n    }\n    getConfig() {\n        return {\n            'learningRate': this.learningRate,\n            'decay': this.decay,\n            'momentum': this.momentum,\n            'epsilon': this.epsilon,\n            'centered': this.centered\n        };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate'], config['decay'], config['momentum'], config['epsilon'], config['centered']);\n    }\n}\n/** @nocollapse */\nRMSPropOptimizer.className = 'RMSProp'; // Note: Name matters for Python compatibility.\n(0,_serialization__WEBPACK_IMPORTED_MODULE_10__.registerClass)(RMSPropOptimizer);\n//# sourceMappingURL=rmsprop_optimizer.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js ***!
  \*****************************************************************************/
/*! namespace exports */
/*! export SGDOptimizer [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SGDOptimizer\": () => /* binding */ SGDOptimizer\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../globals */ \"./node_modules/@tensorflow/tfjs-core/dist/globals.js\");\n/* harmony import */ var _ops_add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ops/add */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/add.js\");\n/* harmony import */ var _ops_mul__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ops/mul */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/mul.js\");\n/* harmony import */ var _ops_scalar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ops/scalar */ \"./node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js\");\n/* harmony import */ var _serialization__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../serialization */ \"./node_modules/@tensorflow/tfjs-core/dist/serialization.js\");\n/* harmony import */ var _optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\n\n\n/** @doclink Optimizer */\nclass SGDOptimizer extends _optimizer__WEBPACK_IMPORTED_MODULE_1__.Optimizer {\n    constructor(learningRate) {\n        super();\n        this.learningRate = learningRate;\n        this.setLearningRate(learningRate);\n    }\n    applyGradients(variableGradients) {\n        const varNames = Array.isArray(variableGradients) ?\n            variableGradients.map(v => v.name) :\n            Object.keys(variableGradients);\n        varNames.forEach((name, i) => {\n            const gradient = Array.isArray(variableGradients) ?\n                variableGradients[i].tensor :\n                variableGradients[name];\n            if (gradient == null) {\n                return;\n            }\n            const value = _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.registeredVariables[name];\n            (0,_globals__WEBPACK_IMPORTED_MODULE_2__.tidy)(() => {\n                const newValue = (0,_ops_add__WEBPACK_IMPORTED_MODULE_3__.add)((0,_ops_mul__WEBPACK_IMPORTED_MODULE_4__.mul)(this.c, gradient), value);\n                value.assign(newValue);\n            });\n        });\n        this.incrementIterations();\n    }\n    /**\n     * Sets the learning rate of the optimizer.\n     */\n    setLearningRate(learningRate) {\n        this.learningRate = learningRate;\n        if (this.c != null) {\n            this.c.dispose();\n        }\n        this.c = (0,_globals__WEBPACK_IMPORTED_MODULE_2__.keep)((0,_ops_scalar__WEBPACK_IMPORTED_MODULE_5__.scalar)(-learningRate));\n    }\n    dispose() {\n        this.c.dispose();\n    }\n    async getWeights() {\n        return [await this.saveIterations()];\n    }\n    async setWeights(weightValues) {\n        weightValues = await this.extractIterations(weightValues);\n        if (weightValues.length !== 0) {\n            throw new Error('SGD optimizer does not have settable weights.');\n        }\n    }\n    getConfig() {\n        return { 'learningRate': this.learningRate };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config['learningRate']);\n    }\n}\n/** @nocollapse */\nSGDOptimizer.className = 'SGD'; // Note: Name matters for Python compatibility.\n(0,_serialization__WEBPACK_IMPORTED_MODULE_6__.registerClass)(SGDOptimizer);\n//# sourceMappingURL=sgd_optimizer.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_browser.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_browser.js ***!
  \*******************************************************************************/
/*! namespace exports */
/*! export PlatformBrowser [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PlatformBrowser\": () => /* binding */ PlatformBrowser\n/* harmony export */ });\n/* harmony import */ var _flags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flags */ \"./node_modules/@tensorflow/tfjs-core/dist/flags.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _io_indexed_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../io/indexed_db */ \"./node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js\");\n/* harmony import */ var _io_local_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../io/local_storage */ \"./node_modules/@tensorflow/tfjs-core/dist/io/local_storage.js\");\n/* harmony import */ var _io_model_management__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../io/model_management */ \"./node_modules/@tensorflow/tfjs-core/dist/io/model_management.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n\nclass PlatformBrowser {\n    fetch(path, init) {\n        return fetch(path, init);\n    }\n    now() {\n        return performance.now();\n    }\n    encode(text, encoding) {\n        if (encoding !== 'utf-8' && encoding !== 'utf8') {\n            throw new Error(`Browser's encoder only supports utf-8, but got ${encoding}`);\n        }\n        if (this.textEncoder == null) {\n            this.textEncoder = new TextEncoder();\n        }\n        return this.textEncoder.encode(text);\n    }\n    decode(bytes, encoding) {\n        return new TextDecoder(encoding).decode(bytes);\n    }\n}\nif ((0,_environment__WEBPACK_IMPORTED_MODULE_4__.env)().get('IS_BROWSER')) {\n    (0,_environment__WEBPACK_IMPORTED_MODULE_4__.env)().setPlatform('browser', new PlatformBrowser());\n    // Register LocalStorage IOHandler\n    try {\n        _io_model_management__WEBPACK_IMPORTED_MODULE_3__.ModelStoreManagerRegistry.registerManager(_io_local_storage__WEBPACK_IMPORTED_MODULE_2__.BrowserLocalStorage.URL_SCHEME, new _io_local_storage__WEBPACK_IMPORTED_MODULE_2__.BrowserLocalStorageManager());\n    }\n    catch (err) {\n    }\n    // Register IndexedDB IOHandler\n    try {\n        _io_model_management__WEBPACK_IMPORTED_MODULE_3__.ModelStoreManagerRegistry.registerManager(_io_indexed_db__WEBPACK_IMPORTED_MODULE_1__.BrowserIndexedDB.URL_SCHEME, new _io_indexed_db__WEBPACK_IMPORTED_MODULE_1__.BrowserIndexedDBManager());\n    }\n    catch (err) {\n    }\n}\n//# sourceMappingURL=platform_browser.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_browser.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_node.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_node.js ***!
  \****************************************************************************/
/*! namespace exports */
/*! export PlatformNode [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getNodeFetch [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getSystemFetch [provided] [no usage info] [missing usage info prevents renaming] */
/*! export resetSystemFetch [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setSystemFetch [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getNodeFetch\": () => /* binding */ getNodeFetch,\n/* harmony export */   \"resetSystemFetch\": () => /* binding */ resetSystemFetch,\n/* harmony export */   \"setSystemFetch\": () => /* binding */ setSystemFetch,\n/* harmony export */   \"getSystemFetch\": () => /* binding */ getSystemFetch,\n/* harmony export */   \"PlatformNode\": () => /* binding */ PlatformNode\n/* harmony export */ });\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n// We are wrapping this within an object so it can be stubbed by Jasmine.\nconst getNodeFetch = {\n    // tslint:disable-next-line:no-require-imports\n    importFetch: () => __webpack_require__(/*! node-fetch */ \"?7581\")\n};\nlet systemFetch;\n// These getters and setters are for testing so we don't export a mutable\n// variable.\nfunction resetSystemFetch() {\n    systemFetch = null;\n}\nfunction setSystemFetch(fetchFn) {\n    systemFetch = fetchFn;\n}\nfunction getSystemFetch() {\n    return systemFetch;\n}\nclass PlatformNode {\n    constructor() {\n        // tslint:disable-next-line:no-require-imports\n        this.util = __webpack_require__(/*! util */ \"?0bed\");\n        // According to the spec, the built-in encoder can do only UTF-8 encoding.\n        // https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder/TextEncoder\n        this.textEncoder = new this.util.TextEncoder();\n    }\n    fetch(path, requestInits) {\n        if ((0,_environment__WEBPACK_IMPORTED_MODULE_0__.env)().global.fetch != null) {\n            return (0,_environment__WEBPACK_IMPORTED_MODULE_0__.env)().global.fetch(path, requestInits);\n        }\n        if (systemFetch == null) {\n            systemFetch = getNodeFetch.importFetch();\n        }\n        return systemFetch(path, requestInits);\n    }\n    now() {\n        const time = process.hrtime();\n        return time[0] * 1000 + time[1] / 1000000;\n    }\n    encode(text, encoding) {\n        if (encoding !== 'utf-8' && encoding !== 'utf8') {\n            throw new Error(`Node built-in encoder only supports utf-8, but got ${encoding}`);\n        }\n        return this.textEncoder.encode(text);\n    }\n    decode(bytes, encoding) {\n        if (bytes.length === 0) {\n            return '';\n        }\n        return new this.util.TextDecoder(encoding).decode(bytes);\n    }\n}\nif ((0,_environment__WEBPACK_IMPORTED_MODULE_0__.env)().get('IS_NODE')) {\n    (0,_environment__WEBPACK_IMPORTED_MODULE_0__.env)().setPlatform('node', new PlatformNode());\n}\n//# sourceMappingURL=platform_node.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/platforms/platform_node.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/profiler.js":
/*!*************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/profiler.js ***!
  \*************************************************************/
/*! namespace exports */
/*! export Logger [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Profiler [provided] [no usage info] [missing usage info prevents renaming] */
/*! export checkComputationForErrors [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Profiler\": () => /* binding */ Profiler,\n/* harmony export */   \"checkComputationForErrors\": () => /* binding */ checkComputationForErrors,\n/* harmony export */   \"Logger\": () => /* binding */ Logger\n/* harmony export */ });\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\nclass Profiler {\n    constructor(backendTimer, logger) {\n        this.backendTimer = backendTimer;\n        this.logger = logger;\n        if (logger == null) {\n            this.logger = new Logger();\n        }\n    }\n    profileKernel(kernelName, inputs, f) {\n        let outputs;\n        const holdResultWrapperFn = () => {\n            outputs = f();\n        };\n        let timer;\n        const start = _util__WEBPACK_IMPORTED_MODULE_0__.now();\n        if (this.backendTimer.timerAvailable()) {\n            timer = this.backendTimer.time(holdResultWrapperFn);\n        }\n        else {\n            holdResultWrapperFn();\n            for (const output of outputs) {\n                output.dataSync();\n            }\n            timer = Promise.resolve({ kernelMs: _util__WEBPACK_IMPORTED_MODULE_0__.now() - start });\n        }\n        if ((0,_environment__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('CHECK_COMPUTATION_FOR_ERRORS')) {\n            for (let i = 0; i < outputs.length; i++) {\n                const output = outputs[i];\n                // Dangling promise here because we don't want to propagate up\n                // asynchronicity.\n                output.data().then(tensorVals => {\n                    checkComputationForErrors(tensorVals, output.dtype, kernelName);\n                });\n            }\n        }\n        const kernelProfile = {\n            kernelName,\n            outputs,\n            inputs,\n            timeMs: timer.then(timing => timing.kernelMs),\n            extraInfo: timer.then(timing => timing.getExtraProfileInfo != null ?\n                timing.getExtraProfileInfo() :\n                '')\n        };\n        return kernelProfile;\n    }\n    logKernelProfile(kernelProfile) {\n        const { kernelName, outputs, timeMs, inputs, extraInfo } = kernelProfile;\n        outputs.forEach(result => {\n            Promise.all([result.data(), timeMs, extraInfo]).then(valueContainer => {\n                this.logger.logKernelProfile(kernelName, result, valueContainer[0], valueContainer[1], inputs, valueContainer[2]);\n            });\n        });\n    }\n}\nfunction checkComputationForErrors(vals, dtype, kernelName) {\n    if (dtype !== 'float32') {\n        // Only floating point computations will generate NaN values\n        return false;\n    }\n    for (let i = 0; i < vals.length; i++) {\n        const num = vals[i];\n        if (isNaN(num) || !isFinite(num)) {\n            // Throwing custom exception so behavior is testable.\n            console.warn(`Found ${num} in the result of '${kernelName}'`);\n            return true;\n        }\n    }\n    return false;\n}\nclass Logger {\n    logKernelProfile(name, result, vals, timeMs, inputs, extraInfo) {\n        const time = typeof timeMs === 'number' ? _util__WEBPACK_IMPORTED_MODULE_2__.rightPad(`${timeMs}ms`, 9) :\n            timeMs['error'];\n        const paddedName = _util__WEBPACK_IMPORTED_MODULE_2__.rightPad(name, 25);\n        const rank = result.rank;\n        const size = result.size;\n        const shape = _util__WEBPACK_IMPORTED_MODULE_2__.rightPad(result.shape.toString(), 14);\n        let inputShapesDescription = '';\n        for (const name in inputs) {\n            const input = inputs[name];\n            if (input != null) {\n                // The input might be a non-tensor (e.g HTMLImageElement), in which case\n                // we claim the output shape as input shape.\n                const inputShape = input.shape || result.shape;\n                const inputRank = inputShape.length;\n                inputShapesDescription +=\n                    `${name}: ${inputRank}D ${inputRank > 0 ? inputShape : ''} `;\n            }\n        }\n        console.log(`%c${paddedName}\\t%c${time}\\t%c${rank}D ${shape}\\t%c${size}\\t%c${inputShapesDescription}\\t%c${extraInfo}`, 'font-weight:bold', 'color:red', 'color:blue', 'color: orange', 'color: green', 'color: steelblue');\n    }\n}\n//# sourceMappingURL=profiler.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/profiler.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/serialization.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/serialization.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export Serializable [provided] [no usage info] [missing usage info prevents renaming] */
/*! export SerializationMap [provided] [no usage info] [missing usage info prevents renaming] */
/*! export registerClass [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Serializable\": () => /* binding */ Serializable,\n/* harmony export */   \"SerializationMap\": () => /* binding */ SerializationMap,\n/* harmony export */   \"registerClass\": () => /* binding */ registerClass\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n/**\n * Serializable defines the serialization contract.\n *\n * TFJS requires serializable classes to return their className when asked\n * to avoid issues with minification.\n */\nclass Serializable {\n    /**\n     * Return the class name for this class to use in serialization contexts.\n     *\n     * Generally speaking this will be the same thing that constructor.name\n     * would have returned.  However, the class name needs to be robust\n     * against minification for serialization/deserialization to work properly.\n     *\n     * There's also places such as initializers.VarianceScaling, where\n     * implementation details between different languages led to different\n     * class hierarchies and a non-leaf node is used for serialization purposes.\n     */\n    getClassName() {\n        return this.constructor\n            .className;\n    }\n    /**\n     * Creates an instance of T from a ConfigDict.\n     *\n     * This works for most descendants of serializable.  A few need to\n     * provide special handling.\n     * @param cls A Constructor for the class to instantiate.\n     * @param config The Configuration for the object.\n     */\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls(config);\n    }\n}\n/**\n * Maps string keys to class constructors.\n *\n * Used during (de)serialization from the cross-language JSON format, which\n * requires the class name in the serialization format matches the class\n * names as used in Python, should it exist.\n */\nclass SerializationMap {\n    constructor() {\n        this.classNameMap = {};\n    }\n    /**\n     * Returns the singleton instance of the map.\n     */\n    static getMap() {\n        if (SerializationMap.instance == null) {\n            SerializationMap.instance = new SerializationMap();\n        }\n        return SerializationMap.instance;\n    }\n    /**\n     * Registers the class as serializable.\n     */\n    static register(cls) {\n        SerializationMap.getMap().classNameMap[cls.className] =\n            [cls, cls.fromConfig];\n    }\n}\n/**\n * Register a class with the serialization map of TensorFlow.js.\n *\n * This is often used for registering custom Layers, so they can be\n * serialized and deserialized.\n *\n * Example:\n *\n * ```js\n * class MyCustomLayer extends tf.layers.Layer {\n *   static className = 'MyCustomLayer';\n *\n *   constructor(config) {\n *     super(config);\n *   }\n * }\n * tf.serialization.registerClass(MyCustomLayer);\n * ```\n *\n * @param cls The class to be registered. It must have a public static member\n *   called `className` defined and the value must be a non-empty string.\n *\n * @doc {heading: 'Models', subheading: 'Serialization', ignoreCI: true}\n */\nfunction registerClass(cls) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(cls.className != null, () => `Class being registered does not have the static className ` +\n        `property defined.`);\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof cls.className === 'string', () => `className is required to be a string, but got type ` +\n        typeof cls.className);\n    (0,_util__WEBPACK_IMPORTED_MODULE_0__.assert)(cls.className.length > 0, () => `Class being registered has an empty-string as its className, ` +\n        `which is disallowed.`);\n    SerializationMap.register(cls);\n}\n//# sourceMappingURL=serialization.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/serialization.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/tape.js":
/*!*********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/tape.js ***!
  \*********************************************************/
/*! namespace exports */
/*! export backpropagateGradients [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getFilteredNodesXToY [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getFilteredNodesXToY\": () => /* binding */ getFilteredNodesXToY,\n/* harmony export */   \"backpropagateGradients\": () => /* binding */ backpropagateGradients\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n/**\n * Computes a list of TapeNodes that connect x to y, filtering everything else\n * out and preserving the order of the original tape elements.\n *\n * @param tape The tape elements to filter.\n * @param xs The input Tensors.\n * @param y The output Tensor.\n */\nfunction getFilteredNodesXToY(tape, xs, y) {\n    // Forward pass to compute all the nodes and Tensors that are transitively a\n    // function of x.\n    const tensorsFromX = {};\n    const nodesFromX = {};\n    for (let i = 0; i < xs.length; i++) {\n        tensorsFromX[xs[i].id] = true;\n    }\n    for (let i = 0; i < tape.length; i++) {\n        const node = tape[i];\n        const nodeInputs = node.inputs;\n        for (const inputName in nodeInputs) {\n            const input = nodeInputs[inputName];\n            let anyInputFromX = false;\n            for (let j = 0; j < xs.length; j++) {\n                if (tensorsFromX[input.id]) {\n                    node.outputs.forEach(output => tensorsFromX[output.id] = true);\n                    anyInputFromX = true;\n                    nodesFromX[node.id] = true;\n                    break;\n                }\n            }\n            if (anyInputFromX) {\n                break;\n            }\n        }\n    }\n    // Backward pass to find all of the nodes and Tensors that lead to y.\n    const tensorsLeadToY = {};\n    tensorsLeadToY[y.id] = true;\n    const nodesToY = {};\n    for (let i = tape.length - 1; i >= 0; i--) {\n        const node = tape[i];\n        const nodeInputs = node.inputs;\n        // If any of the outputs lead to y, mark all of the inputs as leading to y.\n        for (let j = 0; j < node.outputs.length; j++) {\n            if (tensorsLeadToY[node.outputs[j].id]) {\n                for (const inputName in nodeInputs) {\n                    tensorsLeadToY[nodeInputs[inputName].id] = true;\n                    nodesToY[node.id] = true;\n                }\n                break;\n            }\n        }\n    }\n    // Return the paths that come from x and lead to y.\n    const filteredTape = [];\n    for (let i = 0; i < tape.length; i++) {\n        const node = tape[i];\n        if (nodesFromX[node.id] && nodesToY[node.id]) {\n            // Prune the inputs from the node that aren't a function of x.\n            const prunedInputs = {};\n            for (const inputName in node.inputs) {\n                const nodeInput = node.inputs[inputName];\n                if (tensorsFromX[nodeInput.id]) {\n                    prunedInputs[inputName] = nodeInput;\n                }\n            }\n            // Copy the node and overwrite inputsAndArgs to the pruned version.\n            const prunedNode = Object.assign({}, node);\n            prunedNode.inputs = prunedInputs;\n            prunedNode.outputs = node.outputs;\n            filteredTape.push(prunedNode);\n        }\n    }\n    return filteredTape;\n}\n/**\n * Backpropagate gradients through the filtered TapeNodes.\n *\n * @param tensorAccumulatedGradientMap A map of Tensor to its gradient. This map\n * is mutated by this method.\n * @param filteredTape The filtered TapeNodes to backprop through.\n */\nfunction backpropagateGradients(tensorAccumulatedGradientMap, filteredTape, tidy, add) {\n    // Walk the tape backward and keep a map of Tensor to its gradient.\n    for (let i = filteredTape.length - 1; i >= 0; i--) {\n        const node = filteredTape[i];\n        const dys = [];\n        node.outputs.forEach(o => {\n            const gradTensor = tensorAccumulatedGradientMap[o.id];\n            if (gradTensor != null) {\n                dys.push(gradTensor);\n            }\n            else {\n                // This particular output is not in the back-propagation subgraph, so it\n                // does not affect the final output, thus we put null for its dy.\n                dys.push(null);\n            }\n        });\n        if (node.gradient == null) {\n            throw new Error(`Cannot compute gradient: gradient function not found ` +\n                `for ${node.kernelName}.`);\n        }\n        // Backprop dy through this node and accumulate gradients over the inputs.\n        const inputGradients = node.gradient(dys);\n        for (const inputName in node.inputs) {\n            if (!(inputName in inputGradients)) {\n                throw new Error(`Cannot backprop through input ${inputName}. ` +\n                    `Available gradients found: ${Object.keys(inputGradients)}.`);\n            }\n            // Call the gradient function.\n            const dx = tidy(() => inputGradients[inputName]());\n            if (dx.dtype !== 'float32') {\n                throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ` +\n                    `${inputName} must have 'float32' dtype, but has '${dx.dtype}'`);\n            }\n            const x = node.inputs[inputName];\n            if (!_util__WEBPACK_IMPORTED_MODULE_0__.arraysEqual(dx.shape, x.shape)) {\n                throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ` +\n                    `'${inputName}' has shape '${dx.shape}', which does not match ` +\n                    `the shape of the input '${x.shape}'`);\n            }\n            if (tensorAccumulatedGradientMap[x.id] == null) {\n                tensorAccumulatedGradientMap[x.id] = dx;\n            }\n            else {\n                const curGradient = tensorAccumulatedGradientMap[x.id];\n                tensorAccumulatedGradientMap[x.id] = add(curGradient, dx);\n                curGradient.dispose();\n            }\n        }\n    }\n}\n//# sourceMappingURL=tape.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/tape.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/tensor.js":
/*!***********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/tensor.js ***!
  \***********************************************************/
/*! namespace exports */
/*! export Tensor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export TensorBuffer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Variable [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getGlobalTensorClass [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setDeprecationWarningFn [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setOpHandler [provided] [no usage info] [missing usage info prevents renaming] */
/*! export setTensorTracker [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TensorBuffer\": () => /* binding */ TensorBuffer,\n/* harmony export */   \"setTensorTracker\": () => /* binding */ setTensorTracker,\n/* harmony export */   \"setOpHandler\": () => /* binding */ setOpHandler,\n/* harmony export */   \"setDeprecationWarningFn\": () => /* binding */ setDeprecationWarningFn,\n/* harmony export */   \"Tensor\": () => /* binding */ Tensor,\n/* harmony export */   \"getGlobalTensorClass\": () => /* binding */ getGlobalTensorClass,\n/* harmony export */   \"Variable\": () => /* binding */ Variable\n/* harmony export */ });\n/* harmony import */ var _global_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./global_util */ \"./node_modules/@tensorflow/tfjs-core/dist/global_util.js\");\n/* harmony import */ var _tensor_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_format */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_format.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\n/**\n * A mutable object, similar to `tf.Tensor`, that allows users to set values\n * at locations before converting to an immutable `tf.Tensor`.\n *\n * See `tf.buffer` for creating a tensor buffer.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nclass TensorBuffer {\n    constructor(shape, dtype, values) {\n        this.dtype = dtype;\n        this.shape = shape.slice();\n        this.size = _util__WEBPACK_IMPORTED_MODULE_0__.sizeFromShape(shape);\n        if (values != null) {\n            const n = values.length;\n            _util__WEBPACK_IMPORTED_MODULE_0__.assert(n === this.size, () => `Length of values '${n}' does not match the size ` +\n                `inferred by the shape '${this.size}'.`);\n        }\n        if (dtype === 'complex64') {\n            throw new Error(`complex64 dtype TensorBuffers are not supported. Please create ` +\n                `a TensorBuffer for the real and imaginary parts separately and ` +\n                `call tf.complex(real, imag).`);\n        }\n        this.values = values || _util__WEBPACK_IMPORTED_MODULE_0__.getArrayFromDType(dtype, this.size);\n        this.strides = (0,_util__WEBPACK_IMPORTED_MODULE_0__.computeStrides)(shape);\n    }\n    /**\n     * Sets a value in the buffer at a given location.\n     *\n     * @param value The value to set.\n     * @param locs  The location indices.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    set(value, ...locs) {\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        _util__WEBPACK_IMPORTED_MODULE_0__.assert(locs.length === this.rank, () => `The number of provided coordinates (${locs.length}) must ` +\n            `match the rank (${this.rank})`);\n        const index = this.locToIndex(locs);\n        this.values[index] = value;\n    }\n    /**\n     * Returns the value in the buffer at the provided location.\n     *\n     * @param locs The location indices.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    get(...locs) {\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        let i = 0;\n        for (const loc of locs) {\n            if (loc < 0 || loc >= this.shape[i]) {\n                const msg = `Requested out of range element at ${locs}. ` +\n                    `  Buffer shape=${this.shape}`;\n                throw new Error(msg);\n            }\n            i++;\n        }\n        let index = locs[locs.length - 1];\n        for (let i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return this.values[index];\n    }\n    locToIndex(locs) {\n        if (this.rank === 0) {\n            return 0;\n        }\n        else if (this.rank === 1) {\n            return locs[0];\n        }\n        let index = locs[locs.length - 1];\n        for (let i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return index;\n    }\n    indexToLoc(index) {\n        if (this.rank === 0) {\n            return [];\n        }\n        else if (this.rank === 1) {\n            return [index];\n        }\n        const locs = new Array(this.shape.length);\n        for (let i = 0; i < locs.length - 1; ++i) {\n            locs[i] = Math.floor(index / this.strides[i]);\n            index -= locs[i] * this.strides[i];\n        }\n        locs[locs.length - 1] = index;\n        return locs;\n    }\n    get rank() {\n        return this.shape.length;\n    }\n    /**\n     * Creates an immutable `tf.Tensor` object from the buffer.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    toTensor() {\n        return trackerFn().makeTensor(this.values, this.shape, this.dtype);\n    }\n}\n// For tracking tensor creation and disposal.\nlet trackerFn = null;\n// Used by chaining methods to call into ops.\nlet opHandler = null;\n// Used to warn about deprecated methods.\nlet deprecationWarningFn = null;\n// This here so that we can use this method on dev branches and keep the\n// functionality at master.\n// tslint:disable-next-line:no-unused-expression\n[deprecationWarningFn];\n/**\n * An external consumer can register itself as the tensor tracker. This way\n * the Tensor class can notify the tracker for every tensor created and\n * disposed.\n */\nfunction setTensorTracker(fn) {\n    trackerFn = fn;\n}\n/**\n * An external consumer can register itself as the op handler. This way the\n * Tensor class can have chaining methods that call into ops via the op\n * handler.\n */\nfunction setOpHandler(handler) {\n    opHandler = handler;\n}\n/**\n * Sets the deprecation warning function to be used by this file. This way the\n * Tensor class can be a leaf but still use the environment.\n */\nfunction setDeprecationWarningFn(fn) {\n    deprecationWarningFn = fn;\n}\n/**\n * A `tf.Tensor` object represents an immutable, multidimensional array of\n * numbers that has a shape and a data type.\n *\n * See `tf.tensor` for details on how to create a `tf.Tensor`.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nclass Tensor {\n    constructor(shape, dtype, dataId, id) {\n        /** Whether this tensor has been globally kept. */\n        this.kept = false;\n        this.isDisposedInternal = false;\n        this.shape = shape.slice();\n        this.dtype = dtype || 'float32';\n        this.size = _util__WEBPACK_IMPORTED_MODULE_0__.sizeFromShape(shape);\n        this.strides = (0,_util__WEBPACK_IMPORTED_MODULE_0__.computeStrides)(shape);\n        this.dataId = dataId;\n        this.id = id;\n        this.rankType = (this.rank < 5 ? this.rank.toString() : 'higher');\n    }\n    get rank() {\n        return this.shape.length;\n    }\n    /**\n     * Returns a promise of `tf.TensorBuffer` that holds the underlying data.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async buffer() {\n        const vals = await this.data();\n        return opHandler.buffer(this.shape, this.dtype, vals);\n    }\n    /**\n     * Returns a `tf.TensorBuffer` that holds the underlying data.\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    bufferSync() {\n        return opHandler.buffer(this.shape, this.dtype, this.dataSync());\n    }\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * asynchronously.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async array() {\n        const vals = await this.data();\n        return (0,_util__WEBPACK_IMPORTED_MODULE_0__.toNestedArray)(this.shape, vals);\n    }\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * synchronously.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    arraySync() {\n        return (0,_util__WEBPACK_IMPORTED_MODULE_0__.toNestedArray)(this.shape, this.dataSync());\n    }\n    /**\n     * Asynchronously downloads the values from the `tf.Tensor`. Returns a\n     * promise of `TypedArray` that resolves when the computation has finished.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async data() {\n        this.throwIfDisposed();\n        const data = trackerFn().read(this.dataId);\n        if (this.dtype === 'string') {\n            const bytes = await data;\n            try {\n                return bytes.map(b => _util__WEBPACK_IMPORTED_MODULE_1__.decodeString(b));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode the string bytes into utf-8. ' +\n                    'To get the original bytes, call tensor.bytes().');\n            }\n        }\n        return data;\n    }\n    /**\n     * Synchronously downloads the values from the `tf.Tensor`. This blocks the\n     * UI thread until the values are ready, which can cause performance issues.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    dataSync() {\n        this.throwIfDisposed();\n        const data = trackerFn().readSync(this.dataId);\n        if (this.dtype === 'string') {\n            try {\n                return data.map(b => _util__WEBPACK_IMPORTED_MODULE_1__.decodeString(b));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode the string bytes into utf-8. ' +\n                    'To get the original bytes, call tensor.bytes().');\n            }\n        }\n        return data;\n    }\n    /** Returns the underlying bytes of the tensor's data. */\n    async bytes() {\n        this.throwIfDisposed();\n        const data = await trackerFn().read(this.dataId);\n        if (this.dtype === 'string') {\n            return data;\n        }\n        else {\n            return new Uint8Array(data.buffer);\n        }\n    }\n    /**\n     * Disposes `tf.Tensor` from memory.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        trackerFn().disposeTensor(this);\n        this.isDisposedInternal = true;\n    }\n    get isDisposed() {\n        return this.isDisposedInternal;\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error(`Tensor is disposed.`);\n        }\n    }\n    /**\n     * Prints the `tf.Tensor`. See `tf.print` for details.\n     *\n     * @param verbose Whether to print verbose information about the tensor,\n     *    including dtype and size.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    print(verbose = false) {\n        return opHandler.print(this, verbose);\n    }\n    /**\n     * Returns a copy of the tensor. See `tf.clone` for details.\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    clone() {\n        this.throwIfDisposed();\n        return opHandler.clone(this);\n    }\n    /**\n     * Returns a human-readable description of the tensor. Useful for logging.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    toString(verbose = false) {\n        const vals = this.dataSync();\n        return (0,_tensor_format__WEBPACK_IMPORTED_MODULE_2__.tensorToString)(vals, this.shape, this.dtype, verbose);\n    }\n    cast(dtype) {\n        this.throwIfDisposed();\n        return opHandler.cast(this, dtype);\n    }\n    variable(trainable = true, name, dtype) {\n        this.throwIfDisposed();\n        return trackerFn().makeVariable(this, trainable, name, dtype);\n    }\n}\nObject.defineProperty(Tensor, Symbol.hasInstance, {\n    value: (instance) => {\n        // Implementation note: we should use properties of the object that will be\n        // defined before the constructor body has finished executing (methods).\n        // This is because when this code is transpiled by babel, babel will call\n        // classCallCheck before the constructor body is run.\n        // See https://github.com/tensorflow/tfjs/issues/3384 for backstory.\n        return !!instance && instance.data != null && instance.dataSync != null &&\n            instance.throwIfDisposed != null;\n    }\n});\nfunction getGlobalTensorClass() {\n    // Use getGlobal so that we can augment the Tensor class across package\n    // boundaries becase the node resolution alg may result in different modules\n    // being returned for this file depending on the path they are loaded from.\n    return (0,_global_util__WEBPACK_IMPORTED_MODULE_3__.getGlobal)('Tensor', () => {\n        return Tensor;\n    });\n}\n// Global side effect. Cache global reference to Tensor class\ngetGlobalTensorClass();\n/**\n * A mutable `tf.Tensor`, useful for persisting state, e.g. for training.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nclass Variable extends Tensor {\n    constructor(initialValue, trainable, name, tensorId) {\n        super(initialValue.shape, initialValue.dtype, initialValue.dataId, tensorId);\n        this.trainable = trainable;\n        this.name = name;\n    }\n    /**\n     * Assign a new `tf.Tensor` to this variable. The new `tf.Tensor` must have\n     * the same shape and dtype as the old `tf.Tensor`.\n     *\n     * @param newValue New tensor to be assigned to this variable.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    assign(newValue) {\n        if (newValue.dtype !== this.dtype) {\n            throw new Error(`dtype of the new value (${newValue.dtype}) and ` +\n                `previous value (${this.dtype}) must match`);\n        }\n        if (!_util__WEBPACK_IMPORTED_MODULE_0__.arraysEqual(newValue.shape, this.shape)) {\n            throw new Error(`shape of the new value (${newValue.shape}) and ` +\n                `previous value (${this.shape}) must match`);\n        }\n        trackerFn().disposeTensor(this);\n        this.dataId = newValue.dataId;\n        trackerFn().incRef(this, null /* backend */);\n    }\n    dispose() {\n        trackerFn().disposeVariable(this);\n        this.isDisposedInternal = true;\n    }\n}\nObject.defineProperty(Variable, Symbol.hasInstance, {\n    value: (instance) => {\n        return instance instanceof Tensor && instance.assign != null &&\n            instance.assign instanceof Function;\n    }\n});\n//# sourceMappingURL=tensor.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/tensor.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/tensor_format.js":
/*!******************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/tensor_format.js ***!
  \******************************************************************/
/*! namespace exports */
/*! export tensorToString [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"tensorToString\": () => /* binding */ tensorToString\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n// Maximum number of values before we decide to show ellipsis.\nconst FORMAT_LIMIT_NUM_VALS = 20;\n// Number of first and last values to show when displaying a, b,...,y, z.\nconst FORMAT_NUM_FIRST_LAST_VALS = 3;\n// Number of significant digits to show.\nconst FORMAT_NUM_SIG_DIGITS = 7;\nfunction tensorToString(vals, shape, dtype, verbose) {\n    const strides = (0,_util__WEBPACK_IMPORTED_MODULE_0__.computeStrides)(shape);\n    const padPerCol = computeMaxSizePerColumn(vals, shape, dtype, strides);\n    const rank = shape.length;\n    const valsLines = subTensorToString(vals, shape, dtype, strides, padPerCol);\n    const lines = ['Tensor'];\n    if (verbose) {\n        lines.push(`  dtype: ${dtype}`);\n        lines.push(`  rank: ${rank}`);\n        lines.push(`  shape: [${shape}]`);\n        lines.push(`  values:`);\n    }\n    lines.push(valsLines.map(l => '    ' + l).join('\\n'));\n    return lines.join('\\n');\n}\nfunction computeMaxSizePerColumn(vals, shape, dtype, strides) {\n    const n = (0,_util__WEBPACK_IMPORTED_MODULE_0__.sizeFromShape)(shape);\n    const numCols = strides[strides.length - 1];\n    const padPerCol = new Array(numCols).fill(0);\n    const rank = shape.length;\n    const valuesOrTuples = dtype === 'complex64' ? createComplexTuples(vals) : vals;\n    if (rank > 1) {\n        for (let row = 0; row < n / numCols; row++) {\n            const offset = row * numCols;\n            for (let j = 0; j < numCols; j++) {\n                padPerCol[j] = Math.max(padPerCol[j], valToString(valuesOrTuples[offset + j], 0, dtype).length);\n            }\n        }\n    }\n    return padPerCol;\n}\nfunction valToString(val, pad, dtype) {\n    let valStr;\n    if (Array.isArray(val)) {\n        valStr = `${parseFloat(val[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ` +\n            `${parseFloat(val[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`;\n    }\n    else if ((0,_util__WEBPACK_IMPORTED_MODULE_0__.isString)(val)) {\n        valStr = `'${val}'`;\n    }\n    else if (dtype === 'bool') {\n        valStr = boolNumToString(val);\n    }\n    else {\n        valStr = parseFloat(val.toFixed(FORMAT_NUM_SIG_DIGITS)).toString();\n    }\n    return (0,_util__WEBPACK_IMPORTED_MODULE_0__.rightPad)(valStr, pad);\n}\nfunction boolNumToString(v) {\n    return v === 0 ? 'false' : 'true';\n}\nfunction subTensorToString(vals, shape, dtype, strides, padPerCol, isLast = true) {\n    const storagePerElement = dtype === 'complex64' ? 2 : 1;\n    const size = shape[0];\n    const rank = shape.length;\n    if (rank === 0) {\n        if (dtype === 'complex64') {\n            const complexTuple = createComplexTuples(vals);\n            return [valToString(complexTuple[0], 0, dtype)];\n        }\n        if (dtype === 'bool') {\n            return [boolNumToString(vals[0])];\n        }\n        return [vals[0].toString()];\n    }\n    if (rank === 1) {\n        if (size > FORMAT_LIMIT_NUM_VALS) {\n            const firstValsSize = FORMAT_NUM_FIRST_LAST_VALS * storagePerElement;\n            let firstVals = Array.from(vals.slice(0, firstValsSize));\n            let lastVals = Array.from(vals.slice((size - FORMAT_NUM_FIRST_LAST_VALS) * storagePerElement, size * storagePerElement));\n            if (dtype === 'complex64') {\n                firstVals = createComplexTuples(firstVals);\n                lastVals = createComplexTuples(lastVals);\n            }\n            return [\n                '[' +\n                    firstVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n                        .join(', ') +\n                    ', ..., ' +\n                    lastVals\n                        .map((x, i) => valToString(x, padPerCol[size - FORMAT_NUM_FIRST_LAST_VALS + i], dtype))\n                        .join(', ') +\n                    ']'\n            ];\n        }\n        const displayVals = dtype === 'complex64' ? createComplexTuples(vals) :\n            Array.from(vals);\n        return [\n            '[' +\n                displayVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n                    .join(', ') +\n                ']'\n        ];\n    }\n    // The array is rank 2 or more.\n    const subshape = shape.slice(1);\n    const substrides = strides.slice(1);\n    const stride = strides[0] * storagePerElement;\n    const lines = [];\n    if (size > FORMAT_LIMIT_NUM_VALS) {\n        for (let i = 0; i < FORMAT_NUM_FIRST_LAST_VALS; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, false /* isLast */));\n        }\n        lines.push('...');\n        for (let i = size - FORMAT_NUM_FIRST_LAST_VALS; i < size; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1 /* isLast */));\n        }\n    }\n    else {\n        for (let i = 0; i < size; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1 /* isLast */));\n        }\n    }\n    const sep = rank === 2 ? ',' : '';\n    lines[0] = '[' + lines[0] + sep;\n    for (let i = 1; i < lines.length - 1; i++) {\n        lines[i] = ' ' + lines[i] + sep;\n    }\n    let newLineSep = ',\\n';\n    for (let i = 2; i < rank; i++) {\n        newLineSep += '\\n';\n    }\n    lines[lines.length - 1] =\n        ' ' + lines[lines.length - 1] + ']' + (isLast ? '' : newLineSep);\n    return lines;\n}\nfunction createComplexTuples(vals) {\n    const complexTuples = [];\n    for (let i = 0; i < vals.length; i += 2) {\n        complexTuples.push([vals[i], vals[i + 1]]);\n    }\n    return complexTuples;\n}\n//# sourceMappingURL=tensor_format.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/tensor_format.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js":
/*!****************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js ***!
  \****************************************************************/
/*! namespace exports */
/*! export assertTypesMatch [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTensorsInContainer [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isTensorInList [provided] [no usage info] [missing usage info prevents renaming] */
/*! export makeTypesMatch [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeTypesMatch\": () => /* binding */ makeTypesMatch,\n/* harmony export */   \"assertTypesMatch\": () => /* binding */ assertTypesMatch,\n/* harmony export */   \"isTensorInList\": () => /* binding */ isTensorInList,\n/* harmony export */   \"getTensorsInContainer\": () => /* binding */ getTensorsInContainer\n/* harmony export */ });\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ \"./node_modules/@tensorflow/tfjs-core/dist/types.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nfunction makeTypesMatch(a, b) {\n    if (a.dtype === b.dtype) {\n        return [a, b];\n    }\n    const dtype = (0,_types__WEBPACK_IMPORTED_MODULE_1__.upcastType)(a.dtype, b.dtype);\n    return [a.cast(dtype), b.cast(dtype)];\n}\nfunction assertTypesMatch(a, b) {\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assert)(a.dtype === b.dtype, () => `The dtypes of the first(${a.dtype}) and` +\n        ` second(${b.dtype}) input must match`);\n}\nfunction isTensorInList(tensor, tensorList) {\n    return tensorList.some(x => x.id === tensor.id);\n}\n/**\n * Extracts any `Tensor`s found within the provided object.\n *\n * @param container an object that may be a `Tensor` or may directly contain\n *   `Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. In general it\n *   is safe to pass any object here, except that `Promise`s are not\n *   supported.\n * @returns An array of `Tensors` found within the passed object. If the\n *   argument is simply a `Tensor', a list containing that `Tensor` is\n *   returned. If the object is not a `Tensor` or does not\n *   contain `Tensors`, an empty list is returned.\n */\nfunction getTensorsInContainer(result) {\n    const list = [];\n    const seen = new Set();\n    walkTensorContainer(result, list, seen);\n    return list;\n}\nfunction walkTensorContainer(container, list, seen) {\n    if (container == null) {\n        return;\n    }\n    if (container instanceof _tensor__WEBPACK_IMPORTED_MODULE_0__.Tensor) {\n        list.push(container);\n        return;\n    }\n    if (!isIterable(container)) {\n        return;\n    }\n    // Iteration over keys works also for arrays.\n    const iterable = container;\n    for (const k in iterable) {\n        const val = iterable[k];\n        if (!seen.has(val)) {\n            seen.add(val);\n            walkTensorContainer(val, list, seen);\n        }\n    }\n}\n// tslint:disable-next-line:no-any\nfunction isIterable(obj) {\n    return Array.isArray(obj) || typeof obj === 'object';\n}\n//# sourceMappingURL=tensor_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/tensor_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js ***!
  \********************************************************************/
/*! namespace exports */
/*! export convertToTensor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export convertToTensorArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export inferShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"inferShape\": () => /* binding */ inferShape,\n/* harmony export */   \"convertToTensor\": () => /* binding */ convertToTensor,\n/* harmony export */   \"convertToTensorArray\": () => /* binding */ convertToTensorArray\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _tensor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tensor */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n\nfunction inferShape(val, dtype) {\n    let firstElem = val;\n    if ((0,_util__WEBPACK_IMPORTED_MODULE_2__.isTypedArray)(val)) {\n        return dtype === 'string' ? [] : [val.length];\n    }\n    if (!Array.isArray(val)) {\n        return []; // Scalar.\n    }\n    const shape = [];\n    while (Array.isArray(firstElem) ||\n        (0,_util__WEBPACK_IMPORTED_MODULE_2__.isTypedArray)(firstElem) && dtype !== 'string') {\n        shape.push(firstElem.length);\n        firstElem = firstElem[0];\n    }\n    if (Array.isArray(val) &&\n        (0,_environment__WEBPACK_IMPORTED_MODULE_3__.env)().getBool('TENSORLIKE_CHECK_SHAPE_CONSISTENCY')) {\n        deepAssertShapeConsistency(val, shape, []);\n    }\n    return shape;\n}\nfunction deepAssertShapeConsistency(val, shape, indices) {\n    indices = indices || [];\n    if (!(Array.isArray(val)) && !(0,_util__WEBPACK_IMPORTED_MODULE_2__.isTypedArray)(val)) {\n        (0,_util__WEBPACK_IMPORTED_MODULE_2__.assert)(shape.length === 0, () => `Element arr[${indices.join('][')}] is a primitive, ` +\n            `but should be an array/TypedArray of ${shape[0]} elements`);\n        return;\n    }\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assert)(shape.length > 0, () => `Element arr[${indices.join('][')}] should be a primitive, ` +\n        `but is an array of ${val.length} elements`);\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.assert)(val.length === shape[0], () => `Element arr[${indices.join('][')}] should have ${shape[0]} ` +\n        `elements, but has ${val.length} elements`);\n    const subShape = shape.slice(1);\n    for (let i = 0; i < val.length; ++i) {\n        deepAssertShapeConsistency(val[i], subShape, indices.concat(i));\n    }\n}\nfunction assertDtype(expectedDtype, actualDType, argName, functionName) {\n    if (expectedDtype === 'string_or_numeric') {\n        return;\n    }\n    if (expectedDtype == null) {\n        throw new Error(`Expected dtype cannot be null.`);\n    }\n    if (expectedDtype !== 'numeric' && expectedDtype !== actualDType ||\n        expectedDtype === 'numeric' && actualDType === 'string') {\n        throw new Error(`Argument '${argName}' passed to '${functionName}' must ` +\n            `be ${expectedDtype} tensor, but got ${actualDType} tensor`);\n    }\n}\nfunction convertToTensor(x, argName, functionName, parseAsDtype = 'numeric') {\n    if (x instanceof _tensor__WEBPACK_IMPORTED_MODULE_1__.Tensor) {\n        assertDtype(parseAsDtype, x.dtype, argName, functionName);\n        return x;\n    }\n    let inferredDtype = (0,_util__WEBPACK_IMPORTED_MODULE_2__.inferDtype)(x);\n    // If the user expects a bool/int/float, use that info to update the\n    // inferredDtype when it is not a string.\n    if (inferredDtype !== 'string' &&\n        ['bool', 'int32', 'float32'].indexOf(parseAsDtype) >= 0) {\n        inferredDtype = parseAsDtype;\n    }\n    assertDtype(parseAsDtype, inferredDtype, argName, functionName);\n    if ((x == null) ||\n        (!(0,_util__WEBPACK_IMPORTED_MODULE_2__.isTypedArray)(x) && !Array.isArray(x) && typeof x !== 'number' &&\n            typeof x !== 'boolean' && typeof x !== 'string')) {\n        const type = x == null ? 'null' : x.constructor.name;\n        throw new Error(`Argument '${argName}' passed to '${functionName}' must be a ` +\n            `Tensor or TensorLike, but got '${type}'`);\n    }\n    const inferredShape = inferShape(x, inferredDtype);\n    if (!(0,_util__WEBPACK_IMPORTED_MODULE_2__.isTypedArray)(x) && !Array.isArray(x)) {\n        x = [x];\n    }\n    const skipTypedArray = true;\n    const values = inferredDtype !== 'string' ?\n        (0,_util__WEBPACK_IMPORTED_MODULE_4__.toTypedArray)(x, inferredDtype) :\n        (0,_util__WEBPACK_IMPORTED_MODULE_2__.flatten)(x, [], skipTypedArray);\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.makeTensor(values, inferredShape, inferredDtype);\n}\nfunction convertToTensorArray(arg, argName, functionName, parseAsDtype = 'numeric') {\n    if (!Array.isArray(arg)) {\n        throw new Error(`Argument ${argName} passed to ${functionName} must be a ` +\n            '`Tensor[]` or `TensorLike[]`');\n    }\n    const tensors = arg;\n    return tensors.map((t, i) => convertToTensor(t, `${argName}[${i}]`, functionName, parseAsDtype));\n}\n//# sourceMappingURL=tensor_util_env.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/test_util.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/test_util.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export TEST_EPSILON_FLOAT16 [provided] [no usage info] [missing usage info prevents renaming] */
/*! export encodeStrings [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expectArrayBuffersEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expectArraysClose [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expectArraysEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expectNumbersClose [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expectPromiseToFail [provided] [no usage info] [missing usage info prevents renaming] */
/*! export expectValuesInRange [provided] [no usage info] [missing usage info prevents renaming] */
/*! export testEpsilon [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TEST_EPSILON_FLOAT16\": () => /* binding */ TEST_EPSILON_FLOAT16,\n/* harmony export */   \"expectArraysClose\": () => /* binding */ expectArraysClose,\n/* harmony export */   \"testEpsilon\": () => /* binding */ testEpsilon,\n/* harmony export */   \"expectPromiseToFail\": () => /* binding */ expectPromiseToFail,\n/* harmony export */   \"expectArraysEqual\": () => /* binding */ expectArraysEqual,\n/* harmony export */   \"expectNumbersClose\": () => /* binding */ expectNumbersClose,\n/* harmony export */   \"expectValuesInRange\": () => /* binding */ expectValuesInRange,\n/* harmony export */   \"expectArrayBuffersEqual\": () => /* binding */ expectArrayBuffersEqual,\n/* harmony export */   \"encodeStrings\": () => /* binding */ encodeStrings\n/* harmony export */ });\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./engine */ \"./node_modules/@tensorflow/tfjs-core/dist/engine.js\");\n/* harmony import */ var _tensor_util_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tensor_util_env */ \"./node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util */ \"./node_modules/@tensorflow/tfjs-core/dist/util.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\nconst TEST_EPSILON_FLOAT32 = 1e-3;\nconst TEST_EPSILON_FLOAT16 = 1e-1;\nfunction expectArraysClose(actual, expected, epsilon) {\n    if (epsilon == null) {\n        epsilon = testEpsilon();\n    }\n    return expectArraysPredicate(actual, expected, (a, b) => areClose(a, b, epsilon));\n}\nfunction testEpsilon() {\n    return _engine__WEBPACK_IMPORTED_MODULE_0__.ENGINE.backend.floatPrecision() === 32 ? TEST_EPSILON_FLOAT32 :\n        TEST_EPSILON_FLOAT16;\n}\nfunction expectArraysPredicate(actual, expected, predicate) {\n    let checkClassType = true;\n    if ((0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(actual) || (0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(expected)) {\n        checkClassType = false;\n    }\n    if ((0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(actual) && (0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(expected)) {\n        checkClassType = true;\n    }\n    if (checkClassType) {\n        const aType = actual.constructor.name;\n        const bType = expected.constructor.name;\n        if (aType !== bType) {\n            throw new Error(`Arrays are of different type. Actual: ${aType}. ` +\n                `Expected: ${bType}`);\n        }\n    }\n    if (Array.isArray(actual) && Array.isArray(expected)) {\n        const actualShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_2__.inferShape)(actual);\n        const expectedShape = (0,_tensor_util_env__WEBPACK_IMPORTED_MODULE_2__.inferShape)(expected);\n        if (!(0,_util__WEBPACK_IMPORTED_MODULE_1__.arraysEqual)(actualShape, expectedShape)) {\n            throw new Error(`Arrays have different shapes. ` +\n                `Actual: [${actualShape}]. Expected: [${expectedShape}]`);\n        }\n    }\n    const actualFlat = (0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(actual) ? actual : (0,_util__WEBPACK_IMPORTED_MODULE_1__.flatten)(actual);\n    const expectedFlat = (0,_util__WEBPACK_IMPORTED_MODULE_1__.isTypedArray)(expected) ?\n        expected :\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.flatten)(expected);\n    if (actualFlat.length !== expectedFlat.length) {\n        throw new Error(`Arrays have different lengths actual: ${actualFlat.length} vs ` +\n            `expected: ${expectedFlat.length}.\\n` +\n            `Actual:   ${actualFlat}.\\n` +\n            `Expected: ${expectedFlat}.`);\n    }\n    for (let i = 0; i < expectedFlat.length; ++i) {\n        const a = actualFlat[i];\n        const e = expectedFlat[i];\n        if (!predicate(a, e)) {\n            throw new Error(`Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${e}.\\n` +\n                `Actual:   ${actualFlat}.\\n` +\n                `Expected: ${expectedFlat}.`);\n        }\n    }\n}\nfunction expectPromiseToFail(fn, done) {\n    fn().then(() => done.fail(), () => done());\n}\nfunction expectArraysEqual(actual, expected) {\n    const exp = typeof expected === 'string' || typeof expected === 'number' ||\n        typeof expected === 'boolean' ?\n        [expected] :\n        expected;\n    if ((0,_util__WEBPACK_IMPORTED_MODULE_1__.isString)(actual) || (0,_util__WEBPACK_IMPORTED_MODULE_1__.isString)(actual[0]) ||\n        (0,_util__WEBPACK_IMPORTED_MODULE_1__.isString)(expected) || (0,_util__WEBPACK_IMPORTED_MODULE_1__.isString)(expected[0])) {\n        // tslint:disable-next-line: triple-equals\n        return expectArraysPredicate(actual, exp, (a, b) => a == b);\n    }\n    return expectArraysPredicate(actual, expected, (a, b) => areClose(a, b, 0));\n}\nfunction expectNumbersClose(a, e, epsilon) {\n    if (epsilon == null) {\n        epsilon = testEpsilon();\n    }\n    if (!areClose(a, e, epsilon)) {\n        throw new Error(`Numbers differ: actual === ${a}, expected === ${e}`);\n    }\n}\nfunction areClose(a, e, epsilon) {\n    if (!isFinite(a) && !isFinite(e)) {\n        return true;\n    }\n    if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n        return false;\n    }\n    return true;\n}\nfunction expectValuesInRange(actual, low, high) {\n    for (let i = 0; i < actual.length; i++) {\n        if (actual[i] < low || actual[i] > high) {\n            throw new Error(`Value out of range:${actual[i]} low: ${low}, high: ${high}`);\n        }\n    }\n}\nfunction expectArrayBuffersEqual(actual, expected) {\n    // Safari & Jasmine don't like comparing ArrayBuffers directly. Wrapping in\n    // a Float32Array solves this issue.\n    expect(new Float32Array(actual)).toEqual(new Float32Array(expected));\n}\n/** Encodes strings into utf-8 bytes. */\nfunction encodeStrings(a) {\n    for (let i = 0; i < a.length; i++) {\n        const val = a[i];\n        if (Array.isArray(val)) {\n            encodeStrings(val);\n        }\n        else {\n            a[i] = (0,_util__WEBPACK_IMPORTED_MODULE_3__.encodeString)(val);\n        }\n    }\n    return a;\n}\n//# sourceMappingURL=test_util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/test_util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/train.js":
/*!**********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/train.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export train [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"train\": () => /* binding */ train\n/* harmony export */ });\n/* harmony import */ var _optimizers_adadelta_optimizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./optimizers/adadelta_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adadelta_optimizer.js\");\n/* harmony import */ var _optimizers_adagrad_optimizer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./optimizers/adagrad_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adagrad_optimizer.js\");\n/* harmony import */ var _optimizers_adam_optimizer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./optimizers/adam_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adam_optimizer.js\");\n/* harmony import */ var _optimizers_adamax_optimizer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./optimizers/adamax_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/adamax_optimizer.js\");\n/* harmony import */ var _optimizers_momentum_optimizer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./optimizers/momentum_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/momentum_optimizer.js\");\n/* harmony import */ var _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./optimizers/optimizer_constructors */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/optimizer_constructors.js\");\n/* harmony import */ var _optimizers_rmsprop_optimizer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./optimizers/rmsprop_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js\");\n/* harmony import */ var _optimizers_sgd_optimizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./optimizers/sgd_optimizer */ \"./node_modules/@tensorflow/tfjs-core/dist/optimizers/sgd_optimizer.js\");\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// So typings can propagate.\n;\n\n\n\n\n\n\n\n// tslint:disable-next-line:no-unused-expression\n[_optimizers_momentum_optimizer__WEBPACK_IMPORTED_MODULE_0__.MomentumOptimizer, _optimizers_sgd_optimizer__WEBPACK_IMPORTED_MODULE_1__.SGDOptimizer, _optimizers_adadelta_optimizer__WEBPACK_IMPORTED_MODULE_2__.AdadeltaOptimizer, _optimizers_adagrad_optimizer__WEBPACK_IMPORTED_MODULE_3__.AdagradOptimizer,\n    _optimizers_rmsprop_optimizer__WEBPACK_IMPORTED_MODULE_4__.RMSPropOptimizer, _optimizers_adamax_optimizer__WEBPACK_IMPORTED_MODULE_5__.AdamaxOptimizer, _optimizers_adam_optimizer__WEBPACK_IMPORTED_MODULE_6__.AdamOptimizer];\nconst train = {\n    sgd: _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__.OptimizerConstructors.sgd,\n    momentum: _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__.OptimizerConstructors.momentum,\n    adadelta: _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__.OptimizerConstructors.adadelta,\n    adagrad: _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__.OptimizerConstructors.adagrad,\n    rmsprop: _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__.OptimizerConstructors.rmsprop,\n    adamax: _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__.OptimizerConstructors.adamax,\n    adam: _optimizers_optimizer_constructors__WEBPACK_IMPORTED_MODULE_7__.OptimizerConstructors.adam\n};\n//# sourceMappingURL=train.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/train.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/types.js":
/*!**********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/types.js ***!
  \**********************************************************/
/*! namespace exports */
/*! export Rank [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sumOutType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export upcastType [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Rank\": () => /* binding */ Rank,\n/* harmony export */   \"upcastType\": () => /* binding */ upcastType,\n/* harmony export */   \"sumOutType\": () => /* binding */ sumOutType\n/* harmony export */ });\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar Rank;\n(function (Rank) {\n    Rank[\"R0\"] = \"R0\";\n    Rank[\"R1\"] = \"R1\";\n    Rank[\"R2\"] = \"R2\";\n    Rank[\"R3\"] = \"R3\";\n    Rank[\"R4\"] = \"R4\";\n    Rank[\"R5\"] = \"R5\";\n    Rank[\"R6\"] = \"R6\";\n})(Rank || (Rank = {}));\n// Looks for upcasting types. Used, for example, in operations with mixed dtype\n// inputs.\nvar UpcastInt32AndMap;\n(function (UpcastInt32AndMap) {\n    UpcastInt32AndMap[\"float32\"] = \"float32\";\n    UpcastInt32AndMap[\"int32\"] = \"int32\";\n    UpcastInt32AndMap[\"bool\"] = \"int32\";\n    UpcastInt32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastInt32AndMap || (UpcastInt32AndMap = {}));\nvar UpcastBoolAndMap;\n(function (UpcastBoolAndMap) {\n    UpcastBoolAndMap[\"float32\"] = \"float32\";\n    UpcastBoolAndMap[\"int32\"] = \"int32\";\n    UpcastBoolAndMap[\"bool\"] = \"bool\";\n    UpcastBoolAndMap[\"complex64\"] = \"complex64\";\n})(UpcastBoolAndMap || (UpcastBoolAndMap = {}));\nvar UpcastFloat32AndMap;\n(function (UpcastFloat32AndMap) {\n    UpcastFloat32AndMap[\"float32\"] = \"float32\";\n    UpcastFloat32AndMap[\"int32\"] = \"float32\";\n    UpcastFloat32AndMap[\"bool\"] = \"float32\";\n    UpcastFloat32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastFloat32AndMap || (UpcastFloat32AndMap = {}));\nvar UpcastComplex64AndMap;\n(function (UpcastComplex64AndMap) {\n    UpcastComplex64AndMap[\"float32\"] = \"complex64\";\n    UpcastComplex64AndMap[\"int32\"] = \"complex64\";\n    UpcastComplex64AndMap[\"bool\"] = \"complex64\";\n    UpcastComplex64AndMap[\"complex64\"] = \"complex64\";\n})(UpcastComplex64AndMap || (UpcastComplex64AndMap = {}));\nconst upcastTypeMap = {\n    'float32': UpcastFloat32AndMap,\n    'int32': UpcastInt32AndMap,\n    'bool': UpcastBoolAndMap,\n    'complex64': UpcastComplex64AndMap\n};\nfunction upcastType(typeA, typeB) {\n    if (typeA === 'string' || typeB === 'string') {\n        if (typeA === 'string' && typeB === 'string') {\n            return 'string';\n        }\n        throw new Error(`Can not upcast ${typeA} with ${typeB}`);\n    }\n    return upcastTypeMap[typeA][typeB];\n}\n/** Returns the output type after summation. */\nfunction sumOutType(type) {\n    return upcastType(type, 'int32');\n}\n//# sourceMappingURL=types.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/types.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/util.js":
/*!*********************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/util.js ***!
  \*********************************************************/
/*! namespace exports */
/*! export arraysEqual [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .arraysEqual */
/*! export assert [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .assert */
/*! export assertNonNegativeIntegerDimensions [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .assertNonNegativeIntegerDimensions */
/*! export assertNonNull [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .assertNonNull */
/*! export assertShapesMatch [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .assertShapesMatch */
/*! export bytesFromStringArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .bytesFromStringArray */
/*! export bytesPerElement [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .bytesPerElement */
/*! export checkConversionForErrors [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .checkConversionForErrors */
/*! export clamp [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .clamp */
/*! export computeStrides [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .computeStrides */
/*! export createScalarValue [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createShuffledIndices [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .createShuffledIndices */
/*! export decodeString [provided] [no usage info] [missing usage info prevents renaming] */
/*! export distSquared [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .distSquared */
/*! export encodeString [provided] [no usage info] [missing usage info prevents renaming] */
/*! export fetch [provided] [no usage info] [missing usage info prevents renaming] */
/*! export flatten [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .flatten */
/*! export getArrayFromDType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .getArrayFromDType */
/*! export getTypedArrayFromDType [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .getTypedArrayFromDType */
/*! export hasEncodingLoss [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .hasEncodingLoss */
/*! export indexToLoc [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .indexToLoc */
/*! export inferDtype [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .inferDtype */
/*! export inferFromImplicitShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .inferFromImplicitShape */
/*! export isBoolean [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isBoolean */
/*! export isFunction [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isFunction */
/*! export isInt [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isInt */
/*! export isNumber [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isNumber */
/*! export isPromise [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isPromise */
/*! export isScalarShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isScalarShape */
/*! export isString [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isString */
/*! export isTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isTypedArray */
/*! export isValidDtype [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .isValidDtype */
/*! export locToIndex [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .locToIndex */
/*! export makeOnesTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .makeOnesTypedArray */
/*! export makeZerosNestedTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .makeZerosNestedTypedArray */
/*! export makeZerosTypedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .makeZerosTypedArray */
/*! export nearestDivisor [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .nearestDivisor */
/*! export nearestLargerEven [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .nearestLargerEven */
/*! export now [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAxisParam [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .parseAxisParam */
/*! export randUniform [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .randUniform */
/*! export repeatedTry [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .repeatedTry */
/*! export rightPad [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .rightPad */
/*! export shuffle [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .shuffle */
/*! export shuffleCombo [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .shuffleCombo */
/*! export sizeFromShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .sizeFromShape */
/*! export sizeToSquarishShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .sizeToSquarishShape */
/*! export squeezeShape [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .squeezeShape */
/*! export sum [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .sum */
/*! export tanh [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .tanh */
/*! export toNestedArray [provided] [no usage info] [missing usage info prevents renaming] -> ./node_modules/@tensorflow/tfjs-core/dist/util_base.js .toNestedArray */
/*! export toTypedArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"arraysEqual\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.arraysEqual,\n/* harmony export */   \"assert\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.assert,\n/* harmony export */   \"assertNonNegativeIntegerDimensions\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.assertNonNegativeIntegerDimensions,\n/* harmony export */   \"assertNonNull\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.assertNonNull,\n/* harmony export */   \"assertShapesMatch\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.assertShapesMatch,\n/* harmony export */   \"bytesFromStringArray\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.bytesFromStringArray,\n/* harmony export */   \"bytesPerElement\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.bytesPerElement,\n/* harmony export */   \"checkConversionForErrors\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.checkConversionForErrors,\n/* harmony export */   \"clamp\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.clamp,\n/* harmony export */   \"computeStrides\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.computeStrides,\n/* harmony export */   \"createShuffledIndices\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.createShuffledIndices,\n/* harmony export */   \"distSquared\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.distSquared,\n/* harmony export */   \"flatten\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.flatten,\n/* harmony export */   \"getArrayFromDType\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.getArrayFromDType,\n/* harmony export */   \"getTypedArrayFromDType\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.getTypedArrayFromDType,\n/* harmony export */   \"hasEncodingLoss\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.hasEncodingLoss,\n/* harmony export */   \"indexToLoc\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.indexToLoc,\n/* harmony export */   \"inferDtype\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.inferDtype,\n/* harmony export */   \"inferFromImplicitShape\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.inferFromImplicitShape,\n/* harmony export */   \"isBoolean\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isBoolean,\n/* harmony export */   \"isFunction\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isFunction,\n/* harmony export */   \"isInt\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isInt,\n/* harmony export */   \"isNumber\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isNumber,\n/* harmony export */   \"isPromise\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isPromise,\n/* harmony export */   \"isScalarShape\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isScalarShape,\n/* harmony export */   \"isString\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isString,\n/* harmony export */   \"isTypedArray\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isTypedArray,\n/* harmony export */   \"isValidDtype\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.isValidDtype,\n/* harmony export */   \"locToIndex\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.locToIndex,\n/* harmony export */   \"makeOnesTypedArray\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.makeOnesTypedArray,\n/* harmony export */   \"makeZerosNestedTypedArray\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.makeZerosNestedTypedArray,\n/* harmony export */   \"makeZerosTypedArray\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.makeZerosTypedArray,\n/* harmony export */   \"nearestDivisor\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.nearestDivisor,\n/* harmony export */   \"nearestLargerEven\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.nearestLargerEven,\n/* harmony export */   \"parseAxisParam\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.parseAxisParam,\n/* harmony export */   \"randUniform\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.randUniform,\n/* harmony export */   \"repeatedTry\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.repeatedTry,\n/* harmony export */   \"rightPad\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.rightPad,\n/* harmony export */   \"shuffle\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.shuffle,\n/* harmony export */   \"shuffleCombo\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.shuffleCombo,\n/* harmony export */   \"sizeFromShape\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.sizeFromShape,\n/* harmony export */   \"sizeToSquarishShape\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.sizeToSquarishShape,\n/* harmony export */   \"squeezeShape\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.squeezeShape,\n/* harmony export */   \"sum\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.sum,\n/* harmony export */   \"tanh\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.tanh,\n/* harmony export */   \"toNestedArray\": () => /* reexport safe */ _util_base__WEBPACK_IMPORTED_MODULE_0__.toNestedArray,\n/* harmony export */   \"createScalarValue\": () => /* binding */ createScalarValue,\n/* harmony export */   \"toTypedArray\": () => /* binding */ toTypedArray,\n/* harmony export */   \"now\": () => /* binding */ now,\n/* harmony export */   \"fetch\": () => /* binding */ fetch,\n/* harmony export */   \"encodeString\": () => /* binding */ encodeString,\n/* harmony export */   \"decodeString\": () => /* binding */ decodeString\n/* harmony export */ });\n/* harmony import */ var _environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environment */ \"./node_modules/@tensorflow/tfjs-core/dist/environment.js\");\n/* harmony import */ var _util_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util_base */ \"./node_modules/@tensorflow/tfjs-core/dist/util_base.js\");\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n;\n\n\n/**\n * Create typed array for scalar value. Used for storing in `DataStorage`.\n */\nfunction createScalarValue(value, dtype) {\n    if (dtype === 'string') {\n        return encodeString(value);\n    }\n    return toTypedArray([value], dtype);\n}\nfunction noConversionNeeded(a, dtype) {\n    return (a instanceof Float32Array && dtype === 'float32') ||\n        (a instanceof Int32Array && dtype === 'int32') ||\n        (a instanceof Uint8Array && dtype === 'bool');\n}\nfunction toTypedArray(a, dtype) {\n    if (dtype === 'string') {\n        throw new Error('Cannot convert a string[] to a TypedArray');\n    }\n    if (Array.isArray(a)) {\n        a = _util_base__WEBPACK_IMPORTED_MODULE_0__.flatten(a);\n    }\n    if ((0,_environment__WEBPACK_IMPORTED_MODULE_1__.env)().getBool('DEBUG')) {\n        _util_base__WEBPACK_IMPORTED_MODULE_0__.checkConversionForErrors(a, dtype);\n    }\n    if (noConversionNeeded(a, dtype)) {\n        return a;\n    }\n    if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n        return new Float32Array(a);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(a);\n    }\n    else if (dtype === 'bool') {\n        const bool = new Uint8Array(a.length);\n        for (let i = 0; i < bool.length; ++i) {\n            if (Math.round(a[i]) !== 0) {\n                bool[i] = 1;\n            }\n        }\n        return bool;\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\n/**\n * Returns the current high-resolution time in milliseconds relative to an\n * arbitrary time in the past. It works across different platforms (node.js,\n * browsers).\n *\n * ```js\n * console.log(tf.util.now());\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nfunction now() {\n    return (0,_environment__WEBPACK_IMPORTED_MODULE_1__.env)().platform.now();\n}\n/**\n * Returns a platform-specific implementation of\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n *\n * If `fetch` is defined on the global object (`window`, `process`, etc.),\n * `tf.util.fetch` returns that function.\n *\n * If not, `tf.util.fetch` returns a platform-specific solution.\n *\n * ```js\n * const resource = await tf.util.fetch('https://unpkg.com/@tensorflow/tfjs');\n * // handle response\n * ```\n *\n * @doc {heading: 'Util'}\n */\nfunction fetch(path, requestInits) {\n    return (0,_environment__WEBPACK_IMPORTED_MODULE_1__.env)().platform.fetch(path, requestInits);\n}\n/**\n * Encodes the provided string into bytes using the provided encoding scheme.\n *\n * @param s The string to encode.\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nfunction encodeString(s, encoding = 'utf-8') {\n    encoding = encoding || 'utf-8';\n    return (0,_environment__WEBPACK_IMPORTED_MODULE_1__.env)().platform.encode(s, encoding);\n}\n/**\n * Decodes the provided bytes into a string using the provided encoding scheme.\n * @param bytes The bytes to decode.\n *\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nfunction decodeString(bytes, encoding = 'utf-8') {\n    encoding = encoding || 'utf-8';\n    return (0,_environment__WEBPACK_IMPORTED_MODULE_1__.env)().platform.decode(bytes, encoding);\n}\n//# sourceMappingURL=util.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/util.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/util_base.js":
/*!**************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/util_base.js ***!
  \**************************************************************/
/*! namespace exports */
/*! export arraysEqual [provided] [no usage info] [missing usage info prevents renaming] */
/*! export assert [provided] [no usage info] [missing usage info prevents renaming] */
/*! export assertNonNegativeIntegerDimensions [provided] [no usage info] [missing usage info prevents renaming] */
/*! export assertNonNull [provided] [no usage info] [missing usage info prevents renaming] */
/*! export assertShapesMatch [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bytesFromStringArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export bytesPerElement [provided] [no usage info] [missing usage info prevents renaming] */
/*! export checkConversionForErrors [provided] [no usage info] [missing usage info prevents renaming] */
/*! export clamp [provided] [no usage info] [missing usage info prevents renaming] */
/*! export computeStrides [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createShuffledIndices [provided] [no usage info] [missing usage info prevents renaming] */
/*! export distSquared [provided] [no usage info] [missing usage info prevents renaming] */
/*! export flatten [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getArrayFromDType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getTypedArrayFromDType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hasEncodingLoss [provided] [no usage info] [missing usage info prevents renaming] */
/*! export indexToLoc [provided] [no usage info] [missing usage info prevents renaming] */
/*! export inferDtype [provided] [no usage info] [missing usage info prevents renaming] */
/*! export inferFromImplicitShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isBoolean [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isFunction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isInt [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isNumber [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isPromise [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isScalarShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isString [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isTypedArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export isValidDtype [provided] [no usage info] [missing usage info prevents renaming] */
/*! export locToIndex [provided] [no usage info] [missing usage info prevents renaming] */
/*! export makeOnesTypedArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export makeZerosNestedTypedArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export makeZerosTypedArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! export nearestDivisor [provided] [no usage info] [missing usage info prevents renaming] */
/*! export nearestLargerEven [provided] [no usage info] [missing usage info prevents renaming] */
/*! export parseAxisParam [provided] [no usage info] [missing usage info prevents renaming] */
/*! export randUniform [provided] [no usage info] [missing usage info prevents renaming] */
/*! export repeatedTry [provided] [no usage info] [missing usage info prevents renaming] */
/*! export rightPad [provided] [no usage info] [missing usage info prevents renaming] */
/*! export shuffle [provided] [no usage info] [missing usage info prevents renaming] */
/*! export shuffleCombo [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sizeFromShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sizeToSquarishShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export squeezeShape [provided] [no usage info] [missing usage info prevents renaming] */
/*! export sum [provided] [no usage info] [missing usage info prevents renaming] */
/*! export tanh [provided] [no usage info] [missing usage info prevents renaming] */
/*! export toNestedArray [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"shuffle\": () => /* binding */ shuffle,\n/* harmony export */   \"shuffleCombo\": () => /* binding */ shuffleCombo,\n/* harmony export */   \"clamp\": () => /* binding */ clamp,\n/* harmony export */   \"nearestLargerEven\": () => /* binding */ nearestLargerEven,\n/* harmony export */   \"sum\": () => /* binding */ sum,\n/* harmony export */   \"randUniform\": () => /* binding */ randUniform,\n/* harmony export */   \"distSquared\": () => /* binding */ distSquared,\n/* harmony export */   \"assert\": () => /* binding */ assert,\n/* harmony export */   \"assertShapesMatch\": () => /* binding */ assertShapesMatch,\n/* harmony export */   \"assertNonNull\": () => /* binding */ assertNonNull,\n/* harmony export */   \"flatten\": () => /* binding */ flatten,\n/* harmony export */   \"sizeFromShape\": () => /* binding */ sizeFromShape,\n/* harmony export */   \"isScalarShape\": () => /* binding */ isScalarShape,\n/* harmony export */   \"arraysEqual\": () => /* binding */ arraysEqual,\n/* harmony export */   \"isInt\": () => /* binding */ isInt,\n/* harmony export */   \"tanh\": () => /* binding */ tanh,\n/* harmony export */   \"sizeToSquarishShape\": () => /* binding */ sizeToSquarishShape,\n/* harmony export */   \"createShuffledIndices\": () => /* binding */ createShuffledIndices,\n/* harmony export */   \"rightPad\": () => /* binding */ rightPad,\n/* harmony export */   \"repeatedTry\": () => /* binding */ repeatedTry,\n/* harmony export */   \"inferFromImplicitShape\": () => /* binding */ inferFromImplicitShape,\n/* harmony export */   \"parseAxisParam\": () => /* binding */ parseAxisParam,\n/* harmony export */   \"squeezeShape\": () => /* binding */ squeezeShape,\n/* harmony export */   \"getTypedArrayFromDType\": () => /* binding */ getTypedArrayFromDType,\n/* harmony export */   \"getArrayFromDType\": () => /* binding */ getArrayFromDType,\n/* harmony export */   \"checkConversionForErrors\": () => /* binding */ checkConversionForErrors,\n/* harmony export */   \"isValidDtype\": () => /* binding */ isValidDtype,\n/* harmony export */   \"hasEncodingLoss\": () => /* binding */ hasEncodingLoss,\n/* harmony export */   \"isTypedArray\": () => /* binding */ isTypedArray,\n/* harmony export */   \"bytesPerElement\": () => /* binding */ bytesPerElement,\n/* harmony export */   \"bytesFromStringArray\": () => /* binding */ bytesFromStringArray,\n/* harmony export */   \"isString\": () => /* binding */ isString,\n/* harmony export */   \"isBoolean\": () => /* binding */ isBoolean,\n/* harmony export */   \"isNumber\": () => /* binding */ isNumber,\n/* harmony export */   \"inferDtype\": () => /* binding */ inferDtype,\n/* harmony export */   \"isFunction\": () => /* binding */ isFunction,\n/* harmony export */   \"nearestDivisor\": () => /* binding */ nearestDivisor,\n/* harmony export */   \"computeStrides\": () => /* binding */ computeStrides,\n/* harmony export */   \"toNestedArray\": () => /* binding */ toNestedArray,\n/* harmony export */   \"makeOnesTypedArray\": () => /* binding */ makeOnesTypedArray,\n/* harmony export */   \"makeZerosTypedArray\": () => /* binding */ makeZerosTypedArray,\n/* harmony export */   \"makeZerosNestedTypedArray\": () => /* binding */ makeZerosNestedTypedArray,\n/* harmony export */   \"assertNonNegativeIntegerDimensions\": () => /* binding */ assertNonNegativeIntegerDimensions,\n/* harmony export */   \"locToIndex\": () => /* binding */ locToIndex,\n/* harmony export */   \"indexToLoc\": () => /* binding */ indexToLoc,\n/* harmony export */   \"isPromise\": () => /* binding */ isPromise\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Shuffles the array in-place using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1, 2, 3, 4, 5];\n * tf.util.shuffle(a);\n * console.log(a);\n * ```\n *\n * @param array The array to shuffle in-place.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n// tslint:disable-next-line:no-any\nfunction shuffle(array) {\n    let counter = array.length;\n    let temp = 0;\n    let index = 0;\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        index = (Math.random() * counter) | 0;\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element with it\n        temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n}\n/**\n * Shuffles two arrays in-place the same way using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1,2,3,4,5];\n * const b = [11,22,33,44,55];\n * tf.util.shuffleCombo(a, b);\n * console.log(a, b);\n * ```\n *\n * @param array The first array to shuffle in-place.\n * @param array2 The second array to shuffle in-place with the same permutation\n *     as the first array.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n// tslint:disable-next-line:no-any\nfunction shuffleCombo(array, \n// tslint:disable-next-line:no-any\narray2) {\n    if (array.length !== array2.length) {\n        throw new Error(`Array sizes must match to be shuffled together ` +\n            `First array length was ${array.length}` +\n            `Second array length was ${array2.length}`);\n    }\n    let counter = array.length;\n    let temp, temp2;\n    let index = 0;\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        index = (Math.random() * counter) | 0;\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element of each array with it\n        temp = array[counter];\n        temp2 = array2[counter];\n        array[counter] = array[index];\n        array2[counter] = array2[index];\n        array[index] = temp;\n        array2[index] = temp2;\n    }\n}\n/** Clamps a value to a specified range. */\nfunction clamp(min, x, max) {\n    return Math.max(min, Math.min(x, max));\n}\nfunction nearestLargerEven(val) {\n    return val % 2 === 0 ? val : val + 1;\n}\nfunction sum(arr) {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        sum += arr[i];\n    }\n    return sum;\n}\n/**\n * Returns a sample from a uniform [a, b) distribution.\n *\n * @param a The minimum support (inclusive).\n * @param b The maximum support (exclusive).\n * @return A pseudorandom number on the half-open interval [a,b).\n */\nfunction randUniform(a, b) {\n    const r = Math.random();\n    return (b * r) + (1 - r) * a;\n}\n/** Returns the squared Euclidean distance between two vectors. */\nfunction distSquared(a, b) {\n    let result = 0;\n    for (let i = 0; i < a.length; i++) {\n        const diff = Number(a[i]) - Number(b[i]);\n        result += diff * diff;\n    }\n    return result;\n}\n/**\n * Asserts that the expression is true. Otherwise throws an error with the\n * provided message.\n *\n * ```js\n * const x = 2;\n * tf.util.assert(x === 2, 'x is not 2');\n * ```\n *\n * @param expr The expression to assert (as a boolean).\n * @param msg A function that returns the message to report when throwing an\n *     error. We use a function for performance reasons.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nfunction assert(expr, msg) {\n    if (!expr) {\n        throw new Error(typeof msg === 'string' ? msg : msg());\n    }\n}\nfunction assertShapesMatch(shapeA, shapeB, errorMessagePrefix = '') {\n    assert(arraysEqual(shapeA, shapeB), () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n}\nfunction assertNonNull(a) {\n    assert(a != null, () => `The input to the tensor constructor must be a non-null value.`);\n}\n// NOTE: We explicitly type out what T extends instead of any so that\n// util.flatten on a nested array of number doesn't try to infer T as a\n// number[][], causing us to explicitly type util.flatten<number>().\n/**\n *  Flattens an arbitrarily nested array.\n *\n * ```js\n * const a = [[1, 2], [3, 4], [5, [6, [7]]]];\n * const flat = tf.util.flatten(a);\n * console.log(flat);\n * ```\n *\n *  @param arr The nested array to flatten.\n *  @param result The destination array which holds the elements.\n *  @param skipTypedArray If true, avoids flattening the typed arrays. Defaults\n *      to false.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nfunction flatten(arr, result = [], skipTypedArray = false) {\n    if (result == null) {\n        result = [];\n    }\n    if (Array.isArray(arr) || isTypedArray(arr) && !skipTypedArray) {\n        for (let i = 0; i < arr.length; ++i) {\n            flatten(arr[i], result, skipTypedArray);\n        }\n    }\n    else {\n        result.push(arr);\n    }\n    return result;\n}\n/**\n * Returns the size (number of elements) of the tensor given its shape.\n *\n * ```js\n * const shape = [3, 4, 2];\n * const size = tf.util.sizeFromShape(shape);\n * console.log(size);\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nfunction sizeFromShape(shape) {\n    if (shape.length === 0) {\n        // Scalar.\n        return 1;\n    }\n    let size = shape[0];\n    for (let i = 1; i < shape.length; i++) {\n        size *= shape[i];\n    }\n    return size;\n}\nfunction isScalarShape(shape) {\n    return shape.length === 0;\n}\nfunction arraysEqual(n1, n2) {\n    if (n1 === n2) {\n        return true;\n    }\n    if (n1 == null || n2 == null) {\n        return false;\n    }\n    if (n1.length !== n2.length) {\n        return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n        if (n1[i] !== n2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isInt(a) {\n    return a % 1 === 0;\n}\nfunction tanh(x) {\n    // tslint:disable-next-line:no-any\n    if (Math.tanh != null) {\n        // tslint:disable-next-line:no-any\n        return Math.tanh(x);\n    }\n    if (x === Infinity) {\n        return 1;\n    }\n    else if (x === -Infinity) {\n        return -1;\n    }\n    else {\n        const e2x = Math.exp(2 * x);\n        return (e2x - 1) / (e2x + 1);\n    }\n}\nfunction sizeToSquarishShape(size) {\n    const width = Math.ceil(Math.sqrt(size));\n    return [width, Math.ceil(size / width)];\n}\n/**\n * Creates a new array with randomized indicies to a given quantity.\n *\n * ```js\n * const randomTen = tf.util.createShuffledIndices(10);\n * console.log(randomTen);\n * ```\n *\n * @param number Quantity of how many shuffled indicies to create.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nfunction createShuffledIndices(n) {\n    const shuffledIndices = new Uint32Array(n);\n    for (let i = 0; i < n; ++i) {\n        shuffledIndices[i] = i;\n    }\n    shuffle(shuffledIndices);\n    return shuffledIndices;\n}\nfunction rightPad(a, size) {\n    if (size <= a.length) {\n        return a;\n    }\n    return a + ' '.repeat(size - a.length);\n}\nfunction repeatedTry(checkFn, delayFn = (counter) => 0, maxCounter) {\n    return new Promise((resolve, reject) => {\n        let tryCount = 0;\n        const tryFn = () => {\n            if (checkFn()) {\n                resolve();\n                return;\n            }\n            tryCount++;\n            const nextBackoff = delayFn(tryCount);\n            if (maxCounter != null && tryCount >= maxCounter) {\n                reject();\n                return;\n            }\n            setTimeout(tryFn, nextBackoff);\n        };\n        tryFn();\n    });\n}\n/**\n * Given the full size of the array and a shape that may contain -1 as the\n * implicit dimension, returns the inferred shape where -1 is replaced.\n * E.g. For shape=[2, -1, 3] and size=24, it will return [2, 4, 3].\n *\n * @param shape The shape, which may contain -1 in some dimension.\n * @param size The full size (number of elements) of the array.\n * @return The inferred shape where -1 is replaced with the inferred size.\n */\nfunction inferFromImplicitShape(shape, size) {\n    let shapeProd = 1;\n    let implicitIdx = -1;\n    for (let i = 0; i < shape.length; ++i) {\n        if (shape[i] >= 0) {\n            shapeProd *= shape[i];\n        }\n        else if (shape[i] === -1) {\n            if (implicitIdx !== -1) {\n                throw Error(`Shapes can only have 1 implicit size. ` +\n                    `Found -1 at dim ${implicitIdx} and dim ${i}`);\n            }\n            implicitIdx = i;\n        }\n        else if (shape[i] < 0) {\n            throw Error(`Shapes can not be < 0. Found ${shape[i]} at dim ${i}`);\n        }\n    }\n    if (implicitIdx === -1) {\n        if (size > 0 && size !== shapeProd) {\n            throw Error(`Size(${size}) must match the product of shape ${shape}`);\n        }\n        return shape;\n    }\n    if (shapeProd === 0) {\n        throw Error(`Cannot infer the missing size in [${shape}] when ` +\n            `there are 0 elements`);\n    }\n    if (size % shapeProd !== 0) {\n        throw Error(`The implicit shape can't be a fractional number. ` +\n            `Got ${size} / ${shapeProd}`);\n    }\n    const newShape = shape.slice();\n    newShape[implicitIdx] = size / shapeProd;\n    return newShape;\n}\nfunction parseAxisParam(axis, shape) {\n    const rank = shape.length;\n    // Normalize input\n    axis = axis == null ? shape.map((s, i) => i) : [].concat(axis);\n    // Check for valid range\n    assert(axis.every(ax => ax >= -rank && ax < rank), () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n        `got axis ${axis}`);\n    // Check for only integers\n    assert(axis.every(ax => isInt(ax)), () => `All values in axis param must be integers but ` +\n        `got axis ${axis}`);\n    // Handle negative axis.\n    return axis.map(a => a < 0 ? rank + a : a);\n}\n/** Reduces the shape by removing all dimensions of shape 1. */\nfunction squeezeShape(shape, axis) {\n    const newShape = [];\n    const keptDims = [];\n    const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n    const axes = (axis == null || isEmptyArray) ?\n        null :\n        parseAxisParam(axis, shape).sort();\n    let j = 0;\n    for (let i = 0; i < shape.length; ++i) {\n        if (axes != null) {\n            if (axes[j] === i && shape[i] !== 1) {\n                throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n            }\n            if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n                newShape.push(shape[i]);\n                keptDims.push(i);\n            }\n            if (axes[j] <= i) {\n                j++;\n            }\n        }\n        if (shape[i] !== 1) {\n            newShape.push(shape[i]);\n            keptDims.push(i);\n        }\n    }\n    return { newShape, keptDims };\n}\nfunction getTypedArrayFromDType(dtype, size) {\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    return values;\n}\nfunction getArrayFromDType(dtype, size) {\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else if (dtype === 'string') {\n        values = new Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    return values;\n}\nfunction checkConversionForErrors(vals, dtype) {\n    for (let i = 0; i < vals.length; i++) {\n        const num = vals[i];\n        if (isNaN(num) || !isFinite(num)) {\n            throw Error(`A tensor of type ${dtype} being uploaded contains ${num}.`);\n        }\n    }\n}\n/** Returns true if the dtype is valid. */\nfunction isValidDtype(dtype) {\n    return dtype === 'bool' || dtype === 'complex64' || dtype === 'float32' ||\n        dtype === 'int32' || dtype === 'string';\n}\n/**\n * Returns true if the new type can't encode the old type without loss of\n * precision.\n */\nfunction hasEncodingLoss(oldType, newType) {\n    if (newType === 'complex64') {\n        return false;\n    }\n    if (newType === 'float32' && oldType !== 'complex64') {\n        return false;\n    }\n    if (newType === 'int32' && oldType !== 'float32' && oldType !== 'complex64') {\n        return false;\n    }\n    if (newType === 'bool' && oldType === 'bool') {\n        return false;\n    }\n    return true;\n}\nfunction isTypedArray(a) {\n    return a instanceof Float32Array || a instanceof Int32Array ||\n        a instanceof Uint8Array;\n}\nfunction bytesPerElement(dtype) {\n    if (dtype === 'float32' || dtype === 'int32') {\n        return 4;\n    }\n    else if (dtype === 'complex64') {\n        return 8;\n    }\n    else if (dtype === 'bool') {\n        return 1;\n    }\n    else {\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n}\n/**\n * Returns the approximate number of bytes allocated in the string array - 2\n * bytes per character. Computing the exact bytes for a native string in JS is\n * not possible since it depends on the encoding of the html page that serves\n * the website.\n */\nfunction bytesFromStringArray(arr) {\n    if (arr == null) {\n        return 0;\n    }\n    let bytes = 0;\n    arr.forEach(x => bytes += x.length);\n    return bytes;\n}\n/** Returns true if the value is a string. */\nfunction isString(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nfunction isBoolean(value) {\n    return typeof value === 'boolean';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\nfunction inferDtype(values) {\n    if (Array.isArray(values)) {\n        return inferDtype(values[0]);\n    }\n    if (values instanceof Float32Array) {\n        return 'float32';\n    }\n    else if (values instanceof Int32Array || values instanceof Uint8Array) {\n        return 'int32';\n    }\n    else if (isNumber(values)) {\n        return 'float32';\n    }\n    else if (isString(values)) {\n        return 'string';\n    }\n    else if (isBoolean(values)) {\n        return 'bool';\n    }\n    return 'float32';\n}\nfunction isFunction(f) {\n    return !!(f && f.constructor && f.call && f.apply);\n}\nfunction nearestDivisor(size, start) {\n    for (let i = start; i < size; ++i) {\n        if (size % i === 0) {\n            return i;\n        }\n    }\n    return size;\n}\nfunction computeStrides(shape) {\n    const rank = shape.length;\n    if (rank < 2) {\n        return [];\n    }\n    // Last dimension has implicit stride of 1, thus having D-1 (instead of D)\n    // strides.\n    const strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n        strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    return strides;\n}\nfunction createNestedArray(offset, shape, a) {\n    const ret = new Array();\n    if (shape.length === 1) {\n        const d = shape[0];\n        for (let i = 0; i < d; i++) {\n            ret[i] = a[offset + i];\n        }\n    }\n    else {\n        const d = shape[0];\n        const rest = shape.slice(1);\n        const len = rest.reduce((acc, c) => acc * c);\n        for (let i = 0; i < d; i++) {\n            ret[i] = createNestedArray(offset + i * len, rest, a);\n        }\n    }\n    return ret;\n}\n// Provide a nested array of TypedArray in given shape.\nfunction toNestedArray(shape, a) {\n    if (shape.length === 0) {\n        // Scalar type should return a single number.\n        return a[0];\n    }\n    const size = shape.reduce((acc, c) => acc * c);\n    if (size === 0) {\n        // A tensor with shape zero should be turned into empty list.\n        return [];\n    }\n    if (size !== a.length) {\n        throw new Error(`[${shape}] does not match the input size ${a.length}.`);\n    }\n    return createNestedArray(0, shape, a);\n}\nfunction makeOnesTypedArray(size, dtype) {\n    const array = makeZerosTypedArray(size, dtype);\n    for (let i = 0; i < array.length; i++) {\n        array[i] = 1;\n    }\n    return array;\n}\nfunction makeZerosTypedArray(size, dtype) {\n    if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n        return new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        return new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\n/**\n * Make nested `TypedArray` filled with zeros.\n * @param shape The shape information for the nested array.\n * @param dtype dtype of the array element.\n */\nfunction makeZerosNestedTypedArray(shape, dtype) {\n    const size = shape.reduce((prev, curr) => prev * curr, 1);\n    if (dtype == null || dtype === 'float32') {\n        return toNestedArray(shape, new Float32Array(size));\n    }\n    else if (dtype === 'int32') {\n        return toNestedArray(shape, new Int32Array(size));\n    }\n    else if (dtype === 'bool') {\n        return toNestedArray(shape, new Uint8Array(size));\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\nfunction assertNonNegativeIntegerDimensions(shape) {\n    shape.forEach(dimSize => {\n        assert(Number.isInteger(dimSize) && dimSize >= 0, () => `Tensor must have a shape comprised of positive integers but got ` +\n            `shape [${shape}].`);\n    });\n}\n/**\n * Computes flat index for a given location (multidimentionsal index) in a\n * Tensor/multidimensional array.\n *\n * @param locs Location in the tensor.\n * @param rank Rank of the tensor.\n * @param strides Tensor strides.\n */\nfunction locToIndex(locs, rank, strides) {\n    if (rank === 0) {\n        return 0;\n    }\n    else if (rank === 1) {\n        return locs[0];\n    }\n    let index = locs[locs.length - 1];\n    for (let i = 0; i < locs.length - 1; ++i) {\n        index += strides[i] * locs[i];\n    }\n    return index;\n}\n/**\n * Computes the location (multidimensional index) in a tensor/multidimentional\n * array for a given flat index.\n *\n * @param index Index in flat array.\n * @param rank Rank of tensor.\n * @param strides Strides of tensor.\n */\nfunction indexToLoc(index, rank, strides) {\n    if (rank === 0) {\n        return [];\n    }\n    else if (rank === 1) {\n        return [index];\n    }\n    const locs = new Array(rank);\n    for (let i = 0; i < locs.length - 1; ++i) {\n        locs[i] = Math.floor(index / strides[i]);\n        index -= locs[i] * strides[i];\n    }\n    locs[locs.length - 1] = index;\n    return locs;\n}\n/**\n * This method asserts whether an object is a Promise instance.\n * @param object\n */\n// tslint:disable-next-line: no-any\nfunction isPromise(object) {\n    //  We chose to not use 'obj instanceOf Promise' for two reasons:\n    //  1. It only reliably works for es6 Promise, not other Promise\n    //  implementations.\n    //  2. It doesn't work with framework that uses zone.js. zone.js monkey patch\n    //  the async calls, so it is possible the obj (patched) is comparing to a\n    //  pre-patched Promise.\n    return object && object.then && typeof object.then === 'function';\n}\n//# sourceMappingURL=util_base.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/util_base.js?");

/***/ }),

/***/ "./node_modules/@tensorflow/tfjs-core/dist/version.js":
/*!************************************************************!*\
  !*** ./node_modules/@tensorflow/tfjs-core/dist/version.js ***!
  \************************************************************/
/*! namespace exports */
/*! export version [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => /* binding */ version\n/* harmony export */ });\n/** @license See the LICENSE file. */\n// This code is auto-generated, do not modify this file!\nconst version = '3.2.0';\n\n//# sourceMappingURL=version.js.map\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/@tensorflow/tfjs-core/dist/version.js?");

/***/ }),

/***/ "./node_modules/demolishedrenderer/index.js":
/*!**************************************************!*\
  !*** ./node_modules/demolishedrenderer/index.js ***!
  \**************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, __webpack_require__ */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./src/DR */ \"./node_modules/demolishedrenderer/src/DR.js\"), exports);\r\n\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/demolishedrenderer/index.js?");

/***/ }),

/***/ "./node_modules/demolishedrenderer/src/DR.js":
/*!***************************************************!*\
  !*** ./node_modules/demolishedrenderer/src/DR.js ***!
  \***************************************************/
/*! flagged exports */
/*! export DR [provided] [no usage info] [missing usage info prevents renaming] */
/*! export Dt [provided] [no usage info] [missing usage info prevents renaming] */
/*! export __esModule [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__ */
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DR = exports.Dt = void 0;\r\nvar Dt = (function () {\r\n    function Dt(gl, textures, customUniforms) {\r\n        this.textures = new Array();\r\n        this.locations = new Map();\r\n        this.framebuffer = gl.createFramebuffer();\r\n        this.renderbuffer = gl.createRenderbuffer();\r\n        this.texture = gl.createTexture();\r\n        this.textures = textures;\r\n        this.uniforms = customUniforms;\r\n    }\r\n    return Dt;\r\n}());\r\nexports.Dt = Dt;\r\nvar DR = (function () {\r\n    function DR(canvas, v, f, cU) {\r\n        if (cU === void 0) { cU = {}; }\r\n        this.canvas = canvas;\r\n        this.cU = cU;\r\n        this.frameCount = 0;\r\n        this.header = \"#version 300 es\\n    #ifdef GL_ES\\n    precision highp float;\\n    precision highp int;\\n    precision mediump sampler3D;\\n    #endif\\n    \";\r\n        this.targets = new Map();\r\n        this.mainUniforms = new Map();\r\n        this.programs = new Map();\r\n        this.textureCache = new Map();\r\n        var gl = canvas.getContext(\"webgl2\", { preserveDrawingBuffer: true });\r\n        var c = 0, d;\r\n        for (var i in gl)\r\n            \"function\" == typeof gl[i] && (d = (c++ & 255).toString(16), d = d.match(/^[0-9].*$/) ? \"x\" + d : d, gl[d] = gl[i]);\r\n        this.gl = gl;\r\n        var mp = gl.createProgram();\r\n        this.mainProgram = mp;\r\n        gl.viewport(0, 0, canvas.width, canvas.height);\r\n        this.buffer = gl.createBuffer();\r\n        this.surfaceBuffer = gl.createBuffer();\r\n        this.cS(mp, 35633, this.header + v);\r\n        this.cS(mp, 35632, this.header + f);\r\n        gl.linkProgram(mp);\r\n        gl.validateProgram(mp);\r\n        if (!gl.getProgramParameter(mp, gl.LINK_STATUS)) {\r\n            var info = gl.getProgramInfoLog(mp);\r\n            throw 'Could not compile WebGL program. \\n\\n' + info;\r\n        }\r\n        gl.useProgram(mp);\r\n        for (var i = 0; i < gl.getProgramParameter(mp, gl.ACTIVE_UNIFORMS); ++i) {\r\n            var u = gl.getActiveUniform(mp, i);\r\n            this.mainUniforms.set(u.name, gl.getUniformLocation(mp, u.name));\r\n        }\r\n        this.screenVertexPosition = gl.getAttribLocation(mp, \"pos\");\r\n        gl.enableVertexAttribArray(this.screenVertexPosition);\r\n        gl.bindBuffer(34962, this.buffer);\r\n        gl.bufferData(34962, new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0]), 35044);\r\n    }\r\n    DR.prototype.cS = function (program, type, source) {\r\n        var gl = this.gl;\r\n        var shader = gl.createShader(type);\r\n        gl.shaderSource(shader, source);\r\n        gl.compileShader(shader);\r\n        gl.attachShader(program, shader);\r\n        if (!gl.getShaderParameter(shader, 35713)) {\r\n            gl.getShaderInfoLog(shader).trim().split(\"\\n\").forEach(function (l) {\r\n                return console.error(\"[shader] \" + l);\r\n            });\r\n            throw new Error(\"Error while compiling vertex/fragment\" + source);\r\n        }\r\n        ;\r\n    };\r\n    DR.prototype.aP = function (name) {\r\n        var p = this.gl.createProgram();\r\n        this.programs.set(name, p);\r\n        return p;\r\n    };\r\n    DR.prototype.t = function (data, d) {\r\n        var gl = this.gl;\r\n        var texture = gl.createTexture();\r\n        gl.activeTexture(d);\r\n        gl.bindTexture(3553, texture);\r\n        if (data instanceof Image) {\r\n            gl.texImage2D(3553, 0, 6408, 6408, 5121, data);\r\n        }\r\n        else {\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\r\n        }\r\n        gl.generateMipmap(3553);\r\n        return texture;\r\n    };\r\n    DR.prototype.tC = function (sources, d) {\r\n        var gl = this.gl;\r\n        var texture = gl.createTexture();\r\n        gl.activeTexture(d);\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\r\n        var fetchAll = function (src, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                var image = new Image();\r\n                image.dataset.key = key;\r\n                image.onerror = reject;\r\n                image.onload = function () {\r\n                    resolve(image);\r\n                };\r\n                image.src = src;\r\n            });\r\n        };\r\n        Promise.all(sources.map(function (i) {\r\n            return fetchAll(i.d, i.t);\r\n        })).then(function (data) {\r\n            data.forEach(function (image) {\r\n                var target = image.dataset.key;\r\n                var level = 0;\r\n                var internalFormat = gl.RGBA;\r\n                var width = 512;\r\n                var height = 512;\r\n                var format = gl.RGBA;\r\n                var type = gl.UNSIGNED_BYTE;\r\n                gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\r\n                gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\r\n                gl.texImage2D(target, level, internalFormat, format, type, image);\r\n                gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n            });\r\n        });\r\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n        return texture;\r\n    };\r\n    DR.prototype.aA = function (assets, cb) {\r\n        var _this = this;\r\n        var cache = function (k, n, v, f) {\r\n            _this.textureCache.set(k, { unit: n, src: v, fn: f });\r\n        };\r\n        var p = function (key, texture) {\r\n            var unit = texture.unit;\r\n            return new Promise(function (resolve) {\r\n                if (!texture.src) {\r\n                    cache(key, unit, _this.t(new Uint8Array(1024), unit), texture.fn);\r\n                    resolve(key);\r\n                }\r\n                else {\r\n                    if (!Array.isArray(texture.src)) {\r\n                        var i_1 = new Image();\r\n                        i_1.onload = function (e) {\r\n                            cache(key, unit, _this.t(i_1, unit), null);\r\n                            resolve(key);\r\n                        };\r\n                        i_1.src = texture.src;\r\n                    }\r\n                    else {\r\n                        cache(key, unit, _this.tC(texture.src, unit), texture.fn);\r\n                        resolve(key);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        Promise.all(Object.keys(assets).map(function (key) {\r\n            return p(key, assets[key]);\r\n        })).then(function (result) {\r\n            cb(result);\r\n        }).catch(function () {\r\n        });\r\n        return this;\r\n    };\r\n    DR.prototype.aB = function (name, vertex, fragment, textures, customUniforms) {\r\n        var _this = this;\r\n        var gl = this.gl;\r\n        var tA = this.cT(this.canvas.width, this.canvas.height, textures ? textures : [], customUniforms ? customUniforms : {});\r\n        var tB = this.cT(this.canvas.width, this.canvas.height, textures ? textures : [], customUniforms ? customUniforms : {});\r\n        this.targets.set(name, tA);\r\n        this.targets.set(\"_\" + name, tB);\r\n        var program = this.aP(name);\r\n        this.cS(program, 35633, this.header + vertex);\r\n        this.cS(program, 35632, this.header + fragment);\r\n        gl.linkProgram(program);\r\n        gl.validateProgram(program);\r\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n            var info = gl.getProgramInfoLog(program);\r\n            throw 'Could not compile WebGL program. \\n\\n' + info;\r\n        }\r\n        gl.useProgram(program);\r\n        if (textures) {\r\n            textures.forEach(function (tk) {\r\n                gl.bindTexture(3553, _this.textureCache.get(tk).src);\r\n            });\r\n        }\r\n        this.vertexPosition = gl.getAttribLocation(program, \"pos\");\r\n        gl.enableVertexAttribArray(this.vertexPosition);\r\n        for (var i = 0; i < gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS); ++i) {\r\n            var u = gl.getActiveUniform(program, i);\r\n            tA.locations.set(u.name, gl.getUniformLocation(program, u.name));\r\n        }\r\n        return this;\r\n    };\r\n    DR.prototype.R = function (time) {\r\n        var _this = this;\r\n        var gl = this.gl;\r\n        var main = this.mainProgram;\r\n        var tc = 0;\r\n        this.programs.forEach(function (current, key) {\r\n            gl.useProgram(current);\r\n            var fT = _this.targets.get(key);\r\n            var bT = _this.targets.get(\"_\" + key);\r\n            gl.uniform2f(fT.locations.get(\"resolution\"), _this.canvas.width, _this.canvas.height);\r\n            gl.uniform1f(fT.locations.get(\"time\"), time);\r\n            gl.uniform1f(fT.locations.get(\"frame\"), _this.frameCount);\r\n            var customUniforms = fT.uniforms;\r\n            customUniforms && Object.keys(customUniforms).forEach(function (v) {\r\n                customUniforms[v](fT.locations.get(v), gl, current, time);\r\n            });\r\n            var bl = gl.getUniformLocation(current, key);\r\n            gl.uniform1i(bl, 0);\r\n            gl.activeTexture(gl.TEXTURE0);\r\n            gl.bindTexture(gl.TEXTURE_2D, bT.texture);\r\n            fT.textures.forEach(function (tk, index) {\r\n                var ct = _this.textureCache.get(tk);\r\n                gl.activeTexture(ct.unit);\r\n                gl.bindTexture(gl.TEXTURE_2D, ct.src);\r\n                if (ct.fn)\r\n                    ct.fn(current, gl, ct.src);\r\n                var loc = gl.getUniformLocation(current, tk);\r\n                gl.uniform1i(loc, index + 1);\r\n                tc++;\r\n            });\r\n            gl.bindBuffer(34962, _this.surfaceBuffer);\r\n            gl.vertexAttribPointer(0, 2, 5126, false, 0, 0);\r\n            gl.bindBuffer(34962, _this.buffer);\r\n            gl.vertexAttribPointer(0, 2, 5126, false, 0, 0);\r\n            gl.bindFramebuffer(36160, fT.framebuffer);\r\n            gl.clear(16384 | 256);\r\n            gl.drawArrays(4, 0, 6);\r\n            bT = fT;\r\n            fT = bT;\r\n        });\r\n        gl.useProgram(main);\r\n        gl.uniform2f(this.mainUniforms.get(\"resolution\"), this.canvas.width, this.canvas.height);\r\n        gl.uniform1f(this.mainUniforms.get(\"time\"), time);\r\n        Object.keys(this.cU).forEach(function (v) {\r\n            _this.cU[v](gl.getUniformLocation(main, v), gl, main, time);\r\n        });\r\n        gl.bindBuffer(34962, this.buffer);\r\n        gl.vertexAttribPointer(0, 2, 5126, false, 0, 0);\r\n        this.targets.forEach(function (target, key) {\r\n            gl.uniform1i(gl.getUniformLocation(main, key), tc);\r\n            gl.activeTexture(33984 + tc);\r\n            gl.bindTexture(3553, target.texture);\r\n            tc++;\r\n        });\r\n        gl.bindFramebuffer(36160, null);\r\n        gl.clear(16384 | 256);\r\n        gl.drawArrays(4, 0, 6);\r\n        this.frameCount++;\r\n    };\r\n    DR.prototype.cT = function (width, height, textures, customUniforms) {\r\n        var gl = this.gl;\r\n        var target = new Dt(gl, textures, customUniforms);\r\n        gl.bindTexture(3553, target.texture);\r\n        gl.texImage2D(3553, 0, 6408, width, height, 0, 6408, 5121, null);\r\n        gl.texParameteri(3553, 10242, 33071);\r\n        gl.texParameteri(3553, 10243, 33071);\r\n        gl.texParameteri(3553, 10240, 9728);\r\n        gl.texParameteri(3553, 10241, 9728);\r\n        gl.bindFramebuffer(36160, target.framebuffer);\r\n        gl.framebufferTexture2D(36160, 36064, 3553, target.texture, 0);\r\n        gl.bindRenderbuffer(36161, target.renderbuffer);\r\n        gl.renderbufferStorage(36161, 33189, width, height);\r\n        gl.framebufferRenderbuffer(36160, 36096, 36161, target.renderbuffer);\r\n        gl.bindTexture(3553, null);\r\n        gl.bindRenderbuffer(36161, null);\r\n        gl.bindFramebuffer(36160, null);\r\n        return target;\r\n    };\r\n    DR.prototype.run = function (t, fps) {\r\n        var _this = this;\r\n        var pt = performance.now();\r\n        var interval = 1000 / fps;\r\n        var dt = 0;\r\n        var a = function (t) {\r\n            requestAnimationFrame(a);\r\n            dt = t - pt;\r\n            if (dt > interval) {\r\n                pt = t - (dt % interval);\r\n                _this.R(pt / 1000);\r\n            }\r\n        };\r\n        a(t | 0);\r\n        return this;\r\n    };\r\n    DR.gT = function (mainVertex, mainFrag, textureVertex, textureFrag, w, h) {\r\n        var canvas = document.createElement(\"canvas\");\r\n        canvas.width = w;\r\n        canvas.height = h;\r\n        var dr = new DR(canvas, mainVertex, mainFrag);\r\n        dr.aB(\"A\", textureVertex, textureFrag);\r\n        for (var i = 0; i < 2; i++) {\r\n            dr.R(i);\r\n        }\r\n        return canvas;\r\n    };\r\n    return DR;\r\n}());\r\nexports.DR = DR;\r\n\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/demolishedrenderer/src/DR.js?");

/***/ }),

/***/ "./node_modules/quantize/quantize.js":
/*!*******************************************!*\
  !*** ./node_modules/quantize/quantize.js ***!
  \*******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module */
/***/ ((module) => {

eval("/*\n * quantize.js Copyright 2008 Nick Rabinowitz\n * Ported to node.js by Olivier Lesnicki\n * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php\n */\n\n// fill out a couple protovis dependencies\n/*\n * Block below copied from Protovis: http://mbostock.github.com/protovis/\n * Copyright 2010 Stanford Visualization Group\n * Licensed under the BSD License: http://www.opensource.org/licenses/bsd-license.php\n */\nif (!pv) {\n    var pv = {\n        map: function(array, f) {\n            var o = {};\n            return f ? array.map(function(d, i) {\n                o.index = i;\n                return f.call(o, d);\n            }) : array.slice();\n        },\n        naturalOrder: function(a, b) {\n            return (a < b) ? -1 : ((a > b) ? 1 : 0);\n        },\n        sum: function(array, f) {\n            var o = {};\n            return array.reduce(f ? function(p, d, i) {\n                o.index = i;\n                return p + f.call(o, d);\n            } : function(p, d) {\n                return p + d;\n            }, 0);\n        },\n        max: function(array, f) {\n            return Math.max.apply(null, f ? pv.map(array, f) : array);\n        }\n    }\n}\n\n/**\n * Basic Javascript port of the MMCQ (modified median cut quantization)\n * algorithm from the Leptonica library (http://www.leptonica.com/).\n * Returns a color map you can use to map original pixels to the reduced\n * palette. Still a work in progress.\n * \n * @author Nick Rabinowitz\n * @example\n \n// array of pixels as [R,G,B] arrays\nvar myPixels = [[190,197,190], [202,204,200], [207,214,210], [211,214,211], [205,207,207]\n                // etc\n                ];\nvar maxColors = 4;\n \nvar cmap = MMCQ.quantize(myPixels, maxColors);\nvar newPalette = cmap.palette();\nvar newPixels = myPixels.map(function(p) { \n    return cmap.map(p); \n});\n \n */\nvar MMCQ = (function() {\n    // private constants\n    var sigbits = 5,\n        rshift = 8 - sigbits,\n        maxIterations = 1000,\n        fractByPopulations = 0.75;\n\n    // get reduced-space color index for a pixel\n\n    function getColorIndex(r, g, b) {\n        return (r << (2 * sigbits)) + (g << sigbits) + b;\n    }\n\n    // Simple priority queue\n\n    function PQueue(comparator) {\n        var contents = [],\n            sorted = false;\n\n        function sort() {\n            contents.sort(comparator);\n            sorted = true;\n        }\n\n        return {\n            push: function(o) {\n                contents.push(o);\n                sorted = false;\n            },\n            peek: function(index) {\n                if (!sorted) sort();\n                if (index === undefined) index = contents.length - 1;\n                return contents[index];\n            },\n            pop: function() {\n                if (!sorted) sort();\n                return contents.pop();\n            },\n            size: function() {\n                return contents.length;\n            },\n            map: function(f) {\n                return contents.map(f);\n            },\n            debug: function() {\n                if (!sorted) sort();\n                return contents;\n            }\n        };\n    }\n\n    // 3d color space box\n\n    function VBox(r1, r2, g1, g2, b1, b2, histo) {\n        var vbox = this;\n        vbox.r1 = r1;\n        vbox.r2 = r2;\n        vbox.g1 = g1;\n        vbox.g2 = g2;\n        vbox.b1 = b1;\n        vbox.b2 = b2;\n        vbox.histo = histo;\n    }\n    VBox.prototype = {\n        volume: function(force) {\n            var vbox = this;\n            if (!vbox._volume || force) {\n                vbox._volume = ((vbox.r2 - vbox.r1 + 1) * (vbox.g2 - vbox.g1 + 1) * (vbox.b2 - vbox.b1 + 1));\n            }\n            return vbox._volume;\n        },\n        count: function(force) {\n            var vbox = this,\n                histo = vbox.histo;\n            if (!vbox._count_set || force) {\n                var npix = 0,\n                    i, j, k, index;\n                for (i = vbox.r1; i <= vbox.r2; i++) {\n                    for (j = vbox.g1; j <= vbox.g2; j++) {\n                        for (k = vbox.b1; k <= vbox.b2; k++) {\n                            index = getColorIndex(i, j, k);\n                            npix += (histo[index] || 0);\n                        }\n                    }\n                }\n                vbox._count = npix;\n                vbox._count_set = true;\n            }\n            return vbox._count;\n        },\n        copy: function() {\n            var vbox = this;\n            return new VBox(vbox.r1, vbox.r2, vbox.g1, vbox.g2, vbox.b1, vbox.b2, vbox.histo);\n        },\n        avg: function(force) {\n            var vbox = this,\n                histo = vbox.histo;\n            if (!vbox._avg || force) {\n                var ntot = 0,\n                    mult = 1 << (8 - sigbits),\n                    rsum = 0,\n                    gsum = 0,\n                    bsum = 0,\n                    hval,\n                    i, j, k, histoindex;\n                for (i = vbox.r1; i <= vbox.r2; i++) {\n                    for (j = vbox.g1; j <= vbox.g2; j++) {\n                        for (k = vbox.b1; k <= vbox.b2; k++) {\n                            histoindex = getColorIndex(i, j, k);\n                            hval = histo[histoindex] || 0;\n                            ntot += hval;\n                            rsum += (hval * (i + 0.5) * mult);\n                            gsum += (hval * (j + 0.5) * mult);\n                            bsum += (hval * (k + 0.5) * mult);\n                        }\n                    }\n                }\n                if (ntot) {\n                    vbox._avg = [~~(rsum / ntot), ~~ (gsum / ntot), ~~ (bsum / ntot)];\n                } else {\n                    //console.log('empty box');\n                    vbox._avg = [~~(mult * (vbox.r1 + vbox.r2 + 1) / 2), ~~ (mult * (vbox.g1 + vbox.g2 + 1) / 2), ~~ (mult * (vbox.b1 + vbox.b2 + 1) / 2)];\n                }\n            }\n            return vbox._avg;\n        },\n        contains: function(pixel) {\n            var vbox = this,\n                rval = pixel[0] >> rshift;\n            gval = pixel[1] >> rshift;\n            bval = pixel[2] >> rshift;\n            return (rval >= vbox.r1 && rval <= vbox.r2 &&\n                gval >= vbox.g1 && gval <= vbox.g2 &&\n                bval >= vbox.b1 && bval <= vbox.b2);\n        }\n    };\n\n    // Color map\n\n    function CMap() {\n        this.vboxes = new PQueue(function(a, b) {\n            return pv.naturalOrder(\n                a.vbox.count() * a.vbox.volume(),\n                b.vbox.count() * b.vbox.volume()\n            )\n        });;\n    }\n    CMap.prototype = {\n        push: function(vbox) {\n            this.vboxes.push({\n                vbox: vbox,\n                color: vbox.avg()\n            });\n        },\n        palette: function() {\n            return this.vboxes.map(function(vb) {\n                return vb.color\n            });\n        },\n        size: function() {\n            return this.vboxes.size();\n        },\n        map: function(color) {\n            var vboxes = this.vboxes;\n            for (var i = 0; i < vboxes.size(); i++) {\n                if (vboxes.peek(i).vbox.contains(color)) {\n                    return vboxes.peek(i).color;\n                }\n            }\n            return this.nearest(color);\n        },\n        nearest: function(color) {\n            var vboxes = this.vboxes,\n                d1, d2, pColor;\n            for (var i = 0; i < vboxes.size(); i++) {\n                d2 = Math.sqrt(\n                    Math.pow(color[0] - vboxes.peek(i).color[0], 2) +\n                    Math.pow(color[1] - vboxes.peek(i).color[1], 2) +\n                    Math.pow(color[2] - vboxes.peek(i).color[2], 2)\n                );\n                if (d2 < d1 || d1 === undefined) {\n                    d1 = d2;\n                    pColor = vboxes.peek(i).color;\n                }\n            }\n            return pColor;\n        },\n        forcebw: function() {\n            // XXX: won't  work yet\n            var vboxes = this.vboxes;\n            vboxes.sort(function(a, b) {\n                return pv.naturalOrder(pv.sum(a.color), pv.sum(b.color))\n            });\n\n            // force darkest color to black if everything < 5\n            var lowest = vboxes[0].color;\n            if (lowest[0] < 5 && lowest[1] < 5 && lowest[2] < 5)\n                vboxes[0].color = [0, 0, 0];\n\n            // force lightest color to white if everything > 251\n            var idx = vboxes.length - 1,\n                highest = vboxes[idx].color;\n            if (highest[0] > 251 && highest[1] > 251 && highest[2] > 251)\n                vboxes[idx].color = [255, 255, 255];\n        }\n    };\n\n    // histo (1-d array, giving the number of pixels in\n    // each quantized region of color space), or null on error\n\n    function getHisto(pixels) {\n        var histosize = 1 << (3 * sigbits),\n            histo = new Array(histosize),\n            index, rval, gval, bval;\n        pixels.forEach(function(pixel) {\n            rval = pixel[0] >> rshift;\n            gval = pixel[1] >> rshift;\n            bval = pixel[2] >> rshift;\n            index = getColorIndex(rval, gval, bval);\n            histo[index] = (histo[index] || 0) + 1;\n        });\n        return histo;\n    }\n\n    function vboxFromPixels(pixels, histo) {\n        var rmin = 1000000,\n            rmax = 0,\n            gmin = 1000000,\n            gmax = 0,\n            bmin = 1000000,\n            bmax = 0,\n            rval, gval, bval;\n        // find min/max\n        pixels.forEach(function(pixel) {\n            rval = pixel[0] >> rshift;\n            gval = pixel[1] >> rshift;\n            bval = pixel[2] >> rshift;\n            if (rval < rmin) rmin = rval;\n            else if (rval > rmax) rmax = rval;\n            if (gval < gmin) gmin = gval;\n            else if (gval > gmax) gmax = gval;\n            if (bval < bmin) bmin = bval;\n            else if (bval > bmax) bmax = bval;\n        });\n        return new VBox(rmin, rmax, gmin, gmax, bmin, bmax, histo);\n    }\n\n    function medianCutApply(histo, vbox) {\n        if (!vbox.count()) return;\n\n        var rw = vbox.r2 - vbox.r1 + 1,\n            gw = vbox.g2 - vbox.g1 + 1,\n            bw = vbox.b2 - vbox.b1 + 1,\n            maxw = pv.max([rw, gw, bw]);\n        // only one pixel, no split\n        if (vbox.count() == 1) {\n            return [vbox.copy()]\n        }\n        /* Find the partial sum arrays along the selected axis. */\n        var total = 0,\n            partialsum = [],\n            lookaheadsum = [],\n            i, j, k, sum, index;\n        if (maxw == rw) {\n            for (i = vbox.r1; i <= vbox.r2; i++) {\n                sum = 0;\n                for (j = vbox.g1; j <= vbox.g2; j++) {\n                    for (k = vbox.b1; k <= vbox.b2; k++) {\n                        index = getColorIndex(i, j, k);\n                        sum += (histo[index] || 0);\n                    }\n                }\n                total += sum;\n                partialsum[i] = total;\n            }\n        } else if (maxw == gw) {\n            for (i = vbox.g1; i <= vbox.g2; i++) {\n                sum = 0;\n                for (j = vbox.r1; j <= vbox.r2; j++) {\n                    for (k = vbox.b1; k <= vbox.b2; k++) {\n                        index = getColorIndex(j, i, k);\n                        sum += (histo[index] || 0);\n                    }\n                }\n                total += sum;\n                partialsum[i] = total;\n            }\n        } else { /* maxw == bw */\n            for (i = vbox.b1; i <= vbox.b2; i++) {\n                sum = 0;\n                for (j = vbox.r1; j <= vbox.r2; j++) {\n                    for (k = vbox.g1; k <= vbox.g2; k++) {\n                        index = getColorIndex(j, k, i);\n                        sum += (histo[index] || 0);\n                    }\n                }\n                total += sum;\n                partialsum[i] = total;\n            }\n        }\n        partialsum.forEach(function(d, i) {\n            lookaheadsum[i] = total - d\n        });\n\n        function doCut(color) {\n            var dim1 = color + '1',\n                dim2 = color + '2',\n                left, right, vbox1, vbox2, d2, count2 = 0;\n            for (i = vbox[dim1]; i <= vbox[dim2]; i++) {\n                if (partialsum[i] > total / 2) {\n                    vbox1 = vbox.copy();\n                    vbox2 = vbox.copy();\n                    left = i - vbox[dim1];\n                    right = vbox[dim2] - i;\n                    if (left <= right)\n                        d2 = Math.min(vbox[dim2] - 1, ~~ (i + right / 2));\n                    else d2 = Math.max(vbox[dim1], ~~ (i - 1 - left / 2));\n                    // avoid 0-count boxes\n                    while (!partialsum[d2]) d2++;\n                    count2 = lookaheadsum[d2];\n                    while (!count2 && partialsum[d2 - 1]) count2 = lookaheadsum[--d2];\n                    // set dimensions\n                    vbox1[dim2] = d2;\n                    vbox2[dim1] = vbox1[dim2] + 1;\n                    // console.log('vbox counts:', vbox.count(), vbox1.count(), vbox2.count());\n                    return [vbox1, vbox2];\n                }\n            }\n\n        }\n        // determine the cut planes\n        return maxw == rw ? doCut('r') :\n            maxw == gw ? doCut('g') :\n            doCut('b');\n    }\n\n    function quantize(pixels, maxcolors) {\n        // short-circuit\n        if (!pixels.length || maxcolors < 2 || maxcolors > 256) {\n            // console.log('wrong number of maxcolors');\n            return false;\n        }\n\n        // XXX: check color content and convert to grayscale if insufficient\n\n        var histo = getHisto(pixels),\n            histosize = 1 << (3 * sigbits);\n\n        // check that we aren't below maxcolors already\n        var nColors = 0;\n        histo.forEach(function() {\n            nColors++\n        });\n        if (nColors <= maxcolors) {\n            // XXX: generate the new colors from the histo and return\n        }\n\n        // get the beginning vbox from the colors\n        var vbox = vboxFromPixels(pixels, histo),\n            pq = new PQueue(function(a, b) {\n                return pv.naturalOrder(a.count(), b.count())\n            });\n        pq.push(vbox);\n\n        // inner function to do the iteration\n\n        function iter(lh, target) {\n            var ncolors = 1,\n                niters = 0,\n                vbox;\n            while (niters < maxIterations) {\n                vbox = lh.pop();\n                if (!vbox.count()) { /* just put it back */\n                    lh.push(vbox);\n                    niters++;\n                    continue;\n                }\n                // do the cut\n                var vboxes = medianCutApply(histo, vbox),\n                    vbox1 = vboxes[0],\n                    vbox2 = vboxes[1];\n\n                if (!vbox1) {\n                    // console.log(\"vbox1 not defined; shouldn't happen!\");\n                    return;\n                }\n                lh.push(vbox1);\n                if (vbox2) { /* vbox2 can be null */\n                    lh.push(vbox2);\n                    ncolors++;\n                }\n                if (ncolors >= target) return;\n                if (niters++ > maxIterations) {\n                    // console.log(\"infinite loop; perhaps too few pixels!\");\n                    return;\n                }\n            }\n        }\n\n        // first set of colors, sorted by population\n        iter(pq, fractByPopulations * maxcolors);\n        // console.log(pq.size(), pq.debug().length, pq.debug().slice());\n\n        // Re-sort by the product of pixel occupancy times the size in color space.\n        var pq2 = new PQueue(function(a, b) {\n            return pv.naturalOrder(a.count() * a.volume(), b.count() * b.volume())\n        });\n        while (pq.size()) {\n            pq2.push(pq.pop());\n        }\n\n        // next set - generate the median cuts using the (npix * vol) sorting.\n        iter(pq2, maxcolors - pq2.size());\n\n        // calculate the actual colors\n        var cmap = new CMap();\n        while (pq2.size()) {\n            cmap.push(pq2.pop());\n        }\n\n        return cmap;\n    }\n\n    return {\n        quantize: quantize\n    }\n})();\n\nmodule.exports = MMCQ.quantize\n\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/quantize/quantize.js?");

/***/ }),

/***/ "./node_modules/seedrandom/index.js":
/*!******************************************!*\
  !*** ./node_modules/seedrandom/index.js ***!
  \******************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = __webpack_require__(/*! ./lib/alea */ \"./node_modules/seedrandom/lib/alea.js\");\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = __webpack_require__(/*! ./lib/xor128 */ \"./node_modules/seedrandom/lib/xor128.js\");\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = __webpack_require__(/*! ./lib/xorwow */ \"./node_modules/seedrandom/lib/xorwow.js\");\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = __webpack_require__(/*! ./lib/xorshift7 */ \"./node_modules/seedrandom/lib/xorshift7.js\");\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = __webpack_require__(/*! ./lib/xor4096 */ \"./node_modules/seedrandom/lib/xor4096.js\");\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = __webpack_require__(/*! ./lib/tychei */ \"./node_modules/seedrandom/lib/tychei.js\");\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = __webpack_require__(/*! ./seedrandom */ \"./node_modules/seedrandom/seedrandom.js\");\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/seedrandom/index.js?");

/***/ }),

/***/ "./node_modules/seedrandom/lib/alea.js":
/*!*********************************************!*\
  !*** ./node_modules/seedrandom/lib/alea.js ***!
  \*********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/seedrandom/lib/alea.js?");

/***/ }),

/***/ "./node_modules/seedrandom/lib/tychei.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/tychei.js ***!
  \***********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/seedrandom/lib/tychei.js?");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xor128.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/xor128.js ***!
  \***********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/seedrandom/lib/xor128.js?");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xor4096.js":
/*!************************************************!*\
  !*** ./node_modules/seedrandom/lib/xor4096.js ***!
  \************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/seedrandom/lib/xor4096.js?");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xorshift7.js":
/*!**************************************************!*\
  !*** ./node_modules/seedrandom/lib/xorshift7.js ***!
  \**************************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/seedrandom/lib/xorshift7.js?");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xorwow.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/xorwow.js ***!
  \***********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, module.loaded, module.id, module, __webpack_require__.nmd, __webpack_require__.amdD, __webpack_require__.amdO, __webpack_require__, __webpack_exports__, __webpack_require__.* */
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return impl; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n   true && module,    // present in node.js\n  __webpack_require__.amdD   // present with an AMD loader\n);\n\n\n\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/seedrandom/lib/xorwow.js?");

/***/ }),

/***/ "./node_modules/seedrandom/seedrandom.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/seedrandom.js ***!
  \***********************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: module, __webpack_require__, __webpack_exports__ */
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ( true && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = __webpack_require__(/*! crypto */ \"?8465\");\n  } catch (ex) {}\n} else if (true) {\n  !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return seedrandom; }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n\n\n//# sourceURL=webpack://greenscreenstream/./node_modules/seedrandom/seedrandom.js?");

/***/ }),

/***/ "./src/GreenScreenStream.js":
/*!**********************************!*\
  !*** ./src/GreenScreenStream.js ***!
  \**********************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: top-level-this-exports, __webpack_exports__, __webpack_require__ */
/*! CommonJS bailout: this is used directly at 2:23-27 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GreenScreenStream = void 0;\r\nconst demolishedrenderer_1 = __webpack_require__(/*! demolishedrenderer */ \"./node_modules/demolishedrenderer/index.js\");\r\nconst quantize_1 = __importDefault(__webpack_require__(/*! quantize */ \"./node_modules/quantize/quantize.js\"));\r\nconst bodyPix = __webpack_require__(/*! @tensorflow-models/body-pix */ \"./node_modules/@tensorflow-models/body-pix/dist/body-pix.esm.js\");\r\n__webpack_require__(/*! @tensorflow/tfjs-backend-webgl */ \"./node_modules/@tensorflow/tfjs-backend-webgl/dist/index.js\");\r\nclass GreenScreenStream {\r\n    /**\r\n     *Creates an instance of GreenScreenStream.\r\n     * @param {string} backgroundUrl backgound image that replaces the \"green\"\r\n     * @param {HTMLCanvasElement} [canvas] HTML5 Canvas element to render to, optional\r\n     * @param {number} [width] width of the HTML5 Canvas element, optional.\r\n     * @param {number} [height] height of the HTML5 Canvas element, optional.\r\n     * @memberof GreenScreenStream\r\n     */\r\n    constructor(useML, backgroundUrl, canvas, width, height) {\r\n        this.useML = useML;\r\n        this.chromaKey = { r: 0.0, g: 0.6941176470588235, b: 0.25098039215686274 }; // { r: 0, g: 177, b: 64\r\n        this.maskRange = { x: 0.0025, y: 0.26 };\r\n        this.mainFrag = `uniform vec2 resolution;\r\n    uniform sampler2D A;\r\n    out vec4 fragColor;\r\n    void main(){\r\n        vec2 uv = gl_FragCoord.xy/resolution.xy;\r\n        fragColor = texture(A, uv);\r\n    }`;\r\n        this.mainVert = `layout(location = 0) in vec2 pos;\r\n    out vec4 fragColor;\r\n    void main() {\r\n        gl_Position = vec4(pos.xy,0.0,1.0);\r\n    }\r\n    `;\r\n        this.bufferVert = `layout(location = 0) in vec2 pos;\r\n    out vec4 fragColor;\r\n    void main() {\r\n        gl_Position = vec4(pos.xy,0.0,1.0);\r\n    }\r\n    `;\r\n        this.bufferFrag = `uniform float time;\r\n    uniform vec2 resolution;\r\n    uniform sampler2D webcam;\r\n    uniform sampler2D background;\r\n    uniform vec4 chromaKey;\r\n    uniform vec2 maskRange;\r\n    out vec4 fragColor;\r\n\r\n    mat4 RGBtoYUV = mat4(0.257,  0.439, -0.148, 0.0,\r\n        0.504, -0.368, -0.291, 0.0,\r\n        0.098, -0.071,  0.439, 0.0,\r\n        0.0625, 0.500,  0.500, 1.0 );\r\n\r\nfloat colorclose(vec3 yuv, vec3 keyYuv, vec2 tol)\r\n{\r\nfloat tmp = sqrt(pow(keyYuv.g - yuv.g, 2.0) + pow(keyYuv.b - yuv.b, 2.0));\r\nif (tmp < tol.x)\r\nreturn 0.0;\r\nelse if (tmp < tol.y)\r\nreturn (tmp - tol.x)/(tol.y - tol.x);\r\nelse\r\nreturn 1.0;\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\nvec2 fragPos =  1. - fragCoord.xy / resolution.xy;\r\nvec4 fg = texture(background, fragPos);\r\nvec4 bg = texture(webcam, fragPos);\r\n\r\nvec4 keyYUV =  RGBtoYUV * chromaKey;\r\nvec4 yuv = RGBtoYUV * fg;\r\n\r\nfloat mask = 1.0 - colorclose(yuv.rgb, keyYUV.rgb, maskRange);\r\n\r\nfragColor = max(fg - mask * chromaKey, 0.0) + bg * mask;\r\n\r\n}\r\n\r\nvoid main(){\r\n    mainImage(fragColor,gl_FragCoord.xy);\r\n}`;\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n        }\r\n        else {\r\n            this.canvas = document.createElement(\"canvas\");\r\n            this.canvas.width = width || 640;\r\n            this.canvas.height = height || 360;\r\n        }\r\n        this.ctx = this.canvas.getContext(\"webgl2\");\r\n        this.mediaStream = new MediaStream();\r\n        if (backgroundUrl) {\r\n            this.backgroundSource = backgroundUrl.match(/\\.(jpeg|jpg|png)$/) !== null ?\r\n                new Image() : document.createElement(\"video\");\r\n            const isImage = backgroundUrl.match(/\\.(jpeg|jpg|png)$/) !== null;\r\n            let textureSettings = {};\r\n            if (isImage) {\r\n                textureSettings = {\r\n                    \"background\": {\r\n                        unit: 33985,\r\n                        src: backgroundUrl\r\n                    },\r\n                    \"webcam\": {\r\n                        unit: 33986,\r\n                        fn: (_prg, gl, texture) => {\r\n                            gl.bindTexture(gl.TEXTURE_2D, texture);\r\n                            gl.texImage2D(gl.TEXTURE_2D, 0, 6408, 6408, 5121, this.cameraSource);\r\n                            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n                            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n                            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n                            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                textureSettings = {\r\n                    \"background\": {\r\n                        unit: 33985,\r\n                        fn: (_prg, gl, texture) => {\r\n                            gl.bindTexture(gl.TEXTURE_2D, texture);\r\n                            gl.texImage2D(3553, 0, 6408, 6408, 5121, this.backgroundSource);\r\n                            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n                            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n                            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n                            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n                        }\r\n                    },\r\n                    \"webcam\": {\r\n                        unit: 33986,\r\n                        fn: (_prg, gl, texture) => {\r\n                            gl.bindTexture(gl.TEXTURE_2D, texture);\r\n                            gl.texImage2D(3553, 0, 6408, 6408, 5121, this.cameraSource);\r\n                            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n                            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n                            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n                            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n                        }\r\n                    }\r\n                };\r\n                this.backgroundSource.autoplay = true;\r\n                this.backgroundSource.loop = true;\r\n            }\r\n            this.backgroundSource.addEventListener(isImage ? \"load\" : \"loadeddata\", () => {\r\n                this.renderer = new demolishedrenderer_1.DR(this.canvas, this.mainVert, this.mainFrag);\r\n                this.renderer.aA(textureSettings, () => {\r\n                    this.renderer.aB(\"A\", this.mainVert, this.bufferFrag, [\"background\", \"webcam\"], {\r\n                        \"chromaKey\": (location, gl, p, timestamp) => {\r\n                            gl.uniform4f(location, this.chromaKey.r, this.chromaKey.g, this.chromaKey.b, 1.);\r\n                        },\r\n                        \"maskRange\": (location, gl, p, timestamp) => {\r\n                            gl.uniform2f(location, this.maskRange.x, this.maskRange.y);\r\n                        }\r\n                    });\r\n                });\r\n                this.onReady();\r\n            });\r\n            this.backgroundSource.src = backgroundUrl;\r\n        }\r\n    }\r\n    ;\r\n    /**\r\n     * Set the color to be removed\r\n     * i.e (0.05,0.63,0.14)\r\n     * @param {number} r  0.0 - 1.0\r\n     * @param {number} g 0.0 - 1.0\r\n     * @param {number} b 0.0 - 1.0\r\n     * @memberof GreenScreenStream\r\n     */\r\n    setChromaKey(r, g, b) {\r\n        this.chromaKey.r = r;\r\n        this.chromaKey.g = g;\r\n        this.chromaKey.b = b;\r\n    }\r\n    /**\r\n     * Range is used to decide the amount of color to be used from either foreground or background.\r\n     * Playing with this variable will decide how much the foreground and background blend together.\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @memberof GreenScreenStream\r\n     */\r\n    setMaskRange(x, y) {\r\n        this.maskRange.x = x;\r\n        this.maskRange.y = y;\r\n    }\r\n    /**\r\n     * Get the most dominant color and a list (palette) of the colors most common in the provided MediaStreamTrack\r\n     *\r\n     * @returns {{ palette: any, dominant: any }}\r\n     * @memberof GreenScreenStream\r\n     */\r\n    getColorsFromStream() {\r\n        let glCanvas = this.canvas;\r\n        let tempCanvas = document.createElement(\"canvas\");\r\n        tempCanvas.width = glCanvas.width;\r\n        tempCanvas.height = glCanvas.height;\r\n        let ctx = tempCanvas.getContext(\"2d\");\r\n        ctx.drawImage(this.sourceVideo, 0, 0);\r\n        let imageData = ctx.getImageData(0, 0, tempCanvas.width, tempCanvas.height);\r\n        const pixels = this.canvas.width * this.canvas.height;\r\n        return {\r\n            palette: this.pallette(imageData, pixels),\r\n            dominant: this.dominant(imageData, pixels)\r\n        };\r\n    }\r\n    /**\r\n     * Get a masked image/canvas of -n persons\r\n     *\r\n     * @param {HTMLCanvasElement} target\r\n     * @param {*} [config]\r\n     * @memberof GreenScreenStream\r\n     */\r\n    getMask(target, config) {\r\n        const foregroundColor = config.foregroundColor || { r: 255, g: 255, b: 255, a: 0 };\r\n        const backgroundColor = config.backgroundColor || { r: 0, g: 177, b: 64, a: 255 };\r\n        const canvas = target || document.createElement(\"canvas\");\r\n        //canvas.width = 256; canvas.height = 144;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        let _config = config.segmentPerson || {\r\n            flipHorizontal: true,\r\n            internalResolution: 'medium',\r\n            segmentationThreshold: 0.5,\r\n            maxDetections: 2\r\n        };\r\n        bodyPix.load({\r\n            architecture: 'MobileNetV1',\r\n            outputStride: 16,\r\n            multiplier: 0.75,\r\n            quantBytes: 2\r\n        }).then((model) => {\r\n            this.model = model;\r\n            const update = () => {\r\n                this.model.segmentPerson(this.sourceVideo, _config).then((segmentation) => {\r\n                    const maskedImage = bodyPix.toMask(segmentation, foregroundColor, backgroundColor);\r\n                    ctx.putImageData(maskedImage, 0, 0);\r\n                    requestAnimationFrame(update);\r\n                }).catch(e => {\r\n                    console.log(`Awaiting video to be loaded`);\r\n                });\r\n            };\r\n            console.log(\"Staring masking\");\r\n            update();\r\n        });\r\n    }\r\n    maskStream(config, target, cb) {\r\n        const opacity = config.opacity || 1.0;\r\n        const flipHorizontal = config.flipHorizontal || true;\r\n        const maskBlurAmount = config.maskBlurAmount || 3;\r\n        const foregroundColor = config.foregroundColor || { r: 255, g: 255, b: 255, a: 0 };\r\n        const backgroundColor = config.backgroundColor || { r: 0, g: 177, b: 64, a: 255 };\r\n        const canvas = target || document.createElement(\"canvas\");\r\n        let _config = config.segmentPerson || {\r\n            flipHorizontal: true,\r\n            internalResolution: 'medium',\r\n            segmentationThreshold: 0.5,\r\n            maxDetections: 2\r\n        };\r\n        if (cb)\r\n            cb(canvas);\r\n        const update = () => {\r\n            this.model.segmentPerson(this.sourceVideo, _config).then((segmentation) => {\r\n                const maskedImage = bodyPix.toMask(segmentation, foregroundColor, backgroundColor);\r\n                bodyPix.drawMask(canvas, this.sourceVideo, maskedImage, opacity, maskBlurAmount, flipHorizontal);\r\n                requestAnimationFrame(update);\r\n            }).catch(e => {\r\n                console.log(`Awaiting video to be loaded`);\r\n            });\r\n        };\r\n        console.log(\"Staring masking\");\r\n        update();\r\n    }\r\n    /**\r\n     * Start renderer\r\n     *\r\n     * @param {number} [fps]\r\n     * @param {*} [config]\r\n     * @memberof GreenScreenStream\r\n     */\r\n    render(fps, config) {\r\n        if (!this.renderer)\r\n            throw \"Now renderer created.Background image must be provided.\";\r\n        if (this.useML) {\r\n            bodyPix.load({\r\n                architecture: 'MobileNetV1',\r\n                outputStride: 16,\r\n                multiplier: 1,\r\n                quantBytes: 2\r\n            }).then((model) => {\r\n                this.model = model;\r\n                //   this.sourceVideo.onloadeddata = () => {\r\n                this.maskStream(config || {}, null, (canvas) => {\r\n                    this.cameraSource = canvas;\r\n                    this.renderer.run(0, fps || 25);\r\n                });\r\n                // }\r\n            });\r\n        }\r\n        else {\r\n            this.sourceVideo.onloadeddata = () => {\r\n                this.renderer.run(0, fps || 25);\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * Add a MediaStreamTrack track (i.e webcam )\r\n     *\r\n     * @param {MediaStreamTrack} track\r\n     * @memberof GreenScreenStream\r\n     */\r\n    addVideoTrack(track) {\r\n        this.mediaStream.addTrack(track);\r\n        this.sourceVideo = document.createElement(\"video\");\r\n        this.sourceVideo.width = this.canvas.width, this.sourceVideo.height = this.canvas.height;\r\n        this.sourceVideo.autoplay = true;\r\n        this.sourceVideo.srcObject = this.mediaStream;\r\n        this.sourceVideo.play();\r\n        this.cameraSource = this.sourceVideo;\r\n    }\r\n    /**\r\n     * Capture the rendered result to a MediaStream\r\n     *\r\n     * @param {number} [fps]\r\n     * @returns {MediaStream}\r\n     * @memberof GreenScreenStream\r\n     */\r\n    captureStream(fps) {\r\n        return this.canvas[\"captureStream\"](fps || 25);\r\n    }\r\n    /**\r\n     *  Get an instance instance of GreenScreenStream.\r\n     * @static\r\n      * @param {string} backgroudImage backgound image that replaces the \"green\"\r\n     * @param {HTMLCanvasElement} [canvas] HTML5 Canvas element to render to, optional\r\n     * @param {number} [width] width of the HTML5 Canvas element, optional.\r\n     * @param {number} [height] height of the HTML5 Canvas element, optiona\r\n     * @returns {GreenScreenStream}\r\n     * @memberof GreenScreenStream\r\n     */\r\n    static getInstance(useAI, backgroudImage, canvas, width, height) {\r\n        return new GreenScreenStream(useAI, backgroudImage, canvas, width, height);\r\n    }\r\n    pixelArray(pixels, pixelCount, quality) {\r\n        const pixelArray = [];\r\n        for (let i = 0, offset, r, g, b, a; i < pixelCount; i = i + quality) {\r\n            offset = i * 4;\r\n            r = pixels[offset + 0];\r\n            g = pixels[offset + 1];\r\n            b = pixels[offset + 2];\r\n            a = pixels[offset + 3];\r\n            if (typeof a === 'undefined' || a >= 125) {\r\n                if (!(r > 250 && g > 250 && b > 250)) {\r\n                    pixelArray.push([r, g, b]);\r\n                }\r\n            }\r\n        }\r\n        return pixelArray;\r\n    }\r\n    /**\r\n     *  Get the dominant color from the MediaStreamTrack provided\r\n     *\r\n     * @param {ImageData} imageData\r\n     * @param {number} pixelCount\r\n     * @returns\r\n     * @memberof GreenScreenStream\r\n     */\r\n    dominant(imageData, pixelCount) {\r\n        const p = this.pallette(imageData, pixelCount);\r\n        const d = p[0];\r\n        return d;\r\n    }\r\n    ;\r\n    /**\r\n     * Get a pallette (10) of the most used colors in the MediaStreamTrack provided\r\n     *\r\n     * @param {ImageData} imageData\r\n     * @param {number} pixelCount\r\n     * @returns\r\n     * @memberof GreenScreenStream\r\n     */\r\n    pallette(imageData, pixelCount) {\r\n        const pixelArray = this.pixelArray(imageData.data, pixelCount, 10);\r\n        const cmap = quantize_1.default(pixelArray, 8);\r\n        const palette = cmap ? cmap.palette() : null;\r\n        return palette;\r\n    }\r\n    ;\r\n}\r\nexports.GreenScreenStream = GreenScreenStream;\r\n\n\n//# sourceURL=webpack://greenscreenstream/./src/GreenScreenStream.js?");

/***/ }),

/***/ "?8465":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://greenscreenstream/crypto_(ignored)?");

/***/ }),

/***/ "?7581":
/*!****************************!*\
  !*** node-fetch (ignored) ***!
  \****************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://greenscreenstream/node-fetch_(ignored)?");

/***/ }),

/***/ "?0bed":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://greenscreenstream/util_(ignored)?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd define */
/******/ 	(() => {
/******/ 		__webpack_require__.amdD = function () {
/******/ 			throw new Error('define cannot be used indirect');
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./example/mlWebGL/Example.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;